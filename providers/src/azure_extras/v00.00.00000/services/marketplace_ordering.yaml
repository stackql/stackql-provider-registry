openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Marketplace Ordering
  description: The MarketplaceCommerce API (MPC, also known as StoreApi) is used for purchases of third-party Virtual Machines (VM), Managed Applications (MA), and Developer Services.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The subscription ID that identifies an Azure subscription.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for the request.
      required: false
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    OfferTypeParameter:
      name: offerType
      in: path
      description: Offer Type, currently only virtualmachine type is supported.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - virtualmachine
        x-ms-enum:
          name: OfferType
          modelAsString: true
        type: string
    PublishersParameter:
      name: publisherId
      in: path
      description: Publisher identifier string of image being deployed.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OffersParameter:
      name: offerId
      in: path
      description: Offer identifier string of image being deployed.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PlansParameter:
      name: planId
      in: path
      description: Plan identifier string of image being deployed.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      description: ARM resource.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      x-ms-azure-resource: true
      type: object
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      description: Error response indicates Microsoft.MarketplaceOrdering service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        error:
          description: The details of the error.
          properties:
            code:
              description: Error code.
              type: string
              readOnly: true
            message:
              description: Error message indicating why the operation failed.
              type: string
              readOnly: true
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: Microsoft.MarketplaceOrdering REST API operation
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: The object that represents the operation.
          properties:
            provider:
              description: 'Service provider: Microsoft.MarketplaceOrdering'
              type: string
            resource:
              description: 'Resource on which the operation is performed: Agreement, virtualmachine, etc.'
              type: string
            operation:
              description: 'Operation type: Get Agreement, Sign Agreement, Cancel Agreement etc.'
              type: string
            description:
              description: Operation description.
              type: string
    OperationListResult:
      description: Result of the request to list MarketplaceOrdering operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of Microsoft.MarketplaceOrdering operations supported by the Microsoft.MarketplaceOrdering resource provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
      type: object
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AgreementTerms:
      description: Terms properties for provided Publisher/Offer/Plan tuple
      properties:
        properties:
          $ref: '#/components/schemas/AgreementProperties'
          description: Represents the properties of the resource.
          x-ms-client-flatten: true
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    AgreementProperties:
      properties:
        publisher:
          type: string
          description: Publisher identifier string of image being deployed.
        product:
          type: string
          description: Offer identifier string of image being deployed.
        plan:
          type: string
          description: Plan identifier string of image being deployed.
        licenseTextLink:
          type: string
          description: Link to HTML with Microsoft and Publisher terms.
        privacyPolicyLink:
          type: string
          description: Link to the privacy policy of the publisher.
        marketplaceTermsLink:
          type: string
          description: Link to HTML with Azure Marketplace terms.
        retrieveDatetime:
          type: string
          format: date-time
          description: Date and time in UTC of when the terms were accepted. This is empty if Accepted is false.
        signature:
          type: string
          description: Terms signature.
        accepted:
          type: boolean
          description: If any version of the terms have been accepted, otherwise false.
      description: Agreement Terms definition
      type: object
    OldAgreementTermsList:
      description: Agreement Terms definition list
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OldAgreementTerms'
    OldAgreementTerms:
      description: Terms properties for provided Publisher/Offer/Plan tuple
      properties:
        properties:
          $ref: '#/components/schemas/OldAgreementProperties'
          description: Represents the properties of the resource.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    OldAgreementProperties:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of the agreement.
        publisher:
          type: string
          description: Publisher identifier string of image being deployed.
        offer:
          type: string
          description: Offer identifier string of image being deployed.
        signDate:
          type: string
          format: date-time
          description: Date and time in UTC of when the terms were accepted. This is empty if state is cancelled.
        cancelDate:
          type: string
          format: date-time
          description: Date and time in UTC of when the terms were cancelled. This is empty if state is active.
        state:
          type: string
          enum:
            - Active
            - Canceled
          description: Whether the agreement is active or cancelled
          x-ms-enum:
            name: state
            modelAsString: true
      description: Old Agreement Terms definition
  x-stackQL-resources:
    marketplace_agreements:
      id: azure_extras.marketplace_ordering.marketplace_agreements
      name: marketplace_agreements
      title: marketplace_agreements
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MarketplaceOrdering~1offerTypes~1{offerType}~1publishers~1{publisherId}~1offers~1{offerId}~1plans~1{planId}~1agreements~1current?api-version=2021-01-01/get'
            operationId: MarketplaceAgreements_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AgreementTerms
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MarketplaceOrdering~1offerTypes~1{offerType}~1publishers~1{publisherId}~1offers~1{offerId}~1plans~1{planId}~1agreements~1current?api-version=2021-01-01/put'
            operationId: MarketplaceAgreements_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AgreementTerms
        sign:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MarketplaceOrdering~1agreements~1{publisherId}~1offers~1{offerId}~1plans~1{planId}~1sign?api-version=2021-01-01/post'
            operationId: MarketplaceAgreements_Sign
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OldAgreementTerms
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MarketplaceOrdering~1agreements~1{publisherId}~1offers~1{offerId}~1plans~1{planId}~1cancel?api-version=2021-01-01/post'
            operationId: MarketplaceAgreements_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OldAgreementTerms
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MarketplaceOrdering~1agreements?api-version=2021-01-01/get'
            operationId: MarketplaceAgreements_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OldAgreementTermsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_agreements/methods/get'
          - $ref: '#/components/x-stackQL-resources/marketplace_agreements/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/marketplace_agreements/methods/create'
        update: []
        replace: []
        delete: []
    operations:
      id: azure_extras.marketplace_ordering.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.MarketplaceOrdering~1operations?api-version=2021-01-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    marketplace_agreements_agreements:
      id: azure_extras.marketplace_ordering.marketplace_agreements_agreements
      name: marketplace_agreements_agreements
      title: marketplace_agreements_agreements
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MarketplaceOrdering~1agreements~1{publisherId}~1offers~1{offerId}~1plans~1{planId}?api-version=2021-01-01/get'
            operationId: MarketplaceAgreementsAgreement_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OldAgreementTerms
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_agreements_agreements/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_marketplace_agreements:
      id: azure_extras.marketplace_ordering.vw_marketplace_agreements
      name: vw_marketplace_agreements
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.publisher') as "publisher",
              JSON_EXTRACT(properties, '$.product') as "product",
              JSON_EXTRACT(properties, '$.plan') as "plan",
              JSON_EXTRACT(properties, '$.licenseTextLink') as "license_text_link",
              JSON_EXTRACT(properties, '$.privacyPolicyLink') as "privacy_policy_link",
              JSON_EXTRACT(properties, '$.marketplaceTermsLink') as "marketplace_terms_link",
              JSON_EXTRACT(properties, '$.retrieveDatetime') as "retrieve_datetime",
              JSON_EXTRACT(properties, '$.signature') as "signature",
              JSON_EXTRACT(properties, '$.accepted') as "accepted",
              subscriptionId,
              offerType,
              publisherId,
              offerId,
              planId
              FROM azure_extras.marketplace_ordering.marketplace_agreements
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.publisher') as "publisher",
                json_extract_path_text(properties, '$.product') as "product",
                json_extract_path_text(properties, '$.plan') as "plan",
                json_extract_path_text(properties, '$.licenseTextLink') as "license_text_link",
                json_extract_path_text(properties, '$.privacyPolicyLink') as "privacy_policy_link",
                json_extract_path_text(properties, '$.marketplaceTermsLink') as "marketplace_terms_link",
                json_extract_path_text(properties, '$.retrieveDatetime') as "retrieve_datetime",
                json_extract_path_text(properties, '$.signature') as "signature",
                json_extract_path_text(properties, '$.accepted') as "accepted",
                subscriptionId,
                offerType,
                publisherId,
                offerId,
                planId
                FROM azure_extras.marketplace_ordering.marketplace_agreements
                WHERE subscriptionId = 'replace-me';
    vw_marketplace_agreements_agreements:
      id: azure_extras.marketplace_ordering.vw_marketplace_agreements_agreements
      name: vw_marketplace_agreements_agreements
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.id') as "id",
              JSON_EXTRACT(properties, '$.publisher') as "publisher",
              JSON_EXTRACT(properties, '$.offer') as "offer",
              JSON_EXTRACT(properties, '$.signDate') as "sign_date",
              JSON_EXTRACT(properties, '$.cancelDate') as "cancel_date",
              JSON_EXTRACT(properties, '$.state') as "state",
              subscriptionId,
              publisherId,
              offerId,
              planId
              FROM azure_extras.marketplace_ordering.marketplace_agreements_agreements
              WHERE subscriptionId = 'replace-me' AND publisherId = 'replace-me' AND offerId = 'replace-me' AND planId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.id') as "id",
                json_extract_path_text(properties, '$.publisher') as "publisher",
                json_extract_path_text(properties, '$.offer') as "offer",
                json_extract_path_text(properties, '$.signDate') as "sign_date",
                json_extract_path_text(properties, '$.cancelDate') as "cancel_date",
                json_extract_path_text(properties, '$.state') as "state",
                subscriptionId,
                publisherId,
                offerId,
                planId
                FROM azure_extras.marketplace_ordering.marketplace_agreements_agreements
                WHERE subscriptionId = 'replace-me' AND publisherId = 'replace-me' AND offerId = 'replace-me' AND planId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/offerTypes/{offerType}/publishers/{publisherId}/offers/{offerId}/plans/{planId}/agreements/current?api-version=2021-01-01:
    get:
      operationId: MarketplaceAgreements_Get
      description: Get marketplace terms.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/OfferTypeParameter'
        - $ref: '#/components/parameters/PublishersParameter'
        - $ref: '#/components/parameters/OffersParameter'
        - $ref: '#/components/parameters/PlansParameter'
      responses:
        '200':
          description: Terms returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgreementTerms'
        default:
          description: Microsoft.MarketplaceOrdering error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: MarketplaceAgreements_Create
      description: Save marketplace terms.
      parameters:
        - $ref: '#/components/parameters/OfferTypeParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PublishersParameter'
        - $ref: '#/components/parameters/OffersParameter'
        - $ref: '#/components/parameters/PlansParameter'
      requestBody:
        description: Parameters supplied to the Create Marketplace Terms operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementTerms'
      responses:
        '200':
          description: OK. The request was successfully processed and the terms were accepted or acceptance revoked as per the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgreementTerms'
        default:
          description: Microsoft.MarketplaceOrdering error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.MarketplaceOrdering/operations?api-version=2021-01-01:
    get:
      tags:
        - Operations
      description: Lists all of the available Microsoft.MarketplaceOrdering REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Microsoft.MarketplaceOrdering error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/agreements/{publisherId}/offers/{offerId}/plans/{planId}/sign?api-version=2021-01-01:
    post:
      operationId: MarketplaceAgreements_Sign
      description: Sign marketplace terms.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PublishersParameter'
        - $ref: '#/components/parameters/OffersParameter'
        - $ref: '#/components/parameters/PlansParameter'
      responses:
        '200':
          description: OK. The request was successfully processed and the terms were accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldAgreementTerms'
        default:
          description: Microsoft.MarketplaceOrdering error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/agreements/{publisherId}/offers/{offerId}/plans/{planId}/cancel?api-version=2021-01-01:
    post:
      operationId: MarketplaceAgreements_Cancel
      description: Cancel marketplace terms.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PublishersParameter'
        - $ref: '#/components/parameters/OffersParameter'
        - $ref: '#/components/parameters/PlansParameter'
      responses:
        '200':
          description: OK. The request was successfully processed and the terms were rejected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldAgreementTerms'
        default:
          description: Microsoft.MarketplaceOrdering error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/agreements/{publisherId}/offers/{offerId}/plans/{planId}?api-version=2021-01-01:
    get:
      operationId: MarketplaceAgreementsAgreement_Get
      description: Get marketplace agreement.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PublishersParameter'
        - $ref: '#/components/parameters/OffersParameter'
        - $ref: '#/components/parameters/PlansParameter'
      responses:
        '200':
          description: Terms returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldAgreementTerms'
        default:
          description: Microsoft.MarketplaceOrdering error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: MarketplaceAgreements_GetAgreement
  /subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/agreements?api-version=2021-01-01:
    get:
      operationId: MarketplaceAgreements_List
      description: List marketplace agreements in the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Terms returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldAgreementTermsList'
        default:
          description: Microsoft.MarketplaceOrdering error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
