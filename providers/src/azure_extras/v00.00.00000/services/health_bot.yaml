openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Health Bot
  description: A managed service purpose-built for development of virtual healthcare assistants.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the Bot resource group in the user subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 64
        minLength: 2
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        type: string
    resourceNameParameter:
      name: botName
      in: path
      description: The name of the Bot resource.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 64
        minLength: 2
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Azure Subscription ID.
      required: true
      schema:
        type: string
    apiVersionParameter:
      name: api-version
      in: query
      description: Version of the API to be used with the client request.
      required: true
      schema:
        type: string
  schemas:
    Identity:
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The identity type. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the Azure Health Bot
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentityMap'
          description: |
            The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
      description: Identity for the resource.
    UserAssignedIdentityMap:
      description: |
        The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of user assigned identity.
        clientId:
          readOnly: true
          type: string
          description: The client ID of user assigned identity.
      type: object
      description: The details of the user assigned managed identity used by the Video Analyzer resource.
    KeyVaultProperties:
      type: object
      description: Properties of the key vault.
      required:
        - keyName
        - keyVaultUri
      properties:
        keyName:
          type: string
          description: The name of the key vault key.
          x-ms-client-name: KeyName
        keyVersion:
          type: string
          description: The version of the key vault key.
          x-ms-client-name: KeyVersion
        keyVaultUri:
          type: string
          description: The Uri of the key vault.
          x-ms-client-name: KeyVaultUri
        userIdentity:
          type: string
          description: The user assigned identity (ARM resource id) that has access to the key.
          x-ms-client-name: UserIdentity
    Sku:
      type: object
      description: The resource model definition representing SKU
      properties:
        name:
          type: string
          description: The name of the Azure Health Bot SKU
          enum:
            - F0
            - S1
            - C0
            - PES
            - C1
          x-ms-enum:
            name: SkuName
            modelAsString: false
      required:
        - name
    Resource:
      type: object
      description: The resource model definition for a ARM tracked top level resource
      x-ms-azure-resource: true
      properties:
        id:
          description: Fully qualified resource Id for the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          description: Fully qualified resource Id for the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
      type: object
    HealthBot:
      description: Azure Health Bot resource definition
      required:
        - sku
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        sku:
          $ref: '#/components/schemas/Sku'
          description: SKU of the Azure Health Bot.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the Azure Health Bot.
        properties:
          $ref: '#/components/schemas/HealthBotProperties'
          description: The set of properties specific to Azure Health Bot resource.
      type: object
    HealthBotProperties:
      type: object
      title: HealthBotProperties
      description: The properties of a Azure Health Bot. The Health Bot Service is a cloud platform that empowers developers in Healthcare organizations to build and deploy their compliant, AI-powered virtual health assistants and health bots, that help them improve processes and reduce costs.
      properties:
        provisioningState:
          type: string
          description: The provisioning state of the Azure Health Bot resource.
          readOnly: true
        botManagementPortalLink:
          type: string
          description: The link.
          readOnly: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: KeyVault properties for the resource encryption.
    HealthBotUpdateParameters:
      description: Parameters for updating a Azure Health Bot.
      properties:
        properties:
          $ref: '#/components/schemas/HealthBotProperties'
          description: Properties of Azure Health Bot.
        tags:
          type: object
          description: Tags for a Azure Health Bot.
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
        sku:
          $ref: '#/components/schemas/Sku'
          description: SKU of the Azure Health Bot.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the Azure Health Bot.
        location:
          type: string
          x-ms-mutability:
            - create
            - read
      type: object
    HealthBotKey:
      type: object
      description: An entry of HealthBotKeysResponse
      properties:
        keyName:
          type: string
          description: The name of the key.
        value:
          type: string
          x-ms-secret: true
          description: The value of the key.
    HealthBotKeysResponse:
      type: object
      description: Health Bot Keys Response.
      properties:
        secrets:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/HealthBotKey'
          description: Array of Azure Health Bot Secrets.
          minLength: 3
          maxLength: 3
    SystemData:
      description: Read only system data
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that created the resource
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC)
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that last modified the resource
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    IdentityType:
      description: The type of identity that creates/modifies resources
      type: string
      enum:
        - User
        - Application
        - ManagedIdentity
        - Key
      x-ms-enum:
        name: IdentityType
        modelAsString: true
    ValidationResult:
      type: object
      title: ValidationResult
      description: The response returned from validation process
      properties:
        status:
          type: string
          description: The status code of the response validation.
    Error:
      type: object
      properties:
        error:
          type: object
          description: The error object.
          properties:
            code:
              readOnly: true
              type: string
              description: The error code.
            message:
              readOnly: true
              type: string
              description: The error message.
            target:
              readOnly: true
              type: string
              description: The error target.
            details:
              readOnly: true
              type: array
              items:
                $ref: '#/components/schemas/Error'
              x-ms-identifiers: []
              description: The error details.
            additionalInfo:
              readOnly: true
              type: array
              items:
                $ref: '#/components/schemas/ErrorAdditionalInfo'
              x-ms-identifiers: []
              description: The error additional info.
      description: The resource management error response.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    AvailableOperations:
      description: Available operations of the service
      type: object
      properties:
        value:
          description: Collection of available operation details
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OperationDetail'
          x-ms-identifiers: []
        nextLink:
          description: "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    OperationDetail:
      description: Operation detail payload
      properties:
        name:
          description: Name of the operation
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: Display of the operation
        origin:
          description: Origin of the operation
          type: string
        properties:
          description: Additional properties.
          type: object
      type: object
    OperationDisplay:
      description: Operation display payload
      type: object
      properties:
        provider:
          description: Resource provider of the operation
          type: string
        resource:
          description: Resource of the operation
          type: string
        operation:
          description: Localized friendly name for the operation
          type: string
        description:
          description: Localized friendly description for the operation
          type: string
    BotResponseList:
      type: object
      properties:
        nextLink:
          readOnly: true
          description: The link used to get the next page of bot service resources.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/HealthBot'
          description: Gets the list of Azure Health Bot results and their properties.
      description: The list of Azure Health Bot operation response.
  x-stackQL-resources:
    bots:
      id: azure_extras.health_bot.bots
      name: bots
      title: bots
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HealthBot~1healthBots~1{botName}~1?api-version=2024-02-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HealthBot~1healthBots~1{botName}~1?api-version=2024-02-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HealthBot~1healthBots~1{botName}~1?api-version=2024-02-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HealthBot~1healthBots~1{botName}~1?api-version=2024-02-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_api_jwt_secret:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HealthBot~1healthBots~1{botName}~1regenerateApiJwtSecret~1?api-version=2024-02-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HealthBot~1healthBots~1?api-version=2024-02-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HealthBot~1healthBots~1?api-version=2024-02-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bots/methods/get'
          - $ref: '#/components/x-stackQL-resources/bots/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/bots/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/bots/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bots/methods/delete'
    bots_secrets:
      id: azure_extras.health_bot.bots_secrets
      name: bots_secrets
      title: bots_secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HealthBot~1healthBots~1{botName}~1listSecrets~1?api-version=2024-02-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bots_secrets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure_extras.health_bot.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.HealthBot~1operations~1?api-version=2024-02-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_bots:
      id: azure_extras.health_bot.vw_bots
      name: vw_bots
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              sku as sku,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.botManagementPortalLink') as bot_management_portal_link,
              JSON_EXTRACT(properties, '$.keyVaultProperties') as key_vault_properties,
              subscriptionId,
              resourceGroupName,
              botName
              FROM azure_extras.health_bot.bots
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                sku as sku,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.botManagementPortalLink') as bot_management_portal_link,
                JSON_EXTRACT(properties, '$.keyVaultProperties') as key_vault_properties,
                subscriptionId,
                resourceGroupName,
                botName
                FROM azure_extras.health_bot.bots
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots/{botName}/?api-version=2024-02-01:
    put:
      operationId: Bots_Create
      description: Create a new Azure Health Bot.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
      requestBody:
        description: The parameters to provide for the created Azure Health Bot.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthBot'
      responses:
        '200':
          description: If resource is updated successfully, the service should return 200.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthBot'
        '201':
          description: If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthBot'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      operationId: Bots_Get
      description: Get a HealthBot.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
      responses:
        '200':
          description: If resource is got successfully, the service should return 200.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthBot'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: Bots_Update
      description: Patch a HealthBot.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
      requestBody:
        description: The parameters to provide for the required Azure Health Bot.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthBotUpdateParameters'
      responses:
        '200':
          description: If resource is patched successfully, the service should return 200.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthBot'
        '201':
          description: If resource is received update request successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthBot'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
    delete:
      operationId: Bots_Delete
      description: Delete a HealthBot.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
      responses:
        '200':
          description: If resource is deleted successfully, the service should return 200.
        '202':
          description: Accepted - Delete request accepted; operation will complete asynchronously
        '204':
          description: No content.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots/{botName}/listSecrets/?api-version=2024-02-01:
    post:
      operationId: Bots_ListSecrets
      description: List all secrets of a HealthBot.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
      responses:
        '200':
          description: If secrets are retrieved successfully, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthBotKeysResponse'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots/{botName}/regenerateApiJwtSecret/?api-version=2024-02-01:
    post:
      operationId: Bots_RegenerateApiJwtSecret
      description: Regenerate the API JWT Secret of a HealthBot.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
      responses:
        '200':
          description: If secret was regenerated successfully, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthBotKey'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots/?api-version=2024-02-01:
    get:
      description: Returns all the resources of a particular type belonging to a resource group
      operationId: Bots_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.
            The nextLink should be implemented using following query parameters:
            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.
            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.
            Implementation details:
            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. 
            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. 
            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponseList'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.HealthBot/healthBots/?api-version=2024-02-01:
    get:
      description: Returns all the resources of a particular type belonging to a subscription.
      operationId: Bots_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.
            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponseList'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.HealthBot/operations/?api-version=2024-02-01:
    get:
      tags:
        - Operations
      description: Lists all the available Azure Health Bot operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableOperations'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
