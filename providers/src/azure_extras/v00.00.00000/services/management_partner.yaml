openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Management Partner
  description: The Azure Ace Provisioning ManagementPartner Api is a service used for managing Azure Compute Environment (ACE) provisioning, enabling efficient and advanced management of Azure cloud resources.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    PartnerIdParameter:
      name: partnerId
      in: path
      description: Id of the Partner
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Supported version.
      required: true
      schema:
        type: string
  schemas:
    PartnerResponse:
      description: this is the management partner operations response
      x-ms-azure-resource: true
      properties:
        etag:
          type: integer
          description: Type of the partner
        id:
          type: string
          readOnly: true
          description: Identifier of the partner
        name:
          type: string
          readOnly: true
          description: Name of the partner
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PartnerProperties'
          description: Properties of the partner
        type:
          type: string
          readOnly: true
          description: Type of resource. "Microsoft.ManagementPartner/partners"
      type: object
    PartnerProperties:
      type: object
      description: this is the management partner properties
      properties:
        partnerId:
          type: string
          description: This is the partner id
        partnerName:
          type: string
          description: This is the partner name
        tenantId:
          type: string
          description: This is the tenant id.
        objectId:
          type: string
          description: This is the object id.
        version:
          type: integer
          format: int32
          description: This is the version.
        updatedTime:
          type: string
          format: date-time
          description: This is the DateTime when the partner was updated.
        createdTime:
          type: string
          format: date-time
          description: This is the DateTime when the partner was created.
        state:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagementPartnerState'
          description: This is the partner state
    ManagementPartnerState:
      type: string
      description: 'this is the management partner state: Active or Deleted'
      enum:
        - Active
        - Deleted
      x-ms-enum:
        name: ManagementPartnerState
        modelAsString: true
    ErrorResponseCode:
      type: string
      description: this is the error response code that management partner operations may return
    Error:
      type: object
      description: this is the management partner operations error
      properties:
        error:
          $ref: '#/components/schemas/ExtendedErrorInfo'
          description: this is the ExtendedErrorInfo property
        code:
          $ref: '#/components/schemas/ErrorResponseCode'
          description: this is the error response code
        message:
          type: string
          description: this is the extended error info message
    ExtendedErrorInfo:
      type: object
      description: this is the extended error info
      properties:
        code:
          $ref: '#/components/schemas/ErrorResponseCode'
          description: this is the error response code
        message:
          type: string
          description: this is the extended error info message
    OperationList:
      type: object
      description: this is the management partner operations list
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OperationResponse'
            description: this is the operation response property
          x-ms-identifiers:
            - name
          description: this is the operation response list
        nextLink:
          type: string
          description: Url to get the next page of items.
    OperationResponse:
      type: object
      description: this is the management partner operations response
      properties:
        name:
          type: string
          description: this is the operation response name
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: this is the operation display
        origin:
          type: string
          description: the is operation response origin information
    OperationDisplay:
      description: this is the management partner operation
      type: object
      properties:
        provider:
          type: string
          description: the is management partner provider
        resource:
          type: string
          description: the is management partner resource
        operation:
          type: string
          description: the is management partner operation
        description:
          type: string
          description: the is management partner operation description
  x-stackQL-resources:
    partner:
      id: azure_extras.management_partner.partner
      name: partner
      title: partner
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagementPartner~1partners~1{partnerId}~1?api-version=2018-02-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagementPartner~1partners~1{partnerId}~1?api-version=2018-02-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagementPartner~1partners~1{partnerId}~1?api-version=2018-02-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagementPartner~1partners~1{partnerId}~1?api-version=2018-02-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner/methods/delete'
    operation:
      id: azure_extras.management_partner.operation
      name: operation
      title: operation
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagementPartner~1operations~1?api-version=2018-02-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    partners:
      id: azure_extras.management_partner.partners
      name: partners
      title: partners
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagementPartner~1partners~1?api-version=2018-02-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partners/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_partner:
      id: azure_extras.management_partner.vw_partner
      name: vw_partner
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              etag as etag,
              type as type,
              JSON_EXTRACT(properties, '$.partnerId') as partner_id,
              JSON_EXTRACT(properties, '$.partnerName') as partner_name,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.objectId') as object_id,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.updatedTime') as updated_time,
              JSON_EXTRACT(properties, '$.createdTime') as created_time,
              JSON_EXTRACT(properties, '$.state') as state,
              partnerId
              FROM azure_extras.management_partner.partner
              WHERE partnerId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                etag as etag,
                type as type,
                json_extract_path_text(properties, '$.partnerId') as partner_id,
                JSON_EXTRACT(properties, '$.partnerName') as partner_name,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.objectId') as object_id,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.updatedTime') as updated_time,
                JSON_EXTRACT(properties, '$.createdTime') as created_time,
                JSON_EXTRACT(properties, '$.state') as state,
                partnerId
                FROM azure_extras.management_partner.partner
                WHERE partnerId = 'replace-me';
    vw_partners:
      id: azure_extras.management_partner.vw_partners
      name: vw_partners
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              etag as etag,
              type as type,
              JSON_EXTRACT(properties, '$.partnerId') as partner_id,
              JSON_EXTRACT(properties, '$.partnerName') as partner_name,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.objectId') as object_id,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.updatedTime') as updated_time,
              JSON_EXTRACT(properties, '$.createdTime') as created_time,
              JSON_EXTRACT(properties, '$.state') as state
              FROM azure_extras.management_partner.partners
              WHERE ;
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                etag as etag,
                type as type,
                json_extract_path_text(properties, '$.partnerId') as partner_id,
                JSON_EXTRACT(properties, '$.partnerName') as partner_name,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.objectId') as object_id,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.updatedTime') as updated_time,
                JSON_EXTRACT(properties, '$.createdTime') as created_time,
                JSON_EXTRACT(properties, '$.state') as state
                FROM azure_extras.management_partner.partners
                WHERE ;
paths:
  /providers/Microsoft.ManagementPartner/partners/{partnerId}/?api-version=2018-02-01:
    get:
      summary: Get a specific `Partner`.
      description: Get the management partner using the partnerId, objectId and tenantId.
      operationId: Partner_Get
      parameters:
        - $ref: '#/components/parameters/PartnerIdParameter'
      tags:
        - Partner
      responses:
        '200':
          description: Get the details of the `Partner`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Create a specific `Partner`.
      description: Create a management partner for the objectId and tenantId.
      operationId: Partner_Create
      parameters:
        - $ref: '#/components/parameters/PartnerIdParameter'
      tags:
        - Partner
      responses:
        '200':
          description: Get the details of the `Partner`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update a specific `Partner`.
      description: Update the management partner for the objectId and tenantId.
      operationId: Partner_Update
      parameters:
        - $ref: '#/components/parameters/PartnerIdParameter'
      tags:
        - Partner
      responses:
        '200':
          description: Get the details of the `Partner`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a specific `Partner`.
      description: Delete the management partner for the objectId and tenantId.
      operationId: Partner_Delete
      parameters:
        - $ref: '#/components/parameters/PartnerIdParameter'
      tags:
        - Partner
      responses:
        '200':
          description: Deleted the `Partner`.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.ManagementPartner/operations/?api-version=2018-02-01:
    get:
      summary: Get operations.
      description: List all the operations.
      operationId: Operation_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters: []
      tags:
        - Operation
      responses:
        '200':
          description: List all the operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.ManagementPartner/partners/?api-version=2018-02-01:
    get:
      summary: Get a specific `Partner`.
      description: Get the management partner using the objectId and tenantId.
      operationId: Partners_Get
      parameters: []
      tags:
        - Partners
      responses:
        '200':
          description: Get the details of the `Partner`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
