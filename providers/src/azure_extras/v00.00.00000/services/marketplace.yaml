openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Marketplace
  description: Microsoft Azure Marketplace Catalog provides REST APIs to browse, view and search Azure Marketplace and AppSource offerings.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    PrivateStoreIdParameter:
      name: privateStoreId
      in: path
      description: The store ID - must use the tenant ID
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for the request.
      required: true
      schema:
        type: string
    CollectionIdParameter:
      name: collectionId
      in: path
      description: The collection ID
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OfferIdPathParameter:
      name: offerId
      in: path
      description: The offer ID to update or delete
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription id of the private offers
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    UseCacheParameter:
      name: use-cache
      in: query
      description: Determines if to use cache or DB for serving this request
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    AdminRequestApprovalIdPathParameter:
      name: adminRequestApprovalId
      in: path
      description: The admin request approval ID to get create or update
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RequestApprovalIdPathParameter:
      name: requestApprovalId
      in: path
      description: The request approval ID to get create or update
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PublisherIdParameter:
      name: publisherId
      in: query
      description: The publisher id of this offer.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SkipTokenParameter:
      name: next-page-token
      in: header
      description: The skip token to get the next page.
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    PrivateStoreList:
      description: Describes the json payload for the list of available private stores (between zero and one, inclusive)
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PrivateStore'
        nextLink:
          description: URL to get the next set of PrivateStore list results if there are any.
          type: string
    PrivateStore:
      description: The PrivateStore data structure.
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
        properties:
          $ref: '#/components/schemas/PrivateStoreProperties'
          description: The PrivateStore data structure.
          x-ms-client-flatten: true
      type: object
    PrivateStoreProperties:
      description: Describes the json payload on whether or not the private store is enabled for a given tenant
      type: object
      properties:
        availability:
          description: Indicates private store availability
          type: string
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: Availability
            modelAsString: true
        privateStoreId:
          description: Private Store id
          type: string
          readOnly: true
        eTag:
          description: Identifier for purposes of race condition
          type: string
        privateStoreName:
          description: Private Store Name
          type: string
        tenantId:
          description: Tenant id
          type: string
        isGov:
          description: Is government
          type: boolean
        collectionIds:
          description: Gets list of associated collection ids
          type: array
          items:
            type: string
          readOnly: true
        branding:
          description: Gets or sets list of branding characteristics
          type: object
          additionalProperties:
            type: string
        notificationsSettings:
          description: Gets or sets notifications settings
          $ref: '#/components/schemas/NotificationsSettingsProperties'
          x-ms-client-flatten: true
    AnyExistingOffersInTheCollectionsResponse:
      description: Response object of query if are there existing offers in the collections.
      type: object
      properties:
        value:
          description: Boolean answer, true if exists at least a single offer in an enabled collection, otherwise, false.
          type: boolean
    NotificationsSettingsProperties:
      description: Describes the json payload for notifications settings
      type: object
      properties:
        recipients:
          description: Gets or sets list of notified recipients for new requests
          type: array
          items:
            $ref: '#/components/schemas/Recipient'
          x-ms-identifiers:
            - principalId
        sendToAllMarketplaceAdmins:
          description: Gets or sets whether to send email to all marketplace admins for new requests
          type: boolean
    Recipient:
      description: Describes the json payload for a notified recipient for new requests
      type: object
      properties:
        principalId:
          description: Principal ID
          type: string
        emailAddress:
          description: Email Address
          type: string
          readOnly: true
        displayName:
          description: Display Name
          type: string
          readOnly: true
    CollectionsList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
        nextLink:
          description: URL to get the next set of offer list results if there are any.
          type: string
    Collection:
      description: The Collection data structure.
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
        properties:
          $ref: '#/components/schemas/CollectionProperties'
          description: The collection data structure.
          x-ms-client-flatten: true
      type: object
    CollectionProperties:
      description: The collection details
      type: object
      properties:
        collectionId:
          description: Gets collection Id.
          type: string
          readOnly: true
        collectionName:
          description: Gets or sets collection name.
          type: string
        claim:
          description: Gets or sets the association with Commercial's Billing Account.
          type: string
        allSubscriptions:
          description: Indicating whether all subscriptions are selected (=true) or not (=false).
          type: boolean
        approveAllItems:
          description: Indicating whether all items are approved for this collection (=true) or not (=false).
          type: boolean
          readOnly: true
        approveAllItemsModifiedAt:
          description: Gets the modified date of all items approved.
          format: date-time
          type: string
          readOnly: true
        subscriptionsList:
          description: Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request
          type: array
          items:
            type: string
        enabled:
          description: Indicating whether the collection is enabled or disabled.
          type: boolean
        numberOfOffers:
          description: Gets the number of offers associated with the collection.
          type: integer
          format: int64
          readOnly: true
        appliedRules:
          description: Gets list of collection rules
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Rule'
          x-ms-identifiers:
            - type
    RuleListResponse:
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Rule'
          x-ms-identifiers:
            - type
        nextLink:
          description: URL to get the next set of rules list results if there are any.
          type: string
    SetRulesRequest:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
          x-ms-identifiers:
            - type
        nextLink:
          description: URL to get the next set of rules list results if there are any.
          type: string
    Rule:
      type: object
      properties:
        type:
          description: Rule type
          type: string
          enum:
            - PrivateProducts
            - TermsAndCondition
          x-ms-enum:
            name: ruleType
            modelAsString: true
        value:
          type: array
          items:
            description: Gets or sets rule's value, not required for boolean rules
            type: string
    OfferListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        nextLink:
          description: URL to get the next set of offer list results if there are any.
          type: string
    CollectionOffersByAllContextsPayload:
      description: Suggested subscription list
      properties:
        properties:
          $ref: '#/components/schemas/CollectionOffersByAllContextsProperties'
          description: Subscriptions ids list
          x-ms-client-flatten: true
      type: object
    CollectionOffersByAllContextsProperties:
      description: Suggested subscription list
      type: object
      properties:
        subscriptionIds:
          description: Subscription ids list
          type: array
          items:
            type: string
    CollectionOffersByContextList:
      description: List of objects which describes offers per context. An empty GUID is a public context.
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CollectionOffersByContext'
          x-ms-identifiers:
            - context
        nextLink:
          description: URL to get the next set of offer list per context results if there are any.
          type: string
    CollectionOffersByContext:
      description: List of offers and plans that restricted to the context
      type: object
      properties:
        context:
          description: Offer's context, e.g. subscription ID, tenant ID.
          type: string
          readOnly: true
        offers:
          description: List of offers
          type: object
          x-ms-client-flatten: true
          properties:
            value:
              type: array
              items:
                $ref: '#/components/schemas/OfferProperties'
              x-ms-identifiers:
                - uniqueOfferId
    QueryOffers:
      description: List of offers
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OfferProperties'
          x-ms-identifiers:
            - uniqueOfferId
        nextLink:
          description: URL to get the next set of PrivateStore list results if there are any.
          type: string
    Offer:
      description: The privateStore offer data structure.
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
        properties:
          $ref: '#/components/schemas/OfferProperties'
          description: The privateStore offer data structure.
          x-ms-client-flatten: true
      type: object
    OfferProperties:
      type: object
      properties:
        uniqueOfferId:
          description: Offers unique id
          type: string
          readOnly: true
        offerDisplayName:
          description: It will be displayed prominently in the marketplace
          type: string
          readOnly: true
        publisherDisplayName:
          description: Publisher name that will be displayed prominently in the marketplace
          type: string
          readOnly: true
        eTag:
          description: Identifier for purposes of race condition
          type: string
        privateStoreId:
          readOnly: true
          description: Private store unique id
          type: string
        createdAt:
          readOnly: true
          description: Private store offer creation date
          type: string
        modifiedAt:
          readOnly: true
          description: Private store offer modification date
          type: string
        specificPlanIdsLimitation:
          description: Plan ids limitation for this offer
          type: array
          items:
            type: string
        updateSuppressedDueIdempotence:
          description: Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.
          type: boolean
        iconFileUris:
          description: Icon File Uris
          type: object
          additionalProperties:
            type: string
        plans:
          description: Offer plans
          type: array
          items:
            $ref: '#/components/schemas/Plan'
          x-ms-identifiers:
            - planId
    Plan:
      type: object
      properties:
        skuId:
          description: Identifier for this plan
          type: string
          readOnly: true
        planId:
          description: Text identifier for this plan
          type: string
          readOnly: true
        planDisplayName:
          description: Friendly name for the plan for display in the marketplace
          type: string
          readOnly: true
        accessibility:
          description: Plan accessibility
          type: string
          enum:
            - Unknown
            - Public
            - PrivateTenantOnLevel
            - PrivateSubscriptionOnLevel
          x-ms-enum:
            name: accessibility
            modelAsString: true
        altStackReference:
          description: Alternative stack type
          type: string
          readOnly: true
        stackType:
          description: Stack type (classic or arm)
          type: string
          readOnly: true
    AdminRequestApprovalsList:
      description: List of admin request approval resources
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AdminRequestApprovalsResource'
        nextLink:
          description: URL to get the next set of notifications list results if there are any.
          type: string
          readOnly: true
    AdminRequestApprovalsResource:
      description: Admin request approval resource.
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
        properties:
          $ref: '#/components/schemas/AdminRequestApprovalProperties'
          description: The privateStore admin Approval request data structure.
          x-ms-client-flatten: true
      type: object
    AdminRequestApprovalProperties:
      description: Admin approval request resource properties
      type: object
      properties:
        offerId:
          description: Gets or sets offer Id
          type: string
        displayName:
          description: Gets display name
          type: string
          readOnly: true
        publisherId:
          description: Gets or sets publisher Id
          type: string
        adminAction:
          description: Gets or sets admin action
          type: string
          enum:
            - Approved
            - Rejected
          x-ms-enum:
            name: adminAction
            modelAsString: true
        approvedPlans:
          description: Gets or sets Approved plans ids, empty in case of rejected
          type: array
          items:
            type: string
        comment:
          description: Gets or sets admin comment
          type: string
        administrator:
          description: Gets or sets admin details
          type: string
        plans:
          description: Gets list of plans with requesters details
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/PlanRequesterDetails'
          x-ms-identifiers:
            - planId
        collectionIds:
          description: Gets or sets list of associated collection ids
          type: array
          items:
            type: string
        icon:
          description: The offer icon url.
          type: string
          readOnly: true
    PlanRequesterDetails:
      description: Plan with requesters details
      type: object
      properties:
        planId:
          description: Gets the plan id
          type: string
          readOnly: true
        planDisplayName:
          description: Gets the plan display name
          type: string
          readOnly: true
        requesters:
          description: Gets requesters details list
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/UserRequestDetails'
          x-ms-identifiers:
            - user
    MultiContextAndPlansPayload:
      description: Payload object for upsert offer with multiple context and plans.
      properties:
        properties:
          $ref: '#/components/schemas/MultiContextAndPlansProperties'
          description: Object describes multiple context and plans.
          x-ms-client-flatten: true
      type: object
    MultiContextAndPlansProperties:
      description: Object describes multiple context and plans.
      type: object
      properties:
        offerId:
          description: The offer ID which contains the plans.
          type: string
        eTag:
          description: The offer's eTag.
          type: string
        plansContext:
          type: array
          items:
            $ref: '#/components/schemas/ContextAndPlansDetails'
          x-ms-identifiers:
            - context
    ContextAndPlansDetails:
      description: Object of plans per context.
      type: object
      properties:
        context:
          description: Plan's context, e.g. subscription ID, tenant ID.
          type: string
        planIds:
          description: List of plan IDs.
          type: array
          items:
            type: string
    UserRequestDetails:
      description: user request details
      type: object
      properties:
        user:
          description: Gets user id
          type: string
          readOnly: true
        date:
          description: Gets request date
          type: string
          readOnly: true
        justification:
          description: Gets justification
          type: string
          readOnly: true
        subscriptionId:
          description: Gets the subscription id that the user is requesting to add the plan to
          type: string
        subscriptionName:
          description: Gets the subscription name that the user is requesting to add the plan to
          type: string
    RequestApprovalsList:
      description: List of admin request approval resources
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RequestApprovalResource'
        nextLink:
          description: URL to get the next set of notifications list results if there are any.
          type: string
          readOnly: true
    RequestApprovalResource:
      description: Request approval resource.
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
        properties:
          $ref: '#/components/schemas/RequestApprovalProperties'
          description: The privateStore approval request data structure.
          x-ms-client-flatten: true
      type: object
    RequestApprovalProperties:
      description: Approval request resource properties
      type: object
      properties:
        offerId:
          description: Gets or sets unique offer id.
          type: string
        offerDisplayName:
          description: Gets offer display name
          type: string
          readOnly: true
        publisherId:
          description: The offer's publisher id
          type: string
        plansDetails:
          description: Gets or sets the plans details
          type: array
          items:
            $ref: '#/components/schemas/planDetails'
          x-ms-identifiers:
            - planId
        isClosed:
          description: Gets a value indicating whether the request is closed
          type: boolean
          readOnly: true
        messageCode:
          description: Gets or sets the request approval message code
          type: integer
          format: int64
    planDetails:
      description: Return plan with request details
      type: object
      properties:
        planId:
          description: 'Gets or sets Plan Id '
          type: string
        status:
          description: Gets the plan status
          type: string
          readOnly: true
          enum:
            - Pending
            - Rejected
            - Approved
            - None
          x-ms-enum:
            name: status
            modelAsString: true
        requestDate:
          description: Gets request date
          format: date-time
          readOnly: true
        justification:
          description: Gets or sets user's justification for the plan's request
          type: string
        subscriptionId:
          description: Gets or sets the subscription id that the user is requesting to add the plan to
          type: string
        subscriptionName:
          description: Gets or sets the subscription name that the user is requesting to add the plan to
          type: string
    QueryRequestApproval:
      description: Gets the request plans with indication on each plan whether is approved by the admin, has pending request or not requested yet
      type: object
      properties:
        uniqueOfferId:
          description: Gets or sets unique offer id.
          type: string
        plansDetails:
          description: Gets or sets the plans details
          type: object
          additionalProperties:
            $ref: '#/components/schemas/planDetails'
        etag:
          description: 'Gets or sets e-tag field '
          type: string
        messageCode:
          description: Gets or sets the notification message id
          type: integer
          format: int64
    QueryRequestApprovalProperties:
      description: The details to get the request plans statuses
      properties:
        properties:
          $ref: '#/components/schemas/RequestDetails'
          description: The details to get the request plans statuses
      type: object
    RequestDetails:
      description: Request details needed to get the plans statuses
      type: object
      properties:
        publisherId:
          description: The offer's publisher id
          type: string
        planIds:
          description: Current plans list
          type: array
          items:
            type: string
        subscriptionId:
          description: Gets or sets the subscription id
          type: string
    NewPlansNotificationsList:
      description: List of all new plans notifications for public offers
      type: object
      properties:
        newPlansNotifications:
          type: array
          items:
            $ref: '#/components/schemas/NewNotifications'
          x-ms-identifiers: []
    QueryUserOffersProperties:
      description: Query user's offers properties
      properties:
        properties:
          $ref: '#/components/schemas/QueryUserOffersDetails'
          description: Query user's offers details
          x-ms-client-flatten: true
      type: object
    QueryUserOffersDetails:
      description: List of offers IDs and list of user's subscriptions IDs to query the user's approved offers
      type: object
      properties:
        offerIds:
          description: List of offer IDs
          type: array
          items:
            type: string
        subscriptionIds:
          description: List of subscription IDs
          type: array
          items:
            type: string
    SubscriptionsContextList:
      description: List of subscription Ids in the private store
      type: object
      properties:
        subscriptionsIds:
          type: array
          items:
            type: string
    QueryUserRulesProperties:
      description: Query user's rules properties
      properties:
        properties:
          $ref: '#/components/schemas/QueryUserRulesDetails'
          description: Query user's rules details
          x-ms-client-flatten: true
      type: object
    QueryUserRulesDetails:
      description: List of subscriptions IDs to query the user's rules
      type: object
      properties:
        subscriptionIds:
          description: List of subscription IDs
          type: array
          items:
            type: string
    PrivateStoreNotificationsState:
      description: Get private store notifications state
      type: object
      properties:
        stopSellNotifications:
          type: array
          items:
            $ref: '#/components/schemas/StopSellNotifications'
          x-ms-identifiers: []
        newNotifications:
          type: array
          items:
            $ref: '#/components/schemas/NewNotifications'
          x-ms-identifiers: []
        approvalRequests:
          type: array
          items:
            $ref: '#/components/schemas/RequestApprovalsDetails'
          x-ms-identifiers: []
    NewNotifications:
      description: New plans notification details
      type: object
      properties:
        offerId:
          description: Gets offer id
          type: string
        displayName:
          description: Gets offer display name
          type: string
        isFuturePlansEnabled:
          description: Gets a value indicating whether future plans is enabled.
          type: boolean
        messageCode:
          description: Gets or sets the notification message id
          type: integer
          format: int64
        icon:
          description: Gets or sets the icon url
          type: string
        plans:
          description: Gets or sets removed plans notifications
          type: array
          items:
            $ref: '#/components/schemas/PlanNotificationDetails'
          x-ms-identifiers:
            - planId
    StopSellNotifications:
      description: Stop sell notification details
      type: object
      properties:
        offerId:
          description: Gets offer id
          type: string
        displayName:
          description: Gets offer display name
          type: string
        isEntire:
          description: Gets a value indicating whether entire offer is in stop sell or only few of its plans
          type: boolean
        messageCode:
          description: Gets or sets the notification message id
          type: integer
          format: int64
        icon:
          description: Gets or sets the icon url
          type: string
        plans:
          description: Gets or sets removed plans notifications
          type: array
          items:
            $ref: '#/components/schemas/PlanNotificationDetails'
          x-ms-identifiers:
            - planId
    PlanNotificationDetails:
      description: Plan notification details
      type: object
      properties:
        planId:
          description: Gets or sets the plan id
          type: string
        planDisplayName:
          description: Gets or sets the plan display name
          type: string
    RequestApprovalsDetails:
      description: Request approvals details
      type: object
      properties:
        offerId:
          description: Gets offer id
          type: string
        displayName:
          description: Gets offer display name
          type: string
        publisherId:
          description: Gets or sets publisher id
          type: string
        messageCode:
          description: Gets or sets the notification message id
          type: integer
          format: int64
        icon:
          description: Gets or sets the icon url
          type: string
        plans:
          description: Gets or sets removed plans notifications
          type: array
          items:
            $ref: '#/components/schemas/PlanNotificationDetails'
          x-ms-identifiers:
            - planId
    AcknowledgeOfferNotificationProperties:
      description: Notification update request payload
      properties:
        properties:
          $ref: '#/components/schemas/AcknowledgeOfferNotificationDetails'
          description: Notification update request payload details
          x-ms-client-flatten: true
      type: object
    AcknowledgeOfferNotificationDetails:
      description: Notification update request payload details
      type: object
      properties:
        acknowledge:
          description: Gets or sets a value indicating whether acknowledge action flag is enabled
          type: boolean
        dismiss:
          description: Gets or sets a value indicating whether dismiss action flag is enabled
          type: boolean
        removeOffer:
          description: Gets or sets a value indicating whether remove offer action flag is enabled
          type: boolean
        addPlans:
          description: Gets or sets added plans
          type: array
          items:
            type: string
        removePlans:
          description: Gets or sets remove plans
          type: array
          items:
            type: string
    WithdrawProperties:
      description: Withdraw properties
      properties:
        properties:
          $ref: '#/components/schemas/WithdrawDetails'
          description: Withdraw properties details
          x-ms-client-flatten: true
      type: object
    WithdrawDetails:
      description: Withdraw properties details
      type: object
      properties:
        planId:
          description: 'Gets or sets Plan Id '
          type: string
        publisherId:
          description: The offer's publisher id
          type: string
    BillingAccountsResponse:
      description: Billing accounts response object
      type: object
      properties:
        billingAccounts:
          description: Billing accounts list
          type: array
          items:
            type: string
    TransferOffersProperties:
      description: Transfer offers properties
      properties:
        properties:
          $ref: '#/components/schemas/TransferOffersDetails'
          description: transfer offers properties details
          x-ms-client-flatten: true
      type: object
    TransferOffersResponse:
      description: The transfer items response. The response contains two lists that indicate for each collection whether the operation succeeded or failed
      type: object
      properties:
        succeeded:
          description: Succeeded collections
          type: array
          items:
            $ref: '#/components/schemas/CollectionsDetails'
          x-ms-identifiers:
            - collectionId
        failed:
          description: Failed collections
          type: array
          items:
            $ref: '#/components/schemas/CollectionsDetails'
          x-ms-identifiers:
            - collectionId
    BulkCollectionsPayload:
      description: Bulk collections action properties
      properties:
        properties:
          $ref: '#/components/schemas/BulkCollectionsDetails'
          description: bulk collections properties details
          x-ms-client-flatten: true
      type: object
    BulkCollectionsDetails:
      description: Bulk collection details
      type: object
      properties:
        collectionIds:
          description: collection ids list that the action is performed on
          type: array
          items:
            type: string
        action:
          description: 'Action to perform (For example: EnableCollections, DisableCollections)'
          type: string
    BulkCollectionsResponse:
      description: The bulk collections response. The response contains two lists that indicate for each collection whether the operation succeeded or failed
      type: object
      properties:
        succeeded:
          description: Succeeded collections
          type: array
          items:
            $ref: '#/components/schemas/CollectionsDetails'
          x-ms-identifiers:
            - collectionId
        failed:
          description: Failed collections
          type: array
          items:
            $ref: '#/components/schemas/CollectionsDetails'
          x-ms-identifiers:
            - collectionId
    QueryApprovedPlansPayload:
      description: Query approved plans payload
      properties:
        properties:
          $ref: '#/components/schemas/QueryApprovedPlans'
          description: Query approved plans details
          x-ms-client-flatten: true
      type: object
    QueryApprovedPlans:
      description: Query approved plans details
      type: object
      properties:
        offerId:
          description: Offer id
          type: string
        planIds:
          description: Offer plan ids
          type: array
          items:
            type: string
        subscriptionIds:
          description: List of subscription IDs
          type: array
          items:
            type: string
    QueryApprovedPlansResponse:
      description: Query approved plans response
      type: object
      properties:
        details:
          $ref: '#/components/schemas/QueryApprovedPlansResponseDetails'
    QueryApprovedPlansResponseDetails:
      description: A list indicating for each plan which subscriptions are approved. Plan Id is unique
      type: array
      items:
        $ref: '#/components/schemas/QueryApprovedPlansDetails'
      x-ms-identifiers:
        - planId
    QueryApprovedPlansDetails:
      description: Query approved plans response
      type: object
      properties:
        planId:
          description: Plan id
          type: string
        subscriptionIds:
          description: Approved subscription ids list. In case all subscriptions are approved for a plan, allSubscriptions flag is true and list is empty ( else flag is set to false). In case both subscriptions list is empty and allSubscriptions flag is false, the plan is not approved for any subscription.
          type: array
          items:
            type: string
        allSubscriptions:
          description: Indicates whether all subscriptions are approved for this plan
          type: boolean
    CollectionsDetails:
      description: Collection name and id.
      type: object
      properties:
        collectionName:
          description: Collection name.
          type: string
        collectionId:
          description: Collection id.
          type: string
    TransferOffersDetails:
      description: Transfer offers response details
      type: object
      properties:
        targetCollections:
          description: Target collections ids
          type: array
          items:
            type: string
        operation:
          description: 'Operation to perform (For example: Copy or Move)'
          type: string
        offerIdsList:
          description: Offers ids list to transfer from source collection to target collection(s)
          type: array
          items:
            type: string
    CollectionsToSubscriptionsMappingPayload:
      description: The subscriptions list to get the related collections
      properties:
        properties:
          $ref: '#/components/schemas/CollectionsToSubscriptionsMappingProperties'
          description: Subscriptions ids list
      type: object
    CollectionsToSubscriptionsMappingProperties:
      description: The subscriptions list to get the related collections
      type: object
      properties:
        subscriptionIds:
          description: Subscriptions ids list
          type: array
          items:
            type: string
    CollectionsToSubscriptionsMappingResponse:
      description: A map of collections subscriptions details
      type: object
      properties:
        details:
          $ref: '#/components/schemas/CollectionsToSubscriptionsMappingResponseProperties'
          description: The map of collections subscriptions
    CollectionsToSubscriptionsMappingResponseProperties:
      description: 'Collections - subscriptions mapping details, map key is collectionId. In case subscriptions list is null or empty: no subscription from the list is related to that collection.'
      additionalProperties:
        $ref: '#/components/schemas/collectionsSubscriptionsMappingDetails'
      properties: {}
      type: object
    collectionsSubscriptionsMappingDetails:
      description: Collection name and related subscriptions list
      type: object
      properties:
        collectionName:
          description: Collection name
          type: string
        subscriptions:
          description: Subscriptions ids list
          type: array
          items:
            type: string
    StopSellOffersPlansNotificationsList:
      description: List of stop sell offers and plans notifications.
      type: object
      properties:
        stopSellNotifications:
          type: array
          items:
            $ref: '#/components/schemas/StopSellOffersPlansNotificationsListProperties'
          x-ms-identifiers:
            - offerId
    StopSellOffersPlansNotificationsListProperties:
      description: List of stop sell offers and plans notifications.
      type: object
      properties:
        offerId:
          description: The offer id
          type: string
          readOnly: true
        displayName:
          description: The offer display name
          type: string
          readOnly: true
        isEntire:
          description: A value indicating whether entire offer is in stop sell or only few of its plans
          type: boolean
          readOnly: true
        messageCode:
          description: The notification message code
          type: integer
          format: int64
          readOnly: true
        icon:
          description: The icon url
          type: string
          readOnly: true
        plans:
          description: The list of removed plans notifications
          type: array
          items:
            $ref: '#/components/schemas/PlanNotificationDetails'
          x-ms-identifiers:
            - planId
          readOnly: true
        publicContext:
          description: True if the offer has public plans
          type: boolean
          readOnly: true
        subscriptionsIds:
          description: The subscriptions related to private plans
          type: array
          items:
            type: string
          readOnly: true
    StopSellSubscriptions:
      description: Private plans subscriptions
      type: object
      properties:
        subscriptions:
          type: array
          items:
            type: string
    SubscriptionsResponse:
      description: Subscription list operation response.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
          description: An array of subscriptions.
          readOnly: true
        skipToken:
          type: string
          description: The skip token to retrieve the next page.
          readOnly: true
        count:
          description: Number of subscriptions on the page
          type: integer
          format: int64
          readOnly: true
    Subscription:
      description: Subscription information.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000.
        subscriptionId:
          readOnly: true
          type: string
          description: The subscription ID.
        displayName:
          readOnly: true
          type: string
          description: The subscription display name.
        state:
          readOnly: true
          type: string
          description: The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
          enum:
            - Enabled
            - Warned
            - PastDue
            - Disabled
            - Deleted
          x-ms-enum:
            name: SubscriptionState
            modelAsString: true
    PrivateStoreOperation:
      description: Set the Operation for the POST method. Ping or Delete
      type: string
      enum:
        - DeletePrivateStoreOffer
        - DeletePrivateStoreCollection
        - DeletePrivateStoreCollectionOffer
        - Ping
      x-ms-enum:
        name: Operation
        modelAsString: true
    OperationListResult:
      description: Result of the request to list Marketplace operations. It contains a list of operations and a URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SingleOperation'
          x-ms-identifiers:
            - name
          description: List of Microsoft.Marketplace operations supported by the Microsoft.Marketplace resource provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
    SingleOperation:
      description: Microsoft.Marketplace REST API operation
      properties:
        id:
          description: Operation ID
          type: string
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          description: The object that represents the operation.
          type: object
          properties:
            provider:
              readOnly: true
              description: 'Service provider: Microsoft.Marketplace'
              type: string
            resource:
              readOnly: true
              description: Resource on which the operation is performed
              type: string
            operation:
              readOnly: true
              description: Operation type
              type: string
            description:
              readOnly: true
              type: string
              description: Friendly description for the operation,
        origin:
          description: Origin of the operation
          type: string
        properties:
          $ref: '#/components/schemas/OperationProperties'
          description: Properties of the operation
      type: object
    OperationProperties:
      description: Operation properties.
      type: object
      properties: {}
    ErrorResponse:
      description: Error response indicates Microsoft.Marketplace service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        error:
          description: The details of the error.
          type: object
          properties:
            code:
              description: Error code.
              type: string
              readOnly: true
            message:
              description: Error message indicating why the operation failed.
              type: string
              readOnly: true
    Resource:
      description: An Azure resource.
      type: object
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
      x-ms-azure-resource: true
    SystemData:
      description: Read only system data
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that created the resource
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC)
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that last modified the resource
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    IdentityType:
      description: The type of identity that creates/modifies resources
      type: string
      enum:
        - User
        - Application
        - ManagedIdentity
        - Key
      x-ms-enum:
        name: IdentityType
        modelAsString: true
  x-stackQL-resources:
    private_store:
      id: azure_extras.marketplace.private_store
      name: private_store
      title: private_store
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1?api-version=2023-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1?api-version=2023-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        any_existing_offers_in_the_collections:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1anyExistingOffersInTheCollections~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_offers:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1queryOffers~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_user_offers:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1queryUserOffers~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1billingAccounts~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        collections_to_subscriptions_mapping:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collectionsToSubscriptionsMapping~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_approved_plans:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1queryApprovedPlans~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_collections_action:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1bulkCollectionsAction~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_request_approval:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1requestApprovals~1{requestApprovalId}~1query~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_request_approvals_list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1adminRequestApprovals~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_notifications_state:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1queryNotificationsState~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        acknowledge_offer_notification:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1offers~1{offerId}~1acknowledgeNotification~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        withdraw_plan:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1requestApprovals~1{requestApprovalId}~1withdrawPlan~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        fetch_all_subscriptions_in_tenant:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1fetchAllSubscriptionsInTenant~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_store/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_store/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_store/methods/delete'
    private_stores:
      id: azure_extras.marketplace.private_stores
      name: private_stores
      title: private_stores
      methods:
        private_stores:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1queryRules~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    private_store_collection:
      id: azure_extras.marketplace.private_store_collection
      name: private_store_collection
      title: private_store_collection
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1?api-version=2023-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1?api-version=2023-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        post:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        transfer_offers:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1transferOffers~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve_all_items:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1approveAllItems~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_approve_all_items:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1disableApproveAllItems~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store_collection/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_store_collection/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_store_collection/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_store_collection/methods/delete'
    private_store_collection_offer:
      id: azure_extras.marketplace.private_store_collection_offer
      name: private_store_collection_offer
      title: private_store_collection_offer
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1offers~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1offers~1{offerId}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1offers~1{offerId}~1?api-version=2023-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1offers~1{offerId}~1?api-version=2023-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        post:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1offers~1{offerId}~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upsert_offer_with_multi_context:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1offers~1{offerId}~1upsertOfferWithMultiContext~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store_collection_offer/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_store_collection_offer/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_store_collection_offer/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_store_collection_offer/methods/delete'
    collection_offers_by_context:
      id: azure_extras.marketplace.collection_offers_by_context
      name: collection_offers_by_context
      title: collection_offers_by_context
      methods:
        list_by_contexts:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1collections~1{collectionId}~1mapOffersToContexts~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collection_offers_by_context/methods/list_by_contexts'
        insert: []
        update: []
        replace: []
        delete: []
    private_store_approval_requests_list:
      id: azure_extras.marketplace.private_store_approval_requests_list
      name: private_store_approval_requests_list
      title: private_store_approval_requests_list
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1requestApprovals~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store_approval_requests_list/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    private_store_request_approval:
      id: azure_extras.marketplace.private_store_request_approval
      name: private_store_request_approval
      title: private_store_request_approval
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1requestApprovals~1{requestApprovalId}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store_request_approval/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    private_store_approval_request:
      id: azure_extras.marketplace.private_store_approval_request
      name: private_store_approval_request
      title: private_store_approval_request
      methods:
        create:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1requestApprovals~1{requestApprovalId}~1?api-version=2023-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/private_store_approval_request/methods/create'
        update: []
        replace: []
        delete: []
    private_store_admin_request_approval:
      id: azure_extras.marketplace.private_store_admin_request_approval
      name: private_store_admin_request_approval
      title: private_store_admin_request_approval
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1adminRequestApprovals~1{adminRequestApprovalId}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1adminRequestApprovals~1{adminRequestApprovalId}~1?api-version=2023-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store_admin_request_approval/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    private_store_new_plans_notifications:
      id: azure_extras.marketplace.private_store_new_plans_notifications
      name: private_store_new_plans_notifications
      title: private_store_new_plans_notifications
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1listNewPlansNotifications~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store_new_plans_notifications/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_store_stop_sell_offers_plans_notifications:
      id: azure_extras.marketplace.private_store_stop_sell_offers_plans_notifications
      name: private_store_stop_sell_offers_plans_notifications
      title: private_store_stop_sell_offers_plans_notifications
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1listStopSellOffersPlansNotifications~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store_stop_sell_offers_plans_notifications/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_store_subscriptions_context:
      id: azure_extras.marketplace.private_store_subscriptions_context
      name: private_store_subscriptions_context
      title: private_store_subscriptions_context
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1privateStores~1{privateStoreId}~1listSubscriptionsContext~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_store_subscriptions_context/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure_extras.marketplace.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Marketplace~1operations~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_private_store:
      id: azure_extras.marketplace.vw_private_store
      name: vw_private_store
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.availability') as availability,
              JSON_EXTRACT(properties, '$.privateStoreId') as private_store_id,
              JSON_EXTRACT(properties, '$.eTag') as e_tag,
              JSON_EXTRACT(properties, '$.privateStoreName') as private_store_name,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.isGov') as is_gov,
              JSON_EXTRACT(properties, '$.collectionIds') as collection_ids,
              JSON_EXTRACT(properties, '$.branding') as branding,
              JSON_EXTRACT(properties, '$.notificationsSettings') as notifications_settings,
              privateStoreId
              FROM azure_extras.marketplace.private_store
              WHERE ;
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.availability') as availability,
                JSON_EXTRACT(properties, '$.privateStoreId') as private_store_id,
                JSON_EXTRACT(properties, '$.eTag') as e_tag,
                JSON_EXTRACT(properties, '$.privateStoreName') as private_store_name,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.isGov') as is_gov,
                JSON_EXTRACT(properties, '$.collectionIds') as collection_ids,
                JSON_EXTRACT(properties, '$.branding') as branding,
                JSON_EXTRACT(properties, '$.notificationsSettings') as notifications_settings,
                privateStoreId
                FROM azure_extras.marketplace.private_store
                WHERE ;
    vw_private_store_collection:
      id: azure_extras.marketplace.vw_private_store_collection
      name: vw_private_store_collection
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.collectionId') as collection_id,
              JSON_EXTRACT(properties, '$.collectionName') as collection_name,
              JSON_EXTRACT(properties, '$.claim') as claim,
              JSON_EXTRACT(properties, '$.allSubscriptions') as all_subscriptions,
              JSON_EXTRACT(properties, '$.approveAllItems') as approve_all_items,
              JSON_EXTRACT(properties, '$.approveAllItemsModifiedAt') as approve_all_items_modified_at,
              JSON_EXTRACT(properties, '$.subscriptionsList') as subscriptions_list,
              JSON_EXTRACT(properties, '$.enabled') as enabled,
              JSON_EXTRACT(properties, '$.numberOfOffers') as number_of_offers,
              JSON_EXTRACT(properties, '$.appliedRules') as applied_rules,
              privateStoreId,
              collectionId
              FROM azure_extras.marketplace.private_store_collection
              WHERE privateStoreId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.collectionId') as collection_id,
                JSON_EXTRACT(properties, '$.collectionName') as collection_name,
                JSON_EXTRACT(properties, '$.claim') as claim,
                JSON_EXTRACT(properties, '$.allSubscriptions') as all_subscriptions,
                JSON_EXTRACT(properties, '$.approveAllItems') as approve_all_items,
                JSON_EXTRACT(properties, '$.approveAllItemsModifiedAt') as approve_all_items_modified_at,
                JSON_EXTRACT(properties, '$.subscriptionsList') as subscriptions_list,
                JSON_EXTRACT(properties, '$.enabled') as enabled,
                JSON_EXTRACT(properties, '$.numberOfOffers') as number_of_offers,
                JSON_EXTRACT(properties, '$.appliedRules') as applied_rules,
                privateStoreId,
                collectionId
                FROM azure_extras.marketplace.private_store_collection
                WHERE privateStoreId = 'replace-me';
    vw_private_store_collection_offer:
      id: azure_extras.marketplace.vw_private_store_collection_offer
      name: vw_private_store_collection_offer
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.uniqueOfferId') as unique_offer_id,
              JSON_EXTRACT(properties, '$.offerDisplayName') as offer_display_name,
              JSON_EXTRACT(properties, '$.publisherDisplayName') as publisher_display_name,
              JSON_EXTRACT(properties, '$.eTag') as e_tag,
              JSON_EXTRACT(properties, '$.privateStoreId') as private_store_id,
              JSON_EXTRACT(properties, '$.createdAt') as created_at,
              JSON_EXTRACT(properties, '$.modifiedAt') as modified_at,
              JSON_EXTRACT(properties, '$.specificPlanIdsLimitation') as specific_plan_ids_limitation,
              JSON_EXTRACT(properties, '$.updateSuppressedDueIdempotence') as update_suppressed_due_idempotence,
              JSON_EXTRACT(properties, '$.iconFileUris') as icon_file_uris,
              JSON_EXTRACT(properties, '$.plans') as plans,
              privateStoreId,
              collectionId,
              offerId
              FROM azure_extras.marketplace.private_store_collection_offer
              WHERE privateStoreId = 'replace-me' AND collectionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.uniqueOfferId') as unique_offer_id,
                JSON_EXTRACT(properties, '$.offerDisplayName') as offer_display_name,
                JSON_EXTRACT(properties, '$.publisherDisplayName') as publisher_display_name,
                JSON_EXTRACT(properties, '$.eTag') as e_tag,
                JSON_EXTRACT(properties, '$.privateStoreId') as private_store_id,
                JSON_EXTRACT(properties, '$.createdAt') as created_at,
                JSON_EXTRACT(properties, '$.modifiedAt') as modified_at,
                JSON_EXTRACT(properties, '$.specificPlanIdsLimitation') as specific_plan_ids_limitation,
                JSON_EXTRACT(properties, '$.updateSuppressedDueIdempotence') as update_suppressed_due_idempotence,
                JSON_EXTRACT(properties, '$.iconFileUris') as icon_file_uris,
                JSON_EXTRACT(properties, '$.plans') as plans,
                privateStoreId,
                collectionId,
                offerId
                FROM azure_extras.marketplace.private_store_collection_offer
                WHERE privateStoreId = 'replace-me' AND collectionId = 'replace-me';
    vw_private_store_request_approval:
      id: azure_extras.marketplace.vw_private_store_request_approval
      name: vw_private_store_request_approval
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.offerId') as offer_id,
              JSON_EXTRACT(properties, '$.offerDisplayName') as offer_display_name,
              JSON_EXTRACT(properties, '$.publisherId') as publisher_id,
              JSON_EXTRACT(properties, '$.plansDetails') as plans_details,
              JSON_EXTRACT(properties, '$.isClosed') as is_closed,
              JSON_EXTRACT(properties, '$.messageCode') as message_code,
              privateStoreId,
              requestApprovalId
              FROM azure_extras.marketplace.private_store_request_approval
              WHERE privateStoreId = 'replace-me' AND requestApprovalId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.offerId') as offer_id,
                JSON_EXTRACT(properties, '$.offerDisplayName') as offer_display_name,
                JSON_EXTRACT(properties, '$.publisherId') as publisher_id,
                JSON_EXTRACT(properties, '$.plansDetails') as plans_details,
                JSON_EXTRACT(properties, '$.isClosed') as is_closed,
                JSON_EXTRACT(properties, '$.messageCode') as message_code,
                privateStoreId,
                requestApprovalId
                FROM azure_extras.marketplace.private_store_request_approval
                WHERE privateStoreId = 'replace-me' AND requestApprovalId = 'replace-me';
    vw_private_store_admin_request_approval:
      id: azure_extras.marketplace.vw_private_store_admin_request_approval
      name: vw_private_store_admin_request_approval
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.offerId') as offer_id,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.publisherId') as publisher_id,
              JSON_EXTRACT(properties, '$.adminAction') as admin_action,
              JSON_EXTRACT(properties, '$.approvedPlans') as approved_plans,
              JSON_EXTRACT(properties, '$.comment') as comment,
              JSON_EXTRACT(properties, '$.administrator') as administrator,
              JSON_EXTRACT(properties, '$.plans') as plans,
              JSON_EXTRACT(properties, '$.collectionIds') as collection_ids,
              JSON_EXTRACT(properties, '$.icon') as icon,
              privateStoreId,
              adminRequestApprovalId
              FROM azure_extras.marketplace.private_store_admin_request_approval
              WHERE privateStoreId = 'replace-me' AND adminRequestApprovalId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.offerId') as offer_id,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.publisherId') as publisher_id,
                JSON_EXTRACT(properties, '$.adminAction') as admin_action,
                JSON_EXTRACT(properties, '$.approvedPlans') as approved_plans,
                JSON_EXTRACT(properties, '$.comment') as comment,
                JSON_EXTRACT(properties, '$.administrator') as administrator,
                JSON_EXTRACT(properties, '$.plans') as plans,
                JSON_EXTRACT(properties, '$.collectionIds') as collection_ids,
                JSON_EXTRACT(properties, '$.icon') as icon,
                privateStoreId,
                adminRequestApprovalId
                FROM azure_extras.marketplace.private_store_admin_request_approval
                WHERE privateStoreId = 'replace-me' AND adminRequestApprovalId = 'replace-me';
paths:
  /providers/Microsoft.Marketplace/privateStores/?api-version=2023-01-01:
    parameters:
      - $ref: '#/components/parameters/UseCacheParameter'
    get:
      tags:
        - PrivateStores
      operationId: PrivateStore_List
      description: Gets the list of available private stores.
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateStoreList'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStore_Get
      description: Get information about the private store
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateStore'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateStores
      operationId: PrivateStore_CreateOrUpdate
      description: Changes private store properties
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateStore'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: Change successful
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateStores
      operationId: PrivateStore_Delete
      description: Deletes the private store. All that is not saved will be lost.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: Private store was deleted successfully.
        '204':
          description: No Content
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/anyExistingOffersInTheCollections/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_AnyExistingOffersInTheCollections
      description: Query whether exists any offer in the collections.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyExistingOffersInTheCollectionsResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryOffers/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_QueryOffers
      description: List of offers, regardless the collections
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: List of offers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOffers'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryUserOffers/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_QueryUserOffers
      description: List of user's approved offers for the provided offers and subscriptions
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryUserOffersProperties'
      responses:
        '200':
          description: List of offers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOffers'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryUserRules/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: QueryUserRules
      description: All rules approved in the private store that are relevant for user subscriptions
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryUserRulesProperties'
      responses:
        '200':
          description: List of rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleListResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/billingAccounts/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_BillingAccounts
      description: Tenant billing accounts names
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccountsResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collectionsToSubscriptionsMapping/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_CollectionsToSubscriptionsMapping
      description: For a given subscriptions list, the API will return a map of collections and the related subscriptions from the supplied list.
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsToSubscriptionsMappingPayload'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsToSubscriptionsMappingResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollection_List
      description: Gets private store collections list
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: Collections list information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsList'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollection_Get
      description: Gets private store collection
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: Collection information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollection_CreateOrUpdate
      description: Create or update private store collection
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: Create or update collection properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollection_Delete
      description: Delete a collection from the given private store.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: Collection was deleted successfully
        '204':
          description: No Content
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollection_Post
      description: Delete Private store collection. This is a workaround.
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateStoreOperation'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: Operation succeeded
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/transferOffers/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollection_TransferOffers
      description: transferring offers (copy or move) from source collection to target collection(s)
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOffersProperties'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferOffersResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryApprovedPlans/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_QueryApprovedPlans
      description: Get map of plans and related approved subscriptions.
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryApprovedPlansPayload'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: Map of plan ids and their related approved subscriptions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryApprovedPlansResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/bulkCollectionsAction/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_BulkCollectionsAction
      description: Perform an action on bulk collections
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCollectionsPayload'
      responses:
        '200':
          description: The collections id and name that the action was performed on
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCollectionsResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/approveAllItems/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollection_ApproveAllItems
      description: Delete all existing offers from the collection and enable approve all items.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: OK, all items are approved and the response is the updated collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/disableApproveAllItems/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollection_DisableApproveAllItems
      description: Disable approve all items for the collection.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: OK, approve all items is disabled and the response is the updated collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollectionOffer_List
      description: Get a list of all private offers in the given private store and collection
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferListResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/mapOffersToContexts/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollectionOffer_ListByContexts
      description: Get a list of all offers in the given collection according to the required contexts.
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionOffersByAllContextsPayload'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionOffersByContextList'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/setRules/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: SetCollectionRules
      description: Set rule for specific private store and collection
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRulesRequest'
      responses:
        '200':
          description: OK
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/queryRules/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: QueryRules
      description: Get a list of all private store rules in the given private store and collection
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleListResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/{offerId}/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollectionOffer_Get
      description: Gets information about a specific offer.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
        - $ref: '#/components/parameters/OfferIdPathParameter'
      responses:
        '200':
          description: Offer information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollectionOffer_CreateOrUpdate
      description: Update or add an offer to a specific collection of the private store.
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
        - $ref: '#/components/parameters/OfferIdPathParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollectionOffer_Delete
      description: Deletes an offer from the given collection of private store.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
        - $ref: '#/components/parameters/OfferIdPathParameter'
      responses:
        '200':
          description: Offer was deleted successfully
        '204':
          description: No Content
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollectionOffer_Post
      description: Delete Private store offer. This is a workaround.
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateStoreOperation'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
        - $ref: '#/components/parameters/OfferIdPathParameter'
      responses:
        '200':
          description: Operation succeeded
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/{offerId}/upsertOfferWithMultiContext/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStoreCollectionOffer_UpsertOfferWithMultiContext
      description: Upsert an offer with multiple context details.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
        - $ref: '#/components/parameters/OfferIdPathParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiContextAndPlansPayload'
      responses:
        '200':
          description: Retrieve offer information with plans under required contexts restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStore_GetApprovalRequestsList
      description: Get all open approval requests of current user
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestApprovalsList'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStore_GetRequestApproval
      description: Get open request approval details
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/RequestApprovalIdPathParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestApprovalResource'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateStores
      operationId: PrivateStore_CreateApprovalRequest
      description: Create approval request
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestApprovalResource'
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/RequestApprovalIdPathParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestApprovalResource'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/query/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_QueryRequestApproval
      description: Get request statuses foreach plan, this api is used as a complex GET action.
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/RequestApprovalIdPathParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequestApprovalProperties'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryRequestApproval'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStore_AdminRequestApprovalsList
      description: Get list of admin request approvals
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRequestApprovalsList'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals/{adminRequestApprovalId}/?api-version=2023-01-01:
    parameters: []
    get:
      tags:
        - PrivateStores
      operationId: PrivateStore_GetAdminRequestApproval
      description: Get open approval requests
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/AdminRequestApprovalIdPathParameter'
        - $ref: '#/components/parameters/PublisherIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRequestApprovalsResource'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateStores
      operationId: PrivateStore_UpdateAdminRequestApproval
      description: Update the admin action, weather the request is approved or rejected and the approved plans
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/AdminRequestApprovalIdPathParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRequestApprovalsResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRequestApprovalsResource'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryNotificationsState/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_QueryNotificationsState
      description: Get private store notifications state
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateStoreNotificationsState'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/offers/{offerId}/acknowledgeNotification/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_AcknowledgeOfferNotification
      description: Acknowledge notification for offer
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/OfferIdPathParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeOfferNotificationProperties'
      responses:
        '200':
          description: OK, notification was acknowledged by the RP
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/withdrawPlan/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_WithdrawPlan
      description: Withdraw a user request approval on specific plan
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/RequestApprovalIdPathParameter'
      requestBody:
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawProperties'
      responses:
        '200':
          description: OK
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/fetchAllSubscriptionsInTenant/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_FetchAllSubscriptionsInTenant
      description: Fetch all subscriptions in tenant, only for marketplace admin
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
        - $ref: '#/components/parameters/SkipTokenParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsResponse'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listNewPlansNotifications/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_ListNewPlansNotifications
      description: List new plans notifications
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPlansNotificationsList'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listStopSellOffersPlansNotifications/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_ListStopSellOffersPlansNotifications
      description: List stop sell notifications for both stop sell offers and stop sell plans
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      requestBody:
        x-ms-requestBody-name: stopSellSubscriptions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopSellSubscriptions'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopSellOffersPlansNotificationsList'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listSubscriptionsContext/?api-version=2023-01-01:
    parameters: []
    post:
      tags:
        - PrivateStores
      operationId: PrivateStore_ListSubscriptionsContext
      description: List all the subscriptions in the private store context
      parameters:
        - $ref: '#/components/parameters/PrivateStoreIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsContextList'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Marketplace/operations/?api-version=2023-01-01:
    get:
      tags:
        - Operations
      description: Lists all of the available Microsoft.Marketplace REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Microsoft.Marketplace error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
