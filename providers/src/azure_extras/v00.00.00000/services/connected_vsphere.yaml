openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Arc VMware Management Service API (Microsoft.ConnectedVMwarevSphere)
  description: Self service experience for VMware.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-09-22-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: The Subscription ID.
      required: true
      schema:
        type: string
    api-version:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The Resource Group Name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    ResourcePatch:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Object containing updates for patch operations.
    ResourcePoolProperties:
      description: Defines the resource properties.
      type: object
      properties:
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        vCenterId:
          description: Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
          type: string
        moRefId:
          description: Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.
          type: string
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource pool.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the resource pool.
          type: string
          readOnly: true
        cpuSharesLevel:
          description: "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers."
          type: string
          readOnly: true
        cpuReservationMHz:
          format: int64
          description: "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available."
          type: integer
          readOnly: true
        cpuLimitMHz:
          format: int64
          description: "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources."
          type: integer
          readOnly: true
        memSharesLevel:
          description: "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers."
          type: string
          readOnly: true
        memReservationMB:
          format: int64
          description: "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes."
          type: integer
          readOnly: true
        memLimitMB:
          format: int64
          description: "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources."
          type: integer
          readOnly: true
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    ResourcePool:
      description: Define the resourcePool.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/ResourcePoolProperties'
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    ResourcePoolsList:
      description: List of ResourcePools.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of ResourcePools.
          type: string
        value:
          description: Array of ResourcePools
          type: array
          items:
            $ref: '#/components/schemas/ResourcePool'
      required:
        - value
    VICredential:
      description: Username / Password Credentials to connect to vcenter.
      type: object
      properties:
        username:
          description: Gets or sets username to connect with the vCenter.
          type: string
        password:
          description: Gets or sets the password to connect with the vCenter.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    ResourceStatus:
      description: The resource status information.
      type: object
      properties:
        type:
          description: The type of the condition.
          type: string
          readOnly: true
        status:
          description: Status of the condition.
          type: string
          readOnly: true
        reason:
          description: The reason for the condition's status.
          type: string
          readOnly: true
        message:
          description: A human readable message indicating details about the status.
          type: string
          readOnly: true
        severity:
          description: Severity with which to treat failures of this type of condition.
          type: string
          readOnly: true
        lastUpdatedAt:
          description: The last update time for this condition.
          type: string
          format: date-time
          readOnly: true
    VCenterProperties:
      description: Defines the resource properties.
      required:
        - fqdn
      type: object
      properties:
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        fqdn:
          description: Gets or sets the FQDN/IPAddress of the vCenter.
          type: string
        port:
          format: int32
          description: Gets or sets the port of the vCenter.
          maximum: 65535
          minimum: 1
          type: integer
        version:
          description: Gets or sets the version of the vCenter.
          type: string
          readOnly: true
        instanceUuid:
          description: Gets or sets the instance UUID of the vCenter.
          type: string
          readOnly: true
        connectionStatus:
          description: Gets or sets the connection status to the vCenter.
          type: string
          readOnly: true
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        credentials:
          description: Username / Password Credentials to connect to vcenter.
          $ref: '#/components/schemas/VICredential'
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    VirtualDiskUpdate:
      description: Defines the virtual disk update.
      type: object
      properties:
        name:
          description: Gets or sets the name of the virtual disk.
          type: string
        diskSizeGB:
          format: int32
          description: Gets or sets the disk total size.
          type: integer
        deviceKey:
          format: int32
          description: Gets or sets the device key value.
          type: integer
        diskMode:
          description: Gets or sets the disk mode.
          $ref: '#/components/schemas/DiskMode'
        controllerKey:
          description: Gets or sets the controller id.
          format: int32
          type: integer
        unitNumber:
          description: Gets or sets the unit number of the disk on the controller.
          format: int32
          type: integer
        deviceName:
          description: Gets or sets the device name.
          type: string
        diskType:
          description: Gets or sets the disk backing type.
          $ref: '#/components/schemas/DiskType'
    VirtualDisk:
      description: Virtual disk model
      type: object
      properties:
        name:
          description: Gets or sets the name of the virtual disk.
          type: string
        label:
          description: Gets or sets the label of the virtual disk in vCenter.
          type: string
          readOnly: true
        diskObjectId:
          description: Gets or sets the disk object id.
          type: string
          readOnly: true
        diskSizeGB:
          format: int32
          description: Gets or sets the disk total size.
          type: integer
        deviceKey:
          format: int32
          description: Gets or sets the device key value.
          type: integer
        diskMode:
          description: Gets or sets the disk mode.
          $ref: '#/components/schemas/DiskMode'
        controllerKey:
          description: Gets or sets the controller id.
          format: int32
          type: integer
        unitNumber:
          description: Gets or sets the unit number of the disk on the controller.
          format: int32
          type: integer
        deviceName:
          description: Gets or sets the device name.
          type: string
        diskType:
          description: Gets or sets the disk backing type.
          $ref: '#/components/schemas/DiskType'
    Condition:
      description: Condition defines an extension to status.
      type: object
      properties:
        status:
          description: Status of the condition.
          type: string
          readOnly: true
        reason:
          description: The reason for the condition's status.
          type: string
          readOnly: true
        message:
          description: A human readable message indicating details about the status.
          type: string
          readOnly: true
        severity:
          description: Severity with which to treat failures of this type of condition.
          type: string
          readOnly: true
    VCenter:
      description: Defines the vCenter.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VCenterProperties'
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    VCentersList:
      description: List of VCenters.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of VCenters.
          type: string
        value:
          description: Array of VCenters
          type: array
          items:
            $ref: '#/components/schemas/VCenter'
      required:
        - value
    OsType:
      description: Defines the different types of VM guest operating systems.
      enum:
        - Windows
        - Linux
        - Other
      type: string
      x-ms-enum:
        modelAsString: true
        name: OsType
    PatchSettings:
      type: object
      properties:
        assessmentMode:
          type: string
          description: Specifies the assessment mode.
        patchMode:
          type: string
          description: Specifies the patch mode.
      description: Specifies the patch settings.
    OsProfile:
      description: Defines the resource properties.
      type: object
      properties:
        computerName:
          description: Gets or sets computer name.
          type: string
        adminUsername:
          description: Gets or sets administrator username.
          type: string
        adminPassword:
          description: Gets or sets administrator password.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        guestId:
          description: Gets or sets the guestId.
          type: string
        allowExtensionOperations:
          description: Gets or sets a value indicating whether the VM is ready for extension operations.
          type: boolean
          readOnly: true
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
        osName:
          description: Gets or sets os name.
          type: string
          readOnly: true
        toolsRunningStatus:
          description: Gets or sets the current running status of VMware Tools running in the guest operating system.
          type: string
          readOnly: true
        toolsVersionStatus:
          description: Gets or sets the current version status of VMware Tools installed in the guest operating system.
          type: string
          readOnly: true
        toolsVersion:
          description: Gets or sets the current version of VMware Tools.
          type: string
          readOnly: true
        windowsConfiguration:
          type: object
          properties:
            patchSettings:
              x-ms-client-flatten: true
              $ref: '#/components/schemas/PatchSettings'
          description: Specifies the windows configuration for update management.
        linuxConfiguration:
          type: object
          properties:
            patchSettings:
              x-ms-client-flatten: true
              $ref: '#/components/schemas/PatchSettings'
          description: Specifies the linux configuration for update management.
    OsProfileUpdate:
      description: Defines the os update properties.
      type: object
      properties:
        windowsConfiguration:
          type: object
          properties:
            patchSettings:
              x-ms-client-flatten: true
              $ref: '#/components/schemas/PatchSettings'
          description: Specifies the windows configuration for update management.
        linuxConfiguration:
          type: object
          properties:
            patchSettings:
              x-ms-client-flatten: true
              $ref: '#/components/schemas/PatchSettings'
          description: Specifies the linux configuration for update management.
    HardwareProfile:
      description: Defines the resource properties.
      type: object
      properties:
        memorySizeMB:
          format: int32
          description: Gets or sets memory size in MBs for the vm.
          type: integer
        numCPUs:
          format: int32
          description: Gets or sets the number of vCPUs for the vm.
          type: integer
        numCoresPerSocket:
          format: int32
          description: Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.
          type: integer
        cpuHotAddEnabled:
          description: Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.
          type: boolean
          readOnly: true
        cpuHotRemoveEnabled:
          description: Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.
          type: boolean
          readOnly: true
        memoryHotAddEnabled:
          description: Gets or sets a value indicating whether memory can be added while this virtual machine is running.
          type: boolean
          readOnly: true
    NetworkProfileUpdate:
      description: Defines the update resource properties.
      type: object
      properties:
        networkInterfaces:
          description: Gets or sets the list of network interfaces associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceUpdate'
    NetworkProfile:
      description: Defines the resource properties.
      type: object
      properties:
        networkInterfaces:
          description: Gets or sets the list of network interfaces associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
    SCSIControllerType:
      description: Defines the different types of SCSI controllers.
      enum:
        - lsilogic
        - buslogic
        - pvscsi
        - lsilogicsas
      type: string
      x-ms-enum:
        modelAsString: true
        name: SCSIControllerType
    VirtualSCSISharing:
      description: Defines the sharing mode for sharing the SCSI bus.
      enum:
        - noSharing
        - physicalSharing
        - virtualSharing
      type: string
      x-ms-enum:
        modelAsString: true
        name: VirtualSCSISharing
    VirtualSCSIController:
      description: This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.
      type: object
      properties:
        type:
          description: Gets or sets the controller type.
          $ref: '#/components/schemas/SCSIControllerType'
        controllerKey:
          format: int32
          description: Gets or sets the key of the controller.
          type: integer
        busNumber:
          format: int32
          description: Gets or sets the bus number of the controller.
          type: integer
        scsiCtlrUnitNumber:
          format: int32
          description: Gets or sets the SCSI controller unit number.
          type: integer
        sharing:
          description: Gets or sets the sharing mode.
          $ref: '#/components/schemas/VirtualSCSISharing'
    StorageProfile:
      description: Defines the resource properties.
      type: object
      properties:
        disks:
          description: Gets or sets the list of virtual disks associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
        scsiControllers:
          description: Gets or sets the list of virtual SCSI controllers associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/VirtualSCSIController'
          readOnly: true
    StorageProfileUpdate:
      description: Defines the resource update properties.
      type: object
      properties:
        disks:
          description: Gets or sets the list of virtual disks associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDiskUpdate'
    GuestAgentProfile:
      description: Defines the resource properties.
      type: object
      properties:
        vmUuid:
          readOnly: true
          type: string
          description: Specifies the VM's unique SMBIOS ID.
        status:
          readOnly: true
          type: string
          description: The status of the hybrid machine agent.
          enum:
            - Connected
            - Disconnected
            - Error
          x-ms-enum:
            name: StatusTypes
            modelAsString: true
        lastStatusChange:
          readOnly: true
          type: string
          format: date-time
          description: The time of the last status change.
        agentVersion:
          readOnly: true
          type: string
          description: The hybrid machine agent full version.
        errorDetails:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          description: Details about the error state.
    PlacementProfile:
      description: Defines the resource properties.
      type: object
      properties:
        resourcePoolId:
          type: string
          description: Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy.
        clusterId:
          type: string
          description: Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy.
        hostId:
          type: string
          description: Gets or sets the ARM Id of the host resource on which this virtual machine will deploy.
        datastoreId:
          type: string
          description: Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept.
    UefiSettings:
      type: object
      properties:
        secureBootEnabled:
          type: boolean
          description: Specifies whether secure boot should be enabled on the virtual machine.
      description: Specifies the security settings like secure boot used while creating the virtual machine.
    SecurityProfile:
      type: object
      properties:
        uefiSettings:
          $ref: '#/components/schemas/UefiSettings'
          description: Specifies the security settings like secure boot used while creating the virtual machine.
      description: Specifies the Security profile settings for the virtual machine.
    ExtendedLocation:
      type: object
      description: The extended location.
      properties:
        type:
          type: string
          description: The extended location type.
        name:
          type: string
          description: The extended location name.
    VirtualMachineProperties:
      description: Defines the resource properties.
      type: object
      properties:
        resourcePoolId:
          description: "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will\r\ndeploy."
          type: string
        templateId:
          description: Gets or sets the ARM Id of the template resource to deploy the virtual machine.
          type: string
        vCenterId:
          description: Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
          type: string
        placementProfile:
          description: Placement properties.
          $ref: '#/components/schemas/PlacementProfile'
        osProfile:
          description: OS properties.
          $ref: '#/components/schemas/OsProfile'
        hardwareProfile:
          description: Hardware properties.
          $ref: '#/components/schemas/HardwareProfile'
        networkProfile:
          description: Network properties.
          $ref: '#/components/schemas/NetworkProfile'
        storageProfile:
          description: Storage properties.
          $ref: '#/components/schemas/StorageProfile'
        guestAgentProfile:
          description: Guest agent status properties.
          $ref: '#/components/schemas/GuestAgentProfile'
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: Gets the security profile.
        moRefId:
          description: Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
          type: string
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the virtual machine.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the virtual machine.
          type: string
          readOnly: true
        folderPath:
          description: Gets or sets the folder path of the vm.
          type: string
          readOnly: true
        instanceUuid:
          description: Gets or sets the instance uuid of the vm.
          type: string
          readOnly: true
        smbiosUuid:
          type: string
          description: Gets or sets the SMBIOS UUID of the vm.
        firmwareType:
          description: Firmware type
          $ref: '#/components/schemas/FirmwareType'
        powerState:
          description: Gets the power state of the virtual machine.
          type: string
          readOnly: true
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        vmId:
          description: Gets or sets a unique identifier for the vm resource.
          type: string
          readOnly: true
    VirtualMachine:
      description: Define the virtualMachine.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VirtualMachineProperties'
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
      type: object
    VirtualMachineUpdateProperties:
      description: Defines the resource properties.
      type: object
      properties:
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfile'
        osProfile:
          description: OS properties.
          $ref: '#/components/schemas/OsProfileUpdate'
        storageProfile:
          $ref: '#/components/schemas/StorageProfileUpdate'
        networkProfile:
          $ref: '#/components/schemas/NetworkProfileUpdate'
    VirtualMachineUpdate:
      description: Defines the virtualMachineUpdate.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VirtualMachineUpdateProperties'
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
      type: object
    VirtualMachinesList:
      description: List of VirtualMachines.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of VirtualMachines.
          type: string
        value:
          description: Array of VirtualMachines
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachine'
      required:
        - value
    StopVirtualMachineOptions:
      description: Defines the stop action properties.
      type: object
      properties:
        skipShutdown:
          description: Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false.
          type: boolean
          default: false
    VirtualMachineTemplateProperties:
      description: Defines the resource properties.
      type: object
      properties:
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        vCenterId:
          description: Gets or sets the ARM Id of the vCenter resource in which this template resides.
          type: string
        moRefId:
          description: "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate."
          type: string
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the virtual machine template.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the virtual machine template.
          type: string
          readOnly: true
        memorySizeMB:
          format: int32
          description: Gets or sets memory size in MBs for the template.
          type: integer
          readOnly: true
        numCPUs:
          format: int32
          description: Gets or sets the number of vCPUs for the template.
          type: integer
          readOnly: true
        numCoresPerSocket:
          format: int32
          description: "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified."
          type: integer
          readOnly: true
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets or sets os name.
          type: string
          readOnly: true
        folderPath:
          description: Gets or sets the folder path of the template.
          type: string
          readOnly: true
        networkInterfaces:
          description: Gets or sets the network interfaces of the template.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          readOnly: true
        disks:
          description: Gets or sets the disks the template.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
          readOnly: true
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        toolsVersionStatus:
          description: Gets or sets the current version status of VMware Tools installed in the guest operating system.
          type: string
          readOnly: true
        toolsVersion:
          description: Gets or sets the current version of VMware Tools.
          type: string
          readOnly: true
        firmwareType:
          description: Firmware type
          $ref: '#/components/schemas/FirmwareType'
          readOnly: true
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    ClusterProperties:
      description: Defines the resource properties.
      type: object
      properties:
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        vCenterId:
          description: Gets or sets the ARM Id of the vCenter resource in which this cluster resides.
          type: string
        moRefId:
          description: Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.
          type: string
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the cluster.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the cluster.
          type: string
          readOnly: true
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        datastoreIds:
          description: Gets or sets the datastore ARM ids.
          type: array
          items:
            type: string
          readOnly: true
        networkIds:
          description: Gets or sets the network ARM ids.
          type: array
          items:
            type: string
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    Cluster:
      description: Define the cluster.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/ClusterProperties'
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    ClustersList:
      description: List of Clusters.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of Clusters.
          type: string
        value:
          description: Array of Clusters
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
      required:
        - value
    HostProperties:
      description: Defines the resource properties.
      type: object
      properties:
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        vCenterId:
          description: Gets or sets the ARM Id of the vCenter resource in which this host resides.
          type: string
        moRefId:
          description: Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.
          type: string
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the host.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the host.
          type: string
          readOnly: true
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    Host:
      description: Define the host.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/HostProperties'
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    HostsList:
      description: List of Hosts.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of Hosts.
          type: string
        value:
          description: Array of Hosts
          type: array
          items:
            $ref: '#/components/schemas/Host'
      required:
        - value
    DatastoreProperties:
      description: Defines the resource properties.
      type: object
      properties:
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        vCenterId:
          description: Gets or sets the ARM Id of the vCenter resource in which this datastore resides.
          type: string
        moRefId:
          description: Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.
          type: string
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the datastore.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the datastore.
          type: string
          readOnly: true
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    ResourceProvisioningState:
      type: string
      description: The current deployment state of resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Provisioning
        - Updating
        - Deleting
        - Accepted
        - Created
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    Datastore:
      description: Define the datastore.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/DatastoreProperties'
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    DatastoresList:
      description: List of Datastores.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of Datastores.
          type: string
        value:
          description: Array of Datastores
          type: array
          items:
            $ref: '#/components/schemas/Datastore'
      required:
        - value
    VirtualMachineTemplate:
      description: Define the virtualMachineTemplate.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VirtualMachineTemplateProperties'
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    VirtualMachineTemplatesList:
      description: List of VirtualMachineTemplates.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of VirtualMachineTemplates.
          type: string
        value:
          description: Array of VirtualMachineTemplates
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineTemplate'
      required:
        - value
    VirtualNetworkProperties:
      description: Defines the resource properties.
      type: object
      properties:
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        vCenterId:
          description: Gets or sets the ARM Id of the vCenter resource in which this template resides.
          type: string
        moRefId:
          description: Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.
          type: string
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the virtual network.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the virtual network.
          type: string
          readOnly: true
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    VirtualNetwork:
      description: Define the virtualNetwork.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VirtualNetworkProperties'
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    VirtualNetworksList:
      description: List of VirtualNetworks.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of VirtualNetworks.
          type: string
        value:
          description: Array of VirtualNetworks
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetwork'
      required:
        - value
    NetworkInterfaceUpdate:
      description: Defines the network interface update.
      type: object
      properties:
        name:
          description: Gets or sets the name of the network interface.
          type: string
        networkId:
          description: Gets or sets the ARM Id of the network resource to connect the virtual machine.
          type: string
        nicType:
          description: NIC type
          $ref: '#/components/schemas/NICType'
        powerOnBoot:
          description: Gets or sets the power on boot.
          $ref: '#/components/schemas/PowerOnBootOption'
        deviceKey:
          format: int32
          description: Gets or sets the device key value.
          type: integer
    NetworkInterface:
      description: Network Interface model
      type: object
      properties:
        name:
          description: Gets or sets the name of the network interface.
          type: string
        label:
          description: Gets or sets the label of the virtual network in vCenter that the nic is connected to.
          type: string
          readOnly: true
        ipAddresses:
          description: Gets or sets the nic ip addresses.
          type: array
          items:
            type: string
          readOnly: true
        macAddress:
          description: Gets or sets the NIC MAC address.
          type: string
          readOnly: true
        networkId:
          description: Gets or sets the ARM Id of the network resource to connect the virtual machine.
          type: string
        nicType:
          description: NIC type
          $ref: '#/components/schemas/NICType'
        powerOnBoot:
          description: Gets or sets the power on boot.
          $ref: '#/components/schemas/PowerOnBootOption'
        networkMoRefId:
          description: "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to."
          type: string
          readOnly: true
        networkMoName:
          description: Gets or sets the name of the virtual network in vCenter that the nic is connected to.
          type: string
          readOnly: true
        deviceKey:
          format: int32
          description: Gets or sets the device key value.
          type: integer
        ipSettings:
          description: Gets or sets the ipsettings.
          $ref: '#/components/schemas/NicIPSettings'
    PowerOnBootOption:
      description: Defines the options for power on boot.
      enum:
        - enabled
        - disabled
      type: string
      x-ms-enum:
        modelAsString: true
        name: PowerOnBootOption
    DiskMode:
      description: Defines the different types of disk modes.
      enum:
        - persistent
        - independent_persistent
        - independent_nonpersistent
      type: string
      x-ms-enum:
        modelAsString: true
        name: DiskMode
    DiskType:
      description: Defines the different types of disks.
      enum:
        - flat
        - pmem
        - rawphysical
        - rawvirtual
        - sparse
        - sesparse
        - unknown
      type: string
      x-ms-enum:
        modelAsString: true
        name: DiskType
    NICType:
      description: NIC type
      type: string
      enum:
        - vmxnet3
        - vmxnet2
        - vmxnet
        - e1000
        - e1000e
        - pcnet32
      x-ms-enum:
        modelAsString: true
        name: NICType
    FirmwareType:
      description: Firmware type
      type: string
      enum:
        - bios
        - efi
      x-ms-enum:
        modelAsString: true
        name: FirmwareType
    IPAddressAllocationMethod:
      description: IP address allocation method.
      enum:
        - unset
        - dynamic
        - static
        - linklayer
        - random
        - other
      type: string
      x-ms-enum:
        modelAsString: true
        name: IPAddressAllocationMethod
    NicIPAddressSettings:
      description: IP address information for a virtual network adapter reported by the fabric.
      type: object
      properties:
        allocationMethod:
          description: Gets the ip address allocation method.
          type: string
          readOnly: true
        ipAddress:
          description: Gets the ip address for the nic.
          type: string
          readOnly: true
        subnetMask:
          description: Gets the mask.
          type: string
          readOnly: true
    NicIPSettings:
      description: Defines the network interface ip settings.
      type: object
      properties:
        allocationMethod:
          description: Gets or sets the nic allocation method.
          $ref: '#/components/schemas/IPAddressAllocationMethod'
        dnsServers:
          description: Gets or sets the dns servers.
          type: array
          items:
            type: string
        gateway:
          description: Gets or sets the gateway.
          type: array
          items:
            type: string
        ipAddress:
          description: Gets or sets the ip address for the nic.
          type: string
        subnetMask:
          description: Gets or sets the mask.
          type: string
        primaryWinsServer:
          description: Gets or sets the primary server.
          type: string
          readOnly: true
        secondaryWinsServer:
          description: Gets or sets the secondary server.
          type: string
          readOnly: true
        ipAddressInfo:
          description: Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.
          type: array
          items:
            $ref: '#/components/schemas/NicIPAddressSettings'
          readOnly: true
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    operation:
      description: Operation provided by provider
      type: object
      properties:
        name:
          type: string
          description: Name of the operation
        isDataAction:
          description: Indicates whether the operation is data action or not.
          type: boolean
        display:
          type: object
          description: Properties of the operation
          properties:
            provider:
              type: string
              description: Provider name
            resource:
              type: string
              description: Resource name
            operation:
              type: string
              description: Operation name
            description:
              type: string
              description: Description of the operation
    operationsList:
      description: Lists the operations available.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of operations.
          type: string
        value:
          description: Array of operations
          type: array
          items:
            description: Operation.
            $ref: '#/components/schemas/operation'
      required:
        - value
    ErrorDefinition:
      description: Error definition.
      type: object
      properties:
        code:
          description: Service specific error code which serves as the substatus for the HTTP error code.
          type: string
          readOnly: true
        message:
          description: Description of the error.
          type: string
          readOnly: true
        details:
          description: Internal error details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDefinition'
          readOnly: true
    InventoryItemsList:
      description: List of InventoryItems.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of InventoryItems.
          type: string
        value:
          description: Array of InventoryItems
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'
      required:
        - value
    InventoryItem:
      description: Defines the inventory item.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/InventoryItemProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    InventoryItemProperties:
      description: Defines the resource properties.
      required:
        - inventoryType
      discriminator:
        propertyName: inventoryType
      type: object
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets or sets the tracked resource id corresponding to the inventory resource.
          type: string
        moRefId:
          description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the inventory item.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    ResourcePoolInventoryItem:
      description: The resource pool inventory item.
      x-ms-discriminator-value: ResourcePool
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets or sets the tracked resource id corresponding to the inventory resource.
          type: string
        moRefId:
          description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the inventory item.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        parent:
          description: Parent resourcePool inventory resource details.
          $ref: '#/components/schemas/InventoryItemDetails'
      type: object
    VirtualMachineInventoryItem:
      description: The VM inventory item.
      x-ms-discriminator-value: VirtualMachine
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets or sets the tracked resource id corresponding to the inventory resource.
          type: string
        moRefId:
          description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the inventory item.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
        osName:
          description: Gets or sets os name.
          type: string
        ipAddresses:
          description: Gets or sets the nic ip addresses.
          type: array
          items:
            type: string
        folderPath:
          description: Gets or sets the folder path of the vm.
          type: string
        host:
          description: Host inventory resource details.
          $ref: '#/components/schemas/InventoryItemDetails'
        resourcePool:
          description: ResourcePool inventory resource details.
          $ref: '#/components/schemas/InventoryItemDetails'
        instanceUuid:
          description: Gets or sets the instance uuid of the vm.
          type: string
        smbiosUuid:
          type: string
          description: Gets or sets the SMBIOS UUID of the vm.
        powerState:
          description: Gets the power state of the virtual machine.
          type: string
          readOnly: true
        toolsRunningStatus:
          description: Gets or sets the current running status of VMware Tools running in the guest operating system.
          type: string
          readOnly: true
        toolsVersionStatus:
          description: Gets or sets the current version status of VMware Tools installed in the guest operating system.
          type: string
          readOnly: true
        toolsVersion:
          description: Gets or sets the current version of VMware Tools.
          type: string
          readOnly: true
      type: object
    VirtualMachineTemplateInventoryItem:
      description: The VM Template inventory item.
      x-ms-discriminator-value: VirtualMachineTemplate
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets or sets the tracked resource id corresponding to the inventory resource.
          type: string
        moRefId:
          description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the inventory item.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        memorySizeMB:
          format: int32
          description: Gets or sets memory size in MBs for the template.
          type: integer
        numCPUs:
          format: int32
          description: Gets or sets the number of vCPUs for the template.
          type: integer
        numCoresPerSocket:
          format: int32
          description: "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified."
          type: integer
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
        osName:
          description: Gets or sets os name.
          type: string
        folderPath:
          description: Gets or sets the folder path of the template.
          type: string
      type: object
    VirtualNetworkInventoryItem:
      description: The Virtual network inventory item.
      x-ms-discriminator-value: VirtualNetwork
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets or sets the tracked resource id corresponding to the inventory resource.
          type: string
        moRefId:
          description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the inventory item.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
      type: object
    ClusterInventoryItem:
      description: The cluster inventory item.
      x-ms-discriminator-value: Cluster
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets or sets the tracked resource id corresponding to the inventory resource.
          type: string
        moRefId:
          description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the inventory item.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
      type: object
    DatastoreInventoryItem:
      description: The datastore inventory item.
      x-ms-discriminator-value: Datastore
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets or sets the tracked resource id corresponding to the inventory resource.
          type: string
        moRefId:
          description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the inventory item.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        capacityGB:
          format: int64
          description: Gets or sets Maximum capacity of this datastore, in GBs.
          type: integer
        freeSpaceGB:
          format: int64
          description: Gets or sets Available space of this datastore, in GBs.
          type: integer
      type: object
    HostInventoryItem:
      description: The host inventory item.
      x-ms-discriminator-value: Host
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets or sets the tracked resource id corresponding to the inventory resource.
          type: string
        moRefId:
          description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the inventory item.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        parent:
          description: Parent host inventory resource details.
          $ref: '#/components/schemas/InventoryItemDetails'
      type: object
    InventoryType:
      type: string
      description: The inventory type.
      enum:
        - ResourcePool
        - VirtualMachine
        - VirtualMachineTemplate
        - VirtualNetwork
        - Cluster
        - Datastore
        - Host
      x-ms-enum:
        name: InventoryType
        modelAsString: true
    InventoryItemDetails:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        moName:
          description: Gets or sets the vCenter Managed Object name for the resource.
          type: string
    HybridIdentityMetadataList:
      description: List of HybridIdentityMetadata.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of HybridIdentityMetadata.
          type: string
        value:
          description: Array of HybridIdentityMetadata
          type: array
          items:
            $ref: '#/components/schemas/HybridIdentityMetadata'
      required:
        - value
    HybridIdentityMetadata:
      description: Defines the HybridIdentityMetadata.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/HybridIdentityMetadataProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
      type: object
    HybridIdentityMetadataProperties:
      description: Defines the resource properties.
      type: object
      properties:
        vmId:
          description: Gets or sets the Vm Id.
          type: string
        publicKey:
          description: Gets or sets the Public Key.
          type: string
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    MachineExtension:
      x-ms-azure-resource: true
      description: Describes a Machine Extension.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MachineExtensionProperties'
          description: Describes Machine Extension Properties.
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        name:
          description: Gets or sets the name.
          type: string
          readOnly: true
        id:
          description: Gets or sets the Id.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
      type: object
    MachineExtensionUpdate:
      description: Describes a Machine Extension Update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MachineExtensionUpdateProperties'
          description: Describes Machine Extension Update Properties.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    MachineExtensionProperties:
      type: object
      properties:
        forceUpdateTag:
          type: string
          description: How the extension handler should be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
          x-ms-secret: true
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        instanceView:
          allOf:
            - $ref: '#/components/schemas/MachineExtensionInstanceView'
          description: The machine extension instance view.
      description: Describes the properties of a Machine Extension.
    MachineExtensionUpdateProperties:
      type: object
      properties:
        forceUpdateTag:
          type: string
          description: How the extension handler should be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
          x-ms-secret: true
      description: Describes the properties of a Machine Extension.
    MachineExtensionInstanceView:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: The machine extension name.
        type:
          type: string
          readOnly: true
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          readOnly: true
          description: Specifies the version of the script handler.
        status:
          type: object
          properties:
            code:
              type: string
              readOnly: true
              description: The status code.
            level:
              type: string
              readOnly: true
              description: The level code.
              enum:
                - Info
                - Warning
                - Error
              x-ms-enum:
                name: StatusLevelTypes
                modelAsString: true
            displayStatus:
              type: string
              readOnly: true
              description: The short localizable label for the status.
            message:
              type: string
              readOnly: true
              description: The detailed status message, including for alerts and error messages.
            time:
              type: string
              readOnly: true
              format: date-time
              description: The time of the status.
          description: Instance view status.
      description: Describes the Machine Extension Instance View.
    MachineExtensionsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MachineExtension'
          description: The list of extensions
        nextLink:
          type: string
          description: The uri to fetch the next page of machine extensions. Call ListNext() with this to fetch the next page of extensions.
      description: Describes the Machine Extensions List Result.
    ProvisioningAction:
      description: Defines the different types of operations for guest agent.
      enum:
        - install
        - uninstall
        - repair
      type: string
      x-ms-enum:
        modelAsString: true
        name: ProvisioningAction
    GuestCredential:
      description: Username / Password Credentials to connect to guest.
      type: object
      properties:
        username:
          description: Gets or sets username to connect with the guest.
          type: string
        password:
          description: Gets or sets the password to connect with the guest.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    HttpProxyConfiguration:
      description: HTTP Proxy configuration for the VM.
      type: object
      properties:
        httpsProxy:
          description: Gets or sets httpsProxy url.
          type: string
    GuestAgentList:
      description: List of GuestAgent.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of GuestAgent.
          type: string
        value:
          description: Array of GuestAgent
          type: array
          items:
            $ref: '#/components/schemas/GuestAgent'
      required:
        - value
    GuestAgent:
      description: Defines the GuestAgent.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/GuestAgentProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
      type: object
    GuestAgentProperties:
      description: Defines the resource properties.
      type: object
      properties:
        uuid:
          description: Gets or sets a unique identifier for this resource.
          type: string
          readOnly: true
        credentials:
          description: Username / Password Credentials to provision guest agent.
          $ref: '#/components/schemas/GuestCredential'
        httpProxyConfig:
          description: HTTP Proxy configuration for the VM.
          $ref: '#/components/schemas/HttpProxyConfiguration'
        provisioningAction:
          description: Gets or sets the guest agent provisioning action.
          $ref: '#/components/schemas/ProvisioningAction'
          type: string
        status:
          description: Gets or sets the guest agent status.
          type: string
          readOnly: true
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        statuses:
          description: The resource status information.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceStatus'
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    VirtualMachineAssessPatchesResult:
      type: object
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        assessmentActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result.
        rebootPending:
          type: boolean
          readOnly: true
          description: The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.
        availablePatchCountByClassification:
          $ref: '#/components/schemas/AvailablePatchCountByClassification'
          description: Summarization of patches available for installation on the machine by classification.
        startDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        lastModifiedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation finished.
        startedBy:
          type: string
          readOnly: true
          enum:
            - User
            - Platform
          x-ms-enum:
            name: PatchOperationStartedBy
            modelAsString: true
          description: Indicates if operation was triggered by user or by platform.
        patchServiceUsed:
          type: string
          readOnly: true
          enum:
            - Unknown
            - WU
            - WU_WSUS
            - YUM
            - APT
            - Zypper
          x-ms-enum:
            name: PatchServiceUsed
            modelAsString: true
          description: Specifies the patch service used for the operation.
        osType:
          type: string
          readOnly: true
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OsTypeUM
            modelAsString: true
          description: The operating system type of the machine.
        errorDetails:
          $ref: '#/components/schemas/ErrorDetail'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: Describes the properties of an AssessPatches result.
    AvailablePatchCountByClassification:
      type: object
      properties:
        security:
          readOnly: true
          type: integer
          format: int32
          description: Number of security patches available for installation.
        critical:
          readOnly: true
          type: integer
          format: int32
          description: Number of critical patches available for installation.
        definition:
          readOnly: true
          type: integer
          format: int32
          description: Number of definition patches available for installation.
        updateRollup:
          readOnly: true
          type: integer
          format: int32
          description: Number of update Rollup patches available for installation.
        featurePack:
          readOnly: true
          type: integer
          format: int32
          description: Number of feature pack patches available for installation.
        servicePack:
          readOnly: true
          type: integer
          format: int32
          description: Number of service pack patches available for installation.
        tools:
          readOnly: true
          type: integer
          format: int32
          description: Number of tools patches available for installation.
        updates:
          readOnly: true
          type: integer
          format: int32
          description: Number of updates category patches available for installation.
        other:
          readOnly: true
          type: integer
          format: int32
          description: Number of other patches available for installation.
      description: Summarization of patches available for installation on the machine by classification.
    VirtualMachineInstallPatchesParameters:
      type: object
      properties:
        maximumDuration:
          type: string
          description: Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)
        rebootSetting:
          type: string
          description: Defines when it is acceptable to reboot a VM during a software update operation.
          enum:
            - IfRequired
            - Never
            - Always
          x-ms-enum:
            name: VMGuestPatchRebootSetting
            modelAsString: true
        windowsParameters:
          $ref: '#/components/schemas/WindowsParameters'
          description: Input for InstallPatches on a Windows VM, as directly received by the API
        linuxParameters:
          $ref: '#/components/schemas/LinuxParameters'
          description: Input for InstallPatches on a Linux VM, as directly received by the API
      required:
        - maximumDuration
        - rebootSetting
      description: Input for InstallPatches as directly received by the API
    WindowsParameters:
      type: object
      properties:
        classificationsToInclude:
          type: array
          description: The update classifications to select when installing patches for Windows.
          items:
            type: string
            enum:
              - Critical
              - Security
              - UpdateRollUp
              - FeaturePack
              - ServicePack
              - Definition
              - Tools
              - Updates
            x-ms-enum:
              name: VMGuestPatchClassification_Windows
              modelAsString: true
        kbNumbersToInclude:
          type: array
          description: Kbs to include in the patch operation
          items:
            type: string
        kbNumbersToExclude:
          type: array
          description: Kbs to exclude in the patch operation
          items:
            type: string
        excludeKbsRequiringReboot:
          type: boolean
          description: Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true.
        maxPatchPublishDate:
          type: string
          format: date-time
          description: This is used to install patches that were published on or before this given max published date.
      description: Input for InstallPatches on a Windows VM, as directly received by the API
    LinuxParameters:
      type: object
      properties:
        classificationsToInclude:
          type: array
          description: The update classifications to select when installing patches for Linux.
          items:
            type: string
            enum:
              - Critical
              - Security
              - Other
            x-ms-enum:
              name: VMGuestPatchClassification_Linux
              modelAsString: true
        packageNameMasksToInclude:
          type: array
          description: 'packages to include in the patch operation. Format: packageName_packageVersion'
          items:
            type: string
        packageNameMasksToExclude:
          type: array
          description: 'packages to exclude in the patch operation. Format: packageName_packageVersion'
          items:
            type: string
      description: Input for InstallPatches on a Linux VM, as directly received by the API
    VirtualMachineInstallPatchesResult:
      type: object
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Failed", "Succeeded", "Unknown" or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        installationActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result.
        rebootStatus:
          type: string
          readOnly: true
          description: The reboot state of the VM following completion of the operation.
          enum:
            - Unknown
            - NotNeeded
            - Required
            - Started
            - Failed
            - Completed
          x-ms-enum:
            name: VMGuestPatchRebootStatus
            modelAsString: true
        maintenanceWindowExceeded:
          type: boolean
          readOnly: true
          description: Whether the operation ran out of time before it completed all its intended actions.
        excludedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were not installed due to the user blocking their installation.
        notSelectedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were detected as available for install, but did not meet the operation's criteria.
        pendingPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true.
        installedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches successfully installed.
        failedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that could not be installed due to some issue. See errors for details.
        startDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        lastModifiedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation finished.
        startedBy:
          type: string
          readOnly: true
          enum:
            - User
            - Platform
          x-ms-enum:
            name: PatchOperationStartedBy
            modelAsString: true
          description: Indicates if operation was triggered by user or by platform.
        patchServiceUsed:
          type: string
          readOnly: true
          enum:
            - Unknown
            - WU
            - WU_WSUS
            - YUM
            - APT
            - Zypper
          x-ms-enum:
            name: PatchServiceUsed
            modelAsString: true
          description: Specifies the patch service used for the operation.
        osType:
          type: string
          readOnly: true
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OsTypeUM
            modelAsString: true
          description: The operating system type of the machine.
        errorDetails:
          $ref: '#/components/schemas/ErrorDetail'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: The result summary of an installation operation.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure_extras.connected_vsphere.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ConnectedVMwarevSphere~1operations~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    virtual_machines:
      id: azure_extras.connected_vsphere.virtual_machines
      name: virtual_machines
      title: Virtual_machines
      methods:
        VirtualMachines_AssessPatches:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{name}~1assessPatches~1?api-version=2022-01-10-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachines_InstallPatches:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{name}~1installPatches~1?api-version=2022-01-10-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachines_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualMachines_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachines_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualMachines_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachines_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1stop~1?api-version=2022-01-10-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachines_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1start~1?api-version=2022-01-10-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachines_Restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1restart~1?api-version=2022-01-10-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachines_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualMachines_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_Get'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_Delete'
    resource_pools:
      id: azure_extras.connected_vsphere.resource_pools
      name: resource_pools
      title: Resource_pools
      methods:
        ResourcePools_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1resourcePools~1{resourcePoolName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ResourcePools_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1resourcePools~1{resourcePoolName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ResourcePools_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1resourcePools~1{resourcePoolName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ResourcePools_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1resourcePools~1{resourcePoolName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ResourcePools_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConnectedVMwarevSphere~1resourcePools~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ResourcePools_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1resourcePools~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_pools/methods/ResourcePools_Get'
          - $ref: '#/components/x-stackQL-resources/resource_pools/methods/ResourcePools_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/resource_pools/methods/ResourcePools_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_pools/methods/ResourcePools_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_pools/methods/ResourcePools_Delete'
    clusters:
      id: azure_extras.connected_vsphere.clusters
      name: clusters
      title: Clusters
      methods:
        Clusters_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1clusters~1{clusterName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Clusters_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1clusters~1{clusterName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Clusters_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1clusters~1{clusterName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Clusters_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1clusters~1{clusterName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Clusters_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConnectedVMwarevSphere~1clusters~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Clusters_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1clusters~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_Get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_Delete'
    hosts:
      id: azure_extras.connected_vsphere.hosts
      name: hosts
      title: Hosts
      methods:
        Hosts_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1hosts~1{hostName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Hosts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1hosts~1{hostName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Hosts_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1hosts~1{hostName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Hosts_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1hosts~1{hostName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Hosts_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConnectedVMwarevSphere~1hosts~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Hosts_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1hosts~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hosts/methods/Hosts_Get'
          - $ref: '#/components/x-stackQL-resources/hosts/methods/Hosts_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/hosts/methods/Hosts_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/hosts/methods/Hosts_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hosts/methods/Hosts_Delete'
    datastores:
      id: azure_extras.connected_vsphere.datastores
      name: datastores
      title: Datastores
      methods:
        Datastores_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1datastores~1{datastoreName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Datastores_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1datastores~1{datastoreName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Datastores_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1datastores~1{datastoreName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Datastores_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1datastores~1{datastoreName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Datastores_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConnectedVMwarevSphere~1datastores~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Datastores_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1datastores~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datastores/methods/Datastores_Get'
          - $ref: '#/components/x-stackQL-resources/datastores/methods/Datastores_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/datastores/methods/Datastores_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/datastores/methods/Datastores_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datastores/methods/Datastores_Delete'
    vcenters:
      id: azure_extras.connected_vsphere.vcenters
      name: vcenters
      title: Vcenters
      methods:
        VCenters_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1{vcenterName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VCenters_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1{vcenterName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VCenters_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1{vcenterName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VCenters_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1{vcenterName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VCenters_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VCenters_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vcenters/methods/VCenters_Get'
          - $ref: '#/components/x-stackQL-resources/vcenters/methods/VCenters_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/vcenters/methods/VCenters_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/vcenters/methods/VCenters_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vcenters/methods/VCenters_Delete'
    virtual_machine_templates:
      id: azure_extras.connected_vsphere.virtual_machine_templates
      name: virtual_machine_templates
      title: Virtual_machine_templates
      methods:
        VirtualMachineTemplates_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualMachineTemplates_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachineTemplates_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachineTemplates_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualMachineTemplates_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachineTemplates~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualMachineTemplates_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachineTemplates~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_Get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_Delete'
    virtual_networks:
      id: azure_extras.connected_vsphere.virtual_networks
      name: virtual_networks
      title: Virtual_networks
      methods:
        VirtualNetworks_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualNetworks~1{virtualNetworkName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworks_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualNetworks~1{virtualNetworkName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualNetworks_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualNetworks~1{virtualNetworkName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualNetworks_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualNetworks~1{virtualNetworkName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualNetworks_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualNetworks~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworks_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualNetworks~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_Get'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_Delete'
    inventory_items:
      id: azure_extras.connected_vsphere.inventory_items
      name: inventory_items
      title: Inventory_items
      methods:
        InventoryItems_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1{vcenterName}~1inventoryItems~1{inventoryItemName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        InventoryItems_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1{vcenterName}~1inventoryItems~1{inventoryItemName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        InventoryItems_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1{vcenterName}~1inventoryItems~1{inventoryItemName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        InventoryItems_ListByVCenter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1vcenters~1{vcenterName}~1inventoryItems~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/InventoryItems_Get'
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/InventoryItems_ListByVCenter'
        insert:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/InventoryItems_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/InventoryItems_Delete'
    hybrid_identity_metadata:
      id: azure_extras.connected_vsphere.hybrid_identity_metadata
      name: hybrid_identity_metadata
      title: Hybrid_identity_metadata
      methods:
        HybridIdentityMetadata_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1hybridIdentityMetadata~1{metadataName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        HybridIdentityMetadata_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1hybridIdentityMetadata~1{metadataName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        HybridIdentityMetadata_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1hybridIdentityMetadata~1{metadataName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        HybridIdentityMetadata_ListByVm:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1hybridIdentityMetadata~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata/methods/HybridIdentityMetadata_Get'
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata/methods/HybridIdentityMetadata_ListByVm'
        insert:
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata/methods/HybridIdentityMetadata_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata/methods/HybridIdentityMetadata_Delete'
    machine_extensions:
      id: azure_extras.connected_vsphere.machine_extensions
      name: machine_extensions
      title: Machine_extensions
      methods:
        MachineExtensions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{name}~1extensions~1{extensionName}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        MachineExtensions_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{name}~1extensions~1{extensionName}~1?api-version=2022-01-10-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        MachineExtensions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{name}~1extensions~1{extensionName}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        MachineExtensions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{name}~1extensions~1{extensionName}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        MachineExtensions_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{name}~1extensions~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/machine_extensions/methods/MachineExtensions_Get'
          - $ref: '#/components/x-stackQL-resources/machine_extensions/methods/MachineExtensions_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/machine_extensions/methods/MachineExtensions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/machine_extensions/methods/MachineExtensions_Delete'
    guest_agents:
      id: azure_extras.connected_vsphere.guest_agents
      name: guest_agents
      title: Guest_agents
      methods:
        GuestAgents_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1guestAgents~1{name}~1?api-version=2022-01-10-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        GuestAgents_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1guestAgents~1{name}~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GuestAgents_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1guestAgents~1{name}~1?api-version=2022-01-10-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GuestAgents_ListByVm:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualMachines~1{virtualMachineName}~1guestAgents~1?api-version=2022-01-10-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/GuestAgents_Get'
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/GuestAgents_ListByVm'
        insert:
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/GuestAgents_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/GuestAgents_Delete'
paths:
  /providers/Microsoft.ConnectedVMwarevSphere/operations/?api-version=2022-01-10-preview:
    get:
      description: Returns list of all operations.
      operationId: Operations_List
      tags:
        - Operations
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Operation details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operationsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{name}/assessPatches/?api-version=2022-01-10-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_AssessPatches
      description: The operation to assess patches on a vSphere VMware machine identity in Azure.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the vSphere VMware machine.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineAssessPatchesResult'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{name}/installPatches/?api-version=2022-01-10-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_InstallPatches
      description: The operation to install patches on a vSphere VMware machine identity in Azure.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the vSphere VMware machine.
          required: true
          schema:
            type: string
      requestBody:
        description: Input for InstallPatches as directly received by the API
        required: true
        x-ms-requestBody-name: installPatchesInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstallPatchesParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstallPatchesResult'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - ResourcePools
      operationId: ResourcePools_Create
      description: Create Or Update resourcePool.
      summary: Implements resourcePool PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: resourcePoolName
          in: path
          description: Name of the resourcePool.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePool'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePool'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: resource_pools
      x-stackQL-verb: insert
    get:
      tags:
        - ResourcePools
      operationId: ResourcePools_Get
      summary: Gets a resourcePool.
      description: Implements resourcePool GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: resourcePoolName
          in: path
          description: Name of the resourcePool.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: resource_pools
      x-stackQL-verb: select
    patch:
      tags:
        - ResourcePools
      operationId: ResourcePools_Update
      summary: Updates a resourcePool.
      description: API to update certain properties of the resourcePool resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: resourcePoolName
          in: path
          description: Name of the resourcePool.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: resource_pools
      x-stackQL-verb: exec
    delete:
      tags:
        - ResourcePools
      operationId: ResourcePools_Delete
      summary: Deletes an resourcePool.
      description: Implements resourcePool DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: resourcePoolName
          in: path
          description: Name of the resourcePool.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: resource_pools
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/?api-version=2022-01-10-preview:
    get:
      tags:
        - ResourcePools
      operationId: ResourcePools_List
      summary: Implements GET resourcePools in a subscription.
      description: List of resourcePools in a subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePoolsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: resource_pools
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/?api-version=2022-01-10-preview:
    get:
      tags:
        - ResourcePools
      operationId: ResourcePools_ListByResourceGroup
      summary: Implements GET resourcePools in a resource group.
      description: List of resourcePools in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePoolsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: resource_pools
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - Clusters
      operationId: Clusters_Create
      description: Create Or Update cluster.
      summary: Implements cluster PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: clusterName
          in: path
          description: Name of the cluster.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: clusters
      x-stackQL-verb: insert
    get:
      tags:
        - Clusters
      operationId: Clusters_Get
      summary: Gets a cluster.
      description: Implements cluster GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: clusterName
          in: path
          description: Name of the cluster.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: clusters
      x-stackQL-verb: select
    patch:
      tags:
        - Clusters
      operationId: Clusters_Update
      summary: Updates a cluster.
      description: API to update certain properties of the cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: clusterName
          in: path
          description: Name of the cluster.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
    delete:
      tags:
        - Clusters
      operationId: Clusters_Delete
      summary: Deletes an cluster.
      description: Implements cluster DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: clusterName
          in: path
          description: Name of the cluster.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: clusters
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/clusters/?api-version=2022-01-10-preview:
    get:
      tags:
        - Clusters
      operationId: Clusters_List
      summary: Implements GET clusters in a subscription.
      description: List of clusters in a subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: clusters
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/?api-version=2022-01-10-preview:
    get:
      tags:
        - Clusters
      operationId: Clusters_ListByResourceGroup
      summary: Implements GET clusters in a resource group.
      description: List of clusters in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: clusters
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - Hosts
      operationId: Hosts_Create
      description: Create Or Update host.
      summary: Implements host PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: hostName
          in: path
          description: Name of the host.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: hosts
      x-stackQL-verb: insert
    get:
      tags:
        - Hosts
      operationId: Hosts_Get
      summary: Gets a host.
      description: Implements host GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: hostName
          in: path
          description: Name of the host.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: hosts
      x-stackQL-verb: select
    patch:
      tags:
        - Hosts
      operationId: Hosts_Update
      summary: Updates a host.
      description: API to update certain properties of the host resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: hostName
          in: path
          description: Name of the host.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: hosts
      x-stackQL-verb: exec
    delete:
      tags:
        - Hosts
      operationId: Hosts_Delete
      summary: Deletes an host.
      description: Implements host DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: hostName
          in: path
          description: Name of the host.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: hosts
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/hosts/?api-version=2022-01-10-preview:
    get:
      tags:
        - Hosts
      operationId: Hosts_List
      summary: Implements GET hosts in a subscription.
      description: List of hosts in a subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: hosts
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/?api-version=2022-01-10-preview:
    get:
      tags:
        - Hosts
      operationId: Hosts_ListByResourceGroup
      summary: Implements GET hosts in a resource group.
      description: List of hosts in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: hosts
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - Datastores
      operationId: Datastores_Create
      description: Create Or Update datastore.
      summary: Implements datastore PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: datastoreName
          in: path
          description: Name of the datastore.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datastore'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastore'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastore'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: datastores
      x-stackQL-verb: insert
    get:
      tags:
        - Datastores
      operationId: Datastores_Get
      summary: Gets a datastore.
      description: Implements datastore GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: datastoreName
          in: path
          description: Name of the datastore.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastore'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: datastores
      x-stackQL-verb: select
    patch:
      tags:
        - Datastores
      operationId: Datastores_Update
      summary: Updates a datastore.
      description: API to update certain properties of the datastore resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: datastoreName
          in: path
          description: Name of the datastore.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastore'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: datastores
      x-stackQL-verb: exec
    delete:
      tags:
        - Datastores
      operationId: Datastores_Delete
      summary: Deletes an datastore.
      description: Implements datastore DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: datastoreName
          in: path
          description: Name of the datastore.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: datastores
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/datastores/?api-version=2022-01-10-preview:
    get:
      tags:
        - Datastores
      operationId: Datastores_List
      summary: Implements GET datastores in a subscription.
      description: List of datastores in a subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatastoresList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: datastores
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/?api-version=2022-01-10-preview:
    get:
      tags:
        - Datastores
      operationId: Datastores_ListByResourceGroup
      summary: Implements GET datastores in a resource group.
      description: List of datastores in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatastoresList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: datastores
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - VCenters
      operationId: VCenters_Create
      description: Create Or Update vCenter.
      summary: Implements vCenter PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: vcenterName
          in: path
          description: Name of the vCenter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VCenter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenter'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vcenters
      x-stackQL-verb: insert
    get:
      tags:
        - VCenters
      operationId: VCenters_Get
      summary: Gets a vCenter.
      description: Implements vCenter GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: vcenterName
          in: path
          description: Name of the vCenter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vcenters
      x-stackQL-verb: select
    patch:
      tags:
        - VCenters
      operationId: VCenters_Update
      summary: Updates a vCenter.
      description: API to update certain properties of the vCenter resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: vcenterName
          in: path
          description: Name of the vCenter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vcenters
      x-stackQL-verb: exec
    delete:
      tags:
        - VCenters
      operationId: VCenters_Delete
      summary: Deletes an vCenter.
      description: Implements vCenter DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: vcenterName
          in: path
          description: Name of the vCenter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: vcenters
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/?api-version=2022-01-10-preview:
    get:
      tags:
        - VCenters
      operationId: VCenters_List
      summary: Implements GET vCenters in a subscription.
      description: List of vCenters in a subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCentersList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vcenters
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/?api-version=2022-01-10-preview:
    get:
      tags:
        - VCenters
      operationId: VCenters_ListByResourceGroup
      summary: Implements GET vCenters in a resource group.
      description: List of vCenters in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCentersList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vcenters
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Create
      description: Create Or Update virtual machine.
      summary: Implements virtual machine PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the virtual machine resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachine'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: insert
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Get
      summary: Gets a virtual machine.
      description: Implements virtual machine GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the virtual machine resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: select
    patch:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Update
      summary: Updates a virtual machine.
      description: API to update certain properties of the virtual machine resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the virtual machine resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
    delete:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Delete
      summary: Deletes an virtual machine.
      description: Implements virtual machine DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the virtual machine resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            type: boolean
        - name: retain
          in: query
          description: Whether to just disable the VM from azure and retain the VM in the VMM.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}/stop/?api-version=2022-01-10-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Stop
      description: Stop virtual machine.
      summary: Implements the operation to stop a virtual machine.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the virtual machine resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Virtualmachine stop action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopVirtualMachineOptions'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}/start/?api-version=2022-01-10-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Start
      description: Start virtual machine.
      summary: Implements the operation to start a virtual machine.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the virtual machine resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}/restart/?api-version=2022-01-10-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Restart
      description: Restart virtual machine.
      summary: Implements the operation to restart a virtual machine.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the virtual machine resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/?api-version=2022-01-10-preview:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_List
      summary: Implements GET virtualMachines in a subscription.
      description: List of virtualMachines in a subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachinesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/?api-version=2022-01-10-preview:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListByResourceGroup
      summary: Implements GET virtualMachines in a resource group.
      description: List of virtualMachines in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachinesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Create
      description: Create Or Update virtual machine template.
      summary: Implements virtual machine template PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the virtual machine template resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineTemplate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: insert
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Get
      summary: Gets a virtual machine template.
      description: Implements virtual machine template GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the virtual machine template resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: select
    patch:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Update
      summary: Updates a virtual machine template.
      description: API to update certain properties of the virtual machine template resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the virtual machine template resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: exec
    delete:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Delete
      summary: Deletes an virtual machine template.
      description: Implements virtual machine template DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the virtual machine template resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/?api-version=2022-01-10-preview:
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_List
      summary: Implements GET virtualMachineTemplates in a subscription.
      description: List of virtualMachineTemplates in a subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplatesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/?api-version=2022-01-10-preview:
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_ListByResourceGroup
      summary: Implements GET virtualMachineTemplates in a resource group.
      description: List of virtualMachineTemplates in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplatesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Create
      description: Create Or Update virtual network.
      summary: Implements virtual network PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualNetworkName
          in: path
          description: Name of the virtual network resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: insert
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Get
      summary: Gets a virtual network.
      description: Implements virtual network GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualNetworkName
          in: path
          description: Name of the virtual network resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: select
    patch:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Update
      summary: Updates a virtual network.
      description: API to update certain properties of the virtual network resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualNetworkName
          in: path
          description: Name of the virtual network resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: exec
    delete:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Delete
      summary: Deletes an virtual network.
      description: Implements virtual network DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualNetworkName
          in: path
          description: Name of the virtual network resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/?api-version=2022-01-10-preview:
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_List
      summary: Implements GET virtualNetworks in a subscription.
      description: List of virtualNetworks in a subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworksList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/?api-version=2022-01-10-preview:
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_ListByResourceGroup
      summary: Implements GET virtualNetworks in a resource group.
      description: List of virtualNetworks in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworksList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}/inventoryItems/{inventoryItemName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - InventoryItems
      operationId: InventoryItems_Create
      description: Create Or Update InventoryItem.
      summary: Implements InventoryItem PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: vcenterName
          in: path
          description: Name of the vCenter.
          required: true
          schema:
            type: string
        - name: inventoryItemName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-verb: insert
    get:
      tags:
        - InventoryItems
      operationId: InventoryItems_Get
      summary: Gets InventoryItem.
      description: Implements InventoryItem GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: vcenterName
          in: path
          description: Name of the vCenter.
          required: true
          schema:
            type: string
        - name: inventoryItemName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-verb: select
    delete:
      tags:
        - InventoryItems
      operationId: InventoryItems_Delete
      summary: Deletes an inventoryItem.
      description: Implements inventoryItem DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: vcenterName
          in: path
          description: Name of the vCenter.
          required: true
          schema:
            type: string
        - name: inventoryItemName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}/inventoryItems/?api-version=2022-01-10-preview:
    get:
      tags:
        - InventoryItems
      operationId: InventoryItems_ListByVCenter
      summary: Implements GET inventoryItems in a vCenter.
      description: Returns the list of inventoryItems of the given vCenter.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: vcenterName
          in: path
          description: Name of the vCenter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: inventory_items
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}/hybridIdentityMetadata/{metadataName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - HybridIdentityMetadata
      operationId: HybridIdentityMetadata_Create
      description: Create Or Update HybridIdentityMetadata.
      summary: Implements HybridIdentityMetadata PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the vm.
          required: true
          schema:
            type: string
        - name: metadataName
          in: path
          description: Name of the hybridIdentityMetadata.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridIdentityMetadata'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridIdentityMetadata'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: hybrid_identity_metadata
      x-stackQL-verb: insert
    get:
      tags:
        - HybridIdentityMetadata
      operationId: HybridIdentityMetadata_Get
      summary: Gets HybridIdentityMetadata.
      description: Implements HybridIdentityMetadata GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the vm.
          required: true
          schema:
            type: string
        - name: metadataName
          in: path
          description: Name of the HybridIdentityMetadata.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridIdentityMetadata'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: hybrid_identity_metadata
      x-stackQL-verb: select
    delete:
      tags:
        - HybridIdentityMetadata
      operationId: HybridIdentityMetadata_Delete
      summary: Deletes an HybridIdentityMetadata.
      description: Implements HybridIdentityMetadata DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the vm.
          required: true
          schema:
            type: string
        - name: metadataName
          in: path
          description: Name of the HybridIdentityMetadata.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: hybrid_identity_metadata
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}/hybridIdentityMetadata/?api-version=2022-01-10-preview:
    get:
      tags:
        - HybridIdentityMetadata
      operationId: HybridIdentityMetadata_ListByVm
      summary: Implements GET HybridIdentityMetadata in a vm.
      description: Returns the list of HybridIdentityMetadata of the given vm.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the vm.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridIdentityMetadataList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: hybrid_identity_metadata
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{name}/extensions/{extensionName}/?api-version=2022-01-10-preview:
    put:
      tags:
        - MachineExtensions
      operationId: MachineExtensions_CreateOrUpdate
      description: The operation to create or update the extension.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: name
          in: path
          description: The name of the machine where the extension should be created or updated.
          required: true
          schema:
            type: string
        - name: extensionName
          in: path
          description: The name of the machine extension.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Create Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineExtension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineExtension'
        '201':
          description: HTTP 201 (Created) if the operation was successfully started and will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: machine_extensions
      x-stackQL-verb: insert
    patch:
      tags:
        - MachineExtensions
      operationId: MachineExtensions_Update
      description: The operation to update the extension.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: name
          in: path
          description: The name of the machine where the extension should be created or updated.
          required: true
          schema:
            type: string
        - name: extensionName
          in: path
          description: The name of the machine extension.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Create Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineExtensionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: machine_extensions
      x-stackQL-verb: exec
    delete:
      tags:
        - MachineExtensions
      operationId: MachineExtensions_Delete
      description: The operation to delete the extension.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: name
          in: path
          description: The name of the machine where the extension should be deleted.
          required: true
          schema:
            type: string
        - name: extensionName
          in: path
          description: The name of the machine extension.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: machine_extensions
      x-stackQL-verb: delete
    get:
      tags:
        - MachineExtensions
      operationId: MachineExtensions_Get
      description: The operation to get the extension.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: name
          in: path
          description: The name of the machine containing the extension.
          required: true
          schema:
            type: string
        - name: extensionName
          in: path
          description: The name of the machine extension.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: machine_extensions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{name}/extensions/?api-version=2022-01-10-preview:
    get:
      tags:
        - MachineExtensions
      operationId: MachineExtensions_List
      description: The operation to get all extensions of a non-Azure machine
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: name
          in: path
          description: The name of the machine containing the extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineExtensionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: machine_extensions
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}/guestAgents/{name}/?api-version=2022-01-10-preview:
    put:
      tags:
        - GuestAgents
      operationId: GuestAgents_Create
      description: Create Or Update GuestAgent.
      summary: Implements GuestAgent PUT method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the vm.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Name of the guestAgents.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestAgent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: guest_agents
      x-stackQL-verb: insert
    get:
      tags:
        - GuestAgents
      operationId: GuestAgents_Get
      summary: Gets GuestAgent.
      description: Implements GuestAgent GET method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the vm.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Name of the GuestAgent.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: guest_agents
      x-stackQL-verb: select
    delete:
      tags:
        - GuestAgents
      operationId: GuestAgents_Delete
      summary: Deletes an GuestAgent.
      description: Implements GuestAgent DELETE method.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the vm.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Name of the GuestAgent.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: guest_agents
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}/guestAgents/?api-version=2022-01-10-preview:
    get:
      tags:
        - GuestAgents
      operationId: GuestAgents_ListByVm
      summary: Implements GET GuestAgent in a vm.
      description: Returns the list of GuestAgent of the given vm.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: Name of the vm.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: guest_agents
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
