openapi: 3.0.0
servers:
  - url: 'https://management.azure.com/'
info:
  title: Azure Chaos Studio
  description: 'Azure Chaos Studio is a managed service for improving resilience by injecting faults into your Azure applications. Running controlled fault injection experiments against your applications, a practice known as chaos engineering, helps you to measure, understand, and improve resilience against real-world incidents, such as a region outages or application failures causing high CPU utilization on a VM.'
  contact:
    name: StackQL Studios
    url: 'https://stackql.io/'
    email: info@stackql.io
  version: 2024-01-25-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    apiVersion:
      name: api-version
      in: query
      description: String that sets the API version.
      required: true
      x-ms-parameter-location: client
      schema:
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}(|-preview)$'
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: GUID that represents an Azure subscription ID.
      required: true
      x-ms-parameter-location: client
      schema:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: String that represents an Azure resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9_\-\.\(\)]*[a-zA-Z0-9_\-\(\)]$'
        type: string
    parentResourcePath:
      name: parentResourcePath
      in: path
      description: String that represents the path to a parent resource starting with the providers segment.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    parentProviderNamespace:
      name: parentProviderNamespace
      in: path
      description: String that represents a resource provider namespace.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9]+\.[a-zA-Z0-9]+$'
        type: string
    parentResourceType:
      name: parentResourceType
      in: path
      description: String that represents a resource type.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9_\-\.]+$'
        type: string
    parentResourceName:
      name: parentResourceName
      in: path
      description: String that represents a resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9_\-\.]+$'
        type: string
    targetName:
      name: targetName
      in: path
      description: String that represents a Target resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9_\-\.]+$'
        type: string
    capabilityName:
      name: capabilityName
      in: path
      description: String that represents a Capability resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9\-\.]+-\d\.\d$'
        type: string
    targetTypeName:
      name: targetTypeName
      in: path
      description: String that represents a Target Type resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9_\-\.]+$'
        type: string
    capabilityTypeName:
      name: capabilityTypeName
      in: path
      description: String that represents a Capability Type resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9\-\.]+-\d\.\d$'
        type: string
    locationName:
      name: locationName
      in: path
      description: String that represents a Location resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-zA-Z0-9_\-\.]+$'
        type: string
    continuationToken:
      name: continuationToken
      in: query
      description: String that sets the continuation token.
      x-ms-parameter-location: method
      x-nullable: false
      schema:
        type: string
    experimentName:
      name: experimentName
      in: path
      description: String that represents a Experiment resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: '^[^<>%&:?#/\\]+$'
        type: string
    statusId:
      name: statusId
      in: path
      description: GUID that represents a Experiment status.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
    runningFilter:
      name: running
      in: query
      description: 'Optional value that indicates whether to filter results based on if the Experiment is currently running. If null, then the results will not be filtered.'
      x-ms-parameter-location: method
      x-nullable: false
      schema:
        type: boolean
    executionDetailsId:
      name: executionDetailsId
      in: path
      description: GUID that represents a Experiment execution detail.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    resourceIdentity:
      type: object
      description: The identity of a resource.
      properties:
        type:
          type: string
          description: String of the resource identity type.
          enum:
            - None
            - SystemAssigned
            - UserAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
          description: 'The list of user identities associated with the Experiment. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
        principalId:
          type: string
          description: GUID that represents the principal ID of this resource identity.
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          readOnly: true
        tenantId:
          type: string
          description: GUID that represents the tenant ID of this resource identity.
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          readOnly: true
      required:
        - type
    url:
      type: string
      description: String that represents a URL.
      maxLength: 2048
      nullable: false
    urn:
      type: string
      description: String that represents a URN.
      maxLength: 2048
      nullable: false
    urlNullable:
      type: string
      description: Optional string that represents a URL.
      maxLength: 2048
      nullable: true
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - 'SystemAssigned,UserAssigned'
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: 'Type of managed service identity (either system assigned, or none).'
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: 'Managed service identity (either system assigned, or none)'
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    capabilityType:
      description: Model that represents a Capability Type resource.
      properties:
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          description: The system metadata properties of the capability type resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        location:
          type: string
          description: Location of the Capability Type resource.
        properties:
          description: The properties of the capability type resource.
          $ref: '#/components/schemas/capabilityTypeProperties'
          x-ms-client-flatten: true
          readOnly: true
      type: object
    capabilityTypeProperties:
      type: object
      description: Model that represents the Capability Type properties model.
      properties:
        publisher:
          type: string
          description: String of the Publisher that this Capability Type extends.
          readOnly: true
        targetType:
          type: string
          description: String of the Target Type that this Capability Type extends.
          readOnly: true
        displayName:
          type: string
          description: Localized string of the display name.
          readOnly: true
        description:
          type: string
          description: Localized string of the description.
          readOnly: true
        parametersSchema:
          $ref: '#/components/schemas/url'
          description: URL to retrieve JSON schema of the Capability Type parameters.
          readOnly: true
        urn:
          $ref: '#/components/schemas/urn'
          description: String of the URN for this Capability Type.
          readOnly: true
        kind:
          type: string
          description: String of the kind of this Capability Type.
          readOnly: true
        azureRbacActions:
          type: array
          description: Control plane actions necessary to execute capability type.
          items:
            type: string
            description: Control plane action necessary to execute capability type.
        azureRbacDataActions:
          type: array
          description: Data plane actions necessary to execute capability type.
          items:
            type: string
            description: Data plane action necessary to execute capability type.
        runtimeProperties:
          type: object
          description: Runtime properties of this Capability Type.
          properties:
            kind:
              type: string
              description: String of the kind of the resource's action type (continuous or discrete).
              readOnly: true
    capabilityTypeListResult:
      type: object
      description: Model that represents a list of Capability Type resources and a link for pagination.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/capabilityType'
          description: List of Capability Type resources.
          readOnly: true
        nextLink:
          $ref: '#/components/schemas/urlNullable'
          description: URL to retrieve the next page of Capability Type resources.
          readOnly: true
    targetType:
      description: Model that represents a Target Type resource.
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          description: The system metadata properties of the target type resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        location:
          type: string
          description: Location of the Target Type resource.
        properties:
          description: The properties of the target type resource.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/targetTypeProperties'
      type: object
    targetTypeProperties:
      type: object
      description: Model that represents the base Target Type properties model.
      properties:
        displayName:
          type: string
          description: Localized string of the display name.
          readOnly: true
        description:
          type: string
          description: Localized string of the description.
          readOnly: true
        propertiesSchema:
          $ref: '#/components/schemas/url'
          description: URL to retrieve JSON schema of the Target Type properties.
          readOnly: true
        resourceTypes:
          type: array
          items:
            type: string
          description: List of resource types this Target Type can extend.
          readOnly: true
    targetTypeListResult:
      type: object
      description: Model that represents a list of Target Type resources and a link for pagination.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/targetType'
          description: List of Target Type resources.
          readOnly: true
        nextLink:
          $ref: '#/components/schemas/urlNullable'
          description: URL to retrieve the next page of Target Type resources.
          readOnly: true
    experiment:
      description: Model that represents a Experiment resource.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        systemData:
          description: The system metadata of the experiment resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        identity:
          description: The identity of the experiment resource.
          $ref: '#/components/schemas/resourceIdentity'
        properties:
          description: The properties of the experiment resource.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/experimentProperties'
      type: object
    experimentUpdate:
      type: object
      description: Describes an experiment update.
      properties:
        identity:
          description: The identity of the experiment resource.
          $ref: '#/components/schemas/resourceIdentity'
    experimentProperties:
      description: Model that represents the Experiment properties model.
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/step'
          x-ms-identifiers:
            - name
          description: List of steps.
          minItems: 1
        selectors:
          type: array
          items:
            $ref: '#/components/schemas/selector'
          description: List of selectors.
          minItems: 1
        startOnCreation:
          description: A boolean value that indicates if experiment should be started on creation or not.
          type: boolean
          nullable: true
      required:
        - steps
        - selectors
    experimentListResult:
      type: object
      description: Model that represents a list of Experiment resources and a link for pagination.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/experiment'
          description: List of Experiment resources.
          readOnly: true
        nextLink:
          $ref: '#/components/schemas/urlNullable'
          description: URL to retrieve the next page of Experiment resources.
          readOnly: true
    step:
      type: object
      description: Model that represents a step in the Experiment resource.
      properties:
        name:
          type: string
          description: String of the step name.
          minLength: 1
        branches:
          type: array
          description: List of branches.
          items:
            $ref: '#/components/schemas/branch'
          x-ms-identifiers:
            - name
          minItems: 1
      required:
        - name
        - branches
    branch:
      type: object
      description: Model that represents a branch in the step.
      properties:
        name:
          type: string
          description: String of the branch name.
          minLength: 1
        actions:
          type: array
          description: List of actions.
          items:
            $ref: '#/components/schemas/action'
          x-ms-identifiers:
            - name
          minItems: 1
      required:
        - name
        - actions
    action:
      type: object
      description: Model that represents the base action model.
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Enum that discriminates between action models.
        name:
          $ref: '#/components/schemas/urn'
          description: String that represents a Capability URN.
      required:
        - type
        - name
    delayAction:
      description: Model that represents a delay action.
      required:
        - duration
      x-ms-discriminator-value: delay
      properties:
        type:
          type: string
          description: Enum that discriminates between action models.
        name:
          $ref: '#/components/schemas/urn'
          description: String that represents a Capability URN.
        duration:
          type: string
          description: ISO8601 formatted string that represents a duration.
          pattern: ^P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+(\.\d+)?S)?)?$
          format: duration
      type: object
    discreteAction:
      description: Model that represents a discrete action.
      required:
        - parameters
        - selectorId
      x-ms-discriminator-value: discrete
      properties:
        type:
          type: string
          description: Enum that discriminates between action models.
        name:
          $ref: '#/components/schemas/urn'
          description: String that represents a Capability URN.
        parameters:
          description: List of key value pairs.
          type: array
          items:
            $ref: '#/components/schemas/keyValuePair'
          x-ms-identifiers:
            - key
        selectorId:
          type: string
          description: String that represents a selector.
          minLength: 1
      type: object
    continuousAction:
      description: Model that represents a continuous action.
      required:
        - duration
        - parameters
        - selectorId
      x-ms-discriminator-value: continuous
      properties:
        type:
          type: string
          description: Enum that discriminates between action models.
        name:
          $ref: '#/components/schemas/urn'
          description: String that represents a Capability URN.
        duration:
          type: string
          description: ISO8601 formatted string that represents a duration.
          pattern: ^P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+(\.\d+)?S)?)?$
          format: duration
        parameters:
          description: List of key value pairs.
          type: array
          items:
            $ref: '#/components/schemas/keyValuePair'
          x-ms-identifiers:
            - key
        selectorId:
          type: string
          description: String that represents a selector.
          minLength: 1
      type: object
    keyValuePair:
      description: A map to describe the settings of an action.
      type: object
      properties:
        key:
          description: The name of the setting for the action.
          type: string
          minLength: 1
        value:
          description: The value of the setting for the action.
          type: string
          minLength: 1
      required:
        - key
        - value
    selector:
      type: object
      description: Model that represents a selector in the Experiment resource.
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Enum of the selector type.
          enum:
            - List
            - Query
          x-ms-enum:
            name: SelectorType
            modelAsString: true
        id:
          type: string
          description: String of the selector ID.
          minLength: 1
        filter:
          $ref: '#/components/schemas/filter'
      required:
        - type
        - id
      additionalProperties: true
    listSelector:
      description: Model that represents a list selector.
      x-ms-discriminator-value: List
      required:
        - targets
      properties:
        type:
          type: string
          description: Enum of the selector type.
          enum:
            - List
            - Query
          x-ms-enum:
            name: SelectorType
            modelAsString: true
        id:
          type: string
          description: String of the selector ID.
          minLength: 1
        filter:
          $ref: '#/components/schemas/filter'
        targets:
          type: array
          description: List of Target references.
          minItems: 1
          items:
            $ref: '#/components/schemas/targetReference'
      type: object
    querySelector:
      description: Model that represents a query selector.
      x-ms-discriminator-value: Query
      required:
        - queryString
        - subscriptionIds
      properties:
        type:
          type: string
          description: Enum of the selector type.
          enum:
            - List
            - Query
          x-ms-enum:
            name: SelectorType
            modelAsString: true
        id:
          type: string
          description: String of the selector ID.
          minLength: 1
        filter:
          $ref: '#/components/schemas/filter'
        queryString:
          type: string
          description: Azure Resource Graph (ARG) Query Language query for target resources.
        subscriptionIds:
          type: array
          description: Subscription id list to scope resource query.
          items:
            type: string
            description: String of the availability zone ID.
          minItems: 1
      type: object
    filter:
      type: object
      description: Model that represents available filter types that can be applied to a targets list.
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Enum that discriminates between filter types. Currently only `Simple` type is supported.
          enum:
            - Simple
          x-ms-enum:
            name: FilterType
            modelAsString: true
      required:
        - type
    simpleFilter:
      description: Model that represents a simple target filter.
      x-ms-discriminator-value: Simple
      properties:
        type:
          type: string
          description: Enum that discriminates between filter types. Currently only `Simple` type is supported.
          enum:
            - Simple
          x-ms-enum:
            name: FilterType
            modelAsString: true
        parameters:
          $ref: '#/components/schemas/simpleFilterParameters'
      type: object
    simpleFilterParameters:
      description: Model that represents the Simple filter parameters.
      type: object
      properties:
        zones:
          type: array
          items:
            type: string
            description: String of the availability zone ID.
          description: List of Azure availability zones to filter targets by.
    targetReference:
      type: object
      description: Model that represents a reference to a Target in the selector.
      properties:
        type:
          type: string
          description: Enum of the Target reference type.
          enum:
            - ChaosTarget
          x-ms-enum:
            name: TargetReferenceType
            modelAsString: true
        id:
          type: string
          description: String of the resource ID of a Target resource.
          pattern: '^\/[Ss][Uu][Bb][Ss][Cc][Rr][Ii][Pp][Tt][Ii][Oo][Nn][Ss]\/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\/[Rr][Ee][Ss][Oo][Uu][Rr][Cc][Ee][Gg][Rr][Oo][Uu][Pp][Ss]\/[a-zA-Z0-9_\-\.\(\)]*[a-zA-Z0-9_\-\(\)]\/[Pp][Rr][Oo][Vv][Ii][Dd][Ee][Rr][Ss]\/[a-zA-Z0-9]+\.[a-zA-Z0-9]+\/[a-zA-Z0-9_\-\.]+\/[a-zA-Z0-9_\-\.]+\/[Pp][Rr][Oo][Vv][Ii][Dd][Ee][Rr][Ss]\/[Mm][Ii][Cc][Rr][Oo][Ss][Oo][Ff][Tt]\.[Cc][Hh][Aa][Oo][Ss]\/[Tt][Aa][Rr][Gg][Ee][Tt][Ss]\/[a-zA-Z0-9_\-\.]+$'
      required:
        - type
        - id
    experimentCancelOperationResult:
      type: object
      description: Model that represents the result of a cancel Experiment operation.
      properties:
        name:
          type: string
          description: String of the Experiment name.
          readOnly: true
        statusUrl:
          $ref: '#/components/schemas/url'
          description: URL to retrieve the Experiment status.
          readOnly: true
    experimentStartOperationResult:
      type: object
      description: Model that represents the result of a start Experiment operation.
      properties:
        name:
          type: string
          description: String of the Experiment name.
          readOnly: true
        statusUrl:
          $ref: '#/components/schemas/url'
          description: URL to retrieve the Experiment status.
          readOnly: true
    experimentStatus:
      description: Model that represents the status of a Experiment.
      properties:
        type:
          type: string
          description: String of the resource type.
          readOnly: true
        id:
          type: string
          description: String of the fully qualified resource ID.
          readOnly: true
        name:
          type: string
          description: String of the resource name.
          readOnly: true
        properties:
          description: The properties of experiment execution status.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/experimentStatusProperties'
      type: object
    experimentStatusProperties:
      description: Model that represents the Experiment status properties model.
      type: object
      properties:
        status:
          type: string
          description: String that represents the status of a Experiment.
          readOnly: true
        createdDateUtc:
          type: string
          format: date-time
          description: String that represents the created date time of a Experiment.
          readOnly: true
        endDateUtc:
          type: string
          format: date-time
          description: String that represents the end date time of a Experiment.
          readOnly: true
          nullable: true
    experimentStatusListResult:
      type: object
      description: Model that represents a list of Experiment statuses and a link for pagination.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/experimentStatus'
          description: List of Experiment statuses.
          readOnly: true
        nextLink:
          $ref: '#/components/schemas/urlNullable'
          description: URL to retrieve the next page of Experiment statuses.
          readOnly: true
    experimentExecutionActionTargetDetailsProperties:
      description: Model that represents the Experiment action target details properties model.
      type: object
      properties:
        status:
          description: The status of the execution.
          type: string
          readOnly: true
        target:
          description: The target for the action.
          type: string
          readOnly: true
        targetFailedTime:
          type: string
          format: date-time
          description: String that represents the failed date time.
          readOnly: true
          nullable: true
        targetCompletedTime:
          type: string
          format: date-time
          description: String that represents the completed date time.
          readOnly: true
          nullable: true
        error:
          description: The error of the action.
          type: object
          $ref: '#/components/schemas/experimentExecutionActionTargetDetailsError'
          readOnly: true
          nullable: true
          x-nullable: true
    experimentExecutionActionTargetDetailsError:
      type: object
      description: Model that represents the Experiment action target details error model.
      properties:
        code:
          description: The error code.
          type: string
          readOnly: true
        message:
          description: The error message
          type: string
          readOnly: true
    experimentExecutionDetailsListResult:
      description: Model that represents a list of Experiment execution details and a link for pagination.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/experimentExecutionDetails'
          description: List of Experiment execution details.
          readOnly: true
        nextLink:
          $ref: '#/components/schemas/urlNullable'
          description: URL to retrieve the next page of Experiment execution details.
          readOnly: true
    experimentExecutionDetails:
      description: Model that represents the execution details of a Experiment.
      properties:
        type:
          type: string
          description: String of the resource type.
          readOnly: true
        id:
          type: string
          description: String of the fully qualified resource ID.
          readOnly: true
        name:
          type: string
          description: String of the resource name.
          readOnly: true
        properties:
          description: The properties of the experiment execution details.
          $ref: '#/components/schemas/experimentExecutionDetailsProperties'
          x-ms-client-flatten: true
          readOnly: true
      type: object
    experimentExecutionDetailsProperties:
      description: Model that represents the Experiment execution details properties model.
      type: object
      properties:
        experimentId:
          description: The id of the experiment.
          type: string
          readOnly: true
        status:
          description: The value of the status of the experiment execution.
          type: string
          readOnly: true
        failureReason:
          description: The reason why the execution failed.
          type: string
          readOnly: true
        createdDateTime:
          type: string
          format: date-time
          description: String that represents the created date time.
          readOnly: true
        lastActionDateTime:
          type: string
          format: date-time
          description: String that represents the last action date time.
          readOnly: true
        startDateTime:
          type: string
          format: date-time
          description: String that represents the start date time.
          readOnly: true
        stopDateTime:
          type: string
          format: date-time
          description: String that represents the stop date time.
          readOnly: true
        runInformation:
          description: The information of the experiment run.
          type: object
          properties:
            steps:
              description: The steps of the experiment run.
              type: array
              items:
                $ref: '#/components/schemas/stepStatus'
              x-ms-identifiers:
                - stepName
              readOnly: true
          readOnly: true
    stepStatus:
      description: Model that represents the a list of branches and branch statuses.
      type: object
      properties:
        stepName:
          description: The name of the step.
          type: string
          readOnly: true
        stepId:
          description: The id of the step.
          type: string
          readOnly: true
        status:
          description: The value of the status of the step.
          type: string
          readOnly: true
        branches:
          description: The array of branches.
          type: array
          items:
            $ref: '#/components/schemas/branchStatus'
          x-ms-identifiers:
            - branchName
          readOnly: true
    branchStatus:
      description: Model that represents the a list of actions and action statuses.
      type: object
      properties:
        branchName:
          description: The name of the branch status.
          type: string
          readOnly: true
        branchId:
          description: The id of the branch status.
          type: string
          readOnly: true
        status:
          description: The status of the branch.
          type: string
          readOnly: true
        actions:
          description: The array of actions.
          type: array
          items:
            $ref: '#/components/schemas/actionStatus'
          x-ms-identifiers:
            - actionId
          readOnly: true
    actionStatus:
      type: object
      description: Model that represents the an action and its status.
      properties:
        actionName:
          description: The name of the action status.
          type: string
          readOnly: true
        actionId:
          description: The id of the action status.
          type: string
          readOnly: true
        status:
          description: The status of the action.
          type: string
          readOnly: true
        startTime:
          type: string
          format: date-time
          description: String that represents the start time of the action.
          readOnly: true
        endTime:
          type: string
          format: date-time
          description: String that represents the end time of the action.
          readOnly: true
        targets:
          description: The array of targets.
          type: array
          items:
            $ref: '#/components/schemas/experimentExecutionActionTargetDetailsProperties'
          x-ms-identifiers: []
          readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: 'The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.'
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: 'The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.'
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: 'Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.'
          pattern: '^[-\w\._,\(\)]+$'
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: 'This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: 'If the service has different generations of hardware, for the same SKU, then that can be captured here.'
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: 'Details of a REST API operation, returned from the Resource Provider Operations API'
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: 'The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".'
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: 'The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".'
              type: string
              readOnly: true
            description:
              description: 'The short, localized friendly description of the operation; suitable for tool tips and detailed views.'
              type: string
              readOnly: true
        origin:
          description: 'The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"'
          type: string
          readOnly: true
          enum:
            - user
            - system
            - 'user,system'
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: 'If present, details of the operation error.'
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: 'The district, state, or province where the resource is located.'
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    target:
      description: Model that represents a Target resource.
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          description: The system metadata of the target resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        location:
          type: string
          description: Location of the target resource.
        properties:
          description: The properties of the target resource.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/targetProperties'
      type: object
    targetProperties:
      type: object
      description: Model that represents the base Target properties model.
      properties: {}
      additionalProperties: true
    targetListResult:
      type: object
      description: Model that represents a list of Target resources and a link for pagination.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/target'
          description: List of Target resources.
          readOnly: true
        nextLink:
          $ref: '#/components/schemas/urlNullable'
          description: URL to retrieve the next page of Target resources.
          readOnly: true
    capability:
      description: Model that represents a Capability resource.
      properties:
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          description: The standard system metadata of a resource type.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        properties:
          x-ms-client-flatten: true
          description: The properties of a capability resource.
          $ref: '#/components/schemas/capabilityProperties'
          readOnly: true
      type: object
    capabilityProperties:
      type: object
      description: Model that represents the Capability properties model.
      properties:
        publisher:
          type: string
          description: String of the Publisher that this Capability extends.
          readOnly: true
        targetType:
          type: string
          description: String of the Target Type that this Capability extends.
          readOnly: true
        description:
          type: string
          description: Localized string of the description.
          readOnly: true
        parametersSchema:
          $ref: '#/components/schemas/url'
          description: URL to retrieve JSON schema of the Capability parameters.
          readOnly: true
        urn:
          $ref: '#/components/schemas/urn'
          description: String of the URN for this Capability Type.
          readOnly: true
    capabilityListResult:
      type: object
      description: Model that represents a list of Capability resources and a link for pagination.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/capability'
          description: List of Capability resources.
          readOnly: true
        nextLink:
          $ref: '#/components/schemas/urlNullable'
          description: URL to retrieve the next page of Capability resources.
          readOnly: true
  x-stackQL-resources:
    target_types:
      id: azure_extras.chaos.target_types
      name: target_types
      title: Target Types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Chaos~1locations~1{locationName}~1targetTypes~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Chaos~1locations~1{locationName}~1targetTypes~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Chaos~1locations~1{locationName}~1targetTypes~1{targetTypeName}~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/target_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/target_types/methods/list'
        insert: []
        update: []
        delete: []
    experiments_all:
      id: azure_extras.chaos.experiments_all
      name: experiments_all
      title: Experiments All
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Chaos~1experiments~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Chaos~1experiments~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments_all/methods/list'
        insert: []
        update: []
        delete: []
    experiments:
      id: azure_extras.chaos.experiments
      name: experiments
      title: Experiments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1?api-version=2023-04-15-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1?api-version=2023-04-15-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1?api-version=2023-04-15-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1cancel~1?api-version=2023-04-15-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1start~1?api-version=2023-04-15-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/get'
          - $ref: '#/components/x-stackQL-resources/experiments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/delete'
    experiments_all_statuses:
      id: azure_extras.chaos.experiments_all_statuses
      name: experiments_all_statuses
      title: Experiments All Statuses
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1statuses~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1statuses~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments_all_statuses/methods/list'
        insert: []
        update: []
        delete: []
    experiments_status:
      id: azure_extras.chaos.experiments_status
      name: experiments_status
      title: Experiments Status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1statuses~1{statusId}~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments_status/methods/get'
        insert: []
        update: []
        delete: []
    experiments_execution_details:
      id: azure_extras.chaos.experiments_execution_details
      name: experiments_execution_details
      title: Experiments Execution Details
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1executionDetails~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1executionDetails~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Chaos~1experiments~1{experimentName}~1executionDetails~1{executionDetailsId}~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments_execution_details/methods/get'
          - $ref: '#/components/x-stackQL-resources/experiments_execution_details/methods/list'
        insert: []
        update: []
        delete: []
    capabilities:
      id: azure_extras.chaos.capabilities
      name: capabilities
      title: Capabilities
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1{targetName}~1capabilities~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1{targetName}~1capabilities~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1{targetName}~1capabilities~1{capabilityName}~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1{targetName}~1capabilities~1{capabilityName}~1?api-version=2023-04-15-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1{targetName}~1capabilities~1{capabilityName}~1?api-version=2023-04-15-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/capabilities/methods/get'
          - $ref: '#/components/x-stackQL-resources/capabilities/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/capabilities/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/capabilities/methods/delete'
    capability_types:
      id: azure_extras.chaos.capability_types
      name: capability_types
      title: Capability Types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Chaos~1locations~1{locationName}~1targetTypes~1{targetTypeName}~1capabilityTypes~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Chaos~1locations~1{locationName}~1targetTypes~1{targetTypeName}~1capabilityTypes~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Chaos~1locations~1{locationName}~1targetTypes~1{targetTypeName}~1capabilityTypes~1{capabilityTypeName}~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/capability_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/capability_types/methods/list'
        insert: []
        update: []
        delete: []
    targets:
      id: azure_extras.chaos.targets
      name: targets
      title: Targets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1{targetName}~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1{targetName}~1?api-version=2023-04-15-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{parentProviderNamespace}~1{parentResourceType}~1{parentResourceName}~1providers~1Microsoft.Chaos~1targets~1{targetName}~1?api-version=2023-04-15-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targets/methods/get'
          - $ref: '#/components/x-stackQL-resources/targets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/targets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/targets/methods/delete'
    operations_all:
      id: azure_extras.chaos.operations_all
      name: operations_all
      title: Operations All
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Chaos~1operations~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Chaos~1operations~1?api-version=2023-04-15-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_all/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/?api-version=2023-04-15-preview':
    get:
      description: Get a list of Target Type resources for given location.
      tags:
        - TargetTypes
      operationId: TargetTypes_List
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationName'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          description: List of Target Type resources returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/targetTypeListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: target_types
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}/?api-version=2023-04-15-preview':
    get:
      description: Get a Target Type resources for given location.
      tags:
        - TargetTypes
      operationId: TargetTypes_Get
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationName'
        - $ref: '#/components/parameters/targetTypeName'
      responses:
        '200':
          description: Target Type resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/targetType'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: target_types
      x-stackQL-method: get
      x-stackQL-verb: select
  '/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/experiments/?api-version=2023-04-15-preview':
    get:
      description: Get a list of Experiment resources in a subscription.
      tags:
        - Experiments
      operationId: Experiments_ListAll
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/runningFilter'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          description: List of Experiment resources returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimentListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: experiments_all
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/?api-version=2023-04-15-preview':
    get:
      description: Get a list of Experiment resources in a resource group.
      tags:
        - Experiments
      operationId: Experiments_List
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/runningFilter'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          description: List of Experiment resources returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimentListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: experiments
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}/?api-version=2023-04-15-preview':
    delete:
      description: Delete a Experiment resource.
      tags:
        - Experiments
      operationId: Experiments_Delete
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
      responses:
        '200':
          description: Request was successful.
        '204':
          description: Request was successful.
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: experiments
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Get a Experiment resource.
      tags:
        - Experiments
      operationId: Experiments_Get
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
      responses:
        '200':
          description: Experiment resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experiment'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: experiments
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      description: Create or update a Experiment resource.
      tags:
        - Experiments
      operationId: Experiments_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
      requestBody:
        description: Experiment resource to be created or updated.
        required: true
        x-ms-requestBody-name: experiment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/experiment'
      responses:
        '200':
          description: Experiment resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experiment'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: experiments
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    patch:
      description: The operation to update an experiment.
      tags:
        - Experiments
      operationId: Experiments_Update
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
      requestBody:
        description: Parameters supplied to the Update experiment operation.
        required: true
        x-ms-requestBody-name: experiment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/experimentUpdate'
      responses:
        '200':
          description: Experiment resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experiment'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: experiments
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}/cancel/?api-version=2023-04-15-preview':
    post:
      description: Cancel a running Experiment resource.
      tags:
        - Experiments
      operationId: Experiments_Cancel
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
      responses:
        '202':
          description: Operation result returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimentCancelOperationResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: experiments
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}/start/?api-version=2023-04-15-preview':
    post:
      description: Start a Experiment resource.
      tags:
        - Experiments
      operationId: Experiments_Start
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
      responses:
        '202':
          description: Operation result returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimentStartOperationResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: experiments
      x-stackQL-method: start
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}/statuses/?api-version=2023-04-15-preview':
    get:
      description: Get a list of statuses of a Experiment resource.
      tags:
        - Experiments
      operationId: Experiments_ListAllStatuses
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
      responses:
        '200':
          description: List of statuses returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimentStatusListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: experiments_all_statuses
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}/statuses/{statusId}/?api-version=2023-04-15-preview':
    get:
      description: Get a status of a Experiment resource.
      tags:
        - Experiments
      operationId: Experiments_GetStatus
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
        - $ref: '#/components/parameters/statusId'
      responses:
        '200':
          description: Status returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimentStatus'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: experiments_status
      x-stackQL-method: get
      x-stackQL-verb: select
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}/executionDetails/?api-version=2023-04-15-preview':
    get:
      tags:
        - Experiments
      description: Get a list of execution details of a Experiment resource.
      operationId: Experiments_ListExecutionDetails
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
      responses:
        '200':
          description: Execution detail if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimentExecutionDetailsListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: experiments_execution_details
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}/executionDetails/{executionDetailsId}/?api-version=2023-04-15-preview':
    get:
      tags:
        - Experiments
      description: Get an execution detail of a Experiment resource.
      operationId: Experiments_GetExecutionDetails
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/experimentName'
        - $ref: '#/components/parameters/executionDetailsId'
      responses:
        '200':
          description: List of execution details in request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimentExecutionDetails'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: experiments_execution_details
      x-stackQL-method: get
      x-stackQL-verb: select
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}/capabilities/?api-version=2023-04-15-preview':
    get:
      description: Get a list of Capability resources that extend a Target resource..
      tags:
        - Capabilities
      operationId: Capabilities_List
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/parentProviderNamespace'
        - $ref: '#/components/parameters/parentResourceType'
        - $ref: '#/components/parameters/parentResourceName'
        - $ref: '#/components/parameters/targetName'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          description: List of Capability resources returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capabilityListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: capabilities
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}/capabilities/{capabilityName}/?api-version=2023-04-15-preview':
    get:
      description: Get a Capability resource that extends a Target resource.
      tags:
        - Capabilities
      operationId: Capabilities_Get
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/parentProviderNamespace'
        - $ref: '#/components/parameters/parentResourceType'
        - $ref: '#/components/parameters/parentResourceName'
        - $ref: '#/components/parameters/targetName'
        - $ref: '#/components/parameters/capabilityName'
      responses:
        '200':
          description: Capability resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capability'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: capabilities
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Delete a Capability that extends a Target resource.
      tags:
        - Capabilities
      operationId: Capabilities_Delete
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/parentProviderNamespace'
        - $ref: '#/components/parameters/parentResourceType'
        - $ref: '#/components/parameters/parentResourceName'
        - $ref: '#/components/parameters/targetName'
        - $ref: '#/components/parameters/capabilityName'
      responses:
        '200':
          description: Capability resource deletion was successful.
        '204':
          description: Capability resource deletion was successful.
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: capabilities
      x-stackQL-method: delete
      x-stackQL-verb: delete
    put:
      description: Create or update a Capability resource that extends a Target resource.
      tags:
        - Capabilities
      operationId: Capabilities_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/parentProviderNamespace'
        - $ref: '#/components/parameters/parentResourceType'
        - $ref: '#/components/parameters/parentResourceName'
        - $ref: '#/components/parameters/targetName'
        - $ref: '#/components/parameters/capabilityName'
      requestBody:
        description: Capability resource to be created or updated.
        required: true
        x-ms-requestBody-name: capability
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/capability'
      responses:
        '200':
          description: Capability resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capability'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: capabilities
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
  '/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}/capabilityTypes/?api-version=2023-04-15-preview':
    get:
      description: Get a list of Capability Type resources for given Target Type and location.
      tags:
        - CapabilityTypes
      operationId: CapabilityTypes_List
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationName'
        - $ref: '#/components/parameters/targetTypeName'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          description: List of Capability Type resources returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capabilityTypeListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: capability_types
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}/capabilityTypes/{capabilityTypeName}/?api-version=2023-04-15-preview':
    get:
      description: Get a Capability Type resource for given Target Type and location.
      tags:
        - Capabilities
      operationId: CapabilityTypes_Get
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationName'
        - $ref: '#/components/parameters/targetTypeName'
        - $ref: '#/components/parameters/capabilityTypeName'
      responses:
        '200':
          description: Capability Type resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capabilityType'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: capability_types
      x-stackQL-method: get
      x-stackQL-verb: select
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/?api-version=2023-04-15-preview':
    get:
      description: Get a list of Target resources that extend a tracked regional resource.
      tags:
        - Targets
      operationId: Targets_List
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/parentProviderNamespace'
        - $ref: '#/components/parameters/parentResourceType'
        - $ref: '#/components/parameters/parentResourceName'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          description: List of Target resources returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/targetListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: targets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}/?api-version=2023-04-15-preview':
    get:
      description: Get a Target resource that extends a tracked regional resource.
      tags:
        - Targets
      operationId: Targets_Get
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/parentProviderNamespace'
        - $ref: '#/components/parameters/parentResourceType'
        - $ref: '#/components/parameters/parentResourceName'
        - $ref: '#/components/parameters/targetName'
      responses:
        '200':
          description: Target resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/target'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: targets
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Delete a Target resource that extends a tracked regional resource.
      tags:
        - Targets
      operationId: Targets_Delete
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/parentProviderNamespace'
        - $ref: '#/components/parameters/parentResourceType'
        - $ref: '#/components/parameters/parentResourceName'
        - $ref: '#/components/parameters/targetName'
      responses:
        '200':
          description: Target resource deletion was successful.
        '204':
          description: Target resource deletion was successful.
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: targets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    put:
      description: Create or update a Target resource that extends a tracked regional resource.
      tags:
        - Targets
      operationId: Targets_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/parentProviderNamespace'
        - $ref: '#/components/parameters/parentResourceType'
        - $ref: '#/components/parameters/parentResourceName'
        - $ref: '#/components/parameters/targetName'
      requestBody:
        description: Target resource to be created or updated.
        required: true
        x-ms-requestBody-name: target
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/target'
      responses:
        '200':
          description: Target resource returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/target'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: targets
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
  /providers/Microsoft.Chaos/operations/?api-version=2023-04-15-preview:
    get:
      tags:
        - Operations
      description: Get a list all available Operations.
      operationId: Operations_ListAll
      parameters:
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: List of Operations returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations_all
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
