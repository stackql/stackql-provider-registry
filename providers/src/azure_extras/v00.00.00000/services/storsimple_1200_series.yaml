openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure StorSimple 8000/1200 Series
  description: Azure StorSimple 8000/1200 Series
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    apiVersionParameter:
      name: api-version
      in: query
      description: The api version
      required: false
      schema:
        type: string
    managerNameParameter:
      name: managerName
      in: path
      description: The manager name
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 2
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The resource group name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The subscription id
      required: true
      schema:
        type: string
  schemas:
    AccessControlRecord:
      description: The access control record
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/AccessControlRecordProperties'
          description: Properties of AccessControlRecord
          x-ms-client-flatten: true
      type: object
    AccessControlRecordList:
      description: Collection of AccessControlRecords
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/AccessControlRecord'
    AccessControlRecordProperties:
      description: Properties of access control record
      required:
        - initiatorName
      type: object
      properties:
        initiatorName:
          description: The Iscsi initiator name (IQN)
          type: string
    Alert:
      description: Alert class
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/AlertProperties'
          description: Properties of alert
          x-ms-client-flatten: true
      type: object
    AlertErrorDetails:
      description: Error details for the alert
      type: object
      properties:
        errorCode:
          description: Error code.
          type: string
        errorMessage:
          description: Error Message
          type: string
        occurences:
          format: int32
          description: Number of occurrences.
          type: integer
    AlertFilter:
      description: Filters that can be specified on the alert
      type: object
      properties:
        status:
          description: Status of the alert
          enum:
            - Active
            - Cleared
          type: string
          x-ms-enum:
            name: AlertStatus
            modelAsString: false
        severity:
          description: Severity of the alert
          enum:
            - Informational
            - Warning
            - Critical
          type: string
          x-ms-enum:
            name: AlertSeverity
            modelAsString: false
        sourceType:
          description: Source of the alert
          enum:
            - Resource
            - Device
          type: string
          x-ms-enum:
            name: AlertSourceType
            modelAsString: false
        sourceName:
          description: Source name of the alert
          type: string
        appearedOnTime:
          format: date-time
          description: UTC time on which the alert appeared
          type: string
    AlertList:
      description: Collection of Alerts
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Alert'
        nextLink:
          description: Id of the next page of alerts
          type: string
    AlertProperties:
      description: Properties of alert
      required:
        - title
        - scope
        - alertType
        - appearedAtTime
        - appearedAtSourceTime
        - source
        - severity
        - status
      type: object
      properties:
        title:
          description: Title of the alert
          type: string
        scope:
          description: Device or Resource alert
          enum:
            - Resource
            - Device
          type: string
          x-ms-enum:
            name: AlertScope
            modelAsString: false
        alertType:
          description: Type of the alert
          type: string
        appearedAtTime:
          format: date-time
          description: UTC time at which the alert appeared
          type: string
        appearedAtSourceTime:
          format: date-time
          description: UTC time at which the alert appeared on the source
          type: string
        clearedAtTime:
          format: date-time
          description: UTC time at which the alert got cleared
          type: string
        clearedAtSourceTime:
          format: date-time
          description: UTC time at which the alert was cleared on the source
          type: string
        source:
          $ref: '#/components/schemas/AlertSource'
          description: Source at which the alert was cleared
        recommendation:
          description: Recommendation for acting on the alert
          type: string
        resolutionReason:
          description: Reason for resolving the alert
          type: string
        severity:
          description: Severity of the alert
          enum:
            - Informational
            - Warning
            - Critical
          type: string
          x-ms-enum:
            name: AlertSeverity
            modelAsString: false
        status:
          description: Current status of the alert
          enum:
            - Active
            - Cleared
          type: string
          x-ms-enum:
            name: AlertStatus
            modelAsString: false
        errorDetails:
          $ref: '#/components/schemas/AlertErrorDetails'
          description: ErrorDetails of the alert
        detailedInformation:
          description: Other information about the alert
          type: object
          additionalProperties:
            type: string
    AlertSettings:
      description: AlertSettings on the device which represents how alerts will be processed
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/AlertSettingsProperties'
          description: Properties of AlertSettings
          x-ms-client-flatten: true
      type: object
    AlertSettingsProperties:
      description: Class containing the properties of AlertSettings
      required:
        - emailNotification
        - notificationToServiceOwners
        - alertNotificationCulture
      type: object
      properties:
        emailNotification:
          description: Value indicating whether user/admins will receive emails when an alert condition occurs on the system
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: AlertEmailNotificationStatus
            modelAsString: false
        notificationToServiceOwners:
          description: Value indicating whether service owners will receive emails when an alert condition occurs on the system. Applicable only if emailNotification flag is Enabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ServiceOwnersAlertNotificationStatus
            modelAsString: false
        alertNotificationCulture:
          description: 'Culture setting to be used while building alert emails. For eg: "en-US"'
          type: string
        additionalRecipientEmailList:
          description: List of email addresses (apart from admin/co-admin of subscription) to whom the alert emails need to be sent
          type: array
          items:
            type: string
    AlertSource:
      description: source at which the alert can be raised
      type: object
      properties:
        name:
          description: Name of the source.
          type: string
        timeZone:
          description: The time zone.
          type: string
        alertSourceType:
          description: Source type of the alert.
          enum:
            - Resource
            - Device
          type: string
          x-ms-enum:
            name: AlertSourceType
            modelAsString: false
    AsymmetricEncryptedSecret:
      description: This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
      required:
        - value
        - encryptionAlgorithm
      type: object
      properties:
        value:
          description: The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.
          type: string
        encryptionCertificateThumbprint:
          description: Thumbprint certificate that was used to encrypt "Value"
          type: string
        encryptionAlgorithm:
          description: Algorithm used to encrypt "Value"
          enum:
            - None
            - AES256
            - RSAES_PKCS1_v_1_5
          type: string
          x-ms-enum:
            name: EncryptionAlgorithm
            modelAsString: false
    AvailableProviderOperation:
      description: Class represents provider operation
      properties:
        name:
          description: "Gets or sets the name of the operation being performed on this particular object\r\nReturn value format: \"{resourceProviderNamespace}/{resourceType}/{read|write|deletion|action}\"\r\nEg: Microsoft.StorSimple/managers/devices/fileServers/read\r\n    Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action"
          type: string
        display:
          $ref: '#/components/schemas/AvailableProviderOperationDisplay'
          description: "Gets or sets Display information\r\nContains the localized display information for this particular operation/action"
        origin:
          description: "Gets or sets Origin\r\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\nDefault value is “user,system”"
          type: string
        properties:
          $ref: '#/components/schemas/AvailableProviderOperationProperties'
          description: "Gets or sets Properties\r\nReserved for future use"
          x-ms-client-flatten: true
      type: object
    AvailableProviderOperationDisplay:
      description: "Contains the localized display information for this particular operation / action. \r\nThese value will be used by several clients for \r\n(1) custom role definitions for RBAC; \r\n(2) complex query filters for the event service; and (3) audit history / records for management operations."
      type: object
      properties:
        provider:
          description: "Gets or sets Provider\r\nThe localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. \r\nIt should use Title Casing and begin with “Microsoft” for 1st party services."
          type: string
        resource:
          description: "Gets or sets Resource\r\nThe localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider. \r\nIt should use Title Casing – for examples, please refer to the “name” section."
          type: string
        operation:
          description: "Gets or sets Operation\r\nThe localized friendly name for the operation, as it should be shown to the user. \r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies."
          type: string
        description:
          description: "Gets or sets Description\r\nThe localized friendly description for the operation, as it should be shown to the user. \r\nIt should be thorough, yet concise – it will be used in tool tips and detailed views."
          type: string
    AvailableProviderOperationProperties:
      description: Class represents Properties in AvailableProviderOperations
      type: object
      properties: {}
    AvailableProviderOperations:
      description: Class for set of operations used for discovery of available provider operations.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/AvailableProviderOperation'
          x-ms-identifiers:
            - name
        nextLink:
          description: The NextLink.
          type: string
    Backup:
      description: The backup.
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/BackupProperties'
          description: Properties of backup
          x-ms-client-flatten: true
      type: object
    BackupElement:
      description: Class represents BackupElement
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/BackupElementProperties'
          description: The Properties of backup element
          x-ms-client-flatten: true
      type: object
    BackupElementProperties:
      description: The backup element properties
      required:
        - sizeInBytes
        - endpointName
        - dataPolicy
      type: object
      properties:
        sizeInBytes:
          format: int64
          description: The size in bytes.
          type: integer
        endpointName:
          description: The name of the endpoint.
          type: string
        dataPolicy:
          description: The data policy of backed up endpoint.
          enum:
            - Invalid
            - Local
            - Tiered
            - Cloud
          type: string
          x-ms-enum:
            name: DataPolicy
            modelAsString: false
    BackupFilter:
      description: Backup OData filter class
      type: object
      properties:
        initiatedBy:
          description: Gets or sets InitiatedBy
          enum:
            - Manual
            - Scheduled
          type: string
          x-ms-enum:
            name: InitiatedBy
            modelAsString: false
        createdTime:
          format: date-time
          description: Gets or sets CreatedTime
          type: string
    BackupList:
      description: Collection of backups
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextLink:
          description: The NextLink.
          type: string
    BackupProperties:
      description: Class represents Backup properties
      required:
        - sizeInBytes
        - initiatedBy
        - deviceId
        - elements
      type: object
      properties:
        targetId:
          description: The path id of the target FileServer or IscsiServer for which the backup was taken.
          type: string
        targetType:
          description: Type of target, FileServer or IscsiServer
          type: string
        sizeInBytes:
          format: int64
          description: The backup size in bytes.
          type: integer
        createdTime:
          format: date-time
          description: The time when the backup was created.
          type: string
        expirationTime:
          format: date-time
          description: The time when the backup will expire.
          type: string
        initiatedBy:
          description: Indicates how the backup was initiated "Manual | Scheduled".
          enum:
            - Manual
            - Scheduled
          type: string
          x-ms-enum:
            name: InitiatedBy
            modelAsString: false
        deviceId:
          description: The Device Identifier.
          type: string
        elements:
          description: The backup elements.
          type: array
          items:
            $ref: '#/components/schemas/BackupElement'
    BackupScheduleGroup:
      description: The Backup Schedule Group
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/BackupScheduleGroupProperties'
          description: Properties of BackupScheduleGroup
          x-ms-client-flatten: true
      type: object
    BackupScheduleGroupList:
      description: The list response of backup schedule groups
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/BackupScheduleGroup'
    BackupScheduleGroupProperties:
      description: The Backup Schedule Group Properties
      required:
        - startTime
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/Time'
          description: The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
    BaseModel:
      description: Base class for models
      type: object
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
    ChapProperties:
      description: Chap properties
      required:
        - password
      type: object
      properties:
        password:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The chap password.
    ChapSettings:
      description: Challenge-Handshake Authentication Protocol (CHAP) setting
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ChapProperties'
          description: Chap properties
          x-ms-client-flatten: true
      type: object
    ChapSettingsList:
      description: Collection of Chap setting entities
      required:
        - value
      type: object
      properties:
        value:
          description: The chap settings entity collection
          type: array
          items:
            $ref: '#/components/schemas/ChapSettings'
    ClearAlertRequest:
      description: Request for clearing the alert
      required:
        - alerts
      type: object
      properties:
        resolutionMessage:
          description: Resolution message while clearing the request
          type: string
        alerts:
          description: List of alert Ids to be cleared
          type: array
          items:
            type: string
    CloneRequest:
      description: Clone Job Request Model.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/CloneRequestProperties'
          description: CloneJob Properties are encapsulated in this object.
          x-ms-client-flatten: true
      type: object
    CloneRequestProperties:
      description: Properties of CloneRequest
      required:
        - targetDeviceId
        - targetAccessPointId
        - newEndpointName
      type: object
      properties:
        targetDeviceId:
          description: DeviceId of the device which will act as the Clone target
          type: string
        targetAccessPointId:
          description: Access point Id on which clone job will performed.
          type: string
        newEndpointName:
          description: Name of new endpoint which will created as part of clone job.
          type: string
        share:
          $ref: '#/components/schemas/FileShare'
          description: Share Object.
        disk:
          $ref: '#/components/schemas/ISCSIDisk'
          description: Disk Object
    Device:
      description: Represents a StorSimple device object along with its properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DeviceProperties'
          description: Collection of properties for the device
          x-ms-client-flatten: true
      type: object
    DeviceDetails:
      description: Class containing more granular details about the device
      type: object
      properties:
        endpointCount:
          format: int32
          description: Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes on IscsiServer)
          type: integer
        totalStorageInBytes:
          format: int64
          description: Total storage available on the device in bytes.
          type: integer
        totalLocalStorageInBytes:
          format: int64
          description: Total local storage capacity in device in bytes.
          type: integer
        provisionedStorageInBytes:
          format: int64
          description: Storage in bytes that has been provisioned on the device including both local and cloud
          type: integer
        provisionedLocalStorageInBytes:
          format: int64
          description: Storage in bytes that has been provisioned locally on the device
          type: integer
        usingStorageInBytes:
          format: int64
          description: Storage that is being currently used in bytes including both local and cloud
          type: integer
        usingLocalStorageInBytes:
          format: int64
          description: Local Storage that is being currently used in bytes
          type: integer
        totalBackupSizeInBytes:
          format: int64
          description: Total size taken up by backups in bytes
          type: integer
        availableStorageInBytes:
          format: int64
          description: Total pending available storage on the device in bytes
          type: integer
        availableLocalStorageInBytes:
          format: int64
          description: Local pending storage available on the device in bytes
          type: integer
    DeviceList:
      description: Collection of Devices
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Device'
    DevicePatch:
      description: Class that represents the Input for the PATCH call on Device. Currently the only patchable property on device is "DeviceDescription"
      type: object
      properties:
        deviceDescription:
          description: Short description given for the device
          type: string
    DeviceProperties:
      description: Encases all the properties of the Device
      type: object
      properties:
        activationTime:
          format: date-time
          description: The UTC time at which the device was activated
          type: string
        allowedDeviceOperations:
          description: Operations that are allowed on the device based on its current state
          type: array
          items:
            enum:
              - None
              - Delete
              - DeleteWithWarning
              - DRSource
              - DRTarget
              - Browsable
              - ReadOnlyForDR
              - Deactivate
            type: string
            x-ms-enum:
              name: DeviceOperation
              modelAsString: false
        culture:
          description: 'Language culture setting on the device. For eg: "en-US"'
          type: string
        deviceCapabilities:
          description: Device can be configured either as FileServer or IscsiServer
          type: array
          items:
            enum:
              - Invalid
              - FileServer
              - IscsiServer
            type: string
            x-ms-enum:
              name: SupportedDeviceCapabilities
              modelAsString: false
        deviceDescription:
          description: Short description given for the device
          type: string
        domainName:
          description: Fully qualified name of the domain to which the device is attached
          type: string
        deviceSoftwareVersion:
          description: Version number of the software running on the device
          type: string
        friendlySoftwareName:
          description: Friendly name for the software version
          type: string
        deviceConfigurationStatus:
          description: '"Complete" if the device has been successfully registered as File/IscsiServer and the creation of share/volume is complete, "Pending" if the device is only registered but the creation of share/volume is complete is still pending'
          enum:
            - Complete
            - Pending
          type: string
          x-ms-enum:
            name: DeviceConfigurationStatus
            modelAsString: false
        modelDescription:
          description: Name of the device model
          type: string
        status:
          description: Current status of the device
          enum:
            - Unknown
            - Online
            - Offline
            - RequiresAttention
            - MaintenanceMode
            - Creating
            - Provisioning
            - Deleted
            - ReadyToSetup
            - Deactivated
            - Deactivating
          type: string
          x-ms-enum:
            name: DeviceStatus
            modelAsString: false
        type:
          description: Type of the device
          enum:
            - Invalid
            - Appliance
            - VirtualAppliance
            - Series9000OnPremVirtualAppliance
            - Series9000VirtualAppliance
            - Series9000PhysicalAppliance
          type: string
          x-ms-enum:
            name: DeviceType
            modelAsString: false
        details:
          $ref: '#/components/schemas/DeviceDetails'
          description: subclass containing more storage-related information about the device. This field will be populated only if the get call is made with $expand = details.
    EncryptionSettings:
      description: The EncryptionSettings
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/EncryptionSettingsProperties'
          description: Properties of the EncryptionSettings.
          x-ms-client-flatten: true
      type: object
    EncryptionSettingsProperties:
      description: The properties of EncryptionSettings
      required:
        - encryptionStatus
        - keyRolloverStatus
      type: object
      properties:
        encryptionStatus:
          description: The encryption status which indicates if encryption is enabled or not.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: false
        keyRolloverStatus:
          description: The key rollover status which indicates if key rollover is required or not. If secrets encryption has been upgraded, then it requires key rollover.
          enum:
            - Required
            - NotRequired
          type: string
          x-ms-enum:
            name: KeyRolloverStatus
            modelAsString: false
    Error:
      required:
        - errorCode
        - message
      type: object
      properties:
        errorCode:
          type: string
        message:
          $ref: '#/components/schemas/Message'
        values:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          x-ms-identifiers:
            - key
    FailoverRequest:
      description: The Failover request object.
      type: object
      properties:
        accesspointIds:
          type: array
          items:
            type: string
        targetDeviceId:
          type: string
        skipValidation:
          type: boolean
        keepSourceDevice:
          type: boolean
    FileServer:
      description: The file server.
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/FileServerProperties'
          description: The properties.
          x-ms-client-flatten: true
      type: object
    FileServerList:
      description: Collection of file servers
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/FileServer'
    FileServerProperties:
      description: The file server properties.
      required:
        - domainName
        - storageDomainId
        - backupScheduleGroupId
      type: object
      properties:
        domainName:
          description: Domain of the file server
          type: string
        storageDomainId:
          description: The storage domain id.
          type: string
        backupScheduleGroupId:
          description: The backup policy id.
          type: string
        description:
          description: The description of the file server
          type: string
    FileShare:
      description: The File Share.
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/FileShareProperties'
          description: The properties.
          x-ms-client-flatten: true
      type: object
    FileShareList:
      description: Collection of file shares
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/FileShare'
    FileShareProperties:
      description: The File Share.
      required:
        - shareStatus
        - dataPolicy
        - adminUser
        - provisionedCapacityInBytes
        - monitoringStatus
      type: object
      properties:
        description:
          description: Description for file share
          type: string
        shareStatus:
          description: The Share Status
          enum:
            - Online
            - Offline
          type: string
          x-ms-enum:
            name: ShareStatus
            modelAsString: false
        dataPolicy:
          description: The data policy
          enum:
            - Invalid
            - Local
            - Tiered
            - Cloud
          type: string
          x-ms-enum:
            name: DataPolicy
            modelAsString: false
        adminUser:
          description: 'The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.'
          type: string
        provisionedCapacityInBytes:
          format: int64
          description: The total provisioned capacity in Bytes
          type: integer
        usedCapacityInBytes:
          format: int64
          description: The used capacity in Bytes.
          type: integer
          readOnly: true
        localUsedCapacityInBytes:
          format: int64
          description: The local used capacity in Bytes.
          type: integer
          readOnly: true
        monitoringStatus:
          description: The monitoring status
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: MonitoringStatus
            modelAsString: false
    IPConfig:
      description: Details related to the IP address configuration
      required:
        - ipAddress
        - gateway
      type: object
      properties:
        ipAddress:
          description: The IP address of the network adapter, either ipv4 or ipv6.
          type: string
        prefixLength:
          format: int32
          description: The prefix length of the network adapter.
          type: integer
        gateway:
          description: The gateway of the network adapter.
          type: string
    ISCSIDisk:
      description: The iSCSI disk.
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ISCSIDiskProperties'
          description: The properties.
          x-ms-client-flatten: true
      type: object
    ISCSIDiskList:
      description: Collection of Iscsi disk
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/ISCSIDisk'
    ISCSIDiskProperties:
      description: The iSCSI disk properties.
      required:
        - diskStatus
        - accessControlRecords
        - dataPolicy
        - provisionedCapacityInBytes
        - monitoringStatus
      type: object
      properties:
        description:
          description: The description.
          type: string
        diskStatus:
          description: The disk status.
          enum:
            - Online
            - Offline
          type: string
          x-ms-enum:
            name: DiskStatus
            modelAsString: false
        accessControlRecords:
          description: The access control records.
          type: array
          items:
            type: string
        dataPolicy:
          description: The data policy.
          enum:
            - Invalid
            - Local
            - Tiered
            - Cloud
          type: string
          x-ms-enum:
            name: DataPolicy
            modelAsString: false
        provisionedCapacityInBytes:
          format: int64
          description: The provisioned capacity in bytes.
          type: integer
        usedCapacityInBytes:
          format: int64
          description: The used capacity in bytes.
          type: integer
          readOnly: true
        localUsedCapacityInBytes:
          format: int64
          description: The local used capacity in bytes.
          type: integer
          readOnly: true
        monitoringStatus:
          description: The monitoring.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: MonitoringStatus
            modelAsString: false
    ISCSIServer:
      description: The iSCSI server.
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ISCSIServerProperties'
          description: The properties.
          x-ms-client-flatten: true
      type: object
    ISCSIServerList:
      description: Collection of Iscsi servers
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/ISCSIServer'
    ISCSIServerProperties:
      description: The iSCSI server properties.
      required:
        - storageDomainId
        - backupScheduleGroupId
      type: object
      properties:
        storageDomainId:
          description: The storage domain id.
          type: string
        backupScheduleGroupId:
          description: The backup policy id.
          type: string
        description:
          description: The description.
          type: string
        chapId:
          description: The chap id.
          type: string
        reverseChapId:
          description: The reverse chap id.
          type: string
    Item:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Job:
      description: The Job.
      required:
        - status
        - percentComplete
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        status:
          description: Current status of the job
          enum:
            - Invalid
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Paused
            - Scheduled
          type: string
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        startTime:
          format: date-time
          description: The UTC time at which the job was started
          type: string
        endTime:
          format: date-time
          description: The UTC time at which the job completed
          type: string
        percentComplete:
          format: int32
          description: The percentage of the job that is already complete
          type: integer
        error:
          $ref: '#/components/schemas/JobErrorDetails'
          description: The Error details.
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: Other properties of the job
          x-ms-client-flatten: true
      type: object
    JobErrorDetails:
      description: The job error information containing List of JobErrorItem.
      required:
        - code
        - message
      type: object
      properties:
        errorDetails:
          description: The error details.
          type: array
          items:
            $ref: '#/components/schemas/JobErrorItem'
          x-ms-identifiers: []
        code:
          description: The code intended for programmatic access
          type: string
        message:
          description: The message intended to describe the error in detail
          type: string
    JobErrorItem:
      description: The job error items.
      required:
        - code
        - message
      type: object
      properties:
        recommendations:
          description: The recommended actions.
          type: array
          items:
            type: string
        code:
          description: The code intended for programmatic access
          type: string
        message:
          description: The message intended to describe the error in detail
          type: string
    JobFilter:
      description: Filters that can be specified for the job
      required:
        - jobType
        - status
      type: object
      properties:
        jobType:
          description: The job type.
          enum:
            - Backup
            - Clone
            - Failover
            - DownloadUpdates
            - InstallUpdates
          type: string
          x-ms-enum:
            name: JobType
            modelAsString: false
        status:
          description: The job status.
          enum:
            - Invalid
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Paused
            - Scheduled
          type: string
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        startTime:
          format: date-time
          description: The start time of the job.
          type: string
    JobList:
      description: Collection of jobs
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Job'
        nextLink:
          description: The NextLink.
          type: string
    JobProperties:
      description: properties for the job
      required:
        - jobType
      type: object
      properties:
        jobType:
          description: Type of the job
          enum:
            - Backup
            - Clone
            - Failover
            - DownloadUpdates
            - InstallUpdates
          type: string
          x-ms-enum:
            name: JobType
            modelAsString: false
        targetId:
          description: Id of the object that is created by the job
          type: string
        entityId:
          description: The entity identifier for which the job ran.
          type: string
        entityType:
          description: The entity type for which the job ran.
          type: string
        jobStages:
          description: The job stages.
          type: array
          items:
            $ref: '#/components/schemas/JobStage'
          x-ms-identifiers: []
        deviceId:
          description: The device id in which the job is currently running
          type: string
        isCancellable:
          description: Represents whether the job is cancellable or not
          type: boolean
        stats:
          $ref: '#/components/schemas/JobStats'
          description: stats properties for the job
        targetType:
          description: The target type of the backup.
          enum:
            - FileServer
            - DiskServer
          type: string
          x-ms-enum:
            name: TargetType
            modelAsString: false
        sourceDeviceId:
          description: The source device identifier of the failover job.
          type: string
        backupPointInTime:
          format: date-time
          description: The time of the backup used for the failover.
          type: string
        downloadProgress:
          $ref: '#/components/schemas/UpdateDownloadProgress'
          description: The download progress.
        installProgress:
          $ref: '#/components/schemas/UpdateInstallProgress'
          description: The install progress.
    JobStage:
      description: Contains details about the multiple job stages of a job
      required:
        - stageStatus
      type: object
      properties:
        message:
          description: The message of the job stage.
          type: string
        stageStatus:
          description: The stage status.
          enum:
            - Invalid
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Paused
            - Scheduled
          type: string
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        detail:
          description: The details of the stage.
          type: string
        errorCode:
          description: The error code of the stage if any.
          type: string
    JobStats:
      description: Stats that are available for all jobs in common
      type: object
      properties:
        completedWorkItemCount:
          format: int32
          description: Completed work item count.
          type: integer
        totalWorkItemCount:
          format: int32
          description: Total work item count.
          type: integer
        estimatedTimeRemaining:
          format: int32
          description: The estimated time remaining.
          type: integer
    Manager:
      description: The StorSimple Manager
      properties:
        id:
          description: The Resource Id
          type: string
          readOnly: true
        name:
          description: The Resource Name
          type: string
          readOnly: true
        type:
          description: The Resource type
          type: string
          readOnly: true
        location:
          description: The Geo location of the Manager
          type: string
        tags:
          description: Tags attached to the Manager
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ManagerProperties'
          description: List of properties of the Manager
          x-ms-client-flatten: true
        etag:
          description: ETag of the Manager
          type: string
      type: object
    ManagerExtendedInfo:
      description: The extended info of the manager.
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ManagerExtendedInfoProperties'
          description: The extended info properties.
          x-ms-client-flatten: true
        etag:
          description: ETag of the Resource
          type: string
      type: object
    ManagerExtendedInfoProperties:
      description: Properties of the ManagerExtendedInfo
      required:
        - integrityKey
        - algorithm
      type: object
      properties:
        version:
          description: Represents the version of the ExtendedInfo object being persisted
          type: string
        integrityKey:
          description: Represents the CIK of the resource
          type: string
        encryptionKey:
          description: Represents the CEK of the resource
          type: string
        encryptionKeyThumbprint:
          description: Represents the Cert thumbprint that was used to encrypt the CEK
          type: string
        portalCertificateThumbprint:
          description: Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
          type: string
        algorithm:
          description: Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format. AlgorithmName - if encryption is used
          type: string
    ManagerIntrinsicSettings:
      description: Intrinsic settings which refers to the type of the StorSimple manager
      required:
        - type
      type: object
      properties:
        type:
          description: Refers to the type of the StorSimple Manager
          enum:
            - GardaV1
            - HelsinkiV1
          type: string
          x-ms-enum:
            name: ManagerType
            modelAsString: false
    ManagerList:
      description: List of StorSimple Managers under a particular resourceGroup
      required:
        - value
      type: object
      properties:
        value:
          description: List of Managers
          type: array
          items:
            $ref: '#/components/schemas/Manager'
    ManagerPatch:
      description: The StorSimple Manager patch.
      type: object
      properties:
        tags:
          description: The tags attached to the StorSimple Manager.
          type: object
          additionalProperties:
            type: string
    ManagerProperties:
      description: The properties of the Manager
      type: object
      properties:
        cisIntrinsicSettings:
          $ref: '#/components/schemas/ManagerIntrinsicSettings'
          description: Specifies if the Manager is Garda or Helsinki
        sku:
          $ref: '#/components/schemas/ManagerSku'
          description: Specifies the Sku
        provisioningState:
          description: Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created
          type: string
          readOnly: true
    ManagerSku:
      description: The Sku.
      required:
        - name
      type: object
      properties:
        name:
          description: Refers to the sku name which should be "Standard"
          enum:
            - Standard
          type: string
          x-ms-enum:
            name: ManagerSkuType
            modelAsString: false
    Message:
      type: object
      properties:
        language:
          type: string
        value:
          type: string
    MetricAvailablity:
      description: Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain
      required:
        - timeGrain
        - retention
      type: object
      properties:
        timeGrain:
          description: The time grain, specifies the aggregation interval for the metric.
          type: string
        retention:
          description: The retention period for the metric at the specified timegrain
          type: string
    MetricData:
      description: The metric data.
      required:
        - timeStamp
        - sum
        - count
        - average
        - minimum
        - maximum
      type: object
      properties:
        timeStamp:
          format: date-time
          description: The time when the metric data is fetched
          type: string
        sum:
          format: double
          description: The sum of all the samples available in the given instance of time for the specific metric data
          type: number
        count:
          format: int32
          description: The count of samples of the metric data available for the given instance
          type: integer
        average:
          format: double
          description: The average of all sample for the given instance
          type: number
        minimum:
          format: double
          description: The minimum of all samples available
          type: number
        maximum:
          format: double
          description: The maximum of all samples available
          type: number
    MetricDefinition:
      description: Monitoring metric definition represents the metadata of the metrics.
      required:
        - name
        - unit
        - primaryAggregationType
        - resourceId
        - metricAvailabilities
        - dimensions
        - type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MetricName'
          description: The metric name
        unit:
          description: The metric unit
          enum:
            - Bytes
            - BytesPerSecond
            - Count
            - CountPerSecond
            - Percent
            - Seconds
          type: string
          x-ms-enum:
            name: MetricUnit
            modelAsString: false
        primaryAggregationType:
          description: The metric aggregation type
          enum:
            - Average
            - Last
            - Maximum
            - Minimum
            - None
            - Total
          type: string
          x-ms-enum:
            name: MetricAggregationType
            modelAsString: false
        resourceId:
          description: The metric source id
          type: string
        metricAvailabilities:
          description: The available metric granularities
          type: array
          items:
            $ref: '#/components/schemas/MetricAvailablity'
          x-ms-identifiers:
            - timeGrain
        dimensions:
          description: The supported dimensions
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
        type:
          description: The metric definition type
          type: string
    MetricDefinitionList:
      description: List of metric definition
      required:
        - value
      type: object
      properties:
        value:
          description: The list of metric definition
          type: array
          items:
            $ref: '#/components/schemas/MetricDefinition'
          x-ms-identifiers:
            - name
    MetricDimension:
      description: Metric dimension
      required:
        - name
        - value
      type: object
      properties:
        name:
          description: Metric dimension name
          type: string
        value:
          description: Metric dimension values
          type: string
    MetricFilter:
      description: class representing the filters to be passed while fetching metrics
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MetricNameFilter'
          description: filter for name property
        startTime:
          format: date-time
          description: starttime for fetching metrics
          type: string
        endTime:
          format: date-time
          description: endtime for fetching metrics
          type: string
        timeGrain:
          description: timegrain of the metrics
          type: string
    MetricList:
      description: Collection of metrics
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Metrics'
          x-ms-identifiers: []
    MetricName:
      description: The name of the metric
      required:
        - value
        - localizedValue
      type: object
      properties:
        value:
          description: Name of the metric
          type: string
        localizedValue:
          description: Localized name of the metric
          type: string
    MetricNameFilter:
      description: Class representing the name filter to be passed while fetching metrics
      type: object
      properties:
        value:
          description: The value.
          type: string
    Metrics:
      description: Monitoring metric
      required:
        - resourceId
        - startTime
        - endTime
        - timeGrain
        - primaryAggregation
        - name
        - dimensions
        - unit
        - type
        - values
      type: object
      properties:
        resourceId:
          description: The id of metric source
          type: string
        startTime:
          format: date-time
          description: The metric start time
          type: string
        endTime:
          format: date-time
          description: The metric end time
          type: string
        timeGrain:
          description: The time grain, time grain indicates frequency of the metric data
          type: string
        primaryAggregation:
          description: The metric aggregation type
          enum:
            - Average
            - Last
            - Maximum
            - Minimum
            - None
            - Total
          type: string
          x-ms-enum:
            name: MetricAggregationType
            modelAsString: false
        name:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metrics
        dimensions:
          description: The Metric dimension which indicates the source of the metric
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
        unit:
          description: The unit of the metric data
          enum:
            - Bytes
            - BytesPerSecond
            - Count
            - CountPerSecond
            - Percent
            - Seconds
          type: string
          x-ms-enum:
            name: MetricUnit
            modelAsString: false
        type:
          description: The Type of the metric data
          type: string
        values:
          description: The metric data
          type: array
          items:
            $ref: '#/components/schemas/MetricData'
          x-ms-identifiers:
            - timeStamp
    NetworkAdapter:
      description: Represents a networkAdapter in a particular node.
      required:
        - networkAdapterName
        - dhcpStatus
      type: object
      properties:
        networkAdapterName:
          description: The name of the network adapter.
          type: string
        iPv4Info:
          $ref: '#/components/schemas/IPConfig'
          description: The ipv4 configuration of the network adapter.
        iPv6Info:
          $ref: '#/components/schemas/IPConfig'
          description: The ipv6 configuration of the network adapter.
        dhcpStatus:
          description: Represents state of DHCP.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: DhcpStatus
            modelAsString: false
        linkSpeed:
          format: int64
          description: The speed of the network adapter.
          type: integer
    NetworkSettings:
      description: The NetworkSettings of a device
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/NetworkSettingsProperties'
          description: Properties of the given NetworkSettings.
          x-ms-client-flatten: true
      type: object
    NetworkSettingsProperties:
      description: The properties of NetworkSettings
      required:
        - primaryDnsServer
        - nodeNetworks
      type: object
      properties:
        primaryDnsServer:
          description: The Primary DNS server for the device
          type: string
        secondaryDnsServer:
          description: The secondary DNS server for the device
          type: string
        nodeNetworks:
          description: The NetworkAdapters under each node of the device.
          type: array
          items:
            $ref: '#/components/schemas/NodeNetwork'
          x-ms-identifiers: []
    NodeNetwork:
      description: Represents a single node in a device.
      required:
        - networkAdapters
      type: object
      properties:
        networkAdapters:
          description: The array of network adapters in the node.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAdapter'
          x-ms-identifiers:
            - networkAdapterName
    RawCertificateData:
      description: Raw Certificate Data From IDM
      required:
        - certificate
      type: object
      properties:
        authType:
          description: Specify the Authentication type
          enum:
            - Invalid
            - AccessControlService
            - AzureActiveDirectory
          type: string
          x-ms-enum:
            name: AuthType
            modelAsString: false
        certificate:
          description: Gets or sets the base64 encoded certificate raw data string
          type: string
    Resource:
      description: The Azure Resource.
      required:
        - location
      type: object
      properties:
        id:
          description: The Resource Id
          type: string
          readOnly: true
        name:
          description: The Resource Name
          type: string
          readOnly: true
        type:
          description: The Resource type
          type: string
          readOnly: true
        location:
          description: The Geo location of the Manager
          type: string
        tags:
          description: Tags attached to the Manager
          type: object
          additionalProperties:
            type: string
      x-ms-azure-resource: true
    ResourceCertificateAndAADDetails:
      description: Resource Certificate And AAD Details from IDM
      required:
        - certificate
        - resourceId
        - aadAuthority
        - aadTenantId
        - servicePrincipalClientId
        - servicePrincipalObjectId
        - azureManagementEndpointAudience
        - subject
        - validFrom
        - validTo
        - thumbprint
        - friendlyName
        - issuer
      type: object
      properties:
        authType:
          description: Specify the Authentication type
          enum:
            - Invalid
            - AccessControlService
            - AzureActiveDirectory
          type: string
          x-ms-enum:
            name: AuthType
            modelAsString: false
        certificate:
          description: Gets or sets the base64 encoded certificate raw data string
          type: string
        resourceId:
          format: int64
          description: Gets or Sets the ResourceId
          type: integer
        aadAuthority:
          description: AAD tenant authority
          type: string
        aadTenantId:
          description: AAD tenant Id
          type: string
        servicePrincipalClientId:
          description: AAD service principal clientId
          type: string
        servicePrincipalObjectId:
          description: AAD service principal ObjectId
          type: string
        azureManagementEndpointAudience:
          description: Azure Management Endpoint Audience
          type: string
        subject:
          description: Certificate Subject Name
          type: string
        validFrom:
          format: date-time
          description: Certificate Validity start Date time
          type: string
        validTo:
          format: date-time
          description: Certificate Validity End Date time
          type: string
        thumbprint:
          description: Certificate thumbprint
          type: string
        friendlyName:
          description: Certificate friendly name
          type: string
        issuer:
          description: Certificate issuer
          type: string
    SecuritySettings:
      description: The SecuritySettings of a device
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/SecuritySettingsProperties'
          description: Properties of the SecuritySettings.
          x-ms-client-flatten: true
      type: object
    SecuritySettingsProperties:
      description: The properties of SecuritySettings
      required:
        - deviceAdminPassword
      type: object
      properties:
        deviceAdminPassword:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: 'Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to log into the  local web UI of the device. Actual password could have at least 8 characters that are a combination of  uppercase, lowercase, numeric, and special characters'
    SendTestAlertEmailRequest:
      description: Request for sending test alert email
      required:
        - emailList
      type: object
      properties:
        emailList:
          description: List of emails to send the test alerts
          type: array
          items:
            type: string
    StorageAccountCredential:
      description: The storage account credential
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/StorageAccountCredentialProperties'
          description: Credential properties
          x-ms-client-flatten: true
      type: object
    StorageAccountCredentialList:
      description: Collection of Storage account credential entities
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/StorageAccountCredential'
    StorageAccountCredentialProperties:
      description: Storage account properties
      required:
        - cloudType
        - endPoint
        - login
        - enableSSL
      type: object
      properties:
        cloudType:
          description: The cloud service provider
          enum:
            - Azure
            - S3
            - S3_RRS
            - OpenStack
            - HP
          type: string
          x-ms-enum:
            name: CloudType
            modelAsString: false
        endPoint:
          description: The storage endpoint
          type: string
        login:
          description: The storage account login
          type: string
        location:
          description: The storage account's geo location
          type: string
        enableSSL:
          description: SSL needs to be enabled or not
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: SslStatus
            modelAsString: false
        accessKey:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The details of the storage account password
    StorageDomain:
      description: The storage domain.
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/StorageDomainProperties'
          description: The properties.
          x-ms-client-flatten: true
      type: object
    StorageDomainList:
      description: Collection of storage domains
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/StorageDomain'
    StorageDomainProperties:
      description: The storage domain properties.
      required:
        - storageAccountCredentialIds
        - encryptionStatus
      type: object
      properties:
        storageAccountCredentialIds:
          description: The storage account credentials.
          type: array
          items:
            type: string
        encryptionKey:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The encryption key used to encrypt the data. This is a user secret.
        encryptionStatus:
          description: The encryption status "Enabled | Disabled".
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: false
    SymmetricEncryptedSecret:
      description: This class can be used as the Type for any secret entity represented as Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case, "Value" is a secret and the "valueThumbprint" represents the certificate thumbprint of the value. The algorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
      required:
        - value
        - encryptionAlgorithm
      type: object
      properties:
        value:
          description: The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none
          type: string
        valueCertificateThumbprint:
          description: Thumbprint cert that was used to encrypt "Value"
          type: string
        encryptionAlgorithm:
          description: Algorithm used to encrypt "Value"
          enum:
            - None
            - AES256
            - RSAES_PKCS1_v_1_5
          type: string
          x-ms-enum:
            name: EncryptionAlgorithm
            modelAsString: false
    Time:
      description: The Time.
      required:
        - hour
        - minute
      type: object
      properties:
        hour:
          format: int32
          description: The hour.
          maximum: 23
          minimum: 0
          type: integer
        minute:
          format: int32
          description: The minute.
          maximum: 59
          minimum: 0
          type: integer
    TimeSettings:
      description: The TimeSettings of a device
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/TimeSettingsProperties'
          description: Properties of the TimeSettings.
          x-ms-client-flatten: true
      type: object
    TimeSettingsProperties:
      description: The properties of TimeSettings
      required:
        - timeZone
        - primaryTimeServer
      type: object
      properties:
        timeZone:
          description: The timezone of device, like '(UTC -06:00) Central America'
          type: string
        primaryTimeServer:
          description: The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.
          type: string
        secondaryTimeServer:
          description: The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.
          type: string
    UpdateDownloadProgress:
      description: details available during the download
      type: object
      properties:
        downloadPhase:
          description: The download phase.
          enum:
            - Unknown
            - Initializing
            - Downloading
            - Verifying
          type: string
          x-ms-enum:
            name: DownloadPhase
            modelAsString: false
        percentComplete:
          format: int32
          description: Percentage of completion.
          type: integer
        totalBytesToDownload:
          format: double
          description: Total bytes to download.
          type: number
        totalBytesDownloaded:
          format: double
          description: Total bytes downloaded.
          type: number
        numberOfUpdatesToDownload:
          format: int32
          description: Number of updates to download.
          type: integer
        numberOfUpdatesDownloaded:
          format: int32
          description: Number of updates downloaded.
          type: integer
    UpdateInstallProgress:
      description: Class representing the progress during installation of updates
      type: object
      properties:
        percentComplete:
          format: int32
          description: Percentage of completion.
          type: integer
        numberOfUpdatesToInstall:
          format: int32
          description: Number of updates to install.
          type: integer
        numberOfUpdatesInstalled:
          format: int32
          description: Number of updates installed.
          type: integer
    Updates:
      description: The updates profile
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UpdatesProperties'
          description: Update properties.
          x-ms-client-flatten: true
      type: object
    UpdatesProperties:
      description: Properties of the update profile
      type: object
      properties:
        deviceVersion:
          description: The current Device version.
          type: string
        deviceLastScannedTime:
          format: date-time
          description: The last time when the device did an update scan.
          type: string
        regularUpdatesAvailable:
          description: Set to true if regular updates were detected for the current version of the device.
          type: boolean
        rebootRequiredForInstall:
          description: Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.
          type: boolean
        totalItemsPendingForDownload:
          format: int32
          description: The total number of items pending for download.
          type: integer
        totalItemsPendingForInstall:
          format: int32
          description: The total number of items pending for install.
          type: integer
        status:
          description: The current update operation.
          enum:
            - Idle
            - Scanning
            - Downloading
            - Installing
          type: string
          x-ms-enum:
            name: UpdateOperation
            modelAsString: false
        lastCompletedScanTime:
          format: date-time
          description: The time when the last scan job was completed (success|cancelled|failed) on the device.
          type: string
        lastCompletedDownloadJobTime:
          format: date-time
          description: The time when the last Download job was completed (success|cancelled|failed) on the device.
          type: string
        lastCompletedInstallJobTime:
          format: date-time
          description: The time when the last Install job was completed (success|cancelled|failed) on the device.
          type: string
        inProgressDownloadJobId:
          description: If a download is in progress, this field contains the JobId of that particular download job
          type: string
        inProgressInstallJobId:
          description: If an install is in progress, this field contains the JobId of that particular install job
          type: string
        inProgressScanStartedTime:
          format: date-time
          description: The time when the currently running scan (if any) started
          type: string
        inProgressDownloadJobStartedTime:
          format: date-time
          description: The time when the currently running download (if any) started
          type: string
        inProgressInstallJobStartedTime:
          format: date-time
          description: The time when the currently running install (if any) started
          type: string
    UploadCertificateRequest:
      description: Upload Certificate Request to IDM
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/RawCertificateData'
          x-ms-client-flatten: true
        contractVersion:
          description: Gets ContractVersion
          enum:
            - InvalidVersion
            - V2011_09
            - V2012_02
            - V2012_05
            - V2012_12
            - V2013_04
            - V2013_10
            - V2013_11
            - V2014_04
            - V2014_06
            - V2014_07
            - V2014_09
            - V2014_10
            - V2014_12
            - V2015_01
            - V2015_02
            - V2015_04
            - V2015_05
            - V2015_06
            - V2015_07
            - V2015_08
            - V2015_10
            - V2015_12
            - V2016_01
            - V2016_02
            - V2016_04
            - V2016_05
            - V2016_07
            - V2016_08
          type: string
          readOnly: true
          x-ms-enum:
            name: ContractVersions
            modelAsString: false
      type: object
    UploadCertificateResponse:
      description: Upload Certificate Response from IDM
      required:
        - properties
      properties:
        id:
          description: The identifier.
          type: string
          readOnly: true
        name:
          description: The name.
          type: string
          readOnly: true
        type:
          description: The type.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ResourceCertificateAndAADDetails'
          x-ms-client-flatten: true
      type: object
  x-stackQL-resources:
    managers:
      id: azure_extras.storsimple_1200_series.managers
      name: managers
      title: managers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorSimple~1managers?api-version=2016-10-01/get'
            operationId: Managers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers?api-version=2016-10-01/get'
            operationId: Managers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}?api-version=2016-10-01/get'
            operationId: Managers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Manager
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}?api-version=2016-10-01/put'
            operationId: Managers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Manager
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}?api-version=2016-10-01/delete'
            operationId: Managers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}?api-version=2016-10-01/patch'
            operationId: Managers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Manager
        upload_registration_certificate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1certificates~1{certificateName}?api-version=2016-10-01/put'
            operationId: Managers_UploadRegistrationCertificate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UploadCertificateResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers/methods/get'
          - $ref: '#/components/x-stackQL-resources/managers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/managers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/managers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/managers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managers/methods/delete'
    available_provider_operations:
      id: azure_extras.storsimple_1200_series.available_provider_operations
      name: available_provider_operations
      title: available_provider_operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StorSimple~1operations?api-version=2016-10-01/get'
            operationId: AvailableProviderOperations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableProviderOperations
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_provider_operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    access_control_records:
      id: azure_extras.storsimple_1200_series.access_control_records
      name: access_control_records
      title: access_control_records
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1accessControlRecords?api-version=2016-10-01/get'
            operationId: AccessControlRecords_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlRecordList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1accessControlRecords~1{accessControlRecordName}?api-version=2016-10-01/get'
            operationId: AccessControlRecords_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlRecord
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1accessControlRecords~1{accessControlRecordName}?api-version=2016-10-01/put'
            operationId: AccessControlRecords_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlRecord
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1accessControlRecords~1{accessControlRecordName}?api-version=2016-10-01/delete'
            operationId: AccessControlRecords_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_control_records/methods/get'
          - $ref: '#/components/x-stackQL-resources/access_control_records/methods/list_by_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_control_records/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_control_records/methods/delete'
    alerts:
      id: azure_extras.storsimple_1200_series.alerts
      name: alerts
      title: alerts
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1alerts?api-version=2016-10-01/get'
            operationId: Alerts_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AlertList
            objectKey: $.value
        clear:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1clearAlerts?api-version=2016-10-01/post'
            operationId: Alerts_Clear
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        send_test_email:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1sendTestAlertEmail?api-version=2016-10-01/post'
            operationId: Alerts_SendTestEmail
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/list_by_manager'
        insert: []
        update: []
        replace: []
        delete: []
    backups:
      id: azure_extras.storsimple_1200_series.backups
      name: backups
      title: backups
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1backups?api-version=2016-10-01/get'
            operationId: Backups_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupList
            objectKey: $.value
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backups?api-version=2016-10-01/get'
            operationId: Backups_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupList
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backups~1{backupName}?api-version=2016-10-01/delete'
            operationId: Backups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        clone:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backups~1{backupName}~1elements~1{elementName}~1clone?api-version=2016-10-01/post'
            operationId: Backups_Clone
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/list_by_device'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list_by_manager'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    devices:
      id: azure_extras.storsimple_1200_series.devices
      name: devices
      title: devices
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices?api-version=2016-10-01/get'
            operationId: Devices_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}?api-version=2016-10-01/get'
            operationId: Devices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Device
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}?api-version=2016-10-01/delete'
            operationId: Devices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}?api-version=2016-10-01/patch'
            operationId: Devices_Patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Device
        deactivate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1deactivate?api-version=2016-10-01/post'
            operationId: Devices_Deactivate
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        download_updates:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1download?api-version=2016-10-01/post'
            operationId: Devices_DownloadUpdates
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        failover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1failover?api-version=2016-10-01/post'
            operationId: Devices_Failover
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        install_updates:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1install?api-version=2016-10-01/post'
            operationId: Devices_InstallUpdates
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        scan_for_updates:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1scanForUpdates?api-version=2016-10-01/post'
            operationId: Devices_ScanForUpdates
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/devices/methods/list_by_manager'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/devices/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete'
    devices_alert_settings:
      id: azure_extras.storsimple_1200_series.devices_alert_settings
      name: devices_alert_settings
      title: devices_alert_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1alertSettings~1default?api-version=2016-10-01/get'
            operationId: DevicesAlertSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AlertSettings
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1alertSettings~1default?api-version=2016-10-01/put'
            operationId: DevicesAlertSettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AlertSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_alert_settings/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/devices_alert_settings/methods/create_or_update'
        update: []
        replace: []
        delete: []
    backup_schedule_groups:
      id: azure_extras.storsimple_1200_series.backup_schedule_groups
      name: backup_schedule_groups
      title: backup_schedule_groups
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupScheduleGroups?api-version=2016-10-01/get'
            operationId: BackupScheduleGroups_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupScheduleGroupList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupScheduleGroups~1{scheduleGroupName}?api-version=2016-10-01/get'
            operationId: BackupScheduleGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupScheduleGroup
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupScheduleGroups~1{scheduleGroupName}?api-version=2016-10-01/put'
            operationId: BackupScheduleGroups_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupScheduleGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupScheduleGroups~1{scheduleGroupName}?api-version=2016-10-01/delete'
            operationId: BackupScheduleGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_schedule_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_schedule_groups/methods/list_by_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_schedule_groups/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_schedule_groups/methods/delete'
    chap_settings:
      id: azure_extras.storsimple_1200_series.chap_settings
      name: chap_settings
      title: chap_settings
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1chapSettings?api-version=2016-10-01/get'
            operationId: ChapSettings_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ChapSettingsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1chapSettings~1{chapUserName}?api-version=2016-10-01/get'
            operationId: ChapSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ChapSettings
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1chapSettings~1{chapUserName}?api-version=2016-10-01/put'
            operationId: ChapSettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ChapSettings
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1chapSettings~1{chapUserName}?api-version=2016-10-01/delete'
            operationId: ChapSettings_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/chap_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/chap_settings/methods/list_by_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/chap_settings/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/chap_settings/methods/delete'
    iscsi_disks:
      id: azure_extras.storsimple_1200_series.iscsi_disks
      name: iscsi_disks
      title: iscsi_disks
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1disks?api-version=2016-10-01/get'
            operationId: IscsiDisks_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ISCSIDiskList
            objectKey: $.value
        list_by_iscsi_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1disks?api-version=2016-10-01/get'
            operationId: IscsiDisks_ListByIscsiServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ISCSIDiskList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1disks~1{diskName}?api-version=2016-10-01/get'
            operationId: IscsiDisks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ISCSIDisk
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1disks~1{diskName}?api-version=2016-10-01/put'
            operationId: IscsiDisks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ISCSIDisk
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1disks~1{diskName}?api-version=2016-10-01/delete'
            operationId: IscsiDisks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iscsi_disks/methods/get'
          - $ref: '#/components/x-stackQL-resources/iscsi_disks/methods/list_by_iscsi_server'
          - $ref: '#/components/x-stackQL-resources/iscsi_disks/methods/list_by_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/iscsi_disks/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/iscsi_disks/methods/delete'
    devices_failover_targets:
      id: azure_extras.storsimple_1200_series.devices_failover_targets
      name: devices_failover_targets
      title: devices_failover_targets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1failoverTargets?api-version=2016-10-01/get'
            operationId: DevicesFailoverTarget_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_failover_targets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    file_servers:
      id: azure_extras.storsimple_1200_series.file_servers
      name: file_servers
      title: file_servers
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers?api-version=2016-10-01/get'
            operationId: FileServers_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileServerList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}?api-version=2016-10-01/get'
            operationId: FileServers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileServer
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}?api-version=2016-10-01/put'
            operationId: FileServers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileServer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}?api-version=2016-10-01/delete'
            operationId: FileServers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        backup_now:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1backup?api-version=2016-10-01/post'
            operationId: FileServers_BackupNow
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1fileservers?api-version=2016-10-01/get'
            operationId: FileServers_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileServerList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/file_servers/methods/list_by_device'
          - $ref: '#/components/x-stackQL-resources/file_servers/methods/list_by_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/file_servers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/file_servers/methods/delete'
    file_servers_metrics:
      id: azure_extras.storsimple_1200_series.file_servers_metrics
      name: file_servers_metrics
      title: file_servers_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1metrics?api-version=2016-10-01/get'
            operationId: FileServersMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_servers_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    file_servers_metric_definitions:
      id: azure_extras.storsimple_1200_series.file_servers_metric_definitions
      name: file_servers_metric_definitions
      title: file_servers_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1metricsDefinitions?api-version=2016-10-01/get'
            operationId: FileServersMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_servers_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    file_shares:
      id: azure_extras.storsimple_1200_series.file_shares
      name: file_shares
      title: file_shares
      methods:
        list_by_file_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1shares?api-version=2016-10-01/get'
            operationId: FileShares_ListByFileServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileShareList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1shares~1{shareName}?api-version=2016-10-01/get'
            operationId: FileShares_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileShare
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1shares~1{shareName}?api-version=2016-10-01/put'
            operationId: FileShares_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileShare
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1shares~1{shareName}?api-version=2016-10-01/delete'
            operationId: FileShares_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1shares?api-version=2016-10-01/get'
            operationId: FileShares_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileShareList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/get'
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/list_by_file_server'
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/list_by_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/delete'
    file_shares_metrics:
      id: azure_extras.storsimple_1200_series.file_shares_metrics
      name: file_shares_metrics
      title: file_shares_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1shares~1{shareName}~1metrics?api-version=2016-10-01/get'
            operationId: FileSharesMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_shares_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    file_shares_metric_definitions:
      id: azure_extras.storsimple_1200_series.file_shares_metric_definitions
      name: file_shares_metric_definitions
      title: file_shares_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1fileservers~1{fileServerName}~1shares~1{shareName}~1metricsDefinitions?api-version=2016-10-01/get'
            operationId: FileSharesMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_shares_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iscsi_servers:
      id: azure_extras.storsimple_1200_series.iscsi_servers
      name: iscsi_servers
      title: iscsi_servers
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers?api-version=2016-10-01/get'
            operationId: IscsiServers_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ISCSIServerList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}?api-version=2016-10-01/get'
            operationId: IscsiServers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ISCSIServer
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}?api-version=2016-10-01/put'
            operationId: IscsiServers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ISCSIServer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}?api-version=2016-10-01/delete'
            operationId: IscsiServers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        backup_now:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1backup?api-version=2016-10-01/post'
            operationId: IscsiServers_BackupNow
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1iscsiservers?api-version=2016-10-01/get'
            operationId: IscsiServers_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ISCSIServerList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iscsi_servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/iscsi_servers/methods/list_by_device'
          - $ref: '#/components/x-stackQL-resources/iscsi_servers/methods/list_by_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/iscsi_servers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/iscsi_servers/methods/delete'
    iscsi_disks_metrics:
      id: azure_extras.storsimple_1200_series.iscsi_disks_metrics
      name: iscsi_disks_metrics
      title: iscsi_disks_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1disks~1{diskName}~1metrics?api-version=2016-10-01/get'
            operationId: IscsiDisksMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iscsi_disks_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iscsi_disks_metric_definitions:
      id: azure_extras.storsimple_1200_series.iscsi_disks_metric_definitions
      name: iscsi_disks_metric_definitions
      title: iscsi_disks_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1disks~1{diskName}~1metricsDefinitions?api-version=2016-10-01/get'
            operationId: IscsiDisksMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iscsi_disks_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iscsi_servers_metrics:
      id: azure_extras.storsimple_1200_series.iscsi_servers_metrics
      name: iscsi_servers_metrics
      title: iscsi_servers_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1metrics?api-version=2016-10-01/get'
            operationId: IscsiServersMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iscsi_servers_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iscsi_servers_metric_definitions:
      id: azure_extras.storsimple_1200_series.iscsi_servers_metric_definitions
      name: iscsi_servers_metric_definitions
      title: iscsi_servers_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1iscsiservers~1{iscsiServerName}~1metricsDefinitions?api-version=2016-10-01/get'
            operationId: IscsiServersMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iscsi_servers_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    jobs:
      id: azure_extras.storsimple_1200_series.jobs
      name: jobs
      title: jobs
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1jobs?api-version=2016-10-01/get'
            operationId: Jobs_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1jobs~1{jobName}?api-version=2016-10-01/get'
            operationId: Jobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1jobs?api-version=2016-10-01/get'
            operationId: Jobs_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_device'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_manager'
        insert: []
        update: []
        replace: []
        delete: []
    devices_metrics:
      id: azure_extras.storsimple_1200_series.devices_metrics
      name: devices_metrics
      title: devices_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1metrics?api-version=2016-10-01/get'
            operationId: DevicesMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    devices_metric_definitions:
      id: azure_extras.storsimple_1200_series.devices_metric_definitions
      name: devices_metric_definitions
      title: devices_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1metricsDefinitions?api-version=2016-10-01/get'
            operationId: DevicesMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    devices_network_settings:
      id: azure_extras.storsimple_1200_series.devices_network_settings
      name: devices_network_settings
      title: devices_network_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1networkSettings~1default?api-version=2016-10-01/get'
            operationId: DevicesNetworkSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_network_settings/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    devices_security_settings:
      id: azure_extras.storsimple_1200_series.devices_security_settings
      name: devices_security_settings
      title: devices_security_settings
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1securitySettings~1default~1update?api-version=2016-10-01/post'
            operationId: DevicesSecuritySettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/devices_security_settings/methods/create_or_update'
        update: []
        replace: []
        delete: []
    devices_time_settings:
      id: azure_extras.storsimple_1200_series.devices_time_settings
      name: devices_time_settings
      title: devices_time_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1timeSettings~1default?api-version=2016-10-01/get'
            operationId: DevicesTimeSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TimeSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_time_settings/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    devices_update_summaries:
      id: azure_extras.storsimple_1200_series.devices_update_summaries
      name: devices_update_summaries
      title: devices_update_summaries
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1updateSummary~1default?api-version=2016-10-01/get'
            operationId: DevicesUpdateSummary_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Updates
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_update_summaries/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managers_encryption_settings:
      id: azure_extras.storsimple_1200_series.managers_encryption_settings
      name: managers_encryption_settings
      title: managers_encryption_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1encryptionSettings~1default?api-version=2016-10-01/get'
            operationId: ManagersEncryptionSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EncryptionSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_encryption_settings/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managers_extended_info:
      id: azure_extras.storsimple_1200_series.managers_extended_info
      name: managers_extended_info
      title: managers_extended_info
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1extendedInformation~1vaultExtendedInfo?api-version=2016-10-01/get'
            operationId: ManagersExtendedInfo_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerExtendedInfo
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1extendedInformation~1vaultExtendedInfo?api-version=2016-10-01/put'
            operationId: ManagersExtendedInfo_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerExtendedInfo
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1extendedInformation~1vaultExtendedInfo?api-version=2016-10-01/delete'
            operationId: ManagersExtendedInfo_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1extendedInformation~1vaultExtendedInfo?api-version=2016-10-01/patch'
            operationId: ManagersExtendedInfo_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerExtendedInfo
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_extended_info/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/managers_extended_info/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/managers_extended_info/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managers_extended_info/methods/delete'
    managers_encryption_keys:
      id: azure_extras.storsimple_1200_series.managers_encryption_keys
      name: managers_encryption_keys
      title: managers_encryption_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1getEncryptionKey?api-version=2016-10-01/post'
            operationId: ManagersEncryptionKey_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SymmetricEncryptedSecret
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_encryption_keys/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managers_metrics:
      id: azure_extras.storsimple_1200_series.managers_metrics
      name: managers_metrics
      title: managers_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1metrics?api-version=2016-10-01/get'
            operationId: ManagersMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managers_metric_definitions:
      id: azure_extras.storsimple_1200_series.managers_metric_definitions
      name: managers_metric_definitions
      title: managers_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1metricsDefinitions?api-version=2016-10-01/get'
            operationId: ManagersMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    storage_account_credentials:
      id: azure_extras.storsimple_1200_series.storage_account_credentials
      name: storage_account_credentials
      title: storage_account_credentials
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageAccountCredentials?api-version=2016-10-01/get'
            operationId: StorageAccountCredentials_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredentialList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageAccountCredentials~1{credentialName}?api-version=2016-10-01/get'
            operationId: StorageAccountCredentials_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredential
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageAccountCredentials~1{credentialName}?api-version=2016-10-01/put'
            operationId: StorageAccountCredentials_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredential
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageAccountCredentials~1{credentialName}?api-version=2016-10-01/delete'
            operationId: StorageAccountCredentials_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/list_by_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/delete'
    storage_domains:
      id: azure_extras.storsimple_1200_series.storage_domains
      name: storage_domains
      title: storage_domains
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageDomains?api-version=2016-10-01/get'
            operationId: StorageDomains_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageDomainList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageDomains~1{storageDomainName}?api-version=2016-10-01/get'
            operationId: StorageDomains_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageDomain
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageDomains~1{storageDomainName}?api-version=2016-10-01/put'
            operationId: StorageDomains_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageDomain
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageDomains~1{storageDomainName}?api-version=2016-10-01/delete'
            operationId: StorageDomains_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_domains/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_domains/methods/list_by_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_domains/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_domains/methods/delete'
    vw_managers:
      id: azure_extras.storsimple_1200_series.vw_managers
      name: vw_managers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              etag as etag,
              JSON_EXTRACT(properties, '$.cisIntrinsicSettings') as "cis_intrinsic_settings",
              JSON_EXTRACT(properties, '$.sku') as "sku",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              managerName
              FROM azure_extras.storsimple_1200_series.managers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                etag as etag,
                json_extract_path_text(properties, '$.cisIntrinsicSettings') as "cis_intrinsic_settings",
                json_extract_path_text(properties, '$.sku') as "sku",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                managerName
                FROM azure_extras.storsimple_1200_series.managers
                WHERE subscriptionId = 'replace-me';
    vw_access_control_records:
      id: azure_extras.storsimple_1200_series.vw_access_control_records
      name: vw_access_control_records
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.initiatorName') as "initiator_name",
              subscriptionId,
              resourceGroupName,
              managerName,
              accessControlRecordName
              FROM azure_extras.storsimple_1200_series.access_control_records
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.initiatorName') as "initiator_name",
                subscriptionId,
                resourceGroupName,
                managerName,
                accessControlRecordName
                FROM azure_extras.storsimple_1200_series.access_control_records
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_devices:
      id: azure_extras.storsimple_1200_series.vw_devices
      name: vw_devices
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.activationTime') as "activation_time",
              JSON_EXTRACT(properties, '$.allowedDeviceOperations') as "allowed_device_operations",
              JSON_EXTRACT(properties, '$.culture') as "culture",
              JSON_EXTRACT(properties, '$.deviceCapabilities') as "device_capabilities",
              JSON_EXTRACT(properties, '$.deviceDescription') as "device_description",
              JSON_EXTRACT(properties, '$.domainName') as "domain_name",
              JSON_EXTRACT(properties, '$.deviceSoftwareVersion') as "device_software_version",
              JSON_EXTRACT(properties, '$.friendlySoftwareName') as "friendly_software_name",
              JSON_EXTRACT(properties, '$.deviceConfigurationStatus') as "device_configuration_status",
              JSON_EXTRACT(properties, '$.modelDescription') as "model_description",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.details') as "details",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_1200_series.devices
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.activationTime') as "activation_time",
                json_extract_path_text(properties, '$.allowedDeviceOperations') as "allowed_device_operations",
                json_extract_path_text(properties, '$.culture') as "culture",
                json_extract_path_text(properties, '$.deviceCapabilities') as "device_capabilities",
                json_extract_path_text(properties, '$.deviceDescription') as "device_description",
                json_extract_path_text(properties, '$.domainName') as "domain_name",
                json_extract_path_text(properties, '$.deviceSoftwareVersion') as "device_software_version",
                json_extract_path_text(properties, '$.friendlySoftwareName') as "friendly_software_name",
                json_extract_path_text(properties, '$.deviceConfigurationStatus') as "device_configuration_status",
                json_extract_path_text(properties, '$.modelDescription') as "model_description",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.details') as "details",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_1200_series.devices
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_devices_alert_settings:
      id: azure_extras.storsimple_1200_series.vw_devices_alert_settings
      name: vw_devices_alert_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.emailNotification') as "email_notification",
              JSON_EXTRACT(properties, '$.notificationToServiceOwners') as "notification_to_service_owners",
              JSON_EXTRACT(properties, '$.alertNotificationCulture') as "alert_notification_culture",
              JSON_EXTRACT(properties, '$.additionalRecipientEmailList') as "additional_recipient_email_list",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_1200_series.devices_alert_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.emailNotification') as "email_notification",
                json_extract_path_text(properties, '$.notificationToServiceOwners') as "notification_to_service_owners",
                json_extract_path_text(properties, '$.alertNotificationCulture') as "alert_notification_culture",
                json_extract_path_text(properties, '$.additionalRecipientEmailList') as "additional_recipient_email_list",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_1200_series.devices_alert_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_backup_schedule_groups:
      id: azure_extras.storsimple_1200_series.vw_backup_schedule_groups
      name: vw_backup_schedule_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              scheduleGroupName
              FROM azure_extras.storsimple_1200_series.backup_schedule_groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.startTime') as "start_time",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                scheduleGroupName
                FROM azure_extras.storsimple_1200_series.backup_schedule_groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_chap_settings:
      id: azure_extras.storsimple_1200_series.vw_chap_settings
      name: vw_chap_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.password') as "password",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              chapUserName
              FROM azure_extras.storsimple_1200_series.chap_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.password') as "password",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                chapUserName
                FROM azure_extras.storsimple_1200_series.chap_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_iscsi_disks:
      id: azure_extras.storsimple_1200_series.vw_iscsi_disks
      name: vw_iscsi_disks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.diskStatus') as "disk_status",
              JSON_EXTRACT(properties, '$.accessControlRecords') as "access_control_records",
              JSON_EXTRACT(properties, '$.dataPolicy') as "data_policy",
              JSON_EXTRACT(properties, '$.provisionedCapacityInBytes') as "provisioned_capacity_in_bytes",
              JSON_EXTRACT(properties, '$.usedCapacityInBytes') as "used_capacity_in_bytes",
              JSON_EXTRACT(properties, '$.localUsedCapacityInBytes') as "local_used_capacity_in_bytes",
              JSON_EXTRACT(properties, '$.monitoringStatus') as "monitoring_status",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              iscsiServerName,
              diskName
              FROM azure_extras.storsimple_1200_series.iscsi_disks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.diskStatus') as "disk_status",
                json_extract_path_text(properties, '$.accessControlRecords') as "access_control_records",
                json_extract_path_text(properties, '$.dataPolicy') as "data_policy",
                json_extract_path_text(properties, '$.provisionedCapacityInBytes') as "provisioned_capacity_in_bytes",
                json_extract_path_text(properties, '$.usedCapacityInBytes') as "used_capacity_in_bytes",
                json_extract_path_text(properties, '$.localUsedCapacityInBytes') as "local_used_capacity_in_bytes",
                json_extract_path_text(properties, '$.monitoringStatus') as "monitoring_status",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                iscsiServerName,
                diskName
                FROM azure_extras.storsimple_1200_series.iscsi_disks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_file_servers:
      id: azure_extras.storsimple_1200_series.vw_file_servers
      name: vw_file_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.domainName') as "domain_name",
              JSON_EXTRACT(properties, '$.storageDomainId') as "storage_domain_id",
              JSON_EXTRACT(properties, '$.backupScheduleGroupId') as "backup_schedule_group_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              fileServerName
              FROM azure_extras.storsimple_1200_series.file_servers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.domainName') as "domain_name",
                json_extract_path_text(properties, '$.storageDomainId') as "storage_domain_id",
                json_extract_path_text(properties, '$.backupScheduleGroupId') as "backup_schedule_group_id",
                json_extract_path_text(properties, '$.description') as "description",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                fileServerName
                FROM azure_extras.storsimple_1200_series.file_servers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_file_shares:
      id: azure_extras.storsimple_1200_series.vw_file_shares
      name: vw_file_shares
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.shareStatus') as "share_status",
              JSON_EXTRACT(properties, '$.dataPolicy') as "data_policy",
              JSON_EXTRACT(properties, '$.adminUser') as "admin_user",
              JSON_EXTRACT(properties, '$.provisionedCapacityInBytes') as "provisioned_capacity_in_bytes",
              JSON_EXTRACT(properties, '$.usedCapacityInBytes') as "used_capacity_in_bytes",
              JSON_EXTRACT(properties, '$.localUsedCapacityInBytes') as "local_used_capacity_in_bytes",
              JSON_EXTRACT(properties, '$.monitoringStatus') as "monitoring_status",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              fileServerName,
              shareName
              FROM azure_extras.storsimple_1200_series.file_shares
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.shareStatus') as "share_status",
                json_extract_path_text(properties, '$.dataPolicy') as "data_policy",
                json_extract_path_text(properties, '$.adminUser') as "admin_user",
                json_extract_path_text(properties, '$.provisionedCapacityInBytes') as "provisioned_capacity_in_bytes",
                json_extract_path_text(properties, '$.usedCapacityInBytes') as "used_capacity_in_bytes",
                json_extract_path_text(properties, '$.localUsedCapacityInBytes') as "local_used_capacity_in_bytes",
                json_extract_path_text(properties, '$.monitoringStatus') as "monitoring_status",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                fileServerName,
                shareName
                FROM azure_extras.storsimple_1200_series.file_shares
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_iscsi_servers:
      id: azure_extras.storsimple_1200_series.vw_iscsi_servers
      name: vw_iscsi_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.storageDomainId') as "storage_domain_id",
              JSON_EXTRACT(properties, '$.backupScheduleGroupId') as "backup_schedule_group_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.chapId') as "chap_id",
              JSON_EXTRACT(properties, '$.reverseChapId') as "reverse_chap_id",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              iscsiServerName
              FROM azure_extras.storsimple_1200_series.iscsi_servers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.storageDomainId') as "storage_domain_id",
                json_extract_path_text(properties, '$.backupScheduleGroupId') as "backup_schedule_group_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.chapId') as "chap_id",
                json_extract_path_text(properties, '$.reverseChapId') as "reverse_chap_id",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                iscsiServerName
                FROM azure_extras.storsimple_1200_series.iscsi_servers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_jobs:
      id: azure_extras.storsimple_1200_series.vw_jobs
      name: vw_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              status as status,
              startTime as start_time,
              endTime as end_time,
              percentComplete as percent_complete,
              error as error,
              JSON_EXTRACT(properties, '$.jobType') as "job_type",
              JSON_EXTRACT(properties, '$.targetId') as "target_id",
              JSON_EXTRACT(properties, '$.entityId') as "entity_id",
              JSON_EXTRACT(properties, '$.entityType') as "entity_type",
              JSON_EXTRACT(properties, '$.jobStages') as "job_stages",
              JSON_EXTRACT(properties, '$.deviceId') as "device_id",
              JSON_EXTRACT(properties, '$.isCancellable') as "is_cancellable",
              JSON_EXTRACT(properties, '$.stats') as "stats",
              JSON_EXTRACT(properties, '$.targetType') as "target_type",
              JSON_EXTRACT(properties, '$.sourceDeviceId') as "source_device_id",
              JSON_EXTRACT(properties, '$.backupPointInTime') as "backup_point_in_time",
              JSON_EXTRACT(properties, '$.downloadProgress') as "download_progress",
              JSON_EXTRACT(properties, '$.installProgress') as "install_progress",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              jobName
              FROM azure_extras.storsimple_1200_series.jobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                status as status,
                startTime as start_time,
                endTime as end_time,
                percentComplete as percent_complete,
                error as error,
                json_extract_path_text(properties, '$.jobType') as "job_type",
                json_extract_path_text(properties, '$.targetId') as "target_id",
                json_extract_path_text(properties, '$.entityId') as "entity_id",
                json_extract_path_text(properties, '$.entityType') as "entity_type",
                json_extract_path_text(properties, '$.jobStages') as "job_stages",
                json_extract_path_text(properties, '$.deviceId') as "device_id",
                json_extract_path_text(properties, '$.isCancellable') as "is_cancellable",
                json_extract_path_text(properties, '$.stats') as "stats",
                json_extract_path_text(properties, '$.targetType') as "target_type",
                json_extract_path_text(properties, '$.sourceDeviceId') as "source_device_id",
                json_extract_path_text(properties, '$.backupPointInTime') as "backup_point_in_time",
                json_extract_path_text(properties, '$.downloadProgress') as "download_progress",
                json_extract_path_text(properties, '$.installProgress') as "install_progress",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                jobName
                FROM azure_extras.storsimple_1200_series.jobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_devices_network_settings:
      id: azure_extras.storsimple_1200_series.vw_devices_network_settings
      name: vw_devices_network_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.primaryDnsServer') as "primary_dns_server",
              JSON_EXTRACT(properties, '$.secondaryDnsServer') as "secondary_dns_server",
              JSON_EXTRACT(properties, '$.nodeNetworks') as "node_networks",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_1200_series.devices_network_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.primaryDnsServer') as "primary_dns_server",
                json_extract_path_text(properties, '$.secondaryDnsServer') as "secondary_dns_server",
                json_extract_path_text(properties, '$.nodeNetworks') as "node_networks",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_1200_series.devices_network_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_devices_time_settings:
      id: azure_extras.storsimple_1200_series.vw_devices_time_settings
      name: vw_devices_time_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.timeZone') as "time_zone",
              JSON_EXTRACT(properties, '$.primaryTimeServer') as "primary_time_server",
              JSON_EXTRACT(properties, '$.secondaryTimeServer') as "secondary_time_server",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_1200_series.devices_time_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.timeZone') as "time_zone",
                json_extract_path_text(properties, '$.primaryTimeServer') as "primary_time_server",
                json_extract_path_text(properties, '$.secondaryTimeServer') as "secondary_time_server",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_1200_series.devices_time_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_devices_update_summaries:
      id: azure_extras.storsimple_1200_series.vw_devices_update_summaries
      name: vw_devices_update_summaries
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.deviceVersion') as "device_version",
              JSON_EXTRACT(properties, '$.deviceLastScannedTime') as "device_last_scanned_time",
              JSON_EXTRACT(properties, '$.regularUpdatesAvailable') as "regular_updates_available",
              JSON_EXTRACT(properties, '$.rebootRequiredForInstall') as "reboot_required_for_install",
              JSON_EXTRACT(properties, '$.totalItemsPendingForDownload') as "total_items_pending_for_download",
              JSON_EXTRACT(properties, '$.totalItemsPendingForInstall') as "total_items_pending_for_install",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.lastCompletedScanTime') as "last_completed_scan_time",
              JSON_EXTRACT(properties, '$.lastCompletedDownloadJobTime') as "last_completed_download_job_time",
              JSON_EXTRACT(properties, '$.lastCompletedInstallJobTime') as "last_completed_install_job_time",
              JSON_EXTRACT(properties, '$.inProgressDownloadJobId') as "in_progress_download_job_id",
              JSON_EXTRACT(properties, '$.inProgressInstallJobId') as "in_progress_install_job_id",
              JSON_EXTRACT(properties, '$.inProgressScanStartedTime') as "in_progress_scan_started_time",
              JSON_EXTRACT(properties, '$.inProgressDownloadJobStartedTime') as "in_progress_download_job_started_time",
              JSON_EXTRACT(properties, '$.inProgressInstallJobStartedTime') as "in_progress_install_job_started_time",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_1200_series.devices_update_summaries
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.deviceVersion') as "device_version",
                json_extract_path_text(properties, '$.deviceLastScannedTime') as "device_last_scanned_time",
                json_extract_path_text(properties, '$.regularUpdatesAvailable') as "regular_updates_available",
                json_extract_path_text(properties, '$.rebootRequiredForInstall') as "reboot_required_for_install",
                json_extract_path_text(properties, '$.totalItemsPendingForDownload') as "total_items_pending_for_download",
                json_extract_path_text(properties, '$.totalItemsPendingForInstall') as "total_items_pending_for_install",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.lastCompletedScanTime') as "last_completed_scan_time",
                json_extract_path_text(properties, '$.lastCompletedDownloadJobTime') as "last_completed_download_job_time",
                json_extract_path_text(properties, '$.lastCompletedInstallJobTime') as "last_completed_install_job_time",
                json_extract_path_text(properties, '$.inProgressDownloadJobId') as "in_progress_download_job_id",
                json_extract_path_text(properties, '$.inProgressInstallJobId') as "in_progress_install_job_id",
                json_extract_path_text(properties, '$.inProgressScanStartedTime') as "in_progress_scan_started_time",
                json_extract_path_text(properties, '$.inProgressDownloadJobStartedTime') as "in_progress_download_job_started_time",
                json_extract_path_text(properties, '$.inProgressInstallJobStartedTime') as "in_progress_install_job_started_time",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_1200_series.devices_update_summaries
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_managers_encryption_settings:
      id: azure_extras.storsimple_1200_series.vw_managers_encryption_settings
      name: vw_managers_encryption_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.encryptionStatus') as "encryption_status",
              JSON_EXTRACT(properties, '$.keyRolloverStatus') as "key_rollover_status",
              subscriptionId,
              resourceGroupName,
              managerName
              FROM azure_extras.storsimple_1200_series.managers_encryption_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.encryptionStatus') as "encryption_status",
                json_extract_path_text(properties, '$.keyRolloverStatus') as "key_rollover_status",
                subscriptionId,
                resourceGroupName,
                managerName
                FROM azure_extras.storsimple_1200_series.managers_encryption_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_managers_extended_info:
      id: azure_extras.storsimple_1200_series.vw_managers_extended_info
      name: vw_managers_extended_info
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.integrityKey') as "integrity_key",
              JSON_EXTRACT(properties, '$.encryptionKey') as "encryption_key",
              JSON_EXTRACT(properties, '$.encryptionKeyThumbprint') as "encryption_key_thumbprint",
              JSON_EXTRACT(properties, '$.portalCertificateThumbprint') as "portal_certificate_thumbprint",
              JSON_EXTRACT(properties, '$.algorithm') as "algorithm",
              subscriptionId,
              resourceGroupName,
              managerName
              FROM azure_extras.storsimple_1200_series.managers_extended_info
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.integrityKey') as "integrity_key",
                json_extract_path_text(properties, '$.encryptionKey') as "encryption_key",
                json_extract_path_text(properties, '$.encryptionKeyThumbprint') as "encryption_key_thumbprint",
                json_extract_path_text(properties, '$.portalCertificateThumbprint') as "portal_certificate_thumbprint",
                json_extract_path_text(properties, '$.algorithm') as "algorithm",
                subscriptionId,
                resourceGroupName,
                managerName
                FROM azure_extras.storsimple_1200_series.managers_extended_info
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_storage_account_credentials:
      id: azure_extras.storsimple_1200_series.vw_storage_account_credentials
      name: vw_storage_account_credentials
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.cloudType') as "cloud_type",
              JSON_EXTRACT(properties, '$.endPoint') as "end_point",
              JSON_EXTRACT(properties, '$.login') as "login",
              JSON_EXTRACT(properties, '$.location') as "location",
              JSON_EXTRACT(properties, '$.enableSSL') as "enable_ssl",
              JSON_EXTRACT(properties, '$.accessKey') as "access_key",
              subscriptionId,
              resourceGroupName,
              managerName,
              credentialName
              FROM azure_extras.storsimple_1200_series.storage_account_credentials
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.cloudType') as "cloud_type",
                json_extract_path_text(properties, '$.endPoint') as "end_point",
                json_extract_path_text(properties, '$.login') as "login",
                json_extract_path_text(properties, '$.location') as "location",
                json_extract_path_text(properties, '$.enableSSL') as "enable_ssl",
                json_extract_path_text(properties, '$.accessKey') as "access_key",
                subscriptionId,
                resourceGroupName,
                managerName,
                credentialName
                FROM azure_extras.storsimple_1200_series.storage_account_credentials
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_storage_domains:
      id: azure_extras.storsimple_1200_series.vw_storage_domains
      name: vw_storage_domains
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.storageAccountCredentialIds') as "storage_account_credential_ids",
              JSON_EXTRACT(properties, '$.encryptionKey') as "encryption_key",
              JSON_EXTRACT(properties, '$.encryptionStatus') as "encryption_status",
              subscriptionId,
              resourceGroupName,
              managerName,
              storageDomainName
              FROM azure_extras.storsimple_1200_series.storage_domains
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.storageAccountCredentialIds') as "storage_account_credential_ids",
                json_extract_path_text(properties, '$.encryptionKey') as "encryption_key",
                json_extract_path_text(properties, '$.encryptionStatus') as "encryption_status",
                subscriptionId,
                resourceGroupName,
                managerName,
                storageDomainName
                FROM azure_extras.storsimple_1200_series.storage_domains
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.StorSimple/managers?api-version=2016-10-01:
    get:
      tags:
        - Managers
      description: Retrieves all the managers in a subscription.
      operationId: Managers_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: The collection of StorSimple managers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /providers/Microsoft.StorSimple/operations?api-version=2016-10-01:
    get:
      tags:
        - AvailableProviderOperations
      description: List of AvailableProviderOperations
      operationId: AvailableProviderOperations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableProviderOperations'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers?api-version=2016-10-01:
    get:
      tags:
        - Managers
      description: Retrieves all the managers in a resource group.
      operationId: Managers_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of StorSimple managers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}?api-version=2016-10-01:
    get:
      tags:
        - Managers
      description: Returns the properties of the specified manager name.
      operationId: Managers_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The StorSimple manager.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - Managers
      description: Creates or updates the manager.
      operationId: Managers_CreateOrUpdate
      requestBody:
        description: The manager.
        required: true
        x-ms-requestBody-name: Manager
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manager'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The StorSimple manager has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
        '201':
          description: The StorSimple manager has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
        - Managers
      description: Deletes the manager.
      operationId: Managers_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The StorSimple manager has been successfully deleted
        '204':
          description: The StorSimple manager is already in a deleted state
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
        - Managers
      description: Updates the StorSimple Manager.
      operationId: Managers_Update
      requestBody:
        description: The manager update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagerPatch'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The StorSimple manager has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords?api-version=2016-10-01:
    get:
      tags:
        - AccessControlRecords
      description: Retrieves all the access control records in a manager.
      operationId: AccessControlRecords_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of access control records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlRecordList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}?api-version=2016-10-01:
    get:
      tags:
        - AccessControlRecords
      description: Returns the properties of the specified access control record name.
      operationId: AccessControlRecords_Get
      parameters:
        - name: accessControlRecordName
          in: path
          description: Name of access control record to be fetched.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The access control record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlRecord'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - AccessControlRecords
      description: Creates or Updates an access control record.
      operationId: AccessControlRecords_CreateOrUpdate
      parameters:
        - name: accessControlRecordName
          in: path
          description: The name of the access control record.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The access control record to be added or updated.
        required: true
        x-ms-requestBody-name: accessControlRecord
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessControlRecord'
      responses:
        '200':
          description: Successfully created or updated the access control record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlRecord'
        '202':
          description: Accepted the request to create or update the access control record.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - AccessControlRecords
      description: Deletes the access control record.
      operationId: AccessControlRecords_Delete
      parameters:
        - name: accessControlRecordName
          in: path
          description: The name of the access control record to delete.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the access control record.
        '204':
          description: Successfully deleted the access control record.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/alerts?api-version=2016-10-01:
    get:
      tags:
        - Alerts
      description: Retrieves all the alerts in a manager.
      operationId: Alerts_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of alerts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/AlertFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/backups?api-version=2016-10-01:
    get:
      tags:
        - Backups
      description: Retrieves all the backups in a manager.
      operationId: Backups_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of backups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/BackupFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/certificates/{certificateName}?api-version=2016-10-01:
    put:
      tags:
        - Managers
      description: "Upload Vault Cred Certificate.\r\nReturns UploadCertificateResponse"
      operationId: Managers_UploadRegistrationCertificate
      parameters:
        - name: certificateName
          in: path
          description: Certificate Name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: UploadCertificateRequest Request
        required: true
        x-ms-requestBody-name: uploadCertificateRequestrequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCertificateRequest'
      responses:
        '200':
          description: Upload Vault Certificate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadCertificateResponse'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/clearAlerts?api-version=2016-10-01:
    post:
      tags:
        - Alerts
      description: Clear the alerts.
      operationId: Alerts_Clear
      requestBody:
        description: The clear alert request.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearAlertRequest'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '204':
          description: Successfully cleared the alerts.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Retrieves all the devices in a manager.
      operationId: Devices_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $expand
          in: query
          description: Specify $expand=details to populate additional fields related to the device.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Returns the properties of the specified device name.
      operationId: Devices_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $expand
          in: query
          description: Specify $expand=details to populate additional fields related to the device.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
        - Devices
      description: Deletes the device.
      operationId: Devices_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the device.
        '204':
          description: Successfully deleted the device.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    patch:
      tags:
        - Devices
      description: Patches the device.
      operationId: Devices_Patch
      parameters:
        - name: deviceName
          in: path
          description: The device Name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: Patch representation of the device.
        required: true
        x-ms-requestBody-name: devicePatch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePatch'
      responses:
        '200':
          description: Successfully patched the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '202':
          description: Accepted the request to patch the device.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/alertSettings/default?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Returns the alert settings of the specified device name.
      operationId: DevicesAlertSettings_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The alert settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettings'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Devices_GetAlertSettings
    put:
      tags:
        - Devices
      description: Creates or updates the alert settings
      operationId: DevicesAlertSettings_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The alert settings.
        required: true
        x-ms-requestBody-name: alertSettings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertSettings'
      responses:
        '200':
          description: Successfully created or updated the network settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettings'
        '202':
          description: Accepted the request to create or update the network settings.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
      x-ms-original-operationId: Devices_CreateOrUpdateAlertSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups?api-version=2016-10-01:
    get:
      tags:
        - Backups
      description: Retrieves all the backups in a device. Can be used to get the backups for failover also.
      operationId: Backups_ListByDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: forFailover
          in: query
          description: Set to true if you need backups which can be used for failover.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of backups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/BackupFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}?api-version=2016-10-01:
    delete:
      tags:
        - Backups
      description: Deletes the backup.
      operationId: Backups_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: backupName
          in: path
          description: The backup name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the backup.
        '204':
          description: Successfully deleted the backup.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/elements/{elementName}/clone?api-version=2016-10-01:
    post:
      tags:
        - Backups
      description: Clones the given backup element to a new disk or share with given details.
      operationId: Backups_Clone
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: backupName
          in: path
          description: The backup name.
          required: true
          schema:
            type: string
        - name: elementName
          in: path
          description: The backup element name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The clone request.
        required: true
        x-ms-requestBody-name: cloneRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneRequest'
      responses:
        '200':
          description: Successfully cloned.
        '202':
          description: Accepted the request to clone.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups?api-version=2016-10-01:
    get:
      tags:
        - BackupScheduleGroups
      description: Retrieves all the backup schedule groups in a device.
      operationId: BackupScheduleGroups_ListByDevice
      parameters:
        - name: deviceName
          in: path
          description: The name of the device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of backup schedule groups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupScheduleGroupList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}?api-version=2016-10-01:
    get:
      tags:
        - BackupScheduleGroups
      description: Returns the properties of the specified backup schedule group name.
      operationId: BackupScheduleGroups_Get
      parameters:
        - name: deviceName
          in: path
          description: The name of the device.
          required: true
          schema:
            type: string
        - name: scheduleGroupName
          in: path
          description: The name of the schedule group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The backup schedule group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupScheduleGroup'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - BackupScheduleGroups
      description: Creates or Updates the backup schedule Group.
      operationId: BackupScheduleGroups_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The name of the device.
          required: true
          schema:
            type: string
        - name: scheduleGroupName
          in: path
          description: The name of the schedule group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The schedule group to be created
        required: true
        x-ms-requestBody-name: scheduleGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupScheduleGroup'
      responses:
        '200':
          description: Successfully created or updated the backup schedule group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupScheduleGroup'
        '202':
          description: Accepted the request to create or update the backup schedule group.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - BackupScheduleGroups
      description: Deletes the backup schedule group.
      operationId: BackupScheduleGroups_Delete
      parameters:
        - name: deviceName
          in: path
          description: The name of the device.
          required: true
          schema:
            type: string
        - name: scheduleGroupName
          in: path
          description: The name of the schedule group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the backup schedule group.
        '204':
          description: Successfully deleted the backup schedule group.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings?api-version=2016-10-01:
    get:
      tags:
        - ChapSettings
      description: Retrieves all the chap settings in a device.
      operationId: ChapSettings_ListByDevice
      parameters:
        - name: deviceName
          in: path
          description: The name of the device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of chap settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapSettingsList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings/{chapUserName}?api-version=2016-10-01:
    get:
      tags:
        - ChapSettings
      description: Returns the properties of the specified chap setting name.
      operationId: ChapSettings_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: chapUserName
          in: path
          description: The user name of chap to be fetched.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The chap setting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapSettings'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - ChapSettings
      description: Creates or updates the chap setting.
      operationId: ChapSettings_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: chapUserName
          in: path
          description: The chap user name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The chap setting to be added or updated.
        required: true
        x-ms-requestBody-name: chapSetting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapSettings'
      responses:
        '200':
          description: Successfully created or updated the chap setting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapSettings'
        '202':
          description: Accepted the request to create or update the chap setting.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - ChapSettings
      description: Deletes the chap setting.
      operationId: ChapSettings_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: chapUserName
          in: path
          description: The chap user name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the chap setting.
        '204':
          description: Successfully deleted the chap setting.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/deactivate?api-version=2016-10-01:
    post:
      tags:
        - Devices
      description: Deactivates the device.
      operationId: Devices_Deactivate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to deactivate the device.
        '204':
          description: Successfully deactivated the device.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/disks?api-version=2016-10-01:
    get:
      tags:
        - IscsiDisks
      description: Retrieves all the iSCSI disks in a device.
      operationId: IscsiDisks_ListByDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of iSCSI disks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISCSIDiskList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/download?api-version=2016-10-01:
    post:
      tags:
        - Devices
      description: Downloads updates on the device.
      operationId: Devices_DownloadUpdates
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to download updates.
        '204':
          description: Successfully downloaded updates.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failover?api-version=2016-10-01:
    post:
      tags:
        - Devices
      description: Fails over the device to another device.
      operationId: Devices_Failover
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The failover request.
        required: true
        x-ms-requestBody-name: failoverRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverRequest'
      responses:
        '202':
          description: Accepted the request to failover the device.
        '204':
          description: Successfully completed failover of the device.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failoverTargets?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Retrieves all the devices which can be used as failover targets for the given device.
      operationId: DevicesFailoverTarget_List
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $expand
          in: query
          description: Specify $expand=details to populate additional fields related to the device.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of devices for failover.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Devices_ListFailoverTarget
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers?api-version=2016-10-01:
    get:
      tags:
        - FileServers
      description: Retrieves all the file servers in a device.
      operationId: FileServers_ListByDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of file servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServerList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}?api-version=2016-10-01:
    get:
      tags:
        - FileServers
      description: Returns the properties of the specified file server name.
      operationId: FileServers_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The file server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServer'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - FileServers
      description: Creates or updates the file server.
      operationId: FileServers_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The file server.
        required: true
        x-ms-requestBody-name: fileServer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileServer'
      responses:
        '200':
          description: Successfully created or updated the file server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServer'
        '202':
          description: Accepted the request to create or update the file server.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - FileServers
      description: Deletes the file server.
      operationId: FileServers_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the file server.
        '204':
          description: Successfully deleted the file server.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/backup?api-version=2016-10-01:
    post:
      tags:
        - FileServers
      description: Backup the file server now.
      operationId: FileServers_BackupNow
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to backup the file server.
        '204':
          description: Successfully completed backup of the file server.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metrics?api-version=2016-10-01:
    get:
      tags:
        - FileServers
      description: Gets the file server metrics.
      operationId: FileServersMetrics_List
      parameters:
        - name: deviceName
          in: path
          description: The name of the device.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The name of the file server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: FileServers_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metricsDefinitions?api-version=2016-10-01:
    get:
      tags:
        - FileServers
      description: Retrieves metric definitions of all metrics aggregated at the file server.
      operationId: FileServersMetricDefinition_List
      parameters:
        - name: deviceName
          in: path
          description: The name of the device.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The name of the file server.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: FileServers_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares?api-version=2016-10-01:
    get:
      tags:
        - FileShares
      description: Retrieves all the file shares in a file server.
      operationId: FileShares_ListByFileServer
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of file shares.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}?api-version=2016-10-01:
    get:
      tags:
        - FileShares
      description: Returns the properties of the specified file share name.
      operationId: FileShares_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - name: shareName
          in: path
          description: The file share name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The file share.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - FileShares
      description: Creates or updates the file share.
      operationId: FileShares_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - name: shareName
          in: path
          description: The file share name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The file share.
        required: true
        x-ms-requestBody-name: fileShare
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileShare'
      responses:
        '200':
          description: Successfully created or updated the file share.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
        '202':
          description: Accepted the request to create or update the file share.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - FileShares
      description: Deletes the file share.
      operationId: FileShares_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - name: shareName
          in: path
          description: The file share Name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the file share.
        '204':
          description: Successfully deleted the file share.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metrics?api-version=2016-10-01:
    get:
      tags:
        - FileShares
      description: Gets the file share metrics
      operationId: FileSharesMetrics_List
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - name: shareName
          in: path
          description: The file share name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: FileShares_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metricsDefinitions?api-version=2016-10-01:
    get:
      tags:
        - FileShares
      description: Retrieves metric definitions of all metrics aggregated at the file share.
      operationId: FileSharesMetricDefinition_List
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: fileServerName
          in: path
          description: The file server name.
          required: true
          schema:
            type: string
        - name: shareName
          in: path
          description: The file share name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: FileShares_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/install?api-version=2016-10-01:
    post:
      tags:
        - Devices
      description: Installs the updates on the device.
      operationId: Devices_InstallUpdates
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to install updates.
        '204':
          description: Successfully installed updates.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers?api-version=2016-10-01:
    get:
      tags:
        - IscsiServers
      description: Retrieves all the iSCSI in a device.
      operationId: IscsiServers_ListByDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of iSCSI servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISCSIServerList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}?api-version=2016-10-01:
    get:
      tags:
        - IscsiServers
      description: Returns the properties of the specified iSCSI server name.
      operationId: IscsiServers_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The iSCSI server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISCSIServer'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - IscsiServers
      description: Creates or updates the iSCSI server.
      operationId: IscsiServers_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The iSCSI server.
        required: true
        x-ms-requestBody-name: iscsiServer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ISCSIServer'
      responses:
        '200':
          description: Successfully created or updated the iSCSI server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISCSIServer'
        '202':
          description: Accepted the request to create or update the iSCSI server.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - IscsiServers
      description: Deletes the iSCSI server.
      operationId: IscsiServers_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the iSCSI server.
        '204':
          description: Successfully deleted the iSCSI server.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/backup?api-version=2016-10-01:
    post:
      tags:
        - IscsiServers
      description: Backup the iSCSI server now.
      operationId: IscsiServers_BackupNow
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to backup the iSCSI server.
        '204':
          description: Successfully completed backup of the iSCSI server.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks?api-version=2016-10-01:
    get:
      tags:
        - IscsiDisks
      description: Retrieves all the disks in a iSCSI server.
      operationId: IscsiDisks_ListByIscsiServer
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of iSCSI disks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISCSIDiskList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}?api-version=2016-10-01:
    get:
      tags:
        - IscsiDisks
      description: Returns the properties of the specified iSCSI disk name.
      operationId: IscsiDisks_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - name: diskName
          in: path
          description: The disk name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The iSCSI disk.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISCSIDisk'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - IscsiDisks
      description: Creates or updates the iSCSI disk.
      operationId: IscsiDisks_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - name: diskName
          in: path
          description: The disk name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The iSCSI disk.
        required: true
        x-ms-requestBody-name: iscsiDisk
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ISCSIDisk'
      responses:
        '200':
          description: Successfully created or updated the iSCSI disk.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISCSIDisk'
        '202':
          description: Accepted the request to create or update the iSCSI disk.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - IscsiDisks
      description: Deletes the iSCSI disk.
      operationId: IscsiDisks_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - name: diskName
          in: path
          description: The disk name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the iSCSI disk.
        '204':
          description: Successfully deleted the iSCSI disk.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metrics?api-version=2016-10-01:
    get:
      tags:
        - IscsiDisks
      description: Gets the iSCSI disk metrics
      operationId: IscsiDisksMetrics_List
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - name: diskName
          in: path
          description: The iSCSI disk name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: IscsiDisks_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metricsDefinitions?api-version=2016-10-01:
    get:
      tags:
        - IscsiDisks
      description: Retrieves metric definitions for all metric aggregated at the iSCSI disk.
      operationId: IscsiDisksMetricDefinition_List
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - name: diskName
          in: path
          description: The iSCSI disk name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: IscsiDisks_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metrics?api-version=2016-10-01:
    get:
      tags:
        - IscsiServers
      description: Gets the iSCSI server metrics
      operationId: IscsiServersMetrics_List
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: IscsiServers_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metricsDefinitions?api-version=2016-10-01:
    get:
      tags:
        - IscsiServers
      description: Retrieves metric definitions for all metrics aggregated at iSCSI server.
      operationId: IscsiServersMetricDefinition_List
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: iscsiServerName
          in: path
          description: The iSCSI server name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: IscsiServers_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs?api-version=2016-10-01:
    get:
      tags:
        - Jobs
      description: Retrieves all the jobs in a device.
      operationId: Jobs_ListByDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of jobs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/JobFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}?api-version=2016-10-01:
    get:
      tags:
        - Jobs
      description: Returns the properties of the specified job name.
      operationId: Jobs_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metrics?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Retrieves the device metrics.
      operationId: DevicesMetrics_List
      parameters:
        - name: deviceName
          in: path
          description: The name of the appliance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Devices_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metricsDefinitions?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Retrieves metric definition of all metrics aggregated at device.
      operationId: DevicesMetricDefinition_List
      parameters:
        - name: deviceName
          in: path
          description: The name of the appliance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Devices_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/networkSettings/default?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Returns the network settings of the specified device name.
      operationId: DevicesNetworkSettings_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The network settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSettings'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Devices_GetNetworkSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/scanForUpdates?api-version=2016-10-01:
    post:
      tags:
        - Devices
      description: Scans for updates on the device.
      operationId: Devices_ScanForUpdates
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to scan for updates.
        '204':
          description: Successfully scanned for updates.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default/update?api-version=2016-10-01:
    post:
      tags:
        - Devices
      description: Creates or updates the security settings.
      operationId: DevicesSecuritySettings_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The security settings.
        required: true
        x-ms-requestBody-name: securitySettings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySettings'
      responses:
        '202':
          description: Accepted the request to create or update the security settings.
        '204':
          description: Successfully updated security settings.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
      x-ms-original-operationId: Devices_CreateOrUpdateSecuritySettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/sendTestAlertEmail?api-version=2016-10-01:
    post:
      tags:
        - Alerts
      description: Sends a test alert email.
      operationId: Alerts_SendTestEmail
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The send test alert email request.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTestAlertEmailRequest'
      responses:
        '204':
          description: Successfully sent the test email.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/shares?api-version=2016-10-01:
    get:
      tags:
        - FileShares
      description: Retrieves all the file shares in a device.
      operationId: FileShares_ListByDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of file shares.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/timeSettings/default?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Returns the time settings of the specified device name.
      operationId: DevicesTimeSettings_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The time settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSettings'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Devices_GetTimeSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/updateSummary/default?api-version=2016-10-01:
    get:
      tags:
        - Devices
      description: Returns the update summary of the specified device name.
      operationId: DevicesUpdateSummary_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The update summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Updates'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Devices_GetUpdateSummary
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/encryptionSettings/default?api-version=2016-10-01:
    get:
      tags:
        - Managers
      description: Returns the encryption settings of the manager.
      operationId: ManagersEncryptionSettings_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The encryption settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionSettings'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Managers_GetEncryptionSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo?api-version=2016-10-01:
    get:
      tags:
        - Managers
      description: Returns the extended information of the specified manager name.
      operationId: ManagersExtendedInfo_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The manager extended information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerExtendedInfo'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Managers_GetExtendedInfo
    put:
      tags:
        - Managers
      description: Creates the extended info of the manager.
      operationId: ManagersExtendedInfo_Create
      requestBody:
        description: The manager extended information.
        required: true
        x-ms-requestBody-name: ManagerExtendedInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagerExtendedInfo'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The extended information on the manager has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerExtendedInfo'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Managers_CreateExtendedInfo
    delete:
      tags:
        - Managers
      description: Deletes the extended info of the manager.
      operationId: ManagersExtendedInfo_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '204':
          description: The extended information on the manager has been successfully deleted
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Managers_DeleteExtendedInfo
    patch:
      tags:
        - Managers
      description: Updates the extended info of the manager.
      operationId: ManagersExtendedInfo_Update
      requestBody:
        description: The manager extended information.
        required: true
        x-ms-requestBody-name: ManagerExtendedInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagerExtendedInfo'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: If-Match
          in: header
          description: Pass the ETag of ExtendedInfo fetched from GET call
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The extended information on the manager has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerExtendedInfo'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Managers_UpdateExtendedInfo
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/fileservers?api-version=2016-10-01:
    get:
      tags:
        - FileServers
      description: Retrieves all the file servers in a manager.
      operationId: FileServers_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of file servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServerList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/getEncryptionKey?api-version=2016-10-01:
    post:
      tags:
        - Managers
      description: Returns the symmetric encryption key of the manager.
      operationId: ManagersEncryptionKey_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The encryption key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricEncryptedSecret'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-original-operationId: Managers_GetEncryptionKey
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/iscsiservers?api-version=2016-10-01:
    get:
      tags:
        - IscsiServers
      description: Retrieves all the iSCSI servers in a manager.
      operationId: IscsiServers_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of iSCSI servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISCSIServerList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/jobs?api-version=2016-10-01:
    get:
      tags:
        - Jobs
      description: Retrieves all the jobs in a manager.
      operationId: Jobs_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of jobs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/JobFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metrics?api-version=2016-10-01:
    get:
      tags:
        - Managers
      description: Gets the  manager metrics
      operationId: ManagersMetrics_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Managers_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metricsDefinitions?api-version=2016-10-01:
    get:
      tags:
        - Managers
      description: Retrieves metric definition of all metrics aggregated at manager.
      operationId: ManagersMetricDefinition_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Managers_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials?api-version=2016-10-01:
    get:
      tags:
        - StorageAccountCredentials
      description: Retrieves all the storage account credentials in a manager.
      operationId: StorageAccountCredentials_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of storage account credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredentialList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{credentialName}?api-version=2016-10-01:
    get:
      tags:
        - StorageAccountCredentials
      description: Returns the properties of the specified storage account credential name.
      operationId: StorageAccountCredentials_Get
      parameters:
        - name: credentialName
          in: path
          description: The name of storage account credential to be fetched.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The storage account credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredential'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - StorageAccountCredentials
      description: Creates or updates the storage account credential
      operationId: StorageAccountCredentials_CreateOrUpdate
      parameters:
        - name: credentialName
          in: path
          description: The credential name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The storage account credential to be added or updated.
        required: true
        x-ms-requestBody-name: storageAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccountCredential'
      responses:
        '200':
          description: Successfully created or updated the storage account credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredential'
        '202':
          description: Accepted the request to create or update the storage account credential.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - StorageAccountCredentials
      description: Deletes the storage account credential
      operationId: StorageAccountCredentials_Delete
      parameters:
        - name: credentialName
          in: path
          description: The name of the storage account credential.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the storage account credential.
        '204':
          description: Successfully deleted the storage account credential.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains?api-version=2016-10-01:
    get:
      tags:
        - StorageDomains
      description: Retrieves all the storage domains in a manager.
      operationId: StorageDomains_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of storage domains.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDomainList'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains/{storageDomainName}?api-version=2016-10-01:
    get:
      tags:
        - StorageDomains
      description: Returns the properties of the specified storage domain name.
      operationId: StorageDomains_Get
      parameters:
        - name: storageDomainName
          in: path
          description: The storage domain name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The storage domain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDomain'
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
        - StorageDomains
      description: Creates or updates the storage domain.
      operationId: StorageDomains_CreateOrUpdate
      parameters:
        - name: storageDomainName
          in: path
          description: The storage domain name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The storageDomain.
        required: true
        x-ms-requestBody-name: storageDomain
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageDomain'
      responses:
        '200':
          description: Successfully created or updated the storage domain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDomain'
        '202':
          description: Accepted the request to create or update the storage domain.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - StorageDomains
      description: Deletes the storage domain.
      operationId: StorageDomains_Delete
      parameters:
        - name: storageDomainName
          in: path
          description: The storage domain name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the storage domain.
        '204':
          description: Successfully deleted the storage domain.
        default:
          description: Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-long-running-operation: true
