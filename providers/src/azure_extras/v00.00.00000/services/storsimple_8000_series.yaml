openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure StorSimple 8000 Series
  description: Azure StorSimple 8000 Series
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    apiVersionParameter:
      name: api-version
      in: query
      description: The api version
      required: false
      allowReserved: true
      schema:
        type: string
    deviceNameParameter:
      name: deviceName
      in: path
      description: The device name
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    managerNameParameter:
      name: managerName
      in: path
      description: The manager name
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 2
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The resource group name
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The subscription id
      required: true
      x-ms-skip-url-encoding: true
      schema:
        type: string
  schemas:
    AccessControlRecord:
      description: The access control record.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/AccessControlRecordProperties'
          description: The properties of access control record.
          x-ms-client-flatten: true
      type: object
    AccessControlRecordList:
      description: The collection of access control records.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/AccessControlRecord'
    AccessControlRecordProperties:
      description: The properties of access control record.
      required:
        - initiatorName
      type: object
      properties:
        initiatorName:
          description: The iSCSI initiator name (IQN).
          type: string
        volumeCount:
          format: int32
          description: The number of volumes using the access control record.
          type: integer
          readOnly: true
    AcsConfiguration:
      description: The ACS configuration.
      required:
        - namespace
        - realm
        - serviceUrl
      type: object
      properties:
        namespace:
          description: The namespace.
          type: string
        realm:
          description: The realm.
          type: string
        serviceUrl:
          description: The service URL.
          type: string
    Alert:
      description: The alert.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/AlertProperties'
          description: The properties of the alert.
          x-ms-client-flatten: true
      type: object
    AlertErrorDetails:
      description: The details of the error for which the alert was raised
      type: object
      properties:
        errorCode:
          description: The error code
          type: string
        errorMessage:
          description: The error message
          type: string
        occurences:
          format: int32
          description: The number of occurrences
          type: integer
    AlertFilter:
      description: The OData filters to be used for Alert
      type: object
      properties:
        status:
          description: Specifies the status of the alerts to be filtered. Only 'Equality' operator is supported for this property.
          enum:
            - Active
            - Cleared
          type: string
          x-ms-enum:
            name: AlertStatus
            modelAsString: false
        severity:
          description: Specifies the severity of the alerts to be filtered. Only 'Equality' operator is supported for this property.
          enum:
            - Informational
            - Warning
            - Critical
          type: string
          x-ms-enum:
            name: AlertSeverity
            modelAsString: false
        sourceType:
          description: Specifies the source type of the alerts to be filtered. Only 'Equality' operator is supported for this property.
          enum:
            - Resource
            - Device
          type: string
          x-ms-enum:
            name: AlertSourceType
            modelAsString: false
        sourceName:
          description: Specifies the source name of the alerts to be filtered. Only 'Equality' operator is supported for this property.
          type: string
        appearedOnTime:
          format: date-time
          description: Specifies the appeared time (in UTC) of the alerts to be filtered. Only 'Greater-Than' and 'Lesser-Than' operators are supported for this property.
          type: string
    AlertList:
      description: The collection of alerts.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Alert'
        nextLink:
          description: The URI of the next page of alerts.
          type: string
    AlertNotificationProperties:
      description: The properties of the alert notification settings.
      required:
        - emailNotification
      type: object
      properties:
        emailNotification:
          description: Indicates whether email notification enabled or not.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: AlertEmailNotificationStatus
            modelAsString: false
        alertNotificationCulture:
          description: The alert notification culture.
          type: string
        notificationToServiceOwners:
          description: The value indicating whether alert notification enabled for admin or not.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: AlertEmailNotificationStatus
            modelAsString: false
        additionalRecipientEmailList:
          description: The alert notification email list.
          type: array
          items:
            type: string
    AlertProperties:
      description: The properties of alert
      required:
        - title
        - scope
        - alertType
        - appearedAtTime
        - appearedAtSourceTime
        - source
        - severity
        - status
      type: object
      properties:
        title:
          description: The title of the alert
          type: string
        scope:
          description: The scope of the alert
          enum:
            - Resource
            - Device
          type: string
          x-ms-enum:
            name: AlertScope
            modelAsString: false
        alertType:
          description: The type of the alert
          type: string
        appearedAtTime:
          format: date-time
          description: The UTC time at which the alert was raised
          type: string
        appearedAtSourceTime:
          format: date-time
          description: The source time at which the alert was raised
          type: string
        clearedAtTime:
          format: date-time
          description: The UTC time at which the alert was cleared
          type: string
        clearedAtSourceTime:
          format: date-time
          description: The source time at which the alert was cleared
          type: string
        source:
          $ref: '#/components/schemas/AlertSource'
          description: The source at which the alert was raised
        recommendation:
          description: The recommended action for the issue raised in the alert
          type: string
        resolutionReason:
          description: The reason for resolving the alert
          type: string
        severity:
          description: The severity of the alert
          enum:
            - Informational
            - Warning
            - Critical
          type: string
          x-ms-enum:
            name: AlertSeverity
            modelAsString: false
        status:
          description: The current status of the alert
          enum:
            - Active
            - Cleared
          type: string
          x-ms-enum:
            name: AlertStatus
            modelAsString: false
        errorDetails:
          $ref: '#/components/schemas/AlertErrorDetails'
          description: The details of the error for which the alert was raised
        detailedInformation:
          description: More details about the alert
          type: object
          additionalProperties:
            type: string
    AlertSettings:
      description: The alert settings.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/AlertNotificationProperties'
          description: The properties of the alert notification settings.
          x-ms-client-flatten: true
      type: object
    AlertSource:
      description: The source details at which the alert was raised
      type: object
      properties:
        name:
          description: The name of the source
          type: string
        timeZone:
          description: The time zone of the source
          type: string
        alertSourceType:
          description: The source type of the alert
          enum:
            - Resource
            - Device
          type: string
          x-ms-enum:
            name: AlertSourceType
            modelAsString: false
    AsymmetricEncryptedSecret:
      description: Represent the secrets intended for encryption with asymmetric key pair.
      required:
        - value
        - encryptionAlgorithm
      type: object
      properties:
        value:
          description: The value of the secret.
          type: string
        encryptionCertThumbprint:
          description: Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
          type: string
        encryptionAlgorithm:
          description: The algorithm used to encrypt "Value".
          enum:
            - None
            - AES256
            - RSAES_PKCS1_v_1_5
          type: string
          x-ms-enum:
            name: EncryptionAlgorithm
            modelAsString: false
    AvailableProviderOperation:
      description: Represents available provider operation.
      properties:
        name:
          description: 'The name of the operation being performed on a particular object. Name format: "{resourceProviderNamespace}/{resourceType}/{read|write|delete|action}". Eg. Microsoft.StorSimple/managers/devices/volumeContainers/read, Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action'
          type: string
        display:
          $ref: '#/components/schemas/AvailableProviderOperationDisplay'
          description: Contains the localized display information for this particular operation/action.
        origin:
          description: The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is "user,system"
          type: string
        properties:
          $ref: '#/components/schemas/AvailableProviderOperationProperties'
          description: Reserved for future use.
          x-ms-client-flatten: true
      type: object
    AvailableProviderOperationDisplay:
      description: Contains the localized display information for this particular operation/action. These value will be used by several clients for (a) custom role definitions for RBAC, (b) complex query filters for the event service and (c) audit history/records for management operations.
      type: object
      properties:
        provider:
          description: The localized friendly form of the resource provider name - it is expected to also include the publisher/company responsible. It should use Title Casing and begin with 'Microsoft' for 1st party services.
          type: string
        resource:
          description: The localized friendly form of the resource type related to this action/operation - it should match the public documentation for the resource provider. It should use Title Casing - for examples, please refer to the 'name' section.
          type: string
        operation:
          description: The localized friendly name for the operation, as it should be shown to the user. It should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies.
          type: string
        description:
          description: The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise - it will be used in tool tips and detailed views.
          type: string
    AvailableProviderOperationList:
      description: List of available provider operations.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/AvailableProviderOperation'
          x-ms-identifiers:
            - name
        nextLink:
          description: The NextLink.
          type: string
    AvailableProviderOperationProperties:
      description: Represents properties of AvailableProviderOperation
      type: object
      properties: {}
    Backup:
      description: The backup.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/BackupProperties'
          description: The properties of the backup.
          x-ms-client-flatten: true
      type: object
    BackupElement:
      description: The backup element.
      required:
        - elementId
        - elementName
        - elementType
        - sizeInBytes
        - volumeName
        - volumeContainerId
      type: object
      properties:
        elementId:
          description: The path ID that uniquely identifies the backup element.
          type: string
        elementName:
          description: The name of the backup element.
          type: string
        elementType:
          description: The hierarchical type of the backup element.
          type: string
        sizeInBytes:
          format: int64
          description: The size in bytes.
          type: integer
        volumeName:
          description: The name of the volume.
          type: string
        volumeContainerId:
          description: The path ID of the volume container.
          type: string
        volumeType:
          description: The volume type.
          enum:
            - Tiered
            - Archival
            - LocallyPinned
          type: string
          x-ms-enum:
            name: VolumeType
            modelAsString: false
    BackupFilter:
      description: The OData filters to be used for backups.
      type: object
      properties:
        backupPolicyId:
          description: Specifies the backupPolicyId of the backups to be filtered. Only 'Equality' operator is supported for this property.
          type: string
        volumeId:
          description: Specifies the volumeId of the backups to be filtered. Only 'Equality' operator is supported for this property.
          type: string
        createdTime:
          format: date-time
          description: Specifies the creation time of the backups to be filtered. Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.
          type: string
    BackupList:
      description: The collection of backups.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextLink:
          description: The NextLink.
          type: string
    BackupPolicy:
      description: The backup policy.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/BackupPolicyProperties'
          description: The properties of the backup policy.
          x-ms-client-flatten: true
      type: object
    BackupPolicyList:
      description: The collection of backup policies.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/BackupPolicy'
    BackupPolicyProperties:
      description: The properties of the backup policy.
      required:
        - volumeIds
      type: object
      properties:
        volumeIds:
          description: The path IDs of the volumes which are part of the backup policy.
          type: array
          items:
            type: string
        nextBackupTime:
          format: date-time
          description: The time of the next backup for the backup policy.
          type: string
          readOnly: true
        lastBackupTime:
          format: date-time
          description: The time of the last backup for the backup policy.
          type: string
          readOnly: true
        schedulesCount:
          format: int64
          description: The count of schedules the backup policy contains.
          type: integer
          readOnly: true
        scheduledBackupStatus:
          description: Indicates whether at least one of the schedules in the backup policy is active or not.
          enum:
            - Disabled
            - Enabled
          type: string
          readOnly: true
          x-ms-enum:
            name: ScheduledBackupStatus
            modelAsString: false
        backupPolicyCreationType:
          description: The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
          enum:
            - BySaaS
            - BySSM
          type: string
          readOnly: true
          x-ms-enum:
            name: BackupPolicyCreationType
            modelAsString: false
        ssmHostName:
          description: If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
          type: string
          readOnly: true
    BackupProperties:
      description: The properties of the backup.
      required:
        - createdOn
        - sizeInBytes
        - elements
      type: object
      properties:
        createdOn:
          format: date-time
          description: The time when the backup was created.
          type: string
        sizeInBytes:
          format: int64
          description: The backup size in bytes.
          type: integer
        backupType:
          description: The type of the backup.
          enum:
            - LocalSnapshot
            - CloudSnapshot
          type: string
          x-ms-enum:
            name: BackupType
            modelAsString: false
        backupJobCreationType:
          description: The backup job creation type.
          enum:
            - Adhoc
            - BySchedule
            - BySSM
          type: string
          x-ms-enum:
            name: BackupJobCreationType
            modelAsString: false
        backupPolicyId:
          description: The path ID of the backup policy.
          type: string
        ssmHostName:
          description: The StorSimple Snapshot Manager host name.
          type: string
        elements:
          description: The backup elements.
          type: array
          items:
            $ref: '#/components/schemas/BackupElement'
          x-ms-identifiers:
            - elementId
            - volumeContainerId
    BackupSchedule:
      description: The backup schedule.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/BackupScheduleProperties'
          description: The properties of the backup schedule.
          x-ms-client-flatten: true
      type: object
    BackupScheduleList:
      description: The backup schedule list.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/BackupSchedule'
    BackupScheduleProperties:
      description: The properties of the backup schedule.
      required:
        - scheduleRecurrence
        - backupType
        - retentionCount
        - startTime
        - scheduleStatus
      type: object
      properties:
        scheduleRecurrence:
          $ref: '#/components/schemas/ScheduleRecurrence'
          description: The schedule recurrence.
        backupType:
          description: The type of backup which needs to be taken.
          enum:
            - LocalSnapshot
            - CloudSnapshot
          type: string
          x-ms-enum:
            name: BackupType
            modelAsString: false
        retentionCount:
          format: int64
          description: The number of backups to be retained.
          type: integer
        startTime:
          format: date-time
          description: The start time of the schedule.
          type: string
        scheduleStatus:
          description: The schedule status.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ScheduleStatus
            modelAsString: false
        lastSuccessfulRun:
          format: date-time
          description: The last successful backup run which was triggered for the schedule.
          type: string
          readOnly: true
    BandwidthRateSettingProperties:
      description: The properties of the bandwidth setting.
      required:
        - schedules
      type: object
      properties:
        schedules:
          description: The schedules.
          type: array
          items:
            $ref: '#/components/schemas/BandwidthSchedule'
          x-ms-identifiers: []
        volumeCount:
          format: int32
          description: The number of volumes that uses the bandwidth setting.
          type: integer
          readOnly: true
    BandwidthSchedule:
      description: The schedule for bandwidth setting.
      required:
        - start
        - stop
        - rateInMbps
        - days
      type: object
      properties:
        start:
          $ref: '#/components/schemas/Time'
          description: The start time of the schedule.
        stop:
          $ref: '#/components/schemas/Time'
          description: The stop time of the schedule.
        rateInMbps:
          format: int32
          description: The rate in Mbps.
          type: integer
        days:
          description: The days of the week when this schedule is applicable.
          type: array
          items:
            enum:
              - Sunday
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
            type: string
            x-ms-enum:
              name: DayOfWeek
              modelAsString: false
    BandwidthSetting:
      description: The bandwidth setting.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/BandwidthRateSettingProperties'
          description: The properties of the bandwidth setting.
          x-ms-client-flatten: true
      type: object
    BandwidthSettingList:
      description: The collection of bandwidth setting entities.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/BandwidthSetting'
    BaseModel:
      description: Represents the base class for all other ARM object models
      type: object
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
    ChapSettings:
      description: The Challenge-Handshake Authentication Protocol (CHAP) settings.
      type: object
      properties:
        initiatorUser:
          description: The CHAP initiator user.
          type: string
        initiatorSecret:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The CHAP initiator secret.
        targetUser:
          description: The CHAP target user.
          type: string
        targetSecret:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The target secret.
    ClearAlertRequest:
      description: The request for clearing the alert
      required:
        - alerts
      type: object
      properties:
        resolutionMessage:
          description: The resolution message while clearing the alert
          type: string
        alerts:
          description: The list of alert IDs to be cleared
          type: array
          items:
            type: string
    CloneRequest:
      description: The clone job request.
      required:
        - targetDeviceId
        - targetVolumeName
        - targetAccessControlRecordIds
        - backupElement
      type: object
      properties:
        targetDeviceId:
          description: The path ID of the device which will act as the clone target.
          type: string
        targetVolumeName:
          description: The name of the new volume which will be created and the backup will be cloned into.
          type: string
        targetAccessControlRecordIds:
          description: The list of path IDs of the access control records to be associated to the new cloned volume.
          type: array
          items:
            type: string
        backupElement:
          $ref: '#/components/schemas/BackupElement'
          description: The backup element that is cloned.
    CloudAppliance:
      description: The cloud appliance.
      required:
        - name
        - vnetRegion
      type: object
      properties:
        name:
          description: The name.
          type: string
        vnetName:
          description: The name of the virtual network.
          type: string
        vnetRegion:
          description: The virtual network region.
          type: string
        isVnetDnsConfigured:
          description: Indicates whether virtual network used is configured with DNS or not.
          type: boolean
        isVnetExpressConfigured:
          description: Indicates whether virtual network used is configured with express route or not.
          type: boolean
        subnetName:
          description: The name of the subnet.
          type: string
        storageAccountName:
          description: The name of the storage account.
          type: string
        storageAccountType:
          description: The type of the storage account.
          type: string
        vmType:
          description: The type of the virtual machine.
          type: string
        vmImageName:
          description: The name of the virtual machine image.
          type: string
        modelNumber:
          description: The model number.
          type: string
    CloudApplianceConfiguration:
      description: The cloud appliance configuration
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/CloudApplianceConfigurationProperties'
          description: The properties.
          x-ms-client-flatten: true
      type: object
    CloudApplianceConfigurationList:
      description: The cloud appliance configuration list
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/CloudApplianceConfiguration'
    CloudApplianceConfigurationProperties:
      description: The properties of cloud appliance configuration.
      required:
        - modelNumber
        - cloudPlatform
        - acsConfiguration
        - supportedStorageAccountTypes
        - supportedRegions
        - supportedVmTypes
        - supportedVmImages
      type: object
      properties:
        modelNumber:
          description: The model number.
          type: string
        cloudPlatform:
          description: The cloud platform.
          type: string
        acsConfiguration:
          $ref: '#/components/schemas/AcsConfiguration'
          description: The ACS configuration.
        supportedStorageAccountTypes:
          description: The supported storage account types.
          type: array
          items:
            type: string
        supportedRegions:
          description: The supported regions.
          type: array
          items:
            type: string
        supportedVmTypes:
          description: The supported virtual machine types.
          type: array
          items:
            type: string
        supportedVmImages:
          description: The supported virtual machine images.
          type: array
          items:
            $ref: '#/components/schemas/VmImage'
          x-ms-identifiers:
            - name
            - offer
            - publisher
            - sku
            - version
    CloudApplianceSettings:
      description: The cloud appliance settings.
      type: object
      properties:
        serviceDataEncryptionKey:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The service data encryption key (encrypted with DAK).
        channelIntegrityKey:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The channel integrity key (encrypted with DAK).
    ConfigureDeviceRequest:
      description: The mandatory device configuration request.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/ConfigureDeviceRequestProperties'
          description: The properties of the configure device request.
          x-ms-client-flatten: true
      type: object
    ConfigureDeviceRequestProperties:
      description: The properties of the configure device request.
      required:
        - friendlyName
        - currentDeviceName
        - timeZone
      type: object
      properties:
        friendlyName:
          description: The friendly name for the device.
          type: string
        currentDeviceName:
          description: The current name of the device.
          type: string
        timeZone:
          description: 'The device time zone. For eg: "Pacific Standard Time"'
          type: string
        dnsSettings:
          $ref: '#/components/schemas/SecondaryDNSSettings'
          description: The secondary DNS Settings of the device.
        networkInterfaceData0Settings:
          $ref: '#/components/schemas/NetworkInterfaceData0Settings'
          description: The 'Data 0' network interface card settings.
    ControllerPowerStateChangeRequest:
      description: The controller power state change request.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/ControllerPowerStateChangeRequestProperties'
          description: The properties of the controller power state change request.
          x-ms-client-flatten: true
      type: object
    ControllerPowerStateChangeRequestProperties:
      description: The properties of the controller power state change request.
      required:
        - action
        - activeController
        - controller0State
        - controller1State
      type: object
      properties:
        action:
          description: The power state that the request is expecting for the controller of the device.
          enum:
            - Start
            - Restart
            - Shutdown
          type: string
          x-ms-enum:
            name: ControllerPowerStateAction
            modelAsString: false
        activeController:
          description: The active controller that the request is expecting on the device.
          enum:
            - Unknown
            - None
            - Controller0
            - Controller1
          type: string
          x-ms-enum:
            name: ControllerId
            modelAsString: false
        controller0State:
          description: The controller 0's status that the request is expecting on the device.
          enum:
            - NotPresent
            - PoweredOff
            - Ok
            - Recovering
            - Warning
            - Failure
          type: string
          x-ms-enum:
            name: ControllerStatus
            modelAsString: false
        controller1State:
          description: The controller 1's status that the request is expecting on the device.
          enum:
            - NotPresent
            - PoweredOff
            - Ok
            - Recovering
            - Warning
            - Failure
          type: string
          x-ms-enum:
            name: ControllerStatus
            modelAsString: false
    DataStatistics:
      description: The additional details related to the data related statistics of a job. Currently applicable only for Backup, Clone and Restore jobs.
      type: object
      properties:
        totalData:
          format: int64
          description: The total bytes of data to be processed, as part of the job.
          type: integer
        processedData:
          format: int64
          description: The number of bytes of data processed till now, as part of the job.
          type: integer
        cloudData:
          format: int64
          description: The number of bytes of data written to cloud, as part of the job.
          type: integer
        throughput:
          format: int64
          description: The average throughput of data processed(bytes/sec), as part of the job.
          type: integer
    Device:
      description: The StorSimple device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/DeviceProperties'
          description: The properties of the StorSimple device.
          x-ms-client-flatten: true
      type: object
    DeviceDetails:
      description: The additional device details regarding the end point count and volume container count.
      type: object
      properties:
        endpointCount:
          format: int32
          description: The total number of endpoints that are currently on the device ( i.e. number of volumes).
          type: integer
        volumeContainerCount:
          format: int32
          description: The total number of volume containers on the device.
          type: integer
    DeviceList:
      description: The collection of devices.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Device'
    DevicePatch:
      description: The device patch.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/DevicePatchProperties'
          description: The properties of the device patch.
          x-ms-client-flatten: true
      type: object
    DevicePatchProperties:
      description: The properties of the device patch.
      type: object
      properties:
        deviceDescription:
          description: Short description given for the device
          type: string
    DeviceProperties:
      description: The properties of the StorSimple device.
      required:
        - friendlyName
        - activationTime
        - culture
        - deviceDescription
        - deviceSoftwareVersion
        - deviceConfigurationStatus
        - targetIqn
        - modelDescription
        - status
        - serialNumber
        - deviceType
        - activeController
        - friendlySoftwareVersion
      type: object
      properties:
        friendlyName:
          description: The friendly name of the device.
          type: string
        activationTime:
          format: date-time
          description: The UTC time at which the device was activated
          type: string
        culture:
          description: 'The language culture setting on the device. For eg: "en-US"'
          type: string
        deviceDescription:
          description: The device description.
          type: string
        deviceSoftwareVersion:
          description: The version number of the software running on the device.
          type: string
        friendlySoftwareName:
          description: The friendly name of the software running on the device.
          type: string
        deviceConfigurationStatus:
          description: The current configuration status of the device.
          enum:
            - Complete
            - Pending
          type: string
          x-ms-enum:
            name: DeviceConfigurationStatus
            modelAsString: false
        targetIqn:
          description: The target IQN.
          type: string
        modelDescription:
          description: The device model.
          type: string
        status:
          description: The current status of the device.
          enum:
            - Unknown
            - Online
            - Offline
            - Deactivated
            - RequiresAttention
            - MaintenanceMode
            - Creating
            - Provisioning
            - Deactivating
            - Deleted
            - ReadyToSetup
          type: string
          x-ms-enum:
            name: DeviceStatus
            modelAsString: false
        serialNumber:
          description: The serial number.
          type: string
        deviceType:
          description: The type of the device.
          enum:
            - Invalid
            - Series8000VirtualAppliance
            - Series8000PhysicalAppliance
          type: string
          x-ms-enum:
            name: DeviceType
            modelAsString: false
        activeController:
          description: The identifier of the active controller of the device.
          enum:
            - Unknown
            - None
            - Controller0
            - Controller1
          type: string
          x-ms-enum:
            name: ControllerId
            modelAsString: false
        friendlySoftwareVersion:
          description: The device friendly software version.
          type: string
        availableLocalStorageInBytes:
          format: int64
          description: The storage in bytes that is available locally on the device.
          type: integer
        availableTieredStorageInBytes:
          format: int64
          description: The storage in bytes that is available on the device for tiered volumes.
          type: integer
        provisionedTieredStorageInBytes:
          format: int64
          description: The storage in bytes that has been provisioned on the device for tiered volumes.
          type: integer
        provisionedLocalStorageInBytes:
          format: int64
          description: The storage in bytes used for locally pinned volumes on the device (including additional local reservation).
          type: integer
        provisionedVolumeSizeInBytes:
          format: int64
          description: Total capacity in bytes of tiered and locally pinned volumes on the device
          type: integer
        usingStorageInBytes:
          format: int64
          description: The storage in bytes that is currently being used on the device, including both local and cloud.
          type: integer
        totalTieredStorageInBytes:
          format: int64
          description: The total tiered storage available on the device in bytes.
          type: integer
        agentGroupVersion:
          format: int32
          description: The device agent group version.
          type: integer
        networkInterfaceCardCount:
          format: int32
          description: The number of network interface cards
          type: integer
        deviceLocation:
          description: The location of the virtual appliance.
          type: string
        virtualMachineApiType:
          description: The virtual machine API type.
          enum:
            - Classic
            - Arm
          type: string
          readOnly: true
          x-ms-enum:
            name: VirtualMachineApiType
            modelAsString: false
        details:
          $ref: '#/components/schemas/DeviceDetails'
          description: The additional device details regarding the end point count and volume container count.
        rolloverDetails:
          $ref: '#/components/schemas/DeviceRolloverDetails'
          description: The additional device details for the service data encryption key rollover.
    DeviceRolloverDetails:
      description: The additional device details for the service data encryption key rollover.
      type: object
      properties:
        authorizationEligibility:
          description: The eligibility status of device for service data encryption key rollover.
          enum:
            - InEligible
            - Eligible
          type: string
          x-ms-enum:
            name: AuthorizationEligibility
            modelAsString: false
        authorizationStatus:
          description: The authorization status of the device for service data encryption key rollover.
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: AuthorizationStatus
            modelAsString: false
        inEligibilityReason:
          description: The reason for inEligibility of device, in case it's not eligible for service data encryption key rollover.
          enum:
            - DeviceNotOnline
            - NotSupportedAppliance
            - RolloverPending
          type: string
          x-ms-enum:
            name: InEligibilityCategory
            modelAsString: false
    DimensionFilter:
      description: The dimension filter.
      type: object
      properties:
        name:
          description: Specifies the dimension name. E.g., NetworkInterface. Valid values are the ones specified in the field "dimensions" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.
          type: string
        values:
          description: Specifies the dimension value. E.g., Data0. Valid values are the ones returned in the field "dimensions" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.
          type: string
    DNSSettings:
      description: The DNS(Domain Name Server) settings of a device.
      type: object
      properties:
        primaryDnsServer:
          description: The primary IPv4 DNS server for the device
          type: string
        primaryIpv6DnsServer:
          description: The primary IPv6 DNS server for the device
          type: string
        secondaryDnsServers:
          description: The secondary IPv4 DNS server for the device
          type: array
          items:
            type: string
        secondaryIpv6DnsServers:
          description: The secondary IPv6 DNS server for the device
          type: array
          items:
            type: string
    EncryptionSettings:
      description: The encryption settings.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/EncryptionSettingsProperties'
          description: The properties of the encryption settings.
          x-ms-client-flatten: true
      type: object
    EncryptionSettingsProperties:
      description: The properties of encryption settings.
      required:
        - encryptionStatus
        - keyRolloverStatus
      type: object
      properties:
        encryptionStatus:
          description: The encryption status to indicates if encryption is enabled or not.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: false
        keyRolloverStatus:
          description: The key rollover status to indicates if key rollover is required or not. If secret's encryption has been upgraded, then it requires key rollover.
          enum:
            - Required
            - NotRequired
          type: string
          x-ms-enum:
            name: KeyRolloverStatus
            modelAsString: false
    FailoverRequest:
      description: The request object for triggering a failover of volume containers, from a source device to a target device.
      type: object
      properties:
        targetDeviceId:
          description: The ARM path ID of the device which will act as the failover target.
          type: string
        volumeContainers:
          description: The list of path IDs of the volume containers which needs to be failed-over to the target device.
          type: array
          items:
            type: string
    FailoverSet:
      description: The failover set on a device.
      type: object
      properties:
        volumeContainers:
          description: The list of meta data of volume containers, which are part of the failover set.
          type: array
          items:
            $ref: '#/components/schemas/VolumeContainerFailoverMetadata'
          x-ms-identifiers:
            - volumeContainerId
        eligibilityResult:
          $ref: '#/components/schemas/FailoverSetEligibilityResult'
          description: The eligibility result of the failover set, for failover.
    FailoverSetEligibilityResult:
      description: The eligibility result of failover set, for failover.
      type: object
      properties:
        isEligibleForFailover:
          description: Represents if this failover set is eligible for failover or not.
          type: boolean
        errorMessage:
          description: The error message, if the failover set is not eligible for failover.
          type: string
    FailoverSetsList:
      description: The list of failover sets.
      type: object
      properties:
        value:
          description: The list of failover sets.
          type: array
          items:
            $ref: '#/components/schemas/FailoverSet'
          x-ms-identifiers: []
    FailoverTarget:
      description: Represents the eligibility of a device as a failover target device.
      type: object
      properties:
        deviceId:
          description: The path ID of the device.
          type: string
        deviceStatus:
          description: The status of the device.
          enum:
            - Unknown
            - Online
            - Offline
            - Deactivated
            - RequiresAttention
            - MaintenanceMode
            - Creating
            - Provisioning
            - Deactivating
            - Deleted
            - ReadyToSetup
          type: string
          x-ms-enum:
            name: DeviceStatus
            modelAsString: false
        modelDescription:
          description: The model number of the device.
          type: string
        deviceSoftwareVersion:
          description: The software version of the device.
          type: string
        dataContainersCount:
          format: int32
          description: The count of data containers on the device.
          type: integer
        volumesCount:
          format: int32
          description: The count of volumes on the device.
          type: integer
        availableLocalStorageInBytes:
          format: int64
          description: The amount of free local storage available on the device in bytes.
          type: integer
        availableTieredStorageInBytes:
          format: int64
          description: The amount of free tiered storage available for the device in bytes.
          type: integer
        deviceLocation:
          description: The geo location (applicable only for cloud appliances) of the device.
          type: string
        friendlyDeviceSoftwareVersion:
          description: The friendly name for the current version of software on the device.
          type: string
        eligibilityResult:
          $ref: '#/components/schemas/TargetEligibilityResult'
          description: The eligibility result of the device, as a failover target device.
    FailoverTargetsList:
      description: The list of all devices in a resource and their eligibility status as a failover target device.
      type: object
      properties:
        value:
          description: The list of all the failover targets.
          type: array
          items:
            $ref: '#/components/schemas/FailoverTarget'
          x-ms-identifiers:
            - deviceId
    Feature:
      description: The feature.
      required:
        - name
        - status
      type: object
      properties:
        name:
          description: The name of the feature.
          type: string
        status:
          description: The feature support status.
          enum:
            - NotAvailable
            - UnsupportedDeviceVersion
            - Supported
          type: string
          x-ms-enum:
            name: FeatureSupportStatus
            modelAsString: false
    FeatureFilter:
      description: The OData filter to be used for features.
      type: object
      properties:
        deviceId:
          description: Specifies the device ID for which the features are required. Only 'Equality' operator is supported for this property.
          type: string
    FeatureList:
      description: The collections of features.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          x-ms-identifiers:
            - name
    HardwareComponent:
      description: The hardware component.
      required:
        - componentId
        - displayName
        - status
        - statusDisplayName
      type: object
      properties:
        componentId:
          description: The component ID.
          type: string
        displayName:
          description: The display name of the hardware component.
          type: string
        status:
          description: The status of the hardware component.
          enum:
            - Unknown
            - NotPresent
            - PoweredOff
            - Ok
            - Recovering
            - Warning
            - Failure
          type: string
          x-ms-enum:
            name: HardwareComponentStatus
            modelAsString: false
        statusDisplayName:
          description: The display name of the status of hardware component.
          type: string
    HardwareComponentGroup:
      description: The hardware component group.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/HardwareComponentGroupProperties'
          description: The properties of the hardware component group.
          x-ms-client-flatten: true
      type: object
    HardwareComponentGroupList:
      description: The collection of hardware component groups.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/HardwareComponentGroup'
    HardwareComponentGroupProperties:
      description: The properties of hardware component group.
      required:
        - displayName
        - lastUpdatedTime
        - components
      type: object
      properties:
        displayName:
          description: The display name the hardware component group.
          type: string
        lastUpdatedTime:
          format: date-time
          description: The last updated time.
          type: string
        components:
          description: The list of hardware components.
          type: array
          items:
            $ref: '#/components/schemas/HardwareComponent'
          x-ms-identifiers:
            - componentId
    Job:
      description: The job.
      required:
        - status
        - percentComplete
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        status:
          description: The current status of the job.
          enum:
            - Running
            - Succeeded
            - Failed
            - Canceled
          type: string
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        startTime:
          format: date-time
          description: The UTC time at which the job was started.
          type: string
        endTime:
          format: date-time
          description: The UTC time at which the job completed.
          type: string
        percentComplete:
          format: int32
          description: The percentage of the job that is already complete.
          type: integer
        error:
          $ref: '#/components/schemas/JobErrorDetails'
          description: The error details, if any, for the job.
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The properties of the job.
          x-ms-client-flatten: true
      type: object
    JobErrorDetails:
      description: The job error details. Contains list of job error items.
      required:
        - code
        - message
      type: object
      properties:
        errorDetails:
          description: The error details.
          type: array
          items:
            $ref: '#/components/schemas/JobErrorItem'
          x-ms-identifiers: []
        code:
          description: The error code intended for programmatic access.
          type: string
        message:
          description: The error message intended to describe the error in detail.
          type: string
    JobErrorItem:
      description: The job error items.
      required:
        - code
        - message
      type: object
      properties:
        recommendations:
          description: The recommended actions.
          type: array
          items:
            type: string
        code:
          description: The error code intended for programmatic access.
          type: string
        message:
          description: The error message intended to describe the error in detail.
          type: string
    JobFilter:
      description: The OData filter to be used for jobs.
      type: object
      properties:
        status:
          description: Specifies the status of the jobs to be filtered. For e.g., "Running", "Succeeded", "Failed" or "Canceled". Only 'Equality' operator is supported for this property.
          type: string
        jobType:
          description: Specifies the type of the jobs to be filtered. For e.g., "ScheduledBackup", "ManualBackup", "RestoreBackup", "CloneVolume", "FailoverVolumeContainers", "CreateLocallyPinnedVolume", "ModifyVolume", "InstallUpdates", "SupportPackageLogs", or "CreateCloudAppliance". Only 'Equality' operator can be used for this property.
          type: string
        startTime:
          format: date-time
          description: Specifies the start time of the jobs to be filtered.  Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.
          type: string
    JobList:
      description: The collection of jobs.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Job'
        nextLink:
          description: The NextLink.
          type: string
    JobProperties:
      description: The properties of the job.
      required:
        - jobType
      type: object
      properties:
        jobType:
          description: The type of the job.
          enum:
            - ScheduledBackup
            - ManualBackup
            - RestoreBackup
            - CloneVolume
            - FailoverVolumeContainers
            - CreateLocallyPinnedVolume
            - ModifyVolume
            - InstallUpdates
            - SupportPackageLogs
            - CreateCloudAppliance
          type: string
          x-ms-enum:
            name: JobType
            modelAsString: false
        dataStats:
          $ref: '#/components/schemas/DataStatistics'
          description: The data statistics properties of the job.
        entityLabel:
          description: The entity identifier for which the job ran.
          type: string
        entityType:
          description: The entity type for which the job ran.
          type: string
        jobStages:
          description: The job stages.
          type: array
          items:
            $ref: '#/components/schemas/JobStage'
          x-ms-identifiers: []
        deviceId:
          description: The device ID in which the job ran.
          type: string
        isCancellable:
          description: Represents whether the job is cancellable or not.
          type: boolean
        backupType:
          description: The backup type (CloudSnapshot | LocalSnapshot). Applicable only for backup jobs.
          enum:
            - LocalSnapshot
            - CloudSnapshot
          type: string
          x-ms-enum:
            name: BackupType
            modelAsString: false
        sourceDeviceId:
          description: The source device ID of the failover job.
          type: string
        backupPointInTime:
          format: date-time
          description: The time of the backup used for the failover.
          type: string
    JobStage:
      description: The details about the specific stage of a job.
      required:
        - stageStatus
      type: object
      properties:
        message:
          description: The message of the job stage.
          type: string
        stageStatus:
          description: The stage status.
          enum:
            - Running
            - Succeeded
            - Failed
            - Canceled
          type: string
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        detail:
          description: The details of the stage.
          type: string
        errorCode:
          description: The error code of the stage if any.
          type: string
    Key:
      description: The key.
      required:
        - activationKey
      type: object
      properties:
        activationKey:
          description: The activation key for the device.
          type: string
    ListFailoverTargetsRequest:
      description: The request object for fetching the list of failover targets (eligible devices for failover).
      type: object
      properties:
        volumeContainers:
          description: The list of path IDs of the volume containers that needs to be failed-over, for which we want to fetch the eligible targets.
          type: array
          items:
            type: string
    Manager:
      description: The StorSimple Manager.
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The resource name.
          type: string
          readOnly: true
        type:
          description: The resource type.
          type: string
          readOnly: true
        location:
          description: The geo location of the resource.
          type: string
        tags:
          description: The tags attached to the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ManagerProperties'
          description: The properties of the StorSimple Manager.
          x-ms-client-flatten: true
        etag:
          description: The etag of the manager.
          type: string
      type: object
    ManagerExtendedInfo:
      description: The extended info of the manager.
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/ManagerExtendedInfoProperties'
          description: The extended info properties.
          x-ms-client-flatten: true
        etag:
          description: The etag of the resource.
          type: string
      type: object
    ManagerExtendedInfoProperties:
      description: The properties of the manager extended info.
      required:
        - integrityKey
        - algorithm
      type: object
      properties:
        version:
          description: The version of the extended info being persisted.
          type: string
        integrityKey:
          description: Represents the CIK of the resource.
          type: string
        encryptionKey:
          description: Represents the CEK of the resource.
          type: string
        encryptionKeyThumbprint:
          description: Represents the Cert thumbprint that was used to encrypt the CEK.
          type: string
        portalCertificateThumbprint:
          description: Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
          type: string
        algorithm:
          description: Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
          type: string
    ManagerIntrinsicSettings:
      description: Intrinsic settings which refers to the type of the StorSimple Manager.
      required:
        - type
      type: object
      properties:
        type:
          description: The type of StorSimple Manager.
          enum:
            - GardaV1
            - HelsinkiV1
          type: string
          x-ms-enum:
            name: ManagerType
            modelAsString: false
    ManagerList:
      description: The list of StorSimple Managers.
      required:
        - value
      type: object
      properties:
        value:
          description: The list of StorSimple managers.
          type: array
          items:
            $ref: '#/components/schemas/Manager'
    ManagerPatch:
      description: The StorSimple Manager patch.
      type: object
      properties:
        tags:
          description: The tags attached to the Manager.
          type: object
          additionalProperties:
            type: string
    ManagerProperties:
      description: The properties of the StorSimple Manager.
      type: object
      properties:
        cisIntrinsicSettings:
          $ref: '#/components/schemas/ManagerIntrinsicSettings'
          description: Represents the type of StorSimple Manager.
        sku:
          $ref: '#/components/schemas/ManagerSku'
          description: Specifies the Sku.
        provisioningState:
          description: Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
          type: string
    ManagerSku:
      description: The Sku.
      required:
        - name
      type: object
      properties:
        name:
          description: Refers to the sku name which should be "Standard"
          enum:
            - Standard
          type: string
          x-ms-enum:
            name: ManagerSkuType
            modelAsString: false
    MetricAvailablity:
      description: The metric availability.
      type: object
      properties:
        timeGrain:
          description: The aggregation interval for the metric.
          type: string
        retention:
          description: The retention period for the metric at the specified timegrain.
          type: string
    MetricData:
      description: The metric data.
      type: object
      properties:
        timeStamp:
          format: date-time
          description: The time stamp of the metric data.
          type: string
        sum:
          format: double
          description: The sum of all samples at the time stamp.
          type: number
        count:
          format: int32
          description: The count of all samples at the time stamp.
          type: integer
        average:
          format: double
          description: The average of all samples at the time stamp.
          type: number
        minimum:
          format: double
          description: The minimum of all samples at the time stamp.
          type: number
        maximum:
          format: double
          description: The maximum of all samples at the time stamp.
          type: number
    MetricDefinition:
      description: The monitoring metric definition.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MetricName'
          description: The metric name.
        unit:
          description: The metric unit.
          enum:
            - Bytes
            - BytesPerSecond
            - Count
            - CountPerSecond
            - Percent
            - Seconds
          type: string
          x-ms-enum:
            name: MetricUnit
            modelAsString: false
        primaryAggregationType:
          description: The metric aggregation type.
          enum:
            - Average
            - Last
            - Maximum
            - Minimum
            - None
            - Total
          type: string
          x-ms-enum:
            name: MetricAggregationType
            modelAsString: false
        resourceId:
          description: The metric source ID.
          type: string
        metricAvailabilities:
          description: The available metric granularities.
          type: array
          items:
            $ref: '#/components/schemas/MetricAvailablity'
          x-ms-identifiers:
            - timeGrain
        dimensions:
          description: The available metric dimensions.
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
        category:
          description: The category of the metric.
          type: string
        type:
          description: The metric definition type.
          type: string
    MetricDefinitionList:
      description: The list of metric definitions.
      type: object
      properties:
        value:
          description: The list of metric definitions.
          type: array
          items:
            $ref: '#/components/schemas/MetricDefinition'
          x-ms-identifiers:
            - unit
            - /name/value
    MetricDimension:
      description: The metric dimension. It indicates the source of the metric.
      type: object
      properties:
        name:
          description: The metric dimension name.
          type: string
        value:
          description: The metric dimension values.
          type: string
    MetricFilter:
      description: The OData filters to be used for metrics.
      required:
        - category
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MetricNameFilter'
          description: Specifies the metric name filter specifying the name of the metric to be filtered on. Only 'Equality' operator is supported for this property.
        startTime:
          format: date-time
          description: Specifies the start time of the time range to be queried. Only 'Greater Than Or Equal To' operator is supported for this property.
          type: string
        endTime:
          format: date-time
          description: Specifies the end time of the time range to be queried. Only 'Less Than Or Equal To' operator is supported for this property.
          type: string
        timeGrain:
          description: Specifies the time granularity of the metrics to be returned. E.g., "P1D". Valid values are the ones returned as the field "timeGrain" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.
          type: string
        category:
          description: Specifies the category of the metrics to be filtered. E.g., "CapacityUtilization". Valid values are the ones returned as the field "category" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionFilter'
          description: Specifies the source(the dimension) of the metrics to be filtered. Only 'Equality' operator is supported for this property.
    MetricList:
      description: The metric list.
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Metrics'
          x-ms-identifiers: []
    MetricName:
      description: The metric name.
      type: object
      properties:
        value:
          description: The metric name.
          type: string
        localizedValue:
          description: The localized metric name.
          type: string
    MetricNameFilter:
      description: The metric name filter, specifying the name of the metric to be filtered on.
      type: object
      properties:
        value:
          description: Specifies the metric name to be filtered on. E.g., CloudStorageUsed. Valid values are the ones returned in the field "name" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.
          type: string
    Metrics:
      description: The monitoring metric.
      type: object
      properties:
        resourceId:
          description: The ID of metric source.
          type: string
        startTime:
          format: date-time
          description: The start time of the metric data.
          type: string
        endTime:
          format: date-time
          description: The end time of the metric data.
          type: string
        timeGrain:
          description: The time granularity of the metric data.
          type: string
        primaryAggregation:
          description: The metric aggregation type.
          enum:
            - Average
            - Last
            - Maximum
            - Minimum
            - None
            - Total
          type: string
          x-ms-enum:
            name: MetricAggregationType
            modelAsString: false
        name:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        dimensions:
          description: The metric dimensions.
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
        unit:
          description: The unit of the metric data.
          enum:
            - Bytes
            - BytesPerSecond
            - Count
            - CountPerSecond
            - Percent
            - Seconds
          type: string
          x-ms-enum:
            name: MetricUnit
            modelAsString: false
        type:
          description: The type of the metric data.
          type: string
        values:
          description: The list of the metric data.
          type: array
          items:
            $ref: '#/components/schemas/MetricData'
          x-ms-identifiers:
            - timeStamp
    NetworkAdapterList:
      description: The collection of network adapters on the device.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAdapters'
          x-ms-identifiers:
            - interfaceId
    NetworkAdapters:
      description: Represents the network adapter on device.
      required:
        - interfaceId
        - netInterfaceStatus
        - iscsiAndCloudStatus
        - mode
      type: object
      properties:
        interfaceId:
          description: The ID of the network adapter.
          enum:
            - Invalid
            - Data0
            - Data1
            - Data2
            - Data3
            - Data4
            - Data5
          type: string
          x-ms-enum:
            name: NetInterfaceId
            modelAsString: false
        netInterfaceStatus:
          description: Value indicating status of network adapter.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: NetInterfaceStatus
            modelAsString: false
        isDefault:
          description: Value indicating whether this instance is default.
          type: boolean
        iscsiAndCloudStatus:
          description: Value indicating cloud and ISCSI status of network adapter.
          enum:
            - Disabled
            - IscsiEnabled
            - CloudEnabled
            - IscsiAndCloudEnabled
          type: string
          x-ms-enum:
            name: ISCSIAndCloudStatus
            modelAsString: false
        speed:
          format: int64
          description: The speed of the network adapter.
          type: integer
        mode:
          description: The mode of network adapter, either IPv4, IPv6 or both.
          enum:
            - Invalid
            - IPV4
            - IPV6
            - BOTH
          type: string
          x-ms-enum:
            name: NetworkMode
            modelAsString: false
        nicIpv4Settings:
          $ref: '#/components/schemas/NicIPv4'
          description: The IPv4 configuration of the network adapter.
        nicIpv6Settings:
          $ref: '#/components/schemas/NicIPv6'
          description: The IPv6 configuration of the network adapter.
    NetworkInterfaceData0Settings:
      description: The 'Data 0' network interface card settings.
      type: object
      properties:
        controllerZeroIp:
          description: The controller 0's IPv4 address.
          type: string
        controllerOneIp:
          description: The controller 1's IPv4 address.
          type: string
    NetworkSettings:
      description: Represents the network settings of a device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/NetworkSettingsProperties'
          description: The properties of network settings of a device.
          x-ms-client-flatten: true
      type: object
    NetworkSettingsPatch:
      description: Represents the patch request for the network settings of a device.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/NetworkSettingsPatchProperties'
          description: The properties of the network settings patch.
          x-ms-client-flatten: true
      type: object
    NetworkSettingsPatchProperties:
      description: The properties of the network settings patch.
      type: object
      properties:
        dnsSettings:
          $ref: '#/components/schemas/DNSSettings'
          description: The DNS (Domain Name System) settings of device.
        networkAdapters:
          $ref: '#/components/schemas/NetworkAdapterList'
          description: The network adapter list of device.
    NetworkSettingsProperties:
      description: The properties of the network settings of device.
      required:
        - dnsSettings
        - networkAdapters
        - webproxySettings
      type: object
      properties:
        dnsSettings:
          $ref: '#/components/schemas/DNSSettings'
          description: The DNS (Domain Name System) settings of device.
        networkAdapters:
          $ref: '#/components/schemas/NetworkAdapterList'
          description: The network adapter list of device.
        webproxySettings:
          $ref: '#/components/schemas/WebproxySettings'
          description: The webproxy settings of device.
    NicIPv4:
      description: Details related to the IPv4 address configuration.
      type: object
      properties:
        ipv4Address:
          description: The IPv4 address of the network adapter.
          type: string
        ipv4Netmask:
          description: The IPv4 netmask of the network adapter.
          type: string
        ipv4Gateway:
          description: The IPv4 gateway of the network adapter.
          type: string
        controller0Ipv4Address:
          description: The IPv4 address of Controller0.
          type: string
        controller1Ipv4Address:
          description: The IPv4 address of Controller1.
          type: string
    NicIPv6:
      description: Details related to the IPv6 address configuration.
      type: object
      properties:
        ipv6Address:
          description: The IPv6 address of the network adapter.
          type: string
        ipv6Prefix:
          description: The IPv6 prefix of the network adapter.
          type: string
        ipv6Gateway:
          description: The IPv6 gateway of the network adapter.
          type: string
        controller0Ipv6Address:
          description: The IPv6 address of Controller0.
          type: string
        controller1Ipv6Address:
          description: The IPv6 address of Controller1.
          type: string
    PublicKey:
      description: The public key.
      required:
        - key
      type: object
      properties:
        key:
          description: The key.
          type: string
    RemoteManagementSettings:
      description: The settings for remote management of a device.
      required:
        - remoteManagementMode
      type: object
      properties:
        remoteManagementMode:
          description: The remote management mode.
          enum:
            - Unknown
            - Disabled
            - HttpsEnabled
            - HttpsAndHttpEnabled
          type: string
          x-ms-enum:
            name: RemoteManagementModeConfiguration
            modelAsString: false
        remoteManagementCertificate:
          description: The remote management certificates.
          type: string
    RemoteManagementSettingsPatch:
      description: The settings for updating remote management mode of the device.
      required:
        - remoteManagementMode
      type: object
      properties:
        remoteManagementMode:
          description: The remote management mode.
          enum:
            - Unknown
            - Disabled
            - HttpsEnabled
            - HttpsAndHttpEnabled
          type: string
          x-ms-enum:
            name: RemoteManagementModeConfiguration
            modelAsString: false
    Resource:
      description: The Azure Resource.
      required:
        - location
      type: object
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The resource name.
          type: string
          readOnly: true
        type:
          description: The resource type.
          type: string
          readOnly: true
        location:
          description: The geo location of the resource.
          type: string
        tags:
          description: The tags attached to the resource.
          type: object
          additionalProperties:
            type: string
      x-ms-azure-resource: true
    ScheduleRecurrence:
      description: The schedule recurrence.
      required:
        - recurrenceType
        - recurrenceValue
      type: object
      properties:
        recurrenceType:
          description: The recurrence type.
          enum:
            - Minutes
            - Hourly
            - Daily
            - Weekly
          type: string
          x-ms-enum:
            name: RecurrenceType
            modelAsString: false
        recurrenceValue:
          format: int32
          description: The recurrence value.
          type: integer
        weeklyDaysList:
          description: The week days list. Applicable only for schedules of recurrence type 'weekly'.
          type: array
          items:
            enum:
              - Sunday
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
            type: string
            x-ms-enum:
              name: DayOfWeek
              modelAsString: false
    SecondaryDNSSettings:
      description: The secondary DNS settings.
      type: object
      properties:
        secondaryDnsServers:
          description: The list of secondary DNS Server IP addresses.
          type: array
          items:
            type: string
    SecuritySettings:
      description: The security settings of a device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/SecuritySettingsProperties'
          description: The properties of the security settings of a device.
          x-ms-client-flatten: true
      type: object
    SecuritySettingsPatch:
      description: Represents the patch request for the security settings of a device.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/SecuritySettingsPatchProperties'
          description: The properties of the security settings patch.
          x-ms-client-flatten: true
      type: object
    SecuritySettingsPatchProperties:
      description: The properties of the security settings patch.
      type: object
      properties:
        remoteManagementSettings:
          $ref: '#/components/schemas/RemoteManagementSettingsPatch'
          description: The remote management settings.
        deviceAdminPassword:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The device administrator password.
        snapshotPassword:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The snapshot manager password.
        chapSettings:
          $ref: '#/components/schemas/ChapSettings'
          description: The device CHAP and reverse-CHAP settings.
        cloudApplianceSettings:
          $ref: '#/components/schemas/CloudApplianceSettings'
          description: The cloud appliance settings.
    SecuritySettingsProperties:
      description: The properties of security settings of a device.
      required:
        - remoteManagementSettings
        - chapSettings
      type: object
      properties:
        remoteManagementSettings:
          $ref: '#/components/schemas/RemoteManagementSettings'
          description: The settings for remote management of a device.
        chapSettings:
          $ref: '#/components/schemas/ChapSettings'
          description: The Challenge-Handshake Authentication Protocol (CHAP) settings.
    SendTestAlertEmailRequest:
      description: The request for sending test alert email
      required:
        - emailList
      type: object
      properties:
        emailList:
          description: The list of email IDs to send the test alert email
          type: array
          items:
            type: string
    StorageAccountCredential:
      description: The storage account credential.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/StorageAccountCredentialProperties'
          description: The storage account credential properties.
          x-ms-client-flatten: true
      type: object
    StorageAccountCredentialList:
      description: The collection of storage account credential entities.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/StorageAccountCredential'
    StorageAccountCredentialProperties:
      description: The storage account credential properties.
      required:
        - endPoint
        - sslStatus
      type: object
      properties:
        endPoint:
          description: The storage endpoint
          type: string
        sslStatus:
          description: Signifies whether SSL needs to be enabled or not.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: SslStatus
            modelAsString: false
        accessKey:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The details of the storage account password.
        volumesCount:
          format: int32
          description: The count of volumes using this storage account credential.
          type: integer
          readOnly: true
    SymmetricEncryptedSecret:
      description: Represents the secrets encrypted using Symmetric Encryption Key.
      required:
        - value
        - encryptionAlgorithm
      type: object
      properties:
        value:
          description: The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none.
          type: string
        valueCertificateThumbprint:
          description: The thumbprint of the cert that was used to encrypt "Value".
          type: string
        encryptionAlgorithm:
          description: The algorithm used to encrypt the "Value".
          enum:
            - None
            - AES256
            - RSAES_PKCS1_v_1_5
          type: string
          x-ms-enum:
            name: EncryptionAlgorithm
            modelAsString: false
    TargetEligibilityErrorMessage:
      description: The error/warning message due to which the device is ineligible as a failover target device.
      type: object
      properties:
        message:
          description: The localized error message stating the reason why the device is not eligible as a target device.
          type: string
        resolution:
          description: The localized resolution message for the error.
          type: string
        resultCode:
          description: The result code for the error, due to which the device does not qualify as a failover target device.
          enum:
            - TargetAndSourceCannotBeSameError
            - TargetIsNotOnlineError
            - TargetSourceIncompatibleVersionError
            - LocalToTieredVolumesConversionWarning
            - TargetInsufficientCapacityError
            - TargetInsufficientLocalVolumeMemoryError
            - TargetInsufficientTieredVolumeMemoryError
          type: string
          x-ms-enum:
            name: TargetEligibilityResultCode
            modelAsString: false
    TargetEligibilityResult:
      description: The eligibility result of device, as a failover target device.
      type: object
      properties:
        eligibilityStatus:
          description: The eligibility status of device, as a failover target device.
          enum:
            - NotEligible
            - Eligible
          type: string
          x-ms-enum:
            name: TargetEligibilityStatus
            modelAsString: false
        messages:
          description: The list of error messages, if a device does not qualify as a failover target device.
          type: array
          items:
            $ref: '#/components/schemas/TargetEligibilityErrorMessage'
          x-ms-identifiers: []
    Time:
      description: The time.
      required:
        - hours
        - minutes
        - seconds
      type: object
      properties:
        hours:
          format: int32
          description: The hour.
          maximum: 23
          minimum: 0
          type: integer
        minutes:
          format: int32
          description: The minute.
          maximum: 59
          minimum: 0
          type: integer
        seconds:
          format: int32
          description: The second.
          maximum: 59
          minimum: 0
          type: integer
    TimeSettings:
      description: The time settings of a device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/TimeSettingsProperties'
          description: The properties of the time settings of a device.
          x-ms-client-flatten: true
      type: object
    TimeSettingsProperties:
      description: The properties of time settings of a device.
      required:
        - timeZone
      type: object
      properties:
        timeZone:
          description: The timezone of device, like '(UTC -06:00) Central America'
          type: string
        primaryTimeServer:
          description: The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.
          type: string
        secondaryTimeServer:
          description: The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.
          type: array
          items:
            type: string
    Updates:
      description: The updates profile of a device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/UpdatesProperties'
          description: The properties of the updates profile.
          x-ms-client-flatten: true
      type: object
    UpdatesProperties:
      description: The properties of the updates profile.
      type: object
      properties:
        regularUpdatesAvailable:
          description: Set to 'true' if regular updates are available for the device.
          type: boolean
        maintenanceModeUpdatesAvailable:
          description: Set to 'true' if maintenance mode update available.
          type: boolean
        isUpdateInProgress:
          description: Indicates whether an update is in progress or not.
          type: boolean
        lastUpdatedTime:
          format: date-time
          description: The time when the last update was completed.
          type: string
    VmImage:
      description: The virtual machine image.
      required:
        - name
        - version
        - offer
        - publisher
        - sku
      type: object
      properties:
        name:
          description: The name.
          type: string
        version:
          description: The version.
          type: string
        offer:
          description: The offer.
          type: string
        publisher:
          description: The publisher.
          type: string
        sku:
          description: The SKU.
          type: string
    Volume:
      description: The volume.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/VolumeProperties'
          description: The properties of the volume.
          x-ms-client-flatten: true
      type: object
    VolumeContainer:
      description: The volume container.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: The Kind of the object. Currently only Series8000 is supported
          enum:
            - Series8000
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: false
        properties:
          $ref: '#/components/schemas/VolumeContainerProperties'
          description: The volume container properties.
          x-ms-client-flatten: true
      type: object
    VolumeContainerFailoverMetadata:
      description: The metadata of the volume container, that is being considered as part of a failover set.
      type: object
      properties:
        volumeContainerId:
          description: The path ID of the volume container.
          type: string
        volumes:
          description: The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
          type: array
          items:
            $ref: '#/components/schemas/VolumeFailoverMetadata'
          x-ms-identifiers: []
    VolumeContainerList:
      description: The collection of volume container entities.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/VolumeContainer'
    VolumeContainerProperties:
      description: The properties of volume container.
      required:
        - storageAccountCredentialId
      type: object
      properties:
        encryptionKey:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
        encryptionStatus:
          description: The flag to denote whether encryption is enabled or not.
          enum:
            - Enabled
            - Disabled
          type: string
          readOnly: true
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: false
        volumeCount:
          format: int32
          description: The number of volumes in the volume Container.
          type: integer
          readOnly: true
        storageAccountCredentialId:
          description: The path ID of storage account associated with the volume container.
          type: string
        ownerShipStatus:
          description: The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
          enum:
            - Owned
            - NotOwned
          type: string
          readOnly: true
          x-ms-enum:
            name: OwnerShipStatus
            modelAsString: false
        bandWidthRateInMbps:
          format: int32
          description: The bandwidth-rate set on the volume container.
          type: integer
        bandwidthSettingId:
          description: The ID of the bandwidth setting associated with the volume container.
          type: string
        totalCloudStorageUsageInBytes:
          format: int64
          description: The total cloud storage for the volume container.
          type: integer
          readOnly: true
    VolumeFailoverMetadata:
      description: The metadata of a volume that has valid cloud snapshot.
      type: object
      properties:
        volumeId:
          description: The path ID of the volume.
          type: string
        volumeType:
          description: The type of the volume.
          enum:
            - Tiered
            - Archival
            - LocallyPinned
          type: string
          x-ms-enum:
            name: VolumeType
            modelAsString: false
        sizeInBytes:
          format: int64
          description: The size of the volume in bytes at the time the snapshot was taken.
          type: integer
        backupCreatedDate:
          format: date-time
          description: The date at which the snapshot was taken.
          type: string
        backupElementId:
          description: The path ID of the backup-element for this volume, inside the backup set.
          type: string
        backupId:
          description: The path ID of the backup set.
          type: string
        backupPolicyId:
          description: The path ID of the backup policy using which the snapshot was taken.
          type: string
    VolumeList:
      description: The collection of volumes.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
    VolumeProperties:
      description: The properties of volume.
      required:
        - sizeInBytes
        - volumeType
        - accessControlRecordIds
        - volumeStatus
        - monitoringStatus
      type: object
      properties:
        sizeInBytes:
          format: int64
          description: The size of the volume in bytes.
          type: integer
        volumeType:
          description: The type of the volume.
          enum:
            - Tiered
            - Archival
            - LocallyPinned
          type: string
          x-ms-enum:
            name: VolumeType
            modelAsString: false
        volumeContainerId:
          description: The ID of the volume container, in which this volume is created.
          type: string
          readOnly: true
        accessControlRecordIds:
          description: The IDs of the access control records, associated with the volume.
          type: array
          items:
            type: string
        volumeStatus:
          description: The volume status.
          enum:
            - Online
            - Offline
          type: string
          x-ms-enum:
            name: VolumeStatus
            modelAsString: false
        operationStatus:
          description: The operation status on the volume.
          enum:
            - None
            - Updating
            - Deleting
            - Restoring
          type: string
          readOnly: true
          x-ms-enum:
            name: OperationStatus
            modelAsString: false
        backupStatus:
          description: The backup status of the volume.
          enum:
            - Enabled
            - Disabled
          type: string
          readOnly: true
          x-ms-enum:
            name: BackupStatus
            modelAsString: false
        monitoringStatus:
          description: The monitoring status of the volume.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: MonitoringStatus
            modelAsString: false
        backupPolicyIds:
          description: The IDs of the backup policies, in which this volume is part of.
          type: array
          items:
            type: string
          readOnly: true
    WebproxySettings:
      description: The web proxy settings on the device.
      required:
        - authentication
        - username
      type: object
      properties:
        connectionUri:
          description: The connection URI.
          type: string
        authentication:
          description: The authentication type.
          enum:
            - Invalid
            - None
            - Basic
            - NTLM
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: false
        username:
          description: The webproxy username.
          type: string
  x-stackQL-resources:
    operations:
      id: azure_extras.storsimple_8000_series.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StorSimple~1operations?api-version=2017-06-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableProviderOperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managers:
      id: azure_extras.storsimple_8000_series.managers
      name: managers
      title: managers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorSimple~1managers?api-version=2017-06-01/get'
            operationId: Managers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers?api-version=2017-06-01/get'
            operationId: Managers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}?api-version=2017-06-01/get'
            operationId: Managers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Manager
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}?api-version=2017-06-01/put'
            operationId: Managers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Manager
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}?api-version=2017-06-01/delete'
            operationId: Managers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}?api-version=2017-06-01/patch'
            operationId: Managers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Manager
        regenerate_activation_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1regenerateActivationKey?api-version=2017-06-01/post'
            operationId: Managers_RegenerateActivationKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Key
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers/methods/get'
          - $ref: '#/components/x-stackQL-resources/managers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/managers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/managers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/managers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managers/methods/delete'
    access_control_records:
      id: azure_extras.storsimple_8000_series.access_control_records
      name: access_control_records
      title: access_control_records
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1accessControlRecords?api-version=2017-06-01/get'
            operationId: AccessControlRecords_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlRecordList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1accessControlRecords~1{accessControlRecordName}?api-version=2017-06-01/get'
            operationId: AccessControlRecords_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlRecord
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1accessControlRecords~1{accessControlRecordName}?api-version=2017-06-01/put'
            operationId: AccessControlRecords_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlRecord
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1accessControlRecords~1{accessControlRecordName}?api-version=2017-06-01/delete'
            operationId: AccessControlRecords_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_control_records/methods/get'
          - $ref: '#/components/x-stackQL-resources/access_control_records/methods/list_by_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_control_records/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_control_records/methods/delete'
    alerts:
      id: azure_extras.storsimple_8000_series.alerts
      name: alerts
      title: alerts
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1alerts?api-version=2017-06-01/get'
            operationId: Alerts_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AlertList
            objectKey: $.value
        clear:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1clearAlerts?api-version=2017-06-01/post'
            operationId: Alerts_Clear
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        send_test_email:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1sendTestAlertEmail?api-version=2017-06-01/post'
            operationId: Alerts_SendTestEmail
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/list_by_manager'
        insert: []
        update: []
        replace: []
        delete: []
    bandwidth_settings:
      id: azure_extras.storsimple_8000_series.bandwidth_settings
      name: bandwidth_settings
      title: bandwidth_settings
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1bandwidthSettings?api-version=2017-06-01/get'
            operationId: BandwidthSettings_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BandwidthSettingList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1bandwidthSettings~1{bandwidthSettingName}?api-version=2017-06-01/get'
            operationId: BandwidthSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BandwidthSetting
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1bandwidthSettings~1{bandwidthSettingName}?api-version=2017-06-01/put'
            operationId: BandwidthSettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BandwidthSetting
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1bandwidthSettings~1{bandwidthSettingName}?api-version=2017-06-01/delete'
            operationId: BandwidthSettings_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bandwidth_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/bandwidth_settings/methods/list_by_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/bandwidth_settings/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bandwidth_settings/methods/delete'
    cloud_appliances_supported_configurations:
      id: azure_extras.storsimple_8000_series.cloud_appliances_supported_configurations
      name: cloud_appliances_supported_configurations
      title: cloud_appliances_supported_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1cloudApplianceConfigurations?api-version=2017-06-01/get'
            operationId: CloudAppliancesSupportedConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudApplianceConfigurationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_appliances_supported_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    devices:
      id: azure_extras.storsimple_8000_series.devices
      name: devices
      title: devices
      methods:
        configure:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1configureDevice?api-version=2017-06-01/post'
            operationId: Devices_Configure
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices?api-version=2017-06-01/get'
            operationId: Devices_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}?api-version=2017-06-01/get'
            operationId: Devices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Device
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}?api-version=2017-06-01/delete'
            operationId: Devices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}?api-version=2017-06-01/patch'
            operationId: Devices_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Device
        authorize_for_service_encryption_key_rollover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1authorizeForServiceEncryptionKeyRollover?api-version=2017-06-01/post'
            operationId: Devices_AuthorizeForServiceEncryptionKeyRollover
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        deactivate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1deactivate?api-version=2017-06-01/post'
            operationId: Devices_Deactivate
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        install_updates:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1installUpdates?api-version=2017-06-01/post'
            operationId: Devices_InstallUpdates
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        scan_for_updates:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1scanForUpdates?api-version=2017-06-01/post'
            operationId: Devices_ScanForUpdates
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        failover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{sourceDeviceName}~1failover?api-version=2017-06-01/post'
            operationId: Devices_Failover
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/devices/methods/list_by_manager'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/devices/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete'
    device_settings_alert_settings:
      id: azure_extras.storsimple_8000_series.device_settings_alert_settings
      name: device_settings_alert_settings
      title: device_settings_alert_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1alertSettings~1default?api-version=2017-06-01/get'
            operationId: DeviceSettingsAlertSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AlertSettings
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1alertSettings~1default?api-version=2017-06-01/put'
            operationId: DeviceSettingsAlertSettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AlertSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_settings_alert_settings/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/device_settings_alert_settings/methods/create_or_update'
        update: []
        replace: []
        delete: []
    backup_policies:
      id: azure_extras.storsimple_8000_series.backup_policies
      name: backup_policies
      title: backup_policies
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies?api-version=2017-06-01/get'
            operationId: BackupPolicies_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupPolicyList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies~1{backupPolicyName}?api-version=2017-06-01/get'
            operationId: BackupPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies~1{backupPolicyName}?api-version=2017-06-01/put'
            operationId: BackupPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies~1{backupPolicyName}?api-version=2017-06-01/delete'
            operationId: BackupPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        backup_now:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies~1{backupPolicyName}~1backup?api-version=2017-06-01/post'
            operationId: BackupPolicies_BackupNow
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/list_by_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/delete'
    backup_schedules:
      id: azure_extras.storsimple_8000_series.backup_schedules
      name: backup_schedules
      title: backup_schedules
      methods:
        list_by_backup_policy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies~1{backupPolicyName}~1schedules?api-version=2017-06-01/get'
            operationId: BackupSchedules_ListByBackupPolicy
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupScheduleList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies~1{backupPolicyName}~1schedules~1{backupScheduleName}?api-version=2017-06-01/get'
            operationId: BackupSchedules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupSchedule
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies~1{backupPolicyName}~1schedules~1{backupScheduleName}?api-version=2017-06-01/put'
            operationId: BackupSchedules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupSchedule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backupPolicies~1{backupPolicyName}~1schedules~1{backupScheduleName}?api-version=2017-06-01/delete'
            operationId: BackupSchedules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_schedules/methods/list_by_backup_policy'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_schedules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_schedules/methods/delete'
    backups:
      id: azure_extras.storsimple_8000_series.backups
      name: backups
      title: backups
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backups?api-version=2017-06-01/get'
            operationId: Backups_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupList
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backups~1{backupName}?api-version=2017-06-01/delete'
            operationId: Backups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        clone:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backups~1{backupName}~1elements~1{backupElementName}~1clone?api-version=2017-06-01/post'
            operationId: Backups_Clone
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1backups~1{backupName}~1restore?api-version=2017-06-01/post'
            operationId: Backups_Restore
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/list_by_device'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    hardware_component_groups:
      id: azure_extras.storsimple_8000_series.hardware_component_groups
      name: hardware_component_groups
      title: hardware_component_groups
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1hardwareComponentGroups?api-version=2017-06-01/get'
            operationId: HardwareComponentGroups_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HardwareComponentGroupList
            objectKey: $.value
        change_controller_power_state:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1hardwareComponentGroups~1{hardwareComponentGroupName}~1changeControllerPowerState?api-version=2017-06-01/post'
            operationId: HardwareComponentGroups_ChangeControllerPowerState
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hardware_component_groups/methods/list_by_device'
        insert: []
        update: []
        replace: []
        delete: []
    jobs:
      id: azure_extras.storsimple_8000_series.jobs
      name: jobs
      title: jobs
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1jobs?api-version=2017-06-01/get'
            operationId: Jobs_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1jobs~1{jobName}?api-version=2017-06-01/get'
            operationId: Jobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1jobs~1{jobName}~1cancel?api-version=2017-06-01/post'
            operationId: Jobs_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1jobs?api-version=2017-06-01/get'
            operationId: Jobs_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_device'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_manager'
        insert: []
        update: []
        replace: []
        delete: []
    devices_failover_sets:
      id: azure_extras.storsimple_8000_series.devices_failover_sets
      name: devices_failover_sets
      title: devices_failover_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1listFailoverSets?api-version=2017-06-01/post'
            operationId: DevicesFailoverSets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FailoverSetsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_failover_sets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    devices_metrics:
      id: azure_extras.storsimple_8000_series.devices_metrics
      name: devices_metrics
      title: devices_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1metrics?api-version=2017-06-01/get'
            operationId: DevicesMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    devices_metric_definitions:
      id: azure_extras.storsimple_8000_series.devices_metric_definitions
      name: devices_metric_definitions
      title: devices_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1metricsDefinitions?api-version=2017-06-01/get'
            operationId: DevicesMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    device_settings_network_settings:
      id: azure_extras.storsimple_8000_series.device_settings_network_settings
      name: device_settings_network_settings
      title: device_settings_network_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1networkSettings~1default?api-version=2017-06-01/get'
            operationId: DeviceSettingsNetworkSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSettings
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1networkSettings~1default?api-version=2017-06-01/patch'
            operationId: DeviceSettingsNetworkSettings_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_settings_network_settings/methods/get'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/device_settings_network_settings/methods/update'
        replace: []
        delete: []
    managers_device_public_encryption_keys:
      id: azure_extras.storsimple_8000_series.managers_device_public_encryption_keys
      name: managers_device_public_encryption_keys
      title: managers_device_public_encryption_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1publicEncryptionKey?api-version=2017-06-01/post'
            operationId: ManagersDevicePublicEncryptionKey_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PublicKey
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_device_public_encryption_keys/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    device_settings_security_settings:
      id: azure_extras.storsimple_8000_series.device_settings_security_settings
      name: device_settings_security_settings
      title: device_settings_security_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1securitySettings~1default?api-version=2017-06-01/get'
            operationId: DeviceSettingsSecuritySettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecuritySettings
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1securitySettings~1default?api-version=2017-06-01/patch'
            operationId: DeviceSettingsSecuritySettings_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecuritySettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_settings_security_settings/methods/get'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/device_settings_security_settings/methods/update'
        replace: []
        delete: []
    device_settings:
      id: azure_extras.storsimple_8000_series.device_settings
      name: device_settings
      title: device_settings
      methods:
        sync_remotemanagement_certificate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1securitySettings~1default~1syncRemoteManagementCertificate?api-version=2017-06-01/post'
            operationId: DeviceSettings_SyncRemotemanagementCertificate
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    device_settings_time_settings:
      id: azure_extras.storsimple_8000_series.device_settings_time_settings
      name: device_settings_time_settings
      title: device_settings_time_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1timeSettings~1default?api-version=2017-06-01/get'
            operationId: DeviceSettingsTimeSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TimeSettings
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1timeSettings~1default?api-version=2017-06-01/put'
            operationId: DeviceSettingsTimeSettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TimeSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_settings_time_settings/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/device_settings_time_settings/methods/create_or_update'
        update: []
        replace: []
        delete: []
    devices_update_summaries:
      id: azure_extras.storsimple_8000_series.devices_update_summaries
      name: devices_update_summaries
      title: devices_update_summaries
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1updateSummary~1default?api-version=2017-06-01/get'
            operationId: DevicesUpdateSummary_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Updates
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_update_summaries/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    volume_containers:
      id: azure_extras.storsimple_8000_series.volume_containers
      name: volume_containers
      title: volume_containers
      methods:
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers?api-version=2017-06-01/get'
            operationId: VolumeContainers_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VolumeContainerList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}?api-version=2017-06-01/get'
            operationId: VolumeContainers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VolumeContainer
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}?api-version=2017-06-01/put'
            operationId: VolumeContainers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VolumeContainer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}?api-version=2017-06-01/delete'
            operationId: VolumeContainers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_containers/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_containers/methods/list_by_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/volume_containers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volume_containers/methods/delete'
    volume_containers_metrics:
      id: azure_extras.storsimple_8000_series.volume_containers_metrics
      name: volume_containers_metrics
      title: volume_containers_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}~1metrics?api-version=2017-06-01/get'
            operationId: VolumeContainersMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_containers_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    volume_containers_metric_definitions:
      id: azure_extras.storsimple_8000_series.volume_containers_metric_definitions
      name: volume_containers_metric_definitions
      title: volume_containers_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}~1metricsDefinitions?api-version=2017-06-01/get'
            operationId: VolumeContainersMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_containers_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    volumes:
      id: azure_extras.storsimple_8000_series.volumes
      name: volumes
      title: volumes
      methods:
        list_by_volume_container:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}~1volumes?api-version=2017-06-01/get'
            operationId: Volumes_ListByVolumeContainer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VolumeList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}~1volumes~1{volumeName}?api-version=2017-06-01/get'
            operationId: Volumes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Volume
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}~1volumes~1{volumeName}?api-version=2017-06-01/put'
            operationId: Volumes_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Volume
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}~1volumes~1{volumeName}?api-version=2017-06-01/delete'
            operationId: Volumes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumes?api-version=2017-06-01/get'
            operationId: Volumes_ListByDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VolumeList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list_by_volume_container'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list_by_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/delete'
    volumes_metrics:
      id: azure_extras.storsimple_8000_series.volumes_metrics
      name: volumes_metrics
      title: volumes_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}~1volumes~1{volumeName}~1metrics?api-version=2017-06-01/get'
            operationId: VolumesMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    volumes_metric_definitions:
      id: azure_extras.storsimple_8000_series.volumes_metric_definitions
      name: volumes_metric_definitions
      title: volumes_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{deviceName}~1volumeContainers~1{volumeContainerName}~1volumes~1{volumeName}~1metricsDefinitions?api-version=2017-06-01/get'
            operationId: VolumesMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    devices_failover_targets:
      id: azure_extras.storsimple_8000_series.devices_failover_targets
      name: devices_failover_targets
      title: devices_failover_targets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1devices~1{sourceDeviceName}~1listFailoverTargets?api-version=2017-06-01/post'
            operationId: DevicesFailoverTargets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FailoverTargetsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_failover_targets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managers_encryption_settings:
      id: azure_extras.storsimple_8000_series.managers_encryption_settings
      name: managers_encryption_settings
      title: managers_encryption_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1encryptionSettings~1default?api-version=2017-06-01/get'
            operationId: ManagersEncryptionSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EncryptionSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_encryption_settings/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managers_extended_info:
      id: azure_extras.storsimple_8000_series.managers_extended_info
      name: managers_extended_info
      title: managers_extended_info
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1extendedInformation~1vaultExtendedInfo?api-version=2017-06-01/get'
            operationId: ManagersExtendedInfo_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerExtendedInfo
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1extendedInformation~1vaultExtendedInfo?api-version=2017-06-01/put'
            operationId: ManagersExtendedInfo_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerExtendedInfo
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1extendedInformation~1vaultExtendedInfo?api-version=2017-06-01/delete'
            operationId: ManagersExtendedInfo_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1extendedInformation~1vaultExtendedInfo?api-version=2017-06-01/patch'
            operationId: ManagersExtendedInfo_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagerExtendedInfo
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_extended_info/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/managers_extended_info/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/managers_extended_info/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managers_extended_info/methods/delete'
    managers_feature_support_status:
      id: azure_extras.storsimple_8000_series.managers_feature_support_status
      name: managers_feature_support_status
      title: managers_feature_support_status
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1features?api-version=2017-06-01/get'
            operationId: ManagersFeatureSupportStatus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FeatureList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_feature_support_status/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managers_activation_keys:
      id: azure_extras.storsimple_8000_series.managers_activation_keys
      name: managers_activation_keys
      title: managers_activation_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1listActivationKey?api-version=2017-06-01/post'
            operationId: ManagersActivationKey_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Key
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_activation_keys/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managers_public_encryption_keys:
      id: azure_extras.storsimple_8000_series.managers_public_encryption_keys
      name: managers_public_encryption_keys
      title: managers_public_encryption_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1listPublicEncryptionKey?api-version=2017-06-01/post'
            operationId: ManagersPublicEncryptionKey_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SymmetricEncryptedSecret
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_public_encryption_keys/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managers_metrics:
      id: azure_extras.storsimple_8000_series.managers_metrics
      name: managers_metrics
      title: managers_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1metrics?api-version=2017-06-01/get'
            operationId: ManagersMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managers_metric_definitions:
      id: azure_extras.storsimple_8000_series.managers_metric_definitions
      name: managers_metric_definitions
      title: managers_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1metricsDefinitions?api-version=2017-06-01/get'
            operationId: ManagersMetricDefinition_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cloud_appliances:
      id: azure_extras.storsimple_8000_series.cloud_appliances
      name: cloud_appliances
      title: cloud_appliances
      methods:
        provision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1provisionCloudAppliance?api-version=2017-06-01/post'
            operationId: CloudAppliances_Provision
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    storage_account_credentials:
      id: azure_extras.storsimple_8000_series.storage_account_credentials
      name: storage_account_credentials
      title: storage_account_credentials
      methods:
        list_by_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageAccountCredentials?api-version=2017-06-01/get'
            operationId: StorageAccountCredentials_ListByManager
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredentialList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageAccountCredentials~1{storageAccountCredentialName}?api-version=2017-06-01/get'
            operationId: StorageAccountCredentials_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredential
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageAccountCredentials~1{storageAccountCredentialName}?api-version=2017-06-01/put'
            operationId: StorageAccountCredentials_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredential
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorSimple~1managers~1{managerName}~1storageAccountCredentials~1{storageAccountCredentialName}?api-version=2017-06-01/delete'
            operationId: StorageAccountCredentials_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/list_by_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/delete'
    vw_managers:
      id: azure_extras.storsimple_8000_series.vw_managers
      name: vw_managers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              etag as etag,
              JSON_EXTRACT(properties, '$.cisIntrinsicSettings') as "cis_intrinsic_settings",
              JSON_EXTRACT(properties, '$.sku') as "sku",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              managerName
              FROM azure_extras.storsimple_8000_series.managers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                etag as etag,
                json_extract_path_text(properties, '$.cisIntrinsicSettings') as "cis_intrinsic_settings",
                json_extract_path_text(properties, '$.sku') as "sku",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                managerName
                FROM azure_extras.storsimple_8000_series.managers
                WHERE subscriptionId = 'replace-me';
    vw_access_control_records:
      id: azure_extras.storsimple_8000_series.vw_access_control_records
      name: vw_access_control_records
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.initiatorName') as "initiator_name",
              JSON_EXTRACT(properties, '$.volumeCount') as "volume_count",
              subscriptionId,
              resourceGroupName,
              managerName,
              accessControlRecordName
              FROM azure_extras.storsimple_8000_series.access_control_records
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.initiatorName') as "initiator_name",
                json_extract_path_text(properties, '$.volumeCount') as "volume_count",
                subscriptionId,
                resourceGroupName,
                managerName,
                accessControlRecordName
                FROM azure_extras.storsimple_8000_series.access_control_records
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_bandwidth_settings:
      id: azure_extras.storsimple_8000_series.vw_bandwidth_settings
      name: vw_bandwidth_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.schedules') as "schedules",
              JSON_EXTRACT(properties, '$.volumeCount') as "volume_count",
              subscriptionId,
              resourceGroupName,
              managerName,
              bandwidthSettingName
              FROM azure_extras.storsimple_8000_series.bandwidth_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.schedules') as "schedules",
                json_extract_path_text(properties, '$.volumeCount') as "volume_count",
                subscriptionId,
                resourceGroupName,
                managerName,
                bandwidthSettingName
                FROM azure_extras.storsimple_8000_series.bandwidth_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_devices:
      id: azure_extras.storsimple_8000_series.vw_devices
      name: vw_devices
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.activationTime') as "activation_time",
              JSON_EXTRACT(properties, '$.culture') as "culture",
              JSON_EXTRACT(properties, '$.deviceDescription') as "device_description",
              JSON_EXTRACT(properties, '$.deviceSoftwareVersion') as "device_software_version",
              JSON_EXTRACT(properties, '$.friendlySoftwareName') as "friendly_software_name",
              JSON_EXTRACT(properties, '$.deviceConfigurationStatus') as "device_configuration_status",
              JSON_EXTRACT(properties, '$.targetIqn') as "target_iqn",
              JSON_EXTRACT(properties, '$.modelDescription') as "model_description",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.serialNumber') as "serial_number",
              JSON_EXTRACT(properties, '$.deviceType') as "device_type",
              JSON_EXTRACT(properties, '$.activeController') as "active_controller",
              JSON_EXTRACT(properties, '$.friendlySoftwareVersion') as "friendly_software_version",
              JSON_EXTRACT(properties, '$.availableLocalStorageInBytes') as "available_local_storage_in_bytes",
              JSON_EXTRACT(properties, '$.availableTieredStorageInBytes') as "available_tiered_storage_in_bytes",
              JSON_EXTRACT(properties, '$.provisionedTieredStorageInBytes') as "provisioned_tiered_storage_in_bytes",
              JSON_EXTRACT(properties, '$.provisionedLocalStorageInBytes') as "provisioned_local_storage_in_bytes",
              JSON_EXTRACT(properties, '$.provisionedVolumeSizeInBytes') as "provisioned_volume_size_in_bytes",
              JSON_EXTRACT(properties, '$.usingStorageInBytes') as "using_storage_in_bytes",
              JSON_EXTRACT(properties, '$.totalTieredStorageInBytes') as "total_tiered_storage_in_bytes",
              JSON_EXTRACT(properties, '$.agentGroupVersion') as "agent_group_version",
              JSON_EXTRACT(properties, '$.networkInterfaceCardCount') as "network_interface_card_count",
              JSON_EXTRACT(properties, '$.deviceLocation') as "device_location",
              JSON_EXTRACT(properties, '$.virtualMachineApiType') as "virtual_machine_api_type",
              JSON_EXTRACT(properties, '$.details') as "details",
              JSON_EXTRACT(properties, '$.rolloverDetails') as "rollover_details",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_8000_series.devices
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.activationTime') as "activation_time",
                json_extract_path_text(properties, '$.culture') as "culture",
                json_extract_path_text(properties, '$.deviceDescription') as "device_description",
                json_extract_path_text(properties, '$.deviceSoftwareVersion') as "device_software_version",
                json_extract_path_text(properties, '$.friendlySoftwareName') as "friendly_software_name",
                json_extract_path_text(properties, '$.deviceConfigurationStatus') as "device_configuration_status",
                json_extract_path_text(properties, '$.targetIqn') as "target_iqn",
                json_extract_path_text(properties, '$.modelDescription') as "model_description",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.serialNumber') as "serial_number",
                json_extract_path_text(properties, '$.deviceType') as "device_type",
                json_extract_path_text(properties, '$.activeController') as "active_controller",
                json_extract_path_text(properties, '$.friendlySoftwareVersion') as "friendly_software_version",
                json_extract_path_text(properties, '$.availableLocalStorageInBytes') as "available_local_storage_in_bytes",
                json_extract_path_text(properties, '$.availableTieredStorageInBytes') as "available_tiered_storage_in_bytes",
                json_extract_path_text(properties, '$.provisionedTieredStorageInBytes') as "provisioned_tiered_storage_in_bytes",
                json_extract_path_text(properties, '$.provisionedLocalStorageInBytes') as "provisioned_local_storage_in_bytes",
                json_extract_path_text(properties, '$.provisionedVolumeSizeInBytes') as "provisioned_volume_size_in_bytes",
                json_extract_path_text(properties, '$.usingStorageInBytes') as "using_storage_in_bytes",
                json_extract_path_text(properties, '$.totalTieredStorageInBytes') as "total_tiered_storage_in_bytes",
                json_extract_path_text(properties, '$.agentGroupVersion') as "agent_group_version",
                json_extract_path_text(properties, '$.networkInterfaceCardCount') as "network_interface_card_count",
                json_extract_path_text(properties, '$.deviceLocation') as "device_location",
                json_extract_path_text(properties, '$.virtualMachineApiType') as "virtual_machine_api_type",
                json_extract_path_text(properties, '$.details') as "details",
                json_extract_path_text(properties, '$.rolloverDetails') as "rollover_details",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_8000_series.devices
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_device_settings_alert_settings:
      id: azure_extras.storsimple_8000_series.vw_device_settings_alert_settings
      name: vw_device_settings_alert_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.emailNotification') as "email_notification",
              JSON_EXTRACT(properties, '$.alertNotificationCulture') as "alert_notification_culture",
              JSON_EXTRACT(properties, '$.notificationToServiceOwners') as "notification_to_service_owners",
              JSON_EXTRACT(properties, '$.additionalRecipientEmailList') as "additional_recipient_email_list",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_8000_series.device_settings_alert_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.emailNotification') as "email_notification",
                json_extract_path_text(properties, '$.alertNotificationCulture') as "alert_notification_culture",
                json_extract_path_text(properties, '$.notificationToServiceOwners') as "notification_to_service_owners",
                json_extract_path_text(properties, '$.additionalRecipientEmailList') as "additional_recipient_email_list",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_8000_series.device_settings_alert_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_backup_policies:
      id: azure_extras.storsimple_8000_series.vw_backup_policies
      name: vw_backup_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.volumeIds') as "volume_ids",
              JSON_EXTRACT(properties, '$.nextBackupTime') as "next_backup_time",
              JSON_EXTRACT(properties, '$.lastBackupTime') as "last_backup_time",
              JSON_EXTRACT(properties, '$.schedulesCount') as "schedules_count",
              JSON_EXTRACT(properties, '$.scheduledBackupStatus') as "scheduled_backup_status",
              JSON_EXTRACT(properties, '$.backupPolicyCreationType') as "backup_policy_creation_type",
              JSON_EXTRACT(properties, '$.ssmHostName') as "ssm_host_name",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              backupPolicyName
              FROM azure_extras.storsimple_8000_series.backup_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.volumeIds') as "volume_ids",
                json_extract_path_text(properties, '$.nextBackupTime') as "next_backup_time",
                json_extract_path_text(properties, '$.lastBackupTime') as "last_backup_time",
                json_extract_path_text(properties, '$.schedulesCount') as "schedules_count",
                json_extract_path_text(properties, '$.scheduledBackupStatus') as "scheduled_backup_status",
                json_extract_path_text(properties, '$.backupPolicyCreationType') as "backup_policy_creation_type",
                json_extract_path_text(properties, '$.ssmHostName') as "ssm_host_name",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                backupPolicyName
                FROM azure_extras.storsimple_8000_series.backup_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_backup_schedules:
      id: azure_extras.storsimple_8000_series.vw_backup_schedules
      name: vw_backup_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.scheduleRecurrence') as "schedule_recurrence",
              JSON_EXTRACT(properties, '$.backupType') as "backup_type",
              JSON_EXTRACT(properties, '$.retentionCount') as "retention_count",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.scheduleStatus') as "schedule_status",
              JSON_EXTRACT(properties, '$.lastSuccessfulRun') as "last_successful_run",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              backupPolicyName,
              backupScheduleName
              FROM azure_extras.storsimple_8000_series.backup_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me' AND backupPolicyName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.scheduleRecurrence') as "schedule_recurrence",
                json_extract_path_text(properties, '$.backupType') as "backup_type",
                json_extract_path_text(properties, '$.retentionCount') as "retention_count",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.scheduleStatus') as "schedule_status",
                json_extract_path_text(properties, '$.lastSuccessfulRun') as "last_successful_run",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                backupPolicyName,
                backupScheduleName
                FROM azure_extras.storsimple_8000_series.backup_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me' AND backupPolicyName = 'replace-me';
    vw_jobs:
      id: azure_extras.storsimple_8000_series.vw_jobs
      name: vw_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              status as status,
              startTime as start_time,
              endTime as end_time,
              percentComplete as percent_complete,
              error as error,
              JSON_EXTRACT(properties, '$.jobType') as "job_type",
              JSON_EXTRACT(properties, '$.dataStats') as "data_stats",
              JSON_EXTRACT(properties, '$.entityLabel') as "entity_label",
              JSON_EXTRACT(properties, '$.entityType') as "entity_type",
              JSON_EXTRACT(properties, '$.jobStages') as "job_stages",
              JSON_EXTRACT(properties, '$.deviceId') as "device_id",
              JSON_EXTRACT(properties, '$.isCancellable') as "is_cancellable",
              JSON_EXTRACT(properties, '$.backupType') as "backup_type",
              JSON_EXTRACT(properties, '$.sourceDeviceId') as "source_device_id",
              JSON_EXTRACT(properties, '$.backupPointInTime') as "backup_point_in_time",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              jobName
              FROM azure_extras.storsimple_8000_series.jobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                status as status,
                startTime as start_time,
                endTime as end_time,
                percentComplete as percent_complete,
                error as error,
                json_extract_path_text(properties, '$.jobType') as "job_type",
                json_extract_path_text(properties, '$.dataStats') as "data_stats",
                json_extract_path_text(properties, '$.entityLabel') as "entity_label",
                json_extract_path_text(properties, '$.entityType') as "entity_type",
                json_extract_path_text(properties, '$.jobStages') as "job_stages",
                json_extract_path_text(properties, '$.deviceId') as "device_id",
                json_extract_path_text(properties, '$.isCancellable') as "is_cancellable",
                json_extract_path_text(properties, '$.backupType') as "backup_type",
                json_extract_path_text(properties, '$.sourceDeviceId') as "source_device_id",
                json_extract_path_text(properties, '$.backupPointInTime') as "backup_point_in_time",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                jobName
                FROM azure_extras.storsimple_8000_series.jobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_device_settings_network_settings:
      id: azure_extras.storsimple_8000_series.vw_device_settings_network_settings
      name: vw_device_settings_network_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.dnsSettings') as "dns_settings",
              JSON_EXTRACT(properties, '$.networkAdapters') as "network_adapters",
              JSON_EXTRACT(properties, '$.webproxySettings') as "webproxy_settings",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_8000_series.device_settings_network_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.dnsSettings') as "dns_settings",
                json_extract_path_text(properties, '$.networkAdapters') as "network_adapters",
                json_extract_path_text(properties, '$.webproxySettings') as "webproxy_settings",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_8000_series.device_settings_network_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_device_settings_security_settings:
      id: azure_extras.storsimple_8000_series.vw_device_settings_security_settings
      name: vw_device_settings_security_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.remoteManagementSettings') as "remote_management_settings",
              JSON_EXTRACT(properties, '$.chapSettings') as "chap_settings",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_8000_series.device_settings_security_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.remoteManagementSettings') as "remote_management_settings",
                json_extract_path_text(properties, '$.chapSettings') as "chap_settings",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_8000_series.device_settings_security_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_device_settings_time_settings:
      id: azure_extras.storsimple_8000_series.vw_device_settings_time_settings
      name: vw_device_settings_time_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.timeZone') as "time_zone",
              JSON_EXTRACT(properties, '$.primaryTimeServer') as "primary_time_server",
              JSON_EXTRACT(properties, '$.secondaryTimeServer') as "secondary_time_server",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_8000_series.device_settings_time_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.timeZone') as "time_zone",
                json_extract_path_text(properties, '$.primaryTimeServer') as "primary_time_server",
                json_extract_path_text(properties, '$.secondaryTimeServer') as "secondary_time_server",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_8000_series.device_settings_time_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_devices_update_summaries:
      id: azure_extras.storsimple_8000_series.vw_devices_update_summaries
      name: vw_devices_update_summaries
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.regularUpdatesAvailable') as "regular_updates_available",
              JSON_EXTRACT(properties, '$.maintenanceModeUpdatesAvailable') as "maintenance_mode_updates_available",
              JSON_EXTRACT(properties, '$.isUpdateInProgress') as "is_update_in_progress",
              JSON_EXTRACT(properties, '$.lastUpdatedTime') as "last_updated_time",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName
              FROM azure_extras.storsimple_8000_series.devices_update_summaries
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.regularUpdatesAvailable') as "regular_updates_available",
                json_extract_path_text(properties, '$.maintenanceModeUpdatesAvailable') as "maintenance_mode_updates_available",
                json_extract_path_text(properties, '$.isUpdateInProgress') as "is_update_in_progress",
                json_extract_path_text(properties, '$.lastUpdatedTime') as "last_updated_time",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName
                FROM azure_extras.storsimple_8000_series.devices_update_summaries
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_volume_containers:
      id: azure_extras.storsimple_8000_series.vw_volume_containers
      name: vw_volume_containers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.encryptionKey') as "encryption_key",
              JSON_EXTRACT(properties, '$.encryptionStatus') as "encryption_status",
              JSON_EXTRACT(properties, '$.volumeCount') as "volume_count",
              JSON_EXTRACT(properties, '$.storageAccountCredentialId') as "storage_account_credential_id",
              JSON_EXTRACT(properties, '$.ownerShipStatus') as "owner_ship_status",
              JSON_EXTRACT(properties, '$.bandWidthRateInMbps') as "band_width_rate_in_mbps",
              JSON_EXTRACT(properties, '$.bandwidthSettingId') as "bandwidth_setting_id",
              JSON_EXTRACT(properties, '$.totalCloudStorageUsageInBytes') as "total_cloud_storage_usage_in_bytes",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              volumeContainerName
              FROM azure_extras.storsimple_8000_series.volume_containers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.encryptionKey') as "encryption_key",
                json_extract_path_text(properties, '$.encryptionStatus') as "encryption_status",
                json_extract_path_text(properties, '$.volumeCount') as "volume_count",
                json_extract_path_text(properties, '$.storageAccountCredentialId') as "storage_account_credential_id",
                json_extract_path_text(properties, '$.ownerShipStatus') as "owner_ship_status",
                json_extract_path_text(properties, '$.bandWidthRateInMbps') as "band_width_rate_in_mbps",
                json_extract_path_text(properties, '$.bandwidthSettingId') as "bandwidth_setting_id",
                json_extract_path_text(properties, '$.totalCloudStorageUsageInBytes') as "total_cloud_storage_usage_in_bytes",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                volumeContainerName
                FROM azure_extras.storsimple_8000_series.volume_containers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_volumes:
      id: azure_extras.storsimple_8000_series.vw_volumes
      name: vw_volumes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.sizeInBytes') as "size_in_bytes",
              JSON_EXTRACT(properties, '$.volumeType') as "volume_type",
              JSON_EXTRACT(properties, '$.volumeContainerId') as "volume_container_id",
              JSON_EXTRACT(properties, '$.accessControlRecordIds') as "access_control_record_ids",
              JSON_EXTRACT(properties, '$.volumeStatus') as "volume_status",
              JSON_EXTRACT(properties, '$.operationStatus') as "operation_status",
              JSON_EXTRACT(properties, '$.backupStatus') as "backup_status",
              JSON_EXTRACT(properties, '$.monitoringStatus') as "monitoring_status",
              JSON_EXTRACT(properties, '$.backupPolicyIds') as "backup_policy_ids",
              subscriptionId,
              resourceGroupName,
              managerName,
              deviceName,
              volumeContainerName,
              volumeName
              FROM azure_extras.storsimple_8000_series.volumes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.sizeInBytes') as "size_in_bytes",
                json_extract_path_text(properties, '$.volumeType') as "volume_type",
                json_extract_path_text(properties, '$.volumeContainerId') as "volume_container_id",
                json_extract_path_text(properties, '$.accessControlRecordIds') as "access_control_record_ids",
                json_extract_path_text(properties, '$.volumeStatus') as "volume_status",
                json_extract_path_text(properties, '$.operationStatus') as "operation_status",
                json_extract_path_text(properties, '$.backupStatus') as "backup_status",
                json_extract_path_text(properties, '$.monitoringStatus') as "monitoring_status",
                json_extract_path_text(properties, '$.backupPolicyIds') as "backup_policy_ids",
                subscriptionId,
                resourceGroupName,
                managerName,
                deviceName,
                volumeContainerName,
                volumeName
                FROM azure_extras.storsimple_8000_series.volumes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me' AND deviceName = 'replace-me';
    vw_managers_encryption_settings:
      id: azure_extras.storsimple_8000_series.vw_managers_encryption_settings
      name: vw_managers_encryption_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.encryptionStatus') as "encryption_status",
              JSON_EXTRACT(properties, '$.keyRolloverStatus') as "key_rollover_status",
              subscriptionId,
              resourceGroupName,
              managerName
              FROM azure_extras.storsimple_8000_series.managers_encryption_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.encryptionStatus') as "encryption_status",
                json_extract_path_text(properties, '$.keyRolloverStatus') as "key_rollover_status",
                subscriptionId,
                resourceGroupName,
                managerName
                FROM azure_extras.storsimple_8000_series.managers_encryption_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_managers_extended_info:
      id: azure_extras.storsimple_8000_series.vw_managers_extended_info
      name: vw_managers_extended_info
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              etag as etag,
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.integrityKey') as "integrity_key",
              JSON_EXTRACT(properties, '$.encryptionKey') as "encryption_key",
              JSON_EXTRACT(properties, '$.encryptionKeyThumbprint') as "encryption_key_thumbprint",
              JSON_EXTRACT(properties, '$.portalCertificateThumbprint') as "portal_certificate_thumbprint",
              JSON_EXTRACT(properties, '$.algorithm') as "algorithm",
              subscriptionId,
              resourceGroupName,
              managerName
              FROM azure_extras.storsimple_8000_series.managers_extended_info
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                etag as etag,
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.integrityKey') as "integrity_key",
                json_extract_path_text(properties, '$.encryptionKey') as "encryption_key",
                json_extract_path_text(properties, '$.encryptionKeyThumbprint') as "encryption_key_thumbprint",
                json_extract_path_text(properties, '$.portalCertificateThumbprint') as "portal_certificate_thumbprint",
                json_extract_path_text(properties, '$.algorithm') as "algorithm",
                subscriptionId,
                resourceGroupName,
                managerName
                FROM azure_extras.storsimple_8000_series.managers_extended_info
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
    vw_storage_account_credentials:
      id: azure_extras.storsimple_8000_series.vw_storage_account_credentials
      name: vw_storage_account_credentials
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              kind as kind,
              JSON_EXTRACT(properties, '$.endPoint') as "end_point",
              JSON_EXTRACT(properties, '$.sslStatus') as "ssl_status",
              JSON_EXTRACT(properties, '$.accessKey') as "access_key",
              JSON_EXTRACT(properties, '$.volumesCount') as "volumes_count",
              subscriptionId,
              resourceGroupName,
              managerName,
              storageAccountCredentialName
              FROM azure_extras.storsimple_8000_series.storage_account_credentials
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                kind as kind,
                json_extract_path_text(properties, '$.endPoint') as "end_point",
                json_extract_path_text(properties, '$.sslStatus') as "ssl_status",
                json_extract_path_text(properties, '$.accessKey') as "access_key",
                json_extract_path_text(properties, '$.volumesCount') as "volumes_count",
                subscriptionId,
                resourceGroupName,
                managerName,
                storageAccountCredentialName
                FROM azure_extras.storsimple_8000_series.storage_account_credentials
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managerName = 'replace-me';
paths:
  /providers/Microsoft.StorSimple/operations?api-version=2017-06-01:
    get:
      tags:
        - Operations
      description: Lists all of the available REST API operations of the Microsoft.StorSimple provider
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: The collection of available provider operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableProviderOperationList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.StorSimple/managers?api-version=2017-06-01:
    get:
      tags:
        - Managers
      description: Retrieves all the managers in a subscription.
      operationId: Managers_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: The collection of StorSimple managers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers?api-version=2017-06-01:
    get:
      tags:
        - Managers
      description: Retrieves all the managers in a resource group.
      operationId: Managers_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of StorSimple managers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}?api-version=2017-06-01:
    get:
      tags:
        - Managers
      description: Returns the properties of the specified manager name.
      operationId: Managers_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The StorSimple manager.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
      deprecated: false
    put:
      tags:
        - Managers
      description: Creates or updates the manager.
      operationId: Managers_CreateOrUpdate
      requestBody:
        description: The manager.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manager'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The StorSimple manager has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
        '201':
          description: The StorSimple manager has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
      deprecated: false
    delete:
      tags:
        - Managers
      description: Deletes the manager.
      operationId: Managers_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The StorSimple manager has been successfully deleted
        '204':
          description: The StorSimple manager is already in a deleted state
      deprecated: false
    patch:
      tags:
        - Managers
      description: Updates the StorSimple Manager.
      operationId: Managers_Update
      requestBody:
        description: The manager update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagerPatch'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The StorSimple manager has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords?api-version=2017-06-01:
    get:
      tags:
        - AccessControlRecords
      description: Retrieves all the access control records in a manager.
      operationId: AccessControlRecords_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of access control records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlRecordList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}?api-version=2017-06-01:
    get:
      tags:
        - AccessControlRecords
      description: Returns the properties of the specified access control record name.
      operationId: AccessControlRecords_Get
      parameters:
        - name: accessControlRecordName
          in: path
          description: Name of access control record to be fetched.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The access control record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlRecord'
      deprecated: false
    put:
      tags:
        - AccessControlRecords
      description: Creates or Updates an access control record.
      operationId: AccessControlRecords_CreateOrUpdate
      parameters:
        - name: accessControlRecordName
          in: path
          description: The name of the access control record.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The access control record to be added or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessControlRecord'
      responses:
        '200':
          description: Successfully created or updated the access control record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlRecord'
        '202':
          description: Accepted the request to create or update the access control record.
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - AccessControlRecords
      description: Deletes the access control record.
      operationId: AccessControlRecords_Delete
      parameters:
        - name: accessControlRecordName
          in: path
          description: The name of the access control record to delete.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the access control record.
        '204':
          description: Successfully deleted the access control record.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/alerts?api-version=2017-06-01:
    get:
      tags:
        - Alerts
      description: Retrieves all the alerts in a manager.
      operationId: Alerts_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of alerts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertList'
      deprecated: false
      x-ms-odata: '#/components/schemas/AlertFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/bandwidthSettings?api-version=2017-06-01:
    get:
      tags:
        - BandwidthSettings
      description: Retrieves all the bandwidth setting in a manager.
      operationId: BandwidthSettings_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of bandwidth settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthSettingList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/bandwidthSettings/{bandwidthSettingName}?api-version=2017-06-01:
    get:
      tags:
        - BandwidthSettings
      description: Returns the properties of the specified bandwidth setting name.
      operationId: BandwidthSettings_Get
      parameters:
        - name: bandwidthSettingName
          in: path
          description: The name of bandwidth setting to be fetched.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The bandwidth setting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthSetting'
      deprecated: false
    put:
      tags:
        - BandwidthSettings
      description: Creates or updates the bandwidth setting
      operationId: BandwidthSettings_CreateOrUpdate
      parameters:
        - name: bandwidthSettingName
          in: path
          description: The bandwidth setting name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The bandwidth setting to be added or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BandwidthSetting'
      responses:
        '200':
          description: Successfully created or updated the bandwidth setting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthSetting'
        '202':
          description: Accepted the request to create or update the bandwidth setting.
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - BandwidthSettings
      description: Deletes the bandwidth setting
      operationId: BandwidthSettings_Delete
      parameters:
        - name: bandwidthSettingName
          in: path
          description: The name of the bandwidth setting.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the bandwidth setting.
        '204':
          description: Successfully deleted the bandwidth setting.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/clearAlerts?api-version=2017-06-01:
    post:
      tags:
        - Alerts
      description: Clear the alerts.
      operationId: Alerts_Clear
      requestBody:
        description: The clear alert request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearAlertRequest'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '204':
          description: Successfully cleared the alerts.
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/cloudApplianceConfigurations?api-version=2017-06-01:
    get:
      tags:
        - CloudAppliances
      description: Lists supported cloud appliance models and supported configurations.
      operationId: CloudAppliancesSupportedConfigurations_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of cloud appliance configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudApplianceConfigurationList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: CloudAppliances_ListSupportedConfigurations
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/configureDevice?api-version=2017-06-01:
    post:
      tags:
        - Devices
      description: Complete minimal setup before using the device.
      operationId: Devices_Configure
      requestBody:
        description: The minimal properties to configure a device.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureDeviceRequest'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to configure device.
        '204':
          description: Successfully configured the device.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices?api-version=2017-06-01:
    get:
      tags:
        - Devices
      description: Returns the list of devices for the specified manager.
      operationId: Devices_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $expand
          in: query
          description: Specify $expand=details to populate additional fields related to the device or $expand=rolloverdetails to populate additional fields related to the service data encryption key rollover on device
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}?api-version=2017-06-01:
    get:
      tags:
        - Devices
      description: Returns the properties of the specified device.
      operationId: Devices_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $expand
          in: query
          description: Specify $expand=details to populate additional fields related to the device or $expand=rolloverdetails to populate additional fields related to the service data encryption key rollover on device
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      deprecated: false
    delete:
      tags:
        - Devices
      description: Deletes the device.
      operationId: Devices_Delete
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the device.
        '204':
          description: Successfully deleted the device.
      deprecated: false
      x-ms-long-running-operation: true
    patch:
      tags:
        - Devices
      description: Patches the device.
      operationId: Devices_Update
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: Patch representation of the device.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePatch'
      responses:
        '200':
          description: Successfully patched the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/alertSettings/default?api-version=2017-06-01:
    get:
      tags:
        - DeviceSettings
      description: Gets the alert settings of the specified device.
      operationId: DeviceSettingsAlertSettings_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The Alert settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettings'
      deprecated: false
      x-ms-original-operationId: DeviceSettings_GetAlertSettings
    put:
      tags:
        - DeviceSettings
      description: Creates or updates the alert settings of the specified device.
      operationId: DeviceSettingsAlertSettings_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The alert settings to be added or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertSettings'
      responses:
        '200':
          description: Successfully created or updated the alert settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettings'
        '202':
          description: Accepted the request to create or update the alert settings.
      deprecated: false
      x-ms-long-running-operation: true
      x-ms-original-operationId: DeviceSettings_CreateOrUpdateAlertSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/authorizeForServiceEncryptionKeyRollover?api-version=2017-06-01:
    post:
      tags:
        - Devices
      description: Authorizes the specified device for service data encryption key rollover.
      operationId: Devices_AuthorizeForServiceEncryptionKeyRollover
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '204':
          description: Successfully authorized the device for service encryption key rollover
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies?api-version=2017-06-01:
    get:
      tags:
        - BackupPolicies
      description: Gets all the backup policies in a device.
      operationId: BackupPolicies_ListByDevice
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of backup policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPolicyList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}?api-version=2017-06-01:
    get:
      tags:
        - BackupPolicies
      description: Gets the properties of the specified backup policy name.
      operationId: BackupPolicies_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupPolicyName
          in: path
          description: The name of backup policy to be fetched.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The backup policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPolicy'
      deprecated: false
    put:
      tags:
        - BackupPolicies
      description: Creates or updates the backup policy.
      operationId: BackupPolicies_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupPolicyName
          in: path
          description: The name of the backup policy to be created/updated.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The backup policy.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPolicy'
      responses:
        '200':
          description: Successfully created or updated the backup policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPolicy'
        '202':
          description: Accepted the request to create or update the backup policy.
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - BackupPolicies
      description: Deletes the backup policy.
      operationId: BackupPolicies_Delete
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupPolicyName
          in: path
          description: The name of the backup policy.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the backup policy.
        '204':
          description: Successfully deleted the backup policy.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}/backup?api-version=2017-06-01:
    post:
      tags:
        - BackupPolicies
      description: Backup the backup policy now.
      operationId: BackupPolicies_BackupNow
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupPolicyName
          in: path
          description: The backup policy name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: backupType
          in: query
          description: The backup Type. This can be cloudSnapshot or localSnapshot.
          required: true
          allowReserved: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to backup the backup policy.
        '204':
          description: Successfully completed backup of the backup policy.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}/schedules?api-version=2017-06-01:
    get:
      tags:
        - BackupSchedules
      description: Gets all the backup schedules in a backup policy.
      operationId: BackupSchedules_ListByBackupPolicy
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupPolicyName
          in: path
          description: The backup policy name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of backup schedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupScheduleList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}/schedules/{backupScheduleName}?api-version=2017-06-01:
    get:
      tags:
        - BackupSchedules
      description: Gets the properties of the specified backup schedule name.
      operationId: BackupSchedules_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupPolicyName
          in: path
          description: The backup policy name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: backupScheduleName
          in: path
          description: The name of the backup schedule to be fetched
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The backup schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupSchedule'
      deprecated: false
    put:
      tags:
        - BackupSchedules
      description: Creates or updates the backup schedule.
      operationId: BackupSchedules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupPolicyName
          in: path
          description: The backup policy name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: backupScheduleName
          in: path
          description: The backup schedule name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The backup schedule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupSchedule'
      responses:
        '200':
          description: Successfully created or updated the backup schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupSchedule'
        '202':
          description: Accepted the request to create or update the backup schedule.
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - BackupSchedules
      description: Deletes the backup schedule.
      operationId: BackupSchedules_Delete
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupPolicyName
          in: path
          description: The backup policy name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: backupScheduleName
          in: path
          description: The name the backup schedule.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the backup schedule.
        '204':
          description: Successfully deleted the backup schedule.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups?api-version=2017-06-01:
    get:
      tags:
        - Backups
      description: Retrieves all the backups in a device.
      operationId: Backups_ListByDevice
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of backups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupList'
      deprecated: false
      x-ms-odata: '#/components/schemas/BackupFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}?api-version=2017-06-01:
    delete:
      tags:
        - Backups
      description: Deletes the backup.
      operationId: Backups_Delete
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupName
          in: path
          description: The backup name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the backup.
        '204':
          description: Successfully deleted the backup.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/elements/{backupElementName}/clone?api-version=2017-06-01:
    post:
      tags:
        - Backups
      description: Clones the backup element as a new volume.
      operationId: Backups_Clone
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupName
          in: path
          description: The backup name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: backupElementName
          in: path
          description: The backup element name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The clone request object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneRequest'
      responses:
        '200':
          description: Successfully cloned the backup.
        '202':
          description: Accepted the request to clone.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/restore?api-version=2017-06-01:
    post:
      tags:
        - Backups
      description: Restores the backup on the device.
      operationId: Backups_Restore
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: backupName
          in: path
          description: The backupSet name
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: Successfully restored the backup.
        '202':
          description: Accepted the request to restore.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/deactivate?api-version=2017-06-01:
    post:
      tags:
        - Devices
      description: Deactivates the device.
      operationId: Devices_Deactivate
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to deactivate the device.
        '204':
          description: Successfully deactivated the device.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/hardwareComponentGroups?api-version=2017-06-01:
    get:
      tags:
        - HardwareComponentGroups
      description: Lists the hardware component groups at device-level.
      operationId: HardwareComponentGroups_ListByDevice
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: Successfully fetched hardware component groups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareComponentGroupList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/hardwareComponentGroups/{hardwareComponentGroupName}/changeControllerPowerState?api-version=2017-06-01:
    post:
      tags:
        - HardwareComponentGroups
      description: Changes the power state of the controller.
      operationId: HardwareComponentGroups_ChangeControllerPowerState
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: hardwareComponentGroupName
          in: path
          description: The hardware component group name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The controller power state change request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControllerPowerStateChangeRequest'
      responses:
        '202':
          description: Accepted the request to change power state of the controller.
        '204':
          description: Successfully changed the power state of the controller.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/installUpdates?api-version=2017-06-01:
    post:
      tags:
        - Devices
      description: Downloads and installs the updates on the device.
      operationId: Devices_InstallUpdates
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to download and install updates.
        '204':
          description: Successfully installed updates.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs?api-version=2017-06-01:
    get:
      tags:
        - Jobs
      description: Gets all the jobs for specified device. With optional OData query parameters, a filtered set of jobs is returned.
      operationId: Jobs_ListByDevice
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of jobs for the specified manager and device name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
      deprecated: false
      x-ms-odata: '#/components/schemas/JobFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}?api-version=2017-06-01:
    get:
      tags:
        - Jobs
      description: Gets the details of the specified job name.
      operationId: Jobs_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: jobName
          in: path
          description: The job Name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}/cancel?api-version=2017-06-01:
    post:
      tags:
        - Jobs
      description: Cancels a job on the device.
      operationId: Jobs_Cancel
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: jobName
          in: path
          description: The jobName.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to cancel a deviceJob
        '204':
          description: Successfully cancelled the deviceJob
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/listFailoverSets?api-version=2017-06-01:
    post:
      tags:
        - Devices
      description: Returns all failover sets for a given device and their eligibility for participating in a failover. A failover set refers to a set of volume containers that need to be failed-over as a single unit to maintain data integrity.
      operationId: DevicesFailoverSets_List
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: Returns the list of failover sets on the given device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverSetsList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Devices_ListFailoverSets
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metrics?api-version=2017-06-01:
    get:
      tags:
        - Devices
      description: Gets the metrics for the specified device.
      operationId: DevicesMetrics_List
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Devices_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metricsDefinitions?api-version=2017-06-01:
    get:
      tags:
        - Devices
      description: Gets the metric definitions for the specified device.
      operationId: DevicesMetricDefinition_List
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Devices_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/networkSettings/default?api-version=2017-06-01:
    get:
      tags:
        - DeviceSettings
      description: Gets the network settings of the specified device.
      operationId: DeviceSettingsNetworkSettings_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The Network settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSettings'
      deprecated: false
      x-ms-original-operationId: DeviceSettings_GetNetworkSettings
    patch:
      tags:
        - DeviceSettings
      description: Updates the network settings on the specified device.
      operationId: DeviceSettingsNetworkSettings_Update
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The network settings to be updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkSettingsPatch'
      responses:
        '200':
          description: The Network settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSettings'
        '202':
          description: Accepted the request to update network settings.
      deprecated: false
      x-ms-long-running-operation: true
      x-ms-original-operationId: DeviceSettings_UpdateNetworkSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/publicEncryptionKey?api-version=2017-06-01:
    post:
      tags:
        - Managers
      description: Returns the public encryption key of the device.
      operationId: ManagersDevicePublicEncryptionKey_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The public key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKey'
      deprecated: false
      x-ms-original-operationId: Managers_GetDevicePublicEncryptionKey
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/scanForUpdates?api-version=2017-06-01:
    post:
      tags:
        - Devices
      description: Scans for updates on the device.
      operationId: Devices_ScanForUpdates
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to scan for updates.
        '204':
          description: Successfully scanned for updates.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default?api-version=2017-06-01:
    get:
      tags:
        - DeviceSettings
      description: Returns the Security properties of the specified device name.
      operationId: DeviceSettingsSecuritySettings_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: Device Security settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySettings'
      deprecated: false
      x-ms-original-operationId: DeviceSettings_GetSecuritySettings
    patch:
      tags:
        - DeviceSettings
      description: Patch Security properties of the specified device name.
      operationId: DeviceSettingsSecuritySettings_Update
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The security settings properties to be patched.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySettingsPatch'
      responses:
        '200':
          description: The device Security settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySettings'
        '202':
          description: Accepted the request to update device security settings.
      deprecated: false
      x-ms-long-running-operation: true
      x-ms-original-operationId: DeviceSettings_UpdateSecuritySettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default/syncRemoteManagementCertificate?api-version=2017-06-01:
    post:
      tags:
        - DeviceSettings
      description: sync Remote management Certificate between appliance and Service
      operationId: DeviceSettings_SyncRemotemanagementCertificate
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to sync Remote Management certificate settings.
        '204':
          description: Successfully synced Remote Management certificate settings.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/sendTestAlertEmail?api-version=2017-06-01:
    post:
      tags:
        - Alerts
      description: Sends a test alert email.
      operationId: Alerts_SendTestEmail
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The send test alert email request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTestAlertEmailRequest'
      responses:
        '204':
          description: Successfully sent the test email.
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/timeSettings/default?api-version=2017-06-01:
    get:
      tags:
        - DeviceSettings
      description: Gets the time settings of the specified device.
      operationId: DeviceSettingsTimeSettings_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The time settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSettings'
      deprecated: false
      x-ms-original-operationId: DeviceSettings_GetTimeSettings
    put:
      tags:
        - DeviceSettings
      description: Creates or updates the time settings of the specified device.
      operationId: DeviceSettingsTimeSettings_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The time settings to be added or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSettings'
      responses:
        '200':
          description: Successfully created or updated the time settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSettings'
        '202':
          description: Accepted the request to create or update the time settings.
      deprecated: false
      x-ms-long-running-operation: true
      x-ms-original-operationId: DeviceSettings_CreateOrUpdateTimeSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/updateSummary/default?api-version=2017-06-01:
    get:
      tags:
        - Devices
      description: Returns the update summary of the specified device name.
      operationId: DevicesUpdateSummary_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The update summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Updates'
      deprecated: false
      x-ms-original-operationId: Devices_GetUpdateSummary
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers?api-version=2017-06-01:
    get:
      tags:
        - VolumeContainers
      description: Gets all the volume containers in a device.
      operationId: VolumeContainers_ListByDevice
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The VolumeContainer List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeContainerList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}?api-version=2017-06-01:
    get:
      tags:
        - VolumeContainers
      description: Gets the properties of the specified volume container name.
      operationId: VolumeContainers_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The name of the volume container.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The VolumeContainer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeContainer'
      deprecated: false
    put:
      tags:
        - VolumeContainers
      description: Creates or updates the volume container.
      operationId: VolumeContainers_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The name of the volume container.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The volume container to be added or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeContainer'
      responses:
        '200':
          description: Successfully created or updated the Volume Container.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeContainer'
        '202':
          description: Accepted the request to create or update the Volume Container
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - VolumeContainers
      description: Deletes the volume container.
      operationId: VolumeContainers_Delete
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The name of the volume container.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the Volume Container.
        '204':
          description: Successfully deleted Volume Container.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/metrics?api-version=2017-06-01:
    get:
      tags:
        - VolumeContainers
      description: Gets the metrics for the specified volume container.
      operationId: VolumeContainersMetrics_List
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The volume container name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: VolumeContainers_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/metricsDefinitions?api-version=2017-06-01:
    get:
      tags:
        - VolumeContainers
      description: Gets the metric definitions for the specified volume container.
      operationId: VolumeContainersMetricDefinition_List
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The volume container name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: VolumeContainers_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/volumes?api-version=2017-06-01:
    get:
      tags:
        - Volumes
      description: Retrieves all the volumes in a volume container.
      operationId: Volumes_ListByVolumeContainer
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The volume container name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of volumes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/volumes/{volumeName}?api-version=2017-06-01:
    get:
      tags:
        - Volumes
      description: Returns the properties of the specified volume name.
      operationId: Volumes_Get
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The volume container name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: volumeName
          in: path
          description: The volume name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The volume.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      deprecated: false
    put:
      tags:
        - Volumes
      description: Creates or updates the volume.
      operationId: Volumes_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The volume container name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: volumeName
          in: path
          description: The volume name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: Volume to be created or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      responses:
        '200':
          description: Successfully created or updated the volume.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '202':
          description: Accepted the request to create or update the volume.
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - Volumes
      description: Deletes the volume.
      operationId: Volumes_Delete
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The volume container name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: volumeName
          in: path
          description: The volume name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to create or update the volume.
        '204':
          description: Successfully deleted the volume.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/volumes/{volumeName}/metrics?api-version=2017-06-01:
    get:
      tags:
        - Volumes
      description: Gets the metrics for the specified volume.
      operationId: VolumesMetrics_List
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The volume container name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: volumeName
          in: path
          description: The volume name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Volumes_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/volumes/{volumeName}/metricsDefinitions?api-version=2017-06-01:
    get:
      tags:
        - Volumes
      description: Gets the metric definitions for the specified volume.
      operationId: VolumesMetricDefinition_List
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - name: volumeContainerName
          in: path
          description: The volume container name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: volumeName
          in: path
          description: The volume name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Volumes_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumes?api-version=2017-06-01:
    get:
      tags:
        - Volumes
      description: Retrieves all the volumes in a device.
      operationId: Volumes_ListByDevice
      parameters:
        - $ref: '#/components/parameters/deviceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of volumes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{sourceDeviceName}/failover?api-version=2017-06-01:
    post:
      tags:
        - Devices
      description: Failovers a set of volume containers from a specified source device to a target device.
      operationId: Devices_Failover
      parameters:
        - name: sourceDeviceName
          in: path
          description: The source device name on which failover is performed.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: FailoverRequest containing the source device and the list of volume containers to be failed over.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverRequest'
      responses:
        '202':
          description: Accepted the request to failover the device.
        '204':
          description: Successfully completed failover of the device.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{sourceDeviceName}/listFailoverTargets?api-version=2017-06-01:
    post:
      tags:
        - Devices
      description: Given a list of volume containers to be failed over from a source device, this method returns the eligibility result, as a failover target, for all devices under that resource.
      operationId: DevicesFailoverTargets_List
      parameters:
        - name: sourceDeviceName
          in: path
          description: The source device name on which failover is performed.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: ListFailoverTargetsRequest containing the list of volume containers to be failed over.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFailoverTargetsRequest'
      responses:
        '200':
          description: The list of target devices and their eligibility for failover.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverTargetsList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Devices_ListFailoverTargets
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/encryptionSettings/default?api-version=2017-06-01:
    get:
      tags:
        - Managers
      description: Returns the encryption settings of the manager.
      operationId: ManagersEncryptionSettings_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The encryption settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionSettings'
      deprecated: false
      x-ms-original-operationId: Managers_GetEncryptionSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo?api-version=2017-06-01:
    get:
      tags:
        - Managers
      description: Returns the extended information of the specified manager name.
      operationId: ManagersExtendedInfo_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The manager extended information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerExtendedInfo'
      deprecated: false
      x-ms-original-operationId: Managers_GetExtendedInfo
    put:
      tags:
        - Managers
      description: Creates the extended info of the manager.
      operationId: ManagersExtendedInfo_Create
      requestBody:
        description: The manager extended information.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagerExtendedInfo'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The extended information on the manager has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerExtendedInfo'
      deprecated: false
      x-ms-original-operationId: Managers_CreateExtendedInfo
    delete:
      tags:
        - Managers
      description: Deletes the extended info of the manager.
      operationId: ManagersExtendedInfo_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '204':
          description: The extended information on the manager has been successfully deleted
      deprecated: false
      x-ms-original-operationId: Managers_DeleteExtendedInfo
    patch:
      tags:
        - Managers
      description: Updates the extended info of the manager.
      operationId: ManagersExtendedInfo_Update
      requestBody:
        description: The manager extended information.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagerExtendedInfo'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: If-Match
          in: header
          description: Pass the ETag of ExtendedInfo fetched from GET call
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The extended information on the manager has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerExtendedInfo'
      deprecated: false
      x-ms-original-operationId: Managers_UpdateExtendedInfo
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/features?api-version=2017-06-01:
    get:
      tags:
        - Managers
      description: Lists the features and their support status
      operationId: ManagersFeatureSupportStatus_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of features.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureList'
      deprecated: false
      x-ms-odata: '#/components/schemas/FeatureFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Managers_ListFeatureSupportStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/jobs?api-version=2017-06-01:
    get:
      tags:
        - Jobs
      description: Gets all the jobs for the specified manager. With optional OData query parameters, a filtered set of jobs is returned.
      operationId: Jobs_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of device jobs on all devices under the specified manager.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
      deprecated: false
      x-ms-odata: '#/components/schemas/JobFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/listActivationKey?api-version=2017-06-01:
    post:
      tags:
        - Managers
      description: Returns the activation key of the manager.
      operationId: ManagersActivationKey_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The activation key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
      deprecated: false
      x-ms-original-operationId: Managers_GetActivationKey
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/listPublicEncryptionKey?api-version=2017-06-01:
    post:
      tags:
        - Managers
      description: Returns the symmetric encrypted public encryption key of the manager.
      operationId: ManagersPublicEncryptionKey_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The encryption key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricEncryptedSecret'
      deprecated: false
      x-ms-original-operationId: Managers_GetPublicEncryptionKey
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metrics?api-version=2017-06-01:
    get:
      tags:
        - Managers
      description: Gets the metrics for the specified manager.
      operationId: ManagersMetrics_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The collection of metrics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
      deprecated: false
      x-ms-odata: '#/components/schemas/MetricFilter'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Managers_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metricsDefinitions?api-version=2017-06-01:
    get:
      tags:
        - Managers
      description: Gets the metric definitions for the specified manager.
      operationId: ManagersMetricDefinition_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of metric definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Managers_ListMetricDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/provisionCloudAppliance?api-version=2017-06-01:
    post:
      tags:
        - CloudAppliances
      description: Provisions cloud appliance.
      operationId: CloudAppliances_Provision
      requestBody:
        description: The cloud appliance
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudAppliance'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: Successfully created job for provision cloud appliance.
        '202':
          description: Accepted the request to provision cloud appliance.
      deprecated: false
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/regenerateActivationKey?api-version=2017-06-01:
    post:
      tags:
        - Managers
      description: Re-generates and returns the activation key of the manager.
      operationId: Managers_RegenerateActivationKey
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The regenerated activation key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials?api-version=2017-06-01:
    get:
      tags:
        - StorageAccountCredentials
      description: Gets all the storage account credentials in a manager.
      operationId: StorageAccountCredentials_ListByManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The collection of storage account credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredentialList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{storageAccountCredentialName}?api-version=2017-06-01:
    get:
      tags:
        - StorageAccountCredentials
      description: Gets the properties of the specified storage account credential name.
      operationId: StorageAccountCredentials_Get
      parameters:
        - name: storageAccountCredentialName
          in: path
          description: The name of storage account credential to be fetched.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '200':
          description: The storage account credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredential'
      deprecated: false
    put:
      tags:
        - StorageAccountCredentials
      description: Creates or updates the storage account credential.
      operationId: StorageAccountCredentials_CreateOrUpdate
      parameters:
        - name: storageAccountCredentialName
          in: path
          description: The storage account credential name.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      requestBody:
        description: The storage account credential to be added or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccountCredential'
      responses:
        '200':
          description: Successfully created or updated the storage account credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredential'
        '202':
          description: Accepted the request to create or update the storage account credential.
      deprecated: false
      x-ms-long-running-operation: true
    delete:
      tags:
        - StorageAccountCredentials
      description: Deletes the storage account credential.
      operationId: StorageAccountCredentials_Delete
      parameters:
        - name: storageAccountCredentialName
          in: path
          description: The name of the storage account credential.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/managerNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the storage account credential.
        '204':
          description: Successfully deleted the storage account credential.
      deprecated: false
      x-ms-long-running-operation: true
