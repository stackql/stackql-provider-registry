openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Data Manager for Agriculture
  description: Azure Data Manager for Agriculture helps enable a more sustainable future and a more productive agriculture industry by empowering organizations to drive innovation through insight, reduce their environmental impact, optimize agriculture operations, and build that trust rooted in transparency.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DataManagerForAgricultureResourceNameParameter:
      name: dataManagerForAgricultureResourceName
      in: path
      description: DataManagerForAgriculture resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$
        minLength: 1
        maxLength: 63
        type: string
    ExtensionIdParameter:
      name: extensionId
      in: path
      description: Id of extension resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for private endpoint.
      description: The private endpoint resource.
    PrivateEndpointConnection:
      description: The private endpoint connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        groupIds:
          description: The group ids for the private endpoint resource.
          type: array
          items:
            type: string
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The private endpoint resource.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the private endpoint connection.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connections associated with the specified resource.
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources.
    ApiKeyAuthCredentials:
      description: ApiKeyAuthCredentials class for ApiKey based Auth.
      required:
        - apiKey
      x-ms-discriminator-value: ApiKeyAuthCredentials
      properties:
        kind:
          $ref: '#/components/schemas/AuthCredentialsKind'
        apiKey:
          $ref: '#/components/schemas/KeyVaultProperties'
      type: object
    ApiProperties:
      description: Api properties.
      type: object
      properties:
        apiFreshnessTimeInMinutes:
          format: int32
          description: Interval in minutes for which the weather data for the api needs to be refreshed.
          maximum: 10080
          minimum: 0
          type: integer
    ArmAsyncOperation:
      description: "Arm async operation class.\r\nRef: https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/async-operations."
      type: object
      properties:
        status:
          description: Status of the async operation.
          type: string
        error:
          $ref: '#/components/schemas/ArmAsyncOperationError'
    ArmAsyncOperationError:
      description: "Arm async operation error class.\r\nRef: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#azure-asyncoperation-resource-format."
      type: object
      properties:
        code:
          description: Status of the async operation.
          type: string
        message:
          description: Status of the async operation.
          type: string
    AuthCredentials:
      description: AuthCredentials abstract base class for Auth Purpose.
      required:
        - kind
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/AuthCredentialsKind'
      discriminator:
        propertyName: kind
    AuthCredentialsKind:
      description: Enum for different types of AuthCredentials supported.
      enum:
        - OAuthClientCredentials
        - ApiKeyAuthCredentials
      type: string
      x-ms-enum:
        name: AuthCredentialsKind.
        modelAsString: true
    DataConnector:
      description: DataConnector Model.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/DataConnectorProperties'
        eTag:
          description: The ETag value to implement optimistic concurrency.
          type: string
          readOnly: true
      type: object
    DataConnectorListResponse:
      description: Paged response contains list of requested objects and a URL link to get the next set of results.
      required:
        - value
      type: object
      properties:
        value:
          description: List of requested objects.
          type: array
          items:
            $ref: '#/components/schemas/DataConnector'
        nextLink:
          description: Continuation link (absolute URI) to the next page of results in the list.
          type: string
    DataConnectorProperties:
      description: DataConnector Properties.
      required:
        - credentials
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/AuthCredentials'
      example:
        properties:
          credentials:
            kind: OAuthClientCredentials
            clientId: string
            clientSecret:
              keyVaultUri: string
              keyName: string
              keyVersion: string
    DataManagerForAgriculture:
      description: Data Manager For Agriculture ARM Resource.
      x-ms-azure-resource: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        identity:
          $ref: '#/components/schemas/Identity'
        properties:
          $ref: '#/components/schemas/DataManagerForAgricultureProperties'
          x-ms-client-flatten: true
      type: object
    DataManagerForAgricultureExtension:
      description: DataManagerForAgriculture extension resource.
      x-ms-azure-resource: true
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/DataManagerForAgricultureExtensionProperties'
      type: object
    DataManagerForAgricultureExtensionListResponse:
      description: Paged response contains list of requested objects and a URL link to get the next set of results.
      required:
        - value
      type: object
      properties:
        value:
          description: List of requested objects.
          type: array
          items:
            $ref: '#/components/schemas/DataManagerForAgricultureExtension'
        $skipToken:
          description: Token used in retrieving the next page. If null, there are no additional pages.
          type: string
        nextLink:
          description: Continuation link (absolute URI) to the next page of results in the list.
          type: string
    DataManagerForAgricultureExtensionProperties:
      description: DataManagerForAgricultureExtension properties.
      type: object
      properties:
        targetResourceType:
          description: Target ResourceType of the Data Manager For Agriculture Extension.
          type: string
          readOnly: true
        farmBeatsExtensionId:
          description: Data Manager For Agriculture Extension ID.
          maxLength: 100
          minLength: 2
          pattern: ^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$
          type: string
          readOnly: true
        farmBeatsExtensionName:
          description: Data Manager For Agriculture Extension name.
          maxLength: 100
          minLength: 2
          type: string
          readOnly: true
        farmBeatsExtensionVersion:
          description: Data Manager For Agriculture Extension version.
          maxLength: 100
          minLength: 2
          pattern: ^([1-9]|10).\d$
          type: string
          readOnly: true
        publisherId:
          description: Publisher ID.
          maxLength: 100
          minLength: 2
          type: string
          readOnly: true
        description:
          description: Textual description.
          maxLength: 500
          minLength: 2
          type: string
          readOnly: true
        extensionCategory:
          description: Category of the extension. e.g. weather/sensor/satellite.
          maxLength: 100
          minLength: 2
          type: string
          readOnly: true
        extensionAuthLink:
          description: Data Manager For Agriculture Extension auth link.
          type: string
          readOnly: true
        extensionApiDocsLink:
          description: Data Manager For Agriculture Extension api docs link.
          type: string
          readOnly: true
        detailedInformation:
          description: "Detailed information which shows summary of requested data.\r\nUsed in descriptive get extension metadata call.\r\nInformation for weather category per api included are apisSupported,\r\ncustomParameters, PlatformParameters and Units supported."
          type: array
          items:
            $ref: '#/components/schemas/DetailedInformation'
          x-ms-identifiers: []
          readOnly: true
    DataManagerForAgricultureListResponse:
      description: Paged response contains list of requested objects and a URL link to get the next set of results.
      required:
        - value
      type: object
      properties:
        value:
          description: List of requested objects.
          type: array
          items:
            $ref: '#/components/schemas/DataManagerForAgriculture'
        $skipToken:
          description: Token used in retrieving the next page. If null, there are no additional pages.
          type: string
        nextLink:
          description: Continuation link (absolute URI) to the next page of results in the list.
          type: string
    DataManagerForAgricultureProperties:
      description: Data Manager For Agriculture ARM Resource properties.
      type: object
      properties:
        instanceUri:
          format: uri
          description: Uri of the Data Manager For Agriculture instance.
          type: string
          readOnly: true
        provisioningState:
          description: Data Manager For Agriculture instance provisioning state.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Running
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        sensorIntegration:
          $ref: '#/components/schemas/SensorIntegration'
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
        privateEndpointConnections:
          description: Private endpoints.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
    DataManagerForAgricultureSolution:
      description: DataManagerForAgriculture solution resource.
      x-ms-azure-resource: true
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/DataManagerForAgricultureSolutionProperties'
      type: object
    DataManagerForAgricultureSolutionListResponse:
      description: Paged response contains list of requested objects and a URL link to get the next set of results.
      required:
        - value
      type: object
      properties:
        value:
          description: List of requested objects.
          type: array
          items:
            $ref: '#/components/schemas/DataManagerForAgricultureSolution'
        $skipToken:
          description: Token used in retrieving the next page. If null, there are no additional pages.
          type: string
        nextLink:
          description: Continuation link (absolute URI) to the next page of results in the list.
          type: string
    DataManagerForAgricultureSolutionProperties:
      description: DataManagerForAgricultureSolution properties.
      type: object
      properties:
        partnerId:
          description: Solution Partner Id.
          type: string
          readOnly: true
        partnerTenantId:
          description: Solution Partner Tenant Id.
          type: string
          readOnly: true
        dataAccessScopes:
          description: "Gets scope of the Data manager For Agriculture data access that's required for processing solution request to partner.\r\nExample: For gdd they might need weatherScope and satelliteScope."
          type: array
          items:
            type: string
          readOnly: true
        marketplaceOfferDetails:
          $ref: '#/components/schemas/MarketplaceOfferDetails'
        openApiSpecsDictionary:
          description: Gets api-version Swagger Document Dictionary to capture all api-versions of swagger exposed by partner to Data Manager For Agriculture.
          type: object
          additionalProperties: {}
          readOnly: true
        accessFBApplicationId:
          format: uuid
          description: Application id of the multi tenant application to be used by partner to access Data Manager For Agriculture data.
          type: string
          readOnly: true
        saaSApplicationId:
          description: Application id of the SaaS multi tenant application.
          type: string
          readOnly: true
        actionIds:
          description: List of ActionIds needed to make the SaaS multi tenant application access relevant fb data.
          type: array
          items:
            type: string
          readOnly: true
        roleId:
          description: Role Id of the SaaS multi tenant application to access relevant fb data.
          type: string
          readOnly: true
        roleName:
          description: Role Name of the SaaS multi tenant application to access relevant fb data.
          type: string
          readOnly: true
        accessFBApplicationName:
          description: Application name of the multi tenant application to be used by partner to access Data Manager For Agriculture Data.
          type: string
          readOnly: true
    DataManagerForAgricultureUpdateProperties:
      description: Data Manager For Agriculture ARM Resource properties.
      type: object
      properties:
        sensorIntegration:
          $ref: '#/components/schemas/SensorIntegration'
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
    DataManagerForAgricultureUpdateRequestModel:
      description: DataManagerForAgriculture update request.
      properties:
        location:
          description: Geo-location where the resource lives.
          type: string
        identity:
          $ref: '#/components/schemas/Identity'
        properties:
          $ref: '#/components/schemas/DataManagerForAgricultureUpdateProperties'
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
      type: object
    DetailedInformation:
      description: Model to capture detailed information for Data Manager For AgricultureExtensions.
      type: object
      properties:
        apiName:
          description: ApiName available for the Data Manager For Agriculture Extension.
          type: string
          example: dailyforecast, dailyhistorical.
        apiDocsLink:
          description: Extension provider's API documentation link.
          type: string
        apiType:
          description: Type of Api in Extension.
          type: string
          example: passthrough,load.
        customParameters:
          description: List of customParameters.
          type: array
          items:
            type: string
        platformParameters:
          description: List of platformParameters.
          type: array
          items:
            type: string
        apiDefaultInputParameters:
          description: List of defaultParameters.
          type: array
          items:
            type: string
        unitsSupported:
          $ref: '#/components/schemas/UnitSystemsInfo'
        apiInputParameters:
          description: List of apiInputParameters.
          type: array
          items:
            type: string
    Extension:
      description: Extension resource.
      x-ms-azure-resource: true
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/ExtensionProperties'
          x-ms-client-flatten: true
        eTag:
          description: The ETag value to implement optimistic concurrency.
          type: string
          readOnly: true
      type: object
    ExtensionInstallationRequest:
      description: Extension Installation Request Body.
      type: object
      properties:
        extensionVersion:
          description: Extension Version.
          default: null
          maxLength: 10
          minLength: 3
          type: string
        additionalApiProperties:
          description: Additional Api Properties.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ApiProperties'
    ExtensionListResponse:
      description: Paged response contains list of requested objects and a URL link to get the next set of results.
      required:
        - value
      type: object
      properties:
        value:
          description: List of requested objects.
          type: array
          items:
            $ref: '#/components/schemas/Extension'
        $skipToken:
          description: Token used in retrieving the next page. If null, there are no additional pages.
          type: string
        nextLink:
          description: Continuation link (absolute URI) to the next page of results in the list.
          type: string
          readOnly: true
    ExtensionProperties:
      description: Extension resource properties.
      type: object
      properties:
        extensionId:
          description: Extension Id.
          pattern: ^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$
          type: string
          readOnly: true
        extensionCategory:
          description: Extension category. e.g. weather/sensor/satellite.
          type: string
          readOnly: true
        installedExtensionVersion:
          description: Installed extension version.
          pattern: ^([1-9]|10).\d$
          type: string
          readOnly: true
        extensionAuthLink:
          description: Extension auth link.
          type: string
          readOnly: true
        extensionApiDocsLink:
          description: Extension api docs link.
          type: string
          readOnly: true
        additionalApiProperties:
          description: Additional Api Properties.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ApiProperties'
          readOnly: true
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    MarketplaceOfferDetails:
      type: object
      properties:
        saasOfferId:
          type: string
        publisherId:
          type: string
    OAuthClientCredentials:
      description: OAuthClientCredentials for clientId clientSecret auth.
      required:
        - clientId
        - clientSecret
      x-ms-discriminator-value: OAuthClientCredentials
      properties:
        kind:
          $ref: '#/components/schemas/AuthCredentialsKind'
        clientId:
          description: ClientId associated with the provider.
          minLength: 1
          type: string
        clientSecret:
          $ref: '#/components/schemas/KeyVaultProperties'
      type: object
    PublicNetworkAccess:
      description: Property to allow or block public traffic for an Azure Data Manager For Agriculture resource.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: PublicNetworkAccess
        modelAsString: true
    SensorIntegration:
      description: Sensor integration request model.
      type: object
      properties:
        enabled:
          description: Sensor integration enable state.
          type: string
        provisioningState:
          description: Sensor integration instance provisioning state.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Running
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        provisioningInfo:
          $ref: '#/components/schemas/ErrorResponse'
    Solution:
      description: Solution resource.
      x-ms-azure-resource: true
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/SolutionProperties'
        eTag:
          description: The ETag value to implement optimistic concurrency.
          type: string
          readOnly: true
      type: object
    SolutionListResponse:
      description: Paged response contains list of requested objects and a URL link to get the next set of results.
      required:
        - value
      type: object
      properties:
        value:
          description: List of requested objects.
          type: array
          items:
            $ref: '#/components/schemas/Solution'
        $skipToken:
          description: Token used in retrieving the next page. If null, there are no additional pages.
          type: string
        nextLink:
          description: Continuation link (absolute URI) to the next page of results in the list.
          type: string
    SolutionProperties:
      description: Solution resource properties.
      required:
        - marketplacePublisherId
        - offerId
        - planId
        - saasSubscriptionId
        - saasSubscriptionName
        - termId
      type: object
      properties:
        partnerId:
          description: Partner Id of the Solution.
          type: string
          readOnly: true
        saasSubscriptionId:
          description: SaaS subscriptionId of the installed SaaS application.
          minLength: 1
          type: string
        saasSubscriptionName:
          description: SaaS subscription name of the installed SaaS application.
          minLength: 1
          type: string
        marketplacePublisherId:
          description: SaaS application Marketplace Publisher Id.
          minLength: 1
          type: string
        planId:
          description: SaaS application Plan Id.
          minLength: 1
          type: string
        roleAssignmentId:
          description: Role Assignment Id.
          type: string
        offerId:
          description: SaaS application Offer Id.
          minLength: 1
          type: string
        termId:
          description: SaaS application Term Id.
          minLength: 1
          type: string
      additionalProperties: {}
    UnitSystemsInfo:
      description: Unit systems info for the data provider.
      required:
        - key
        - values
      type: object
      properties:
        key:
          description: UnitSystem key sent as part of ProviderInput.
          maxLength: 100
          minLength: 1
          type: string
        values:
          description: List of unit systems supported by this data provider.
          type: array
          items:
            type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure_extras.ag_food_platform.operations
      name: operations
      title: operations
      methods:
        check_name_availability_check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AgFoodPlatform~1checkNameAvailability?api-version=2023-06-01-preview/post'
            operationId: Operations_CheckNameAvailabilityCheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AgFoodPlatform~1operations?api-version=2023-06-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    data_connectors:
      id: azure_extras.ag_food_platform.data_connectors
      name: data_connectors
      title: data_connectors
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1dataConnectors~1{dataConnectorName}?api-version=2023-06-01-preview/get'
            operationId: DataConnectors_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataConnector
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1dataConnectors~1{dataConnectorName}?api-version=2023-06-01-preview/put'
            operationId: DataConnectors_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataConnector
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1dataConnectors~1{dataConnectorName}?api-version=2023-06-01-preview/delete'
            operationId: DataConnectors_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1dataConnectors?api-version=2023-06-01-preview/get'
            operationId: DataConnectors_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataConnectorListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_connectors/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_connectors/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_connectors/methods/delete'
    data_manager_for_agriculture_extensions:
      id: azure_extras.ag_food_platform.data_manager_for_agriculture_extensions
      name: data_manager_for_agriculture_extensions
      title: data_manager_for_agriculture_extensions
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AgFoodPlatform~1farmBeatsExtensionDefinitions?api-version=2023-06-01-preview/get'
            operationId: DataManagerForAgricultureExtensions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgricultureExtensionListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AgFoodPlatform~1farmBeatsExtensionDefinitions~1{dataManagerForAgricultureExtensionId}?api-version=2023-06-01-preview/get'
            operationId: DataManagerForAgricultureExtensions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgricultureExtension
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_manager_for_agriculture_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_manager_for_agriculture_extensions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    data_manager_for_agriculture_resources:
      id: azure_extras.ag_food_platform.data_manager_for_agriculture_resources
      name: data_manager_for_agriculture_resources
      title: data_manager_for_agriculture_resources
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}?api-version=2023-06-01-preview/get'
            operationId: DataManagerForAgricultureResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgriculture
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}?api-version=2023-06-01-preview/put'
            operationId: DataManagerForAgricultureResources_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgriculture
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}?api-version=2023-06-01-preview/patch'
            operationId: DataManagerForAgricultureResources_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgriculture
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}?api-version=2023-06-01-preview/delete'
            operationId: DataManagerForAgricultureResources_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AgFoodPlatform~1farmBeats?api-version=2023-06-01-preview/get'
            operationId: DataManagerForAgricultureResources_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgricultureListResponse
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats?api-version=2023-06-01-preview/get'
            operationId: DataManagerForAgricultureResources_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgricultureListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_manager_for_agriculture_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_manager_for_agriculture_resources/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/data_manager_for_agriculture_resources/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_manager_for_agriculture_resources/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/data_manager_for_agriculture_resources/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_manager_for_agriculture_resources/methods/delete'
    operation_results:
      id: azure_extras.ag_food_platform.operation_results
      name: operation_results
      title: operation_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AgFoodPlatform~1locations~1{locations}~1operationResults~1{operationResultsId}?api-version=2023-06-01-preview/get'
            operationId: OperationResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ArmAsyncOperation
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    extensions:
      id: azure_extras.ag_food_platform.extensions
      name: extensions
      title: extensions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1extensions~1{extensionId}?api-version=2023-06-01-preview/put'
            operationId: Extensions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: Extension
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1extensions~1{extensionId}?api-version=2023-06-01-preview/get'
            operationId: Extensions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Extension
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1extensions~1{extensionId}?api-version=2023-06-01-preview/delete'
            operationId: Extensions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_data_manager_for_agriculture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1extensions?api-version=2023-06-01-preview/get'
            operationId: Extensions_ListByDataManagerForAgriculture
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExtensionListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/extensions/methods/list_by_data_manager_for_agriculture'
        insert:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/delete'
    private_endpoint_connections:
      id: azure_extras.ag_food_platform.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-06-01-preview/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-06-01-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-06-01-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1privateEndpointConnections?api-version=2023-06-01-preview/get'
            operationId: PrivateEndpointConnections_ListByResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure_extras.ag_food_platform.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1privateLinkResources?api-version=2023-06-01-preview/get'
            operationId: PrivateLinkResources_ListByResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1privateLinkResources~1{subResourceName}?api-version=2023-06-01-preview/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_resource'
        insert: []
        update: []
        replace: []
        delete: []
    solutions:
      id: azure_extras.ag_food_platform.solutions
      name: solutions
      title: solutions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1solutions~1{solutionId}?api-version=2023-06-01-preview/put'
            operationId: Solutions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Solution
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1solutions~1{solutionId}?api-version=2023-06-01-preview/get'
            operationId: Solutions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Solution
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1solutions~1{solutionId}?api-version=2023-06-01-preview/delete'
            operationId: Solutions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AgFoodPlatform~1farmBeats~1{dataManagerForAgricultureResourceName}~1solutions?api-version=2023-06-01-preview/get'
            operationId: Solutions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SolutionListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/solutions/methods/get'
          - $ref: '#/components/x-stackQL-resources/solutions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/solutions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/solutions/methods/delete'
    solutions_discoverabilities:
      id: azure_extras.ag_food_platform.solutions_discoverabilities
      name: solutions_discoverabilities
      title: solutions_discoverabilities
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AgFoodPlatform~1farmBeatsSolutionDefinitions?api-version=2023-06-01-preview/get'
            operationId: SolutionsDiscoverability_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgricultureSolutionListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AgFoodPlatform~1farmBeatsSolutionDefinitions~1{dataManagerForAgricultureSolutionId}?api-version=2023-06-01-preview/get'
            operationId: SolutionsDiscoverability_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataManagerForAgricultureSolution
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/solutions_discoverabilities/methods/get'
          - $ref: '#/components/x-stackQL-resources/solutions_discoverabilities/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_data_connectors:
      id: azure_extras.ag_food_platform.vw_data_connectors
      name: vw_data_connectors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              eTag as e_tag,
              JSON_EXTRACT(properties, '$.credentials') as "credentials",
              subscriptionId,
              resourceGroupName,
              dataManagerForAgricultureResourceName,
              dataConnectorName
              FROM azure_extras.ag_food_platform.data_connectors
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                eTag as e_tag,
                json_extract_path_text(properties, '$.credentials') as "credentials",
                subscriptionId,
                resourceGroupName,
                dataManagerForAgricultureResourceName,
                dataConnectorName
                FROM azure_extras.ag_food_platform.data_connectors
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
    vw_data_manager_for_agriculture_extensions:
      id: azure_extras.ag_food_platform.vw_data_manager_for_agriculture_extensions
      name: vw_data_manager_for_agriculture_extensions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.targetResourceType') as "target_resource_type",
              JSON_EXTRACT(properties, '$.farmBeatsExtensionId') as "farm_beats_extension_id",
              JSON_EXTRACT(properties, '$.farmBeatsExtensionName') as "farm_beats_extension_name",
              JSON_EXTRACT(properties, '$.farmBeatsExtensionVersion') as "farm_beats_extension_version",
              JSON_EXTRACT(properties, '$.publisherId') as "publisher_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.extensionCategory') as "extension_category",
              JSON_EXTRACT(properties, '$.extensionAuthLink') as "extension_auth_link",
              JSON_EXTRACT(properties, '$.extensionApiDocsLink') as "extension_api_docs_link",
              JSON_EXTRACT(properties, '$.detailedInformation') as "detailed_information",
              dataManagerForAgricultureExtensionId
              FROM azure_extras.ag_food_platform.data_manager_for_agriculture_extensions
              WHERE dataManagerForAgricultureExtensionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.targetResourceType') as "target_resource_type",
                json_extract_path_text(properties, '$.farmBeatsExtensionId') as "farm_beats_extension_id",
                json_extract_path_text(properties, '$.farmBeatsExtensionName') as "farm_beats_extension_name",
                json_extract_path_text(properties, '$.farmBeatsExtensionVersion') as "farm_beats_extension_version",
                json_extract_path_text(properties, '$.publisherId') as "publisher_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.extensionCategory') as "extension_category",
                json_extract_path_text(properties, '$.extensionAuthLink') as "extension_auth_link",
                json_extract_path_text(properties, '$.extensionApiDocsLink') as "extension_api_docs_link",
                json_extract_path_text(properties, '$.detailedInformation') as "detailed_information",
                dataManagerForAgricultureExtensionId
                FROM azure_extras.ag_food_platform.data_manager_for_agriculture_extensions
                WHERE dataManagerForAgricultureExtensionId = 'replace-me';
    vw_data_manager_for_agriculture_resources:
      id: azure_extras.ag_food_platform.vw_data_manager_for_agriculture_resources
      name: vw_data_manager_for_agriculture_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.instanceUri') as "instance_uri",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.sensorIntegration') as "sensor_integration",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              subscriptionId,
              resourceGroupName,
              dataManagerForAgricultureResourceName
              FROM azure_extras.ag_food_platform.data_manager_for_agriculture_resources
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.instanceUri') as "instance_uri",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.sensorIntegration') as "sensor_integration",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                subscriptionId,
                resourceGroupName,
                dataManagerForAgricultureResourceName
                FROM azure_extras.ag_food_platform.data_manager_for_agriculture_resources
                WHERE subscriptionId = 'replace-me';
    vw_extensions:
      id: azure_extras.ag_food_platform.vw_extensions
      name: vw_extensions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              eTag as e_tag,
              JSON_EXTRACT(properties, '$.extensionId') as "extension_id",
              JSON_EXTRACT(properties, '$.extensionCategory') as "extension_category",
              JSON_EXTRACT(properties, '$.installedExtensionVersion') as "installed_extension_version",
              JSON_EXTRACT(properties, '$.extensionAuthLink') as "extension_auth_link",
              JSON_EXTRACT(properties, '$.extensionApiDocsLink') as "extension_api_docs_link",
              JSON_EXTRACT(properties, '$.additionalApiProperties') as "additional_api_properties",
              subscriptionId,
              resourceGroupName,
              dataManagerForAgricultureResourceName,
              extensionId
              FROM azure_extras.ag_food_platform.extensions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                eTag as e_tag,
                json_extract_path_text(properties, '$.extensionId') as "extension_id",
                json_extract_path_text(properties, '$.extensionCategory') as "extension_category",
                json_extract_path_text(properties, '$.installedExtensionVersion') as "installed_extension_version",
                json_extract_path_text(properties, '$.extensionAuthLink') as "extension_auth_link",
                json_extract_path_text(properties, '$.extensionApiDocsLink') as "extension_api_docs_link",
                json_extract_path_text(properties, '$.additionalApiProperties') as "additional_api_properties",
                subscriptionId,
                resourceGroupName,
                dataManagerForAgricultureResourceName,
                extensionId
                FROM azure_extras.ag_food_platform.extensions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure_extras.ag_food_platform.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              dataManagerForAgricultureResourceName,
              privateEndpointConnectionName
              FROM azure_extras.ag_food_platform.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                dataManagerForAgricultureResourceName,
                privateEndpointConnectionName
                FROM azure_extras.ag_food_platform.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
    vw_private_link_resources:
      id: azure_extras.ag_food_platform.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              dataManagerForAgricultureResourceName,
              subResourceName
              FROM azure_extras.ag_food_platform.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                dataManagerForAgricultureResourceName,
                subResourceName
                FROM azure_extras.ag_food_platform.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
    vw_solutions:
      id: azure_extras.ag_food_platform.vw_solutions
      name: vw_solutions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              eTag as e_tag,
              JSON_EXTRACT(properties, '$.partnerId') as "partner_id",
              JSON_EXTRACT(properties, '$.saasSubscriptionId') as "saas_subscription_id",
              JSON_EXTRACT(properties, '$.saasSubscriptionName') as "saas_subscription_name",
              JSON_EXTRACT(properties, '$.marketplacePublisherId') as "marketplace_publisher_id",
              JSON_EXTRACT(properties, '$.planId') as "plan_id",
              JSON_EXTRACT(properties, '$.roleAssignmentId') as "role_assignment_id",
              JSON_EXTRACT(properties, '$.offerId') as "offer_id",
              JSON_EXTRACT(properties, '$.termId') as "term_id",
              subscriptionId,
              resourceGroupName,
              dataManagerForAgricultureResourceName,
              solutionId
              FROM azure_extras.ag_food_platform.solutions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                eTag as e_tag,
                json_extract_path_text(properties, '$.partnerId') as "partner_id",
                json_extract_path_text(properties, '$.saasSubscriptionId') as "saas_subscription_id",
                json_extract_path_text(properties, '$.saasSubscriptionName') as "saas_subscription_name",
                json_extract_path_text(properties, '$.marketplacePublisherId') as "marketplace_publisher_id",
                json_extract_path_text(properties, '$.planId') as "plan_id",
                json_extract_path_text(properties, '$.roleAssignmentId') as "role_assignment_id",
                json_extract_path_text(properties, '$.offerId') as "offer_id",
                json_extract_path_text(properties, '$.termId') as "term_id",
                subscriptionId,
                resourceGroupName,
                dataManagerForAgricultureResourceName,
                solutionId
                FROM azure_extras.ag_food_platform.solutions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerForAgricultureResourceName = 'replace-me';
    vw_solutions_discoverabilities:
      id: azure_extras.ag_food_platform.vw_solutions_discoverabilities
      name: vw_solutions_discoverabilities
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.partnerId') as "partner_id",
              JSON_EXTRACT(properties, '$.partnerTenantId') as "partner_tenant_id",
              JSON_EXTRACT(properties, '$.dataAccessScopes') as "data_access_scopes",
              JSON_EXTRACT(properties, '$.marketplaceOfferDetails') as "marketplace_offer_details",
              JSON_EXTRACT(properties, '$.openApiSpecsDictionary') as "open_api_specs_dictionary",
              JSON_EXTRACT(properties, '$.accessFBApplicationId') as "access_fb_application_id",
              JSON_EXTRACT(properties, '$.saaSApplicationId') as "saa_s_application_id",
              JSON_EXTRACT(properties, '$.actionIds') as "action_ids",
              JSON_EXTRACT(properties, '$.roleId') as "role_id",
              JSON_EXTRACT(properties, '$.roleName') as "role_name",
              JSON_EXTRACT(properties, '$.accessFBApplicationName') as "access_fb_application_name",
              dataManagerForAgricultureSolutionId
              FROM azure_extras.ag_food_platform.solutions_discoverabilities
              WHERE dataManagerForAgricultureSolutionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.partnerId') as "partner_id",
                json_extract_path_text(properties, '$.partnerTenantId') as "partner_tenant_id",
                json_extract_path_text(properties, '$.dataAccessScopes') as "data_access_scopes",
                json_extract_path_text(properties, '$.marketplaceOfferDetails') as "marketplace_offer_details",
                json_extract_path_text(properties, '$.openApiSpecsDictionary') as "open_api_specs_dictionary",
                json_extract_path_text(properties, '$.accessFBApplicationId') as "access_fb_application_id",
                json_extract_path_text(properties, '$.saaSApplicationId') as "saa_s_application_id",
                json_extract_path_text(properties, '$.actionIds') as "action_ids",
                json_extract_path_text(properties, '$.roleId') as "role_id",
                json_extract_path_text(properties, '$.roleName') as "role_name",
                json_extract_path_text(properties, '$.accessFBApplicationName') as "access_fb_application_name",
                dataManagerForAgricultureSolutionId
                FROM azure_extras.ag_food_platform.solutions_discoverabilities
                WHERE dataManagerForAgricultureSolutionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/checkNameAvailability?api-version=2023-06-01-preview:
    post:
      tags:
        - CheckNameAvailability
      description: Checks the name availability of the resource with requested resource name.
      operationId: Operations_CheckNameAvailabilityCheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: NameAvailabilityRequest object.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckNameAvailability_CheckNameAvailability
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/dataConnectors/{dataConnectorName}?api-version=2023-06-01-preview:
    get:
      tags:
        - DataConnectors
      description: Get specific Data Connector resource by DataConnectorName.
      operationId: DataConnectors_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: dataConnectorName
          in: path
          description: Connector name.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataConnector'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DataConnectors
      description: Create or update Data Connector For MADMA resource.
      operationId: DataConnectors_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: dataConnectorName
          in: path
          description: Connector name.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            type: string
      requestBody:
        description: Body must be valid DataConnector request.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataConnector'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataConnector'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataConnector'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - DataConnectors
      description: Delete a Data Connectors with given dataConnector name.
      operationId: DataConnectors_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: dataConnectorName
          in: path
          description: Connector name.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            type: string
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        '400':
          description: Bad Request
          x-ms-error-response: true
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/dataConnectors?api-version=2023-06-01-preview:
    get:
      tags:
        - DataConnectors
      description: Lists the Data Connector Credentials for MADMA instance.
      operationId: DataConnectors_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: $maxPageSize
          in: query
          description: "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50."
          schema:
            format: int32
            default: 50
            maximum: 1000
            minimum: 10
            type: integer
        - name: $skipToken
          in: query
          description: Continuation token for getting next set of results.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataConnectorListResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AgFoodPlatform/farmBeatsExtensionDefinitions?api-version=2023-06-01-preview:
    get:
      tags:
        - DataManagerForAgricultureExtensions
      description: Get list of Data Manager For Agriculture extension.
      operationId: DataManagerForAgricultureExtensions_List
      parameters:
        - name: farmBeatsExtensionIds
          in: query
          description: DataManagerForAgricultureExtension ids.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: farmBeatsExtensionNames
          in: query
          description: DataManagerForAgriculture extension names.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: extensionCategories
          in: query
          description: Extension categories.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: publisherIds
          in: query
          description: Publisher ids.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: $maxPageSize
          in: query
          description: "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50."
          schema:
            format: int32
            default: 50
            maximum: 1000
            minimum: 10
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgricultureExtensionListResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AgFoodPlatform/farmBeatsExtensionDefinitions/{dataManagerForAgricultureExtensionId}?api-version=2023-06-01-preview:
    get:
      tags:
        - DataManagerForAgricultureExtensions
      description: Get Data Manager For Agriculture extension.
      operationId: DataManagerForAgricultureExtensions_Get
      parameters:
        - name: dataManagerForAgricultureExtensionId
          in: path
          description: dataManagerForAgricultureExtensionId to be queried.
          required: true
          schema:
            pattern: ^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgricultureExtension'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}?api-version=2023-06-01-preview:
    get:
      tags:
        - DataManagerForAgricultureResources
      description: Get DataManagerForAgriculture resource.
      operationId: DataManagerForAgricultureResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgriculture'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DataManagerForAgricultureResources
      description: Create or update Data Manager For Agriculture resource.
      operationId: DataManagerForAgricultureResources_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
      requestBody:
        description: Data Manager For Agriculture resource create or update request object.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataManagerForAgriculture'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgriculture'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgriculture'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - DataManagerForAgricultureResources
      description: Update a Data Manager For Agriculture resource.
      operationId: DataManagerForAgricultureResources_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
      requestBody:
        description: Request object.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataManagerForAgricultureUpdateRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgriculture'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgriculture'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - DataManagerForAgricultureResources
      description: Delete a Data Manager For Agriculture resource.
      operationId: DataManagerForAgricultureResources_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/farmBeats?api-version=2023-06-01-preview:
    get:
      tags:
        - DataManagerForAgricultureResources
      description: Lists the DataManagerForAgriculture instances for a subscription.
      operationId: DataManagerForAgricultureResources_ListBySubscription
      parameters:
        - name: $maxPageSize
          in: query
          description: "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50."
          schema:
            format: int32
            default: 50
            maximum: 1000
            minimum: 10
            type: integer
        - name: $skipToken
          in: query
          description: Skip token for getting next set of results.
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgricultureListResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats?api-version=2023-06-01-preview:
    get:
      tags:
        - DataManagerForAgricultureResources
      description: Lists the DataManagerForAgriculture instances for a resource group.
      operationId: DataManagerForAgricultureResources_ListByResourceGroup
      parameters:
        - name: $maxPageSize
          in: query
          description: "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50."
          schema:
            format: int32
            default: 50
            maximum: 1000
            minimum: 10
            type: integer
        - name: $skipToken
          in: query
          description: Continuation token for getting next set of results.
          schema:
            type: string
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgricultureListResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/locations/{locations}/operationResults/{operationResultsId}?api-version=2023-06-01-preview:
    get:
      tags:
        - OperationResults
      description: Get operationResults for a Data Manager For Agriculture resource.
      operationId: OperationResults_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: locations
          in: path
          description: Location.
          required: true
          schema:
            type: string
        - name: operationResultsId
          in: path
          description: operationResultsId for a specific location.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmAsyncOperation'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/extensions/{extensionId}?api-version=2023-06-01-preview:
    put:
      tags:
        - Extensions
      description: Install or Update extension. Additional Api Properties are merged patch and if the extension is updated to a new version then the obsolete entries will be auto deleted from Additional Api Properties.
      operationId: Extensions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - $ref: '#/components/parameters/ExtensionIdParameter'
      requestBody:
        description: Extension resource request body.
        x-ms-requestBody-name: requestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionInstallationRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Extensions
      description: Get installed extension details by extension id.
      operationId: Extensions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - $ref: '#/components/parameters/ExtensionIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Extensions
      description: Uninstall extension.
      operationId: Extensions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - $ref: '#/components/parameters/ExtensionIdParameter'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/extensions?api-version=2023-06-01-preview:
    get:
      tags:
        - Extensions
      description: Get installed extensions details.
      operationId: Extensions_ListByDataManagerForAgriculture
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: extensionIds
          in: query
          description: Installed extension ids.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: extensionCategories
          in: query
          description: Installed extension categories.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: $maxPageSize
          in: query
          description: "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50."
          schema:
            format: int32
            default: 50
            maximum: 1000
            minimum: 10
            type: integer
        - name: $skipToken
          in: query
          description: Skip token for getting next set of results.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionListResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AgFoodPlatform/operations?api-version=2023-06-01-preview:
    get:
      tags:
        - Operations
      description: Lists the available operations of Microsoft.AgFoodPlatform resource provider.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2023-06-01-preview:
    put:
      tags:
        - PrivateEndpointConnections
      description: Approves or Rejects a Private endpoint connection request.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Private endpoint connection name.
          required: true
          schema:
            type: string
      requestBody:
        description: Request object.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          x-ms-error-response: true
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - PrivateEndpointConnections
      description: Get Private endpoint connection object.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Private endpoint connection name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          x-ms-error-response: true
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateEndpointConnections
      description: Delete Private endpoint connection request.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Private endpoint connection name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '202':
          description: accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateEndpointConnections?api-version=2023-06-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      description: Get list of Private endpoint connections.
      operationId: PrivateEndpointConnections_ListByResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateLinkResources?api-version=2023-06-01-preview:
    get:
      tags:
        - PrivateLinkResources
      description: Get list of Private link resources.
      operationId: PrivateLinkResources_ListByResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateLinkResources/{subResourceName}?api-version=2023-06-01-preview:
    get:
      tags:
        - PrivateLinkResources
      description: Get Private link resource object.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: subResourceName
          in: path
          description: Sub resource name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          x-ms-error-response: true
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/solutions/{solutionId}?api-version=2023-06-01-preview:
    put:
      tags:
        - Solutions
      description: Install Or Update Solution.
      operationId: Solutions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: solutionId
          in: path
          description: SolutionId for Data Manager For Agriculture Resource.
          required: true
          schema:
            pattern: ^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$
            type: string
      requestBody:
        description: Solution resource request body.
        x-ms-requestBody-name: requestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Solution'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Solutions
      description: Get installed Solution details by Solution id.
      operationId: Solutions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: solutionId
          in: path
          description: SolutionId for Data Manager For Agriculture Resource.
          required: true
          schema:
            pattern: ^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Solutions
      description: Uninstall Solution.
      operationId: Solutions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: solutionId
          in: path
          description: SolutionId for Data Manager For Agriculture Resource.
          required: true
          schema:
            pattern: ^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$
            type: string
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/solutions?api-version=2023-06-01-preview:
    get:
      tags:
        - Solutions
      description: Get installed Solutions details.
      operationId: Solutions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataManagerForAgricultureResourceNameParameter'
        - name: solutionIds
          in: query
          description: Installed Solution ids.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: ids
          in: query
          description: Ids of the resource.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: names
          in: query
          description: Names of the resource.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: propertyFilters
          in: query
          description: "Filters on key-value pairs within the Properties object.\r\neg. \"{testKey} eq {testValue}\"."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: statuses
          in: query
          description: Statuses of the resource.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: minCreatedDateTime
          in: query
          description: Minimum creation date of resource (inclusive).
          schema:
            format: date-time
            type: string
        - name: maxCreatedDateTime
          in: query
          description: Maximum creation date of resource (inclusive).
          schema:
            format: date-time
            type: string
        - name: minLastModifiedDateTime
          in: query
          description: Minimum last modified date of resource (inclusive).
          schema:
            format: date-time
            type: string
        - name: maxLastModifiedDateTime
          in: query
          description: Maximum last modified date of resource (inclusive).
          schema:
            format: date-time
            type: string
        - name: $maxPageSize
          in: query
          description: "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50."
          schema:
            format: int32
            default: 50
            maximum: 1000
            minimum: 10
            type: integer
        - name: $skipToken
          in: query
          description: Skip token for getting next set of results.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionListResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AgFoodPlatform/farmBeatsSolutionDefinitions?api-version=2023-06-01-preview:
    get:
      tags:
        - SolutionsDiscoverability
      description: Get list of Data Manager For Agriculture solutions.
      operationId: SolutionsDiscoverability_List
      parameters:
        - name: farmBeatsSolutionIds
          in: query
          description: Ids of Data Manager For Agriculture Solutions which the customer requests to fetch.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: farmBeatsSolutionNames
          in: query
          description: Names of Data Manager For Agriculture Solutions which the customer requests to fetch.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: $maxPageSize
          in: query
          description: "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50."
          schema:
            format: int32
            default: 50
            maximum: 1000
            minimum: 10
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgricultureSolutionListResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AgFoodPlatform/farmBeatsSolutionDefinitions/{dataManagerForAgricultureSolutionId}?api-version=2023-06-01-preview:
    get:
      tags:
        - SolutionsDiscoverability
      description: Get Data Manager For Agriculture solution by id.
      operationId: SolutionsDiscoverability_Get
      parameters:
        - name: dataManagerForAgricultureSolutionId
          in: path
          description: dataManagerForAgricultureSolutionId to be queried.
          required: true
          schema:
            pattern: ^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerForAgricultureSolution'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
