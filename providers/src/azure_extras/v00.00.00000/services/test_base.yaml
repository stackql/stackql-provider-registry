openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Test Base for Microsoft 365
  description: Intelligent application testing from anywhere.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    DraftPackageNameParameter:
      name: draftPackageName
      in: path
      description: The resource name of the Test Base Draft Package.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|([-. ][A-Za-z0-9]))+$
        type: string
    PackageNameQueryParameter:
      name: packageName
      in: query
      description: Parameter used to filter draft packages by linked Test Base Package.
      x-ms-parameter-location: method
      schema:
        type: string
    DraftPackageEditPackageParameter:
      name: editPackage
      in: query
      description: Parameter used to filter draft packages by editPackage property.
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    CustomImageNameParameter:
      name: customImageName
      in: path
      description: The resource name of the test base custom image.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|([-. ][A-Za-z0-9]))+$
        type: string
    ImageDefinitionNameParameter:
      name: imageDefinitionName
      in: path
      description: The resource name of the test base image definition.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|([-. ][A-Za-z0-9]))+$
        type: string
    VhdNameParameter:
      name: vhdName
      in: path
      description: The resource name of the Test Base VHD.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_.-]+$
        type: string
    ChatSessionNameParameter:
      name: chatSessionName
      in: path
      description: The chat session name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|([-. ][A-Za-z0-9]))+$
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TestBaseAccountNameParameter:
      name: testBaseAccountName
      in: path
      description: The resource name of the Test Base Account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|([-. ][A-Za-z0-9]))+$
        type: string
    PackageNameParameter:
      name: packageName
      in: path
      description: The resource name of the Test Base Package.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|([-. ][A-Za-z0-9]))+$
        type: string
    FavoriteProcessResourceNameParameter:
      name: favoriteProcessResourceName
      in: path
      description: The resource name of a favorite process in a package. If the process name contains characters that are not allowed in Azure Resource Name, we use 'actualProcessName' in request body to submit the name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TestResultNameParameter:
      name: testResultName
      in: path
      description: The Test Result Name. It equals to TestResult-{TestResultId} string.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OSUpdateTypeParameter:
      name: osUpdateType
      in: query
      description: The type of the OS Update.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - SecurityUpdate
          - FeatureUpdate
          - InplaceUpgrade
        x-ms-enum:
          name: osUpdateType
          modelAsString: true
        type: string
    AnalysisResultTypeParameter:
      name: analysisResultType
      in: query
      description: The type of the Analysis Result of a Test Result.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - ScriptExecution
          - Reliability
          - MemoryUtilization
          - CPUUtilization
          - MemoryRegression
          - CPURegression
          - TestAnalysis
        x-ms-enum:
          name: analysisResultType
          modelAsString: true
        type: string
    AnalysisResultNameParameter:
      name: analysisResultName
      in: path
      description: The name of the Analysis Result of a Test Result.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - scriptExecution
          - reliability
          - memoryUtilization
          - cpuUtilization
          - memoryRegression
          - cpuRegression
          - testAnalysis
        x-ms-enum:
          name: analysisResultName
          modelAsString: true
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: Odata filter
      x-ms-parameter-location: method
      schema:
        type: string
    TestBaseAccountIncludeSoftDeletedParameter:
      name: getDeleted
      in: query
      description: The flag indicating if we need to include the Test Base Accounts which were soft deleted before.
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    TestBaseAccountRestoreSoftDeletedParameter:
      name: restore
      in: query
      description: The flag indicating if we would like to restore the Test Base Accounts which were soft deleted before.
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    CustomerEventNameParameter:
      name: customerEventName
      in: path
      description: The resource name of the Test Base Customer event.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AvailableInplaceUpgradeOSResouceNameParamaeter:
      name: availableInplaceUpgradeOSResourceNameParameter
      in: path
      description: The available In-place Upgrade OS resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GalleryAppNameParameter:
      name: galleryAppName
      in: path
      description: The resource name of a gallery application.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9]|(-[A-Za-z0-9]))+$
        type: string
    KeywordParameter:
      name: keyword
      in: query
      description: The keywords which listed results should be related to.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TopFilter:
      name: top
      in: query
      description: How many of the sorted items to consider including in the result set.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    FreeHourBalanceNameParameter:
      name: freeHourBalanceName
      in: path
      description: The name of the free hour balance of a Test Base Account.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - TenantLevel
          - SubscriptionLevel
        x-ms-enum:
          name: freeHourBalanceName
          modelAsString: true
        pattern: ^[A-Za-z]+$
        type: string
    CredentialNameParameter:
      name: credentialName
      in: path
      description: The credential resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|([-. ][A-Za-z0-9]))+$
        type: string
    ActionRequestName:
      name: actionRequestName
      in: path
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|([-. ][A-Za-z0-9]))+$
        type: string
    RequestTypeFilter:
      name: requestType
      in: query
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    DraftPackageListResult:
      description: A list of Test Base Draft Packages.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DraftPackageResource'
          description: The list of Test Base Draft Packages.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    DraftPackageResource:
      description: The Test Base Draft Package resource.
      properties:
        properties:
          $ref: '#/components/schemas/DraftPackageProperties'
          x-ms-client-flatten: true
          description: Test Base Draft Package properties.
      type: object
    DraftPackageProperties:
      description: The properties of the Test Base Draft Package.
      type: object
      properties:
        applicationName:
          type: string
          description: Application name
        version:
          type: string
          description: Application version
        draftPackagePath:
          type: string
          readOnly: true
          description: The relative path of the folder hosting package files.
        workingPath:
          type: string
          readOnly: true
          description: The relative path for a temporarily folder for package creation work.
        appFileName:
          type: string
          description: The name of the app file.
        sourceType:
          $ref: '#/components/schemas/DraftPackageSourceType'
          description: The source type.
          default: Native
        useSample:
          type: boolean
          description: Specifies whether a sample package should be used instead of the one uploaded by the user.
        comments:
          type: string
          description: Comments added by user.
        intuneMetadata:
          type: object
          $ref: '#/components/schemas/DraftPackageIntuneAppMetadata'
          description: Metadata used to generate draft package folder and scripts.
        highlightedFiles:
          type: array
          items:
            $ref: '#/components/schemas/HighlightedFile'
          x-ms-identifiers: []
          description: The highlight files in the package.
        packageTags:
          description: Tags of the package to be created.
          $ref: '#/components/schemas/Tags'
        editPackage:
          type: boolean
          description: Specifies whether this draft package is used to edit a package.
          default: false
        packageId:
          type: string
          description: Specifies the package id from which the draft package copied.
        useAutofill:
          type: boolean
          description: Indicates whether user choose to enable script auto-fill.
        executableLaunchCommand:
          type: string
          description: The executable launch command for script auto-fill. Will be used to run the application.
        processName:
          type: string
          description: The process name for script auto-fill. Will be used to identify the application process.
        tabState:
          type: object
          $ref: '#/components/schemas/TabState'
          description: Tab state.
        testTypes:
          type: array
          items:
            $ref: '#/components/schemas/TestType'
          description: OOB, functional or flow driven. Mapped to the data in 'tests' property.
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        targetOSList:
          type: array
          items:
            $ref: '#/components/schemas/TargetOSInfo'
          x-ms-identifiers: []
          description: Specifies the target OSs of specific OS Update types.
        inplaceUpgradeOSPair:
          $ref: '#/components/schemas/InplaceUpgradeOSInfo'
          description: Specifies the baseline os and target os for inplace upgrade.
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: The UTC timestamp when the package was last modified.
        flightingRing:
          type: string
          description: The flighting ring for feature update.
        firstPartyApps:
          description: The list of first party applications to test along with user application.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/FirstPartyAppDefinition'
        galleryApps:
          description: The list of gallery apps to test along with user application.
          type: array
          x-ms-identifiers:
            - skuId
          items:
            $ref: '#/components/schemas/GalleryAppDefinition'
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test'
          x-ms-identifiers: []
          description: The detailed test information.
        intuneEnrollmentMetadata:
          description: The metadata of Intune enrollment.
          $ref: '#/components/schemas/IntuneEnrollmentMetadata'
    DraftPackageUpdateParameters:
      description: Parameters supplied to update a Test Base Draft Package.
      properties:
        properties:
          $ref: '#/components/schemas/DraftPackageUpdateParameterProperties'
          x-ms-client-flatten: true
          description: Test Base Draft Package update parameters.
      type: object
    DraftPackageUpdateParameterProperties:
      description: The properties of draft package update parameters.
      type: object
      properties:
        applicationName:
          type: string
          description: Application name
        version:
          type: string
          description: Application version
        appFileName:
          type: string
          description: The name of the app file.
        sourceType:
          $ref: '#/components/schemas/DraftPackageSourceType'
          description: The source type.
          default: Native
        useSample:
          type: boolean
          description: Specifies whether a sample package should be used instead of the one uploaded by the user.
        comments:
          type: string
          description: Comments added by user.
        intuneMetadata:
          type: object
          $ref: '#/components/schemas/DraftPackageIntuneAppMetadata'
          description: Metadata used to generate draft package folder and scripts.
        highlightedFiles:
          type: array
          items:
            $ref: '#/components/schemas/HighlightedFile'
          x-ms-identifiers: []
          description: The highlight files in the package.
        packageTags:
          description: Tags of the package to be created.
          $ref: '#/components/schemas/Tags'
        packageId:
          type: string
          description: Specifies the package id from which the draft package copied.
        useAutofill:
          type: boolean
          description: Indicates whether user choose to enable script auto-fill.
        executableLaunchCommand:
          type: string
          description: The executable launch command for script auto-fill. Will be used to run the application.
        processName:
          type: string
          description: The process name for script auto-fill. Will be used to identify the application process.
        tabState:
          type: object
          $ref: '#/components/schemas/TabState'
          description: Tab state.
        testTypes:
          type: array
          items:
            $ref: '#/components/schemas/TestType'
          description: OOB, functional or flow driven. Mapped to the data in 'tests' property.
        targetOSList:
          type: array
          items:
            $ref: '#/components/schemas/TargetOSInfo'
          x-ms-identifiers: []
          description: Specifies the target OSs of specific OS Update types.
        inplaceUpgradeOSPair:
          $ref: '#/components/schemas/InplaceUpgradeOSInfo'
          description: Specifies the baseline os and target os for in-place upgrade.
        flightingRing:
          type: string
          description: The flighting ring for feature update.
        firstPartyApps:
          description: Specifies the list of first party applications to test along with user application.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/FirstPartyAppDefinition'
        galleryApps:
          description: The list of gallery apps to test along with user application.
          type: array
          items:
            $ref: '#/components/schemas/GalleryAppDefinition'
          x-ms-identifiers:
            - skuId
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test'
          x-ms-identifiers: []
          description: The detailed test information.
        intuneEnrollmentMetadata:
          description: The metadata of Intune enrollment.
          $ref: '#/components/schemas/IntuneEnrollmentMetadata'
    DraftPackageSourceType:
      type: string
      description: The source type.
      enum:
        - Native
        - IntuneWin
        - TestBasePackage
        - GalleryApp
        - IntuneEnrollment
      x-ms-enum:
        name: draftPackageSourceType
        modelAsString: true
    DraftPackageIntuneAppMetadata:
      description: The metadata of Intune app(s) used for generation.
      type: object
      properties:
        intuneApp:
          description: The Metadata of the Intune App through intunewin file uploading.
          $ref: '#/components/schemas/DraftPackageIntuneAppMetadataItem'
        intuneAppDependencies:
          type: array
          items:
            $ref: '#/components/schemas/DraftPackageIntuneAppMetadataItem'
          x-ms-identifiers: []
          description: The Metadata of dependencies of the Intune App through intunewin file uploading.
    DraftPackageIntuneAppMetadataItem:
      description: The Metadata of a single Intune App.
      type: object
      properties:
        appName:
          type: string
          description: Intune app name.
        version:
          type: string
          description: Intune app version.
        appId:
          type: string
          description: Intune app id.
        publisher:
          type: string
          description: Publisher of the app.
        description:
          type: string
          description: Description of the app.
        owner:
          type: string
          description: Owner of the app.
        createDate:
          type: string
          format: date-time
          description: Creation date of the app.
        dependentAppCount:
          type: integer
          format: int32
          description: Count of dependency apps.
        installCommand:
          type: string
          description: Install command.
        uninstallCommand:
          type: string
          description: Uninstall command.
        lastProcessed:
          type: integer
          format: int64
          description: last processed time tickets.
        dependencyIds:
          type: array
          items:
            type: string
          description: Ids of dependency apps.
        setupFile:
          type: string
          description: Setup file path.
        minimumSupportedOS:
          type: string
          description: Minimum supported OS. The OS version must be greater than this version to run this app.
        status:
          enum:
            - Ready
            - Uploading
            - UploadFailed
            - ExtractFailed
            - NoDependencyApp
          type: string
          x-ms-enum:
            name: intuneExtractStatus
            modelAsString: true
          description: Extract status.
        expectedExitCodes:
          type: array
          items:
            type: string
          description: Expected exit codes returned from Intune App.
    HighlightedFile:
      description: The information of a highlighted file that user should pay attention to.
      type: object
      properties:
        path:
          type: string
          description: The path of the highlighted file.
        visited:
          type: boolean
          description: A flag to save whether this file is viewed by user.
          default: false
        sections:
          type: array
          items:
            type: string
          description: The name of sections to highlight.
      required:
        - path
    Tabs:
      description: Specifies the tabs when creating / cloning / editing a package.
      type: string
      enum:
        - Unspecified
        - BasicsTab
        - ConfigureTestTab
        - EditPackageTab
        - TestMatrixTab
        - TagsTab
        - ReviewAndCreateTab
      x-ms-enum:
        name: packageStudioTabs
        modelAsString: true
    TabState:
      description: Specifies current state of tabs.
      type: object
      properties:
        currentTab:
          description: Current tab.
          $ref: '#/components/schemas/Tabs'
        visitedTabs:
          type: array
          items:
            $ref: '#/components/schemas/Tabs'
          description: visited tabs.
    DraftPackageGetPathResponse:
      description: The response of getting a download URL.
      type: object
      properties:
        baseUrl:
          type: string
          readOnly: true
          description: The base URL of the storage account.
        draftPackagePath:
          type: string
          readOnly: true
          description: The relative path of the folder hosting package files.
        workingPath:
          type: string
          readOnly: true
          description: The relative path for a temporary folder for package creation work.
        sasToken:
          type: string
          readOnly: true
          x-ms-secret: true
          description: A SAS token for the storage account to access workspace.
        expirationTime:
          type: string
          readOnly: true
          format: date-time
          description: Expiry date of the SAS token.
    ExtractFileOperationParameters:
      description: Parameters body to pass to extract file operation of Draft Package.
      type: object
      properties:
        fileType:
          $ref: '#/components/schemas/ExtractFileType'
          description: The type of file to extract.
          default: IntuneWinPackage
        sourceFile:
          description: Relative path of the file to be extracted, the path must under working path of this draft package.
          type: string
        intuneAppId:
          description: Intune application id.
          type: string
      required:
        - sourceFile
    ExtractFileType:
      type: string
      description: The type of file to extract.
      enum:
        - TestBasePackage
        - IntuneWinPackage
      x-ms-enum:
        name: extractFileType
        modelAsString: true
    GenerateOperationParameters:
      description: Parameters body to pass to generate operation of Draft Package.
      type: object
      properties:
        forceGenerate:
          type: boolean
          description: Force to generate package files even if no metadata changed.
          default: false
    CopyFromPackageOperationParameters:
      description: Parameters body to pass to copy-from-package operation of Draft Package.
      type: object
      properties:
        packageId:
          description: The id of the package to copy from.
          type: string
      required:
        - packageId
    CustomImageListResult:
      description: A list of Test Base custom images.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CustomImageResource'
          description: The list of Test Base custom images.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    CustomImageResource:
      description: The test base custom image resource.
      properties:
        properties:
          $ref: '#/components/schemas/CustomImageProperties'
          x-ms-client-flatten: true
          description: Test Base custom image properties.
      type: object
    CustomImageProperties:
      description: The properties of the test base custom image.
      type: object
      properties:
        vhdId:
          type: string
          description: The Id of the associated VHD resource.
        definitionName:
          type: string
          description: Image definition name.
        versionName:
          type: string
          description: Image version name.
        source:
          type: string
          description: Custom image source type.
          default: VHD
          enum:
            - Unknown
            - VHD
          x-ms-enum:
            name: ImageSource
            modelAsString: true
            values:
              - value: Unknown
                description: Unknown image source type.
              - value: VHD
                description: Specify image onboarding through VHD.
        product:
          type: string
          description: Product of the custom image.
          readOnly: true
        release:
          type: string
          description: Release of the custom image OS.
          readOnly: true
        status:
          type: string
          description: Status of the custom image.
          readOnly: true
          enum:
            - Unknown
            - Ready
            - Failed
            - Validating
          x-ms-enum:
            name: ImageStatus
            modelAsString: true
            values:
              - value: Unknown
                description: Unknown image status.
              - value: Ready
                description: Completed validation and is ready for use.
              - value: Failed
                description: Failed to onboard or pass validation.
              - value: Validating
                description: Succeed to onboard but is in validation process.
        creationTime:
          type: string
          format: date-time
          description: The UTC timestamp when the custom image was published.
          readOnly: true
        validationResults:
          $ref: '#/components/schemas/ImageValidationResults'
          description: The validation result of the custom image.
          readOnly: true
        osDiskImageSizeInGB:
          type: integer
          format: int64
          readOnly: true
          description: This property indicates the size of the VHD to be created.
        releaseVersionDate:
          type: string
          format: date-time
          description: The release version date of the release of the custom image OS.
          readOnly: true
        vhdFileName:
          type: string
          description: The file name of the associated VHD resource.
          readOnly: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
      required:
        - definitionName
        - versionName
        - source
    ImageDefinitionListResult:
      description: A list of test base image definitions.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ImageDefinitionResource'
          description: The list of test base image definitions.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    ImageDefinitionResource:
      description: The test base image definition resource.
      properties:
        properties:
          $ref: '#/components/schemas/ImageDefinitionProperties'
          x-ms-client-flatten: true
          description: Test Base custom image properties.
      type: object
    ImageDefinitionProperties:
      description: The image properties under the image definition name.
      type: object
      properties:
        architecture:
          description: Custom image architecture.
          type: string
          enum:
            - x64
          x-ms-enum:
            name: ImageArchitecture
            modelAsString: true
            values:
              - value: x64
                description: 64-bit architecture.
        osState:
          description: Custom image OS state.
          type: string
          enum:
            - Generalized
            - Specialized
          x-ms-enum:
            name: ImageOSState
            modelAsString: true
            values:
              - value: Generalized
                description: Sysprep generalization processed.
              - value: Specialized
                description: Fully kept with user specified settings.
        securityType:
          description: Custom image security type.
          type: string
          enum:
            - Standard
            - TrustedLaunch
          x-ms-enum:
            name: ImageSecurityType
            modelAsString: true
            values:
              - value: Standard
                description: Standard security type.
              - value: TrustedLaunch
                description: Specify higher security level compared to Standard.
        provisioningState:
          type: string
          readOnly: true
      required:
        - architecture
        - osState
        - securityType
    ImageValidationResults:
      description: The image validation result.
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/VerificationResult'
          x-ms-identifiers: []
          description: The validation results of the image.
    VerificationResult:
      description: The detailed result of a validation or rule checking.
      type: object
      properties:
        verificationName:
          type: string
          description: The name of the verification rule.
        result:
          type: string
          enum:
            - Passed
            - Failed
          description: Indicates if the validation or rule checking is passed.
          x-ms-enum:
            name: VerificationStatus
            modelAsString: true
            values:
              - value: Passed
                description: Validation or rule checking passed.
              - value: Failed
                description: Validation or rule checking failed.
        message:
          type: string
          description: Message for clarification.
      required:
        - result
    ImageNameCheckAvailabilityParameters:
      description: Parameter body to request test base custom image availability.
      type: object
      properties:
        definitionName:
          type: string
          description: Image definition name.
        versionName:
          type: string
          description: Image version name.
      required:
        - definitionName
        - versionName
    CheckImageAvailabilityResult:
      $ref: '#/components/schemas/VerificationResult'
      description: The image availability result.
      properties: {}
      type: object
    GetImageDefinitionParameters:
      description: Parameters supplied to get the test base custom image Definition operation.
      type: object
      properties:
        definitionName:
          type: string
          description: Image definition name.
    ImageDefinitionsListResult:
      description: The result of all available image definition under a test base account.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ImageDefinitionResource'
          description: The list of image definitions.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    VHDListResult:
      description: A list of VHD resource.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VHDResource'
          description: The list of Test Base VHDs.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    VHDResource:
      description: The Test Base VHD resource.
      properties:
        properties:
          $ref: '#/components/schemas/VHDProperties'
          x-ms-client-flatten: true
          description: The Test Base VHD validation result properties.
      type: object
    VHDProperties:
      description: The Test Base VHD properties
      type: object
      properties:
        path:
          type: string
          readOnly: true
          description: The relative path of the VHD file.
        fileName:
          type: string
          readOnly: true
          description: The VHD file name.
        fileSize:
          type: integer
          format: int64
          readOnly: true
          description: The file size in bytes of the VHD file.
        status:
          type: string
          description: The status of the VHD.
          readOnly: true
          enum:
            - Unknown
            - Ready
            - Failed
            - Verifying
            - Occupied
          x-ms-enum:
            name: VHDStatus
            modelAsString: true
            values:
              - value: Unknown
                description: Unknown VHD status.
              - value: Ready
                description: Succeed to be upload and pass VHD verification.
              - value: Failed
                description: Failed to pass VHD verification.
              - value: Verifying
                description: Processing VHD file checking and malware scanning.
              - value: Occupied
                description: An image is onboarding with this VHD.
        creationTime:
          type: string
          format: date-time
          description: The UTC timestamp when the VHD was created.
          readOnly: true
        provisioningState:
          type: string
          readOnly: true
    ChatSessionResourceListResult:
      description: A list of chat session.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatSessionResource'
          description: The list of chat session.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    ChatSessionResource:
      description: The chat session resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ChatSessionProperties'
          description: The properties of chat session.
      type: object
    ChatSessionProperties:
      type: object
      description: The chat session properties.
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
    ChatRequest:
      type: object
      description: The chat request payload.
      properties:
        question:
          type: string
          description: The question of the chat turn
      required:
        - question
    ChatResponse:
      description: The chat response payload.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ChatResponseProperties'
          description: The properties of chat response.
      type: object
    ChatResponseProperties:
      type: object
      description: The chat response properties.
      properties:
        question:
          type: string
          description: The question from the request
        answer:
          type: string
          description: The answer from the system
        citations:
          type: array
          items:
            $ref: '#/components/schemas/AnswerCitation'
          x-ms-identifiers: []
        usage:
          type: integer
          format: int32
          description: The usage of questions within the chat session
          readOnly: true
        limit:
          type: integer
          format: int32
          description: The limit of questions within the chat session
          readOnly: true
      required:
        - question
        - answer
        - usage
        - limit
    AnswerCitation:
      type: object
      description: The answer citation.
      properties:
        title:
          type: string
          description: The title of the citation.
        url:
          type: string
          description: The url of the citation.
        chunkIndex:
          type: integer
          description: The chunk index of the content.
          format: int32
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Tags:
      additionalProperties:
        type: string
      description: Resource tags.
      properties: {}
      type: object
    TestBaseAccountSKUListResult:
      description: A list of Test Base Account SKUs.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TestBaseAccountSKU'
          x-ms-identifiers:
            - name
          description: The list of Test Base Account SKUs.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    TestBaseAccountSKU:
      description: Describes a Test Base Account SKU.
      type: object
      properties:
        resourceType:
          type: string
          description: The type of resource the SKU applies to.
        name:
          type: string
          description: The name of the SKU. This is typically a letter + number code, such as B0 or S0.
        tier:
          type: string
          description: The tier of this particular SKU.
          enum:
            - Standard
          x-ms-enum:
            name: tier
            modelAsString: true
        capabilities:
          type: array
          description: The capabilities of a SKU.
          readOnly: true
          items:
            $ref: '#/components/schemas/TestBaseAccountSKUCapability'
          x-ms-identifiers:
            - name
        locations:
          description: The locations that the SKU is available.
          uniqueItems: false
          type: array
          items:
            type: string
      required:
        - name
        - tier
    TestBaseAccountSKUCapability:
      description: Properties of the Test Base Account SKU Capability.
      type: object
      properties:
        name:
          type: string
          description: An invariant to describe the feature, such as 'SLA'.
        value:
          type: string
          description: An invariant if the feature is measured by quantity, such as 99.9%.
      required:
        - name
        - value
    TestBaseAccountListResult:
      description: A list of Test Base Accounts.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TestBaseAccountResource'
          description: The list of Test Base Accounts.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    TestBaseAccountResource:
      description: The Test Base Account resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TestBaseAccountResourceProperties'
          description: Properties of a Test Base Account.
        identity:
          $ref: '#/components/schemas/SystemAssignedServiceIdentity'
          description: The identity of the testBaseAccount.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    TestBaseAccountResourceProperties:
      description: The properties of a Test Base Account resource.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        sku:
          description: The SKU of the Test Base Account.
          $ref: '#/components/schemas/TestBaseAccountSKU'
        accessLevel:
          description: The access level of the Test Base Account.
          readOnly: true
          type: string
      required:
        - sku
    ProvisioningState:
      type: string
      description: ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
      enum:
        - Succeeded
        - Failed
        - Cancelled
        - Creating
        - Deleting
        - Updating
      readOnly: true
      x-ms-enum:
        name: provisioningState
        modelAsString: true
    TestBaseAccountUpdateParameters:
      description: Parameters supplied to update a Test Base Account.
      properties:
        properties:
          $ref: '#/components/schemas/TestBaseAccountUpdateParameterProperties'
          x-ms-client-flatten: true
          description: Test Base Account update parameters.
        identity:
          $ref: '#/components/schemas/SystemAssignedServiceIdentity'
          description: The identity of the testBaseAccount.
        tags:
          description: The tags of the Test Base Account.
          $ref: '#/components/schemas/Tags'
      type: object
    TestBaseAccountUpdateParameterProperties:
      description: Parameters supplied to update a Test Base Account.
      type: object
      properties:
        sku:
          description: The SKU of the Test Base Account.
          $ref: '#/components/schemas/TestBaseAccountSKU'
    TestBaseAccountUsageDataList:
      description: A list of Test Base Account usage data.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TestBaseAccountUsageData'
          description: The list of Test Base Account usage data.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    TestBaseAccountUsageData:
      description: The usage data of a Test Base Account.
      type: object
      properties:
        id:
          description: Fully qualified ARM resource id
          type: string
        name:
          $ref: '#/components/schemas/TestBaseAccountUsageName'
          description: Localizable String object containing the name and a localized value.
        unit:
          description: 'Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond.'
          type: string
        limit:
          format: int64
          description: The maximum permitted value for the usage quota. If there is no limit, this value will be -1.
          type: integer
        currentValue:
          format: int64
          description: Current value for the usage quota.
          type: integer
    TestBaseAccountUsageName:
      description: Localizable String object containing the name and a localized value.
      type: object
      properties:
        value:
          description: The identifier of the usage.
          type: string
        localizedValue:
          description: Localized name of the usage.
          type: string
    GetFileUploadURLParameters:
      description: The parameters supplied to the Test Base Account GetFileUploadURL action.
      type: object
      properties:
        blobName:
          type: string
          description: The custom file name of the uploaded blob.
        resourceType:
          type: string
          enum:
            - Package
            - VHD
          description: Resource type for file uploading.
          x-ms-enum:
            name: fileUploadResourceType
            modelAsString: true
            values:
              - value: Package
                description: Upload file for package onboarding.
              - value: VHD
                description: Upload VHD file for image onboarding.
    FileUploadURLResponse:
      description: The URL response
      type: object
      properties:
        uploadUrl:
          type: string
          readOnly: true
          description: The URL used for uploading the package.
        blobPath:
          type: string
          readOnly: true
          description: The blob path of the uploaded package. It will be used as the 'blobPath' property of PackageResource.
    AvailableOSListResult:
      description: A list of available OSs.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailableOSResource'
          description: The list of available OSs.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    AvailableOSResource:
      description: The Available OS resource.
      properties:
        properties:
          $ref: '#/components/schemas/AvailableOSProperties'
          x-ms-client-flatten: true
          description: Available OS properties.
      type: object
    AvailableOSProperties:
      description: The Available OS properties.
      type: object
      properties:
        osId:
          type: string
          description: The Id of an Available OS of a Test Base Account.
        osName:
          type: string
          description: The name of an Available OS of a Test Base Account.
        osVersion:
          type: string
          description: The version of an Available OS of a Test Base Account.
        insiderChannel:
          type: string
          description: The insider channel of an Available OS of a Test Base Account.
        osUpdateType:
          type: string
          description: The OS update type of an Available OS of a Test Base Account.
        osPlatform:
          type: string
          description: The Platform of an Available OS of a Test Base Account.
    FeatureUpdateSupportedOsesResult:
      description: Response schema of feature update supported OSes list API.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FeatureUpdateSupportedOsesResource'
        nextLink:
          type: string
          readOnly: true
    FeatureUpdateSupportedOsesResource:
      description: Feature update supported OSes proxy resource.
      properties:
        properties:
          $ref: '#/components/schemas/FeatureUpdateSupportedOsesProperties'
          x-ms-client-flatten: true
          description: Available OS properties.
      type: object
    FeatureUpdateSupportedOsesProperties:
      description: Properties of feature update supported OSes proxy resource.
      type: object
      properties:
        osId:
          type: string
        osName:
          type: string
        insiderChannel:
          type: string
        version:
          type: string
        displayText:
          type: string
        baselineProducts:
          type: array
          items:
            type: string
        startTime:
          type: string
          format: date-time
          description: Timestamp when the OS starts to be supported.
        state:
          type: string
          enum:
            - Disabled
            - Active
          description: State of the OS product.
          x-ms-enum:
            name: osProductState
            modelAsString: true
      required:
        - osId
        - osName
        - insiderChannel
        - version
        - baselineProducts
        - startTime
        - state
        - displayText
    FlightingRingListResult:
      description: A list of flighting rings.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FlightingRingResource'
          description: The list of flighting rings.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    FlightingRingResource:
      description: The flighting ring resource.
      properties:
        properties:
          $ref: '#/components/schemas/FlightingRingProperties'
          x-ms-client-flatten: true
          description: Flighting Ring properties.
      type: object
    FlightingRingProperties:
      description: The Flighting Ring properties.
      type: object
      properties:
        actualFlightingRingName:
          type: string
          description: The actual name of a flighting ring of a Test Base Account.
    FirstPartyAppListResult:
      description: A list of currently available first party applications.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirstPartyAppResource'
          description: The list of currently available first party applications.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    FirstPartyAppResource:
      description: The first party application resource.
      properties:
        properties:
          $ref: '#/components/schemas/FirstPartyAppProperties'
          x-ms-client-flatten: true
          description: Properties of a first party application.
      type: object
    FirstPartyAppProperties:
      description: Properties of a first party application.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        mediaType:
          type: string
          description: The media type of a first party application of a Test Base Account.
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The architecture of a first party application of a Test Base Account.
        channel:
          type: string
          description: The channel info of a first party application of a Test Base Account.
        ring:
          type: string
          description: The ring info of a first party application of a Test Base Account.
        supportedProducts:
          type: array
          items:
            type: string
          description: The supported OS products of a first party application of a Test Base Account.
    FirstPartyAppDefinition:
      description: Properties of the definition of a first party application of the Test Base package.
      type: object
      properties:
        name:
          type: string
          description: The media name of a first party application of a Test Base Account.
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The architecture of a first party application of a Test Base Account.
        channel:
          type: string
          description: The channel info of a first party application of a Test Base Account.
        ring:
          type: string
          description: The ring info of a first party application of a Test Base Account.
        interopExecutionMode:
          type: string
          description: Specifies how the first party applications should be inter-operated with user's application.
          enum:
            - firstPartyAppWithTests
            - firstPartyApp
          default: firstPartyAppWithTests
          x-ms-enum:
            name: interopExecutionMode
            modelAsString: true
            values:
              - value: firstPartyAppWithTests
                description: User application will test with the first party applications. For out-of-box tests, additional test cases for first party applications will also be run.
              - value: firstPartyApp
                description: User application will test with the first party applications.
    TestResultFirstPartyAppDefinition:
      description: Properties of the definition of first party application in test result.
      type: object
      properties:
        name:
          type: string
          description: The media name of a first party application of a Test Base Account.
        version:
          type: string
          description: The media version of a first party application of a Test Base Account.
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The architecture of a first party application of a Test Base Account.
        channel:
          type: string
          description: The channel info of a first party application of a Test Base Account.
        ring:
          type: string
          description: The ring info of a first party application of a Test Base Account.
    GalleryAppDefinition:
      description: Properties of the definition of a gallery application used in Test Base package.
      type: object
      properties:
        skuId:
          type: string
          description: The SKU id of the gallery application.
        isConsented:
          type: boolean
          description: Whether the disclaimer of the gallery application is accepted.
          default: false
      required:
        - skuId
    GalleryAppListResult:
      description: A list of currently available gallery applications.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GalleryAppResource'
          description: The list of currently available gallery applications.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    GalleryAppResource:
      description: The gallery application resource.
      properties:
        properties:
          $ref: '#/components/schemas/GalleryAppProperties'
          x-ms-client-flatten: true
          description: Properties of a gallery application.
      type: object
    GalleryAppProperties:
      description: Properties of a gallery application.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        applicationType:
          $ref: '#/components/schemas/GalleryAppType'
          description: The application type of a gallery application.
        applicationId:
          type: string
          description: The id of a gallery application.
        applicationName:
          type: string
          description: The name of a gallery application.
        popularity:
          type: integer
          format: int64
          description: The number of users using a gallery application.
          default: 0
      required:
        - applicationType
        - applicationId
        - applicationName
        - popularity
    GalleryAppType:
      description: The type of a gallery application.
      type: string
      enum:
        - Winget
      x-ms-enum:
        name: applicationType
        modelAsString: true
    GalleryAppSkuListResult:
      description: A list of currently available SKUs of a gallery application.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GalleryAppSkuResource'
          description: The list of currently available SKUs of a gallery applications.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    GalleryAppSkuResource:
      description: The gallery application resource.
      properties:
        properties:
          $ref: '#/components/schemas/GalleryAppSkuProperties'
          x-ms-client-flatten: true
          description: Properties of a gallery application SKU.
      type: object
    GalleryAppSkuProperties:
      description: Properties of a gallery application SKU.
      type: object
      discriminator:
        propertyName: applicationType
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        applicationType:
          $ref: '#/components/schemas/GalleryAppType'
          description: The application type of a gallery application.
      required:
        - applicationType
    WingetAppSkuProperties:
      description: The detailed properties of a winget gallery application SKU.
      x-ms-discriminator-value: Winget
      properties:
        version:
          type: string
          description: The version of a winget gallery application SKU.
        license:
          type: string
          description: The license description of a winget gallery application SKU.
        licenseUrl:
          type: string
          description: The license URL of a winget gallery application SKU.
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        applicationType:
          $ref: '#/components/schemas/GalleryAppType'
          description: The application type of a gallery application.
      type: object
    TestTypeListResult:
      description: A list of test types.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TestTypeResource'
          description: The list of test types.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    TestTypeResource:
      description: The test type resource.
      properties:
        properties:
          $ref: '#/components/schemas/TestTypeProperties'
          x-ms-client-flatten: true
          description: Test Type properties.
      type: object
    TestTypeProperties:
      description: The Test Type properties.
      type: object
      properties:
        actualTestTypeName:
          type: string
          description: The actual name of a test type of a Test Base Account.
    PackageCheckNameAvailabilityParameters:
      description: Parameters body to pass for Test Base Package name availability check.
      type: object
      properties:
        name:
          type: string
          description: Resource name to verify.
        applicationName:
          type: string
          description: Application name to verify.
        version:
          type: string
          description: Version name to verify.
        type:
          type: string
          description: fully qualified resource type which includes provider namespace.
      required:
        - name
        - applicationName
        - version
    CheckNameAvailabilityResult:
      properties:
        nameAvailable:
          type: boolean
          description: 'Value indicating the availability of the name: true if the name is available; otherwise, false.'
        reason:
          type: string
          description: The reason for unavailability of a name. Required if nameAvailable == false.
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: reason
            modelAsString: true
        message:
          type: string
          readOnly: true
          description: The detailed info regarding the reason associated with the name. Required if nameAvailable == false.
      type: object
      description: Description of a Check Name availability response properties.
    PackageRunTestParameters:
      description: The parameters supplied to the Test Base Package to start a Test Run.
      type: object
      properties:
        testType:
          $ref: '#/components/schemas/TestType'
          description: The type of the test.
        osUpdateType:
          type: string
          description: Specifies the OS update type to test against.
          default: SecurityUpdate
          enum:
            - SecurityUpdate
            - FeatureUpdate
            - InplaceUpgrade
          x-ms-enum:
            name: osUpdateType
            modelAsString: true
        osName:
          type: string
          description: The operating system name. e.g. Windows 10 1809.
        releaseName:
          type: string
          description: The name of the tested release (OS update).
        flightingRing:
          type: string
          description: The flighting ring, only for release of feature updates.
        customImageId:
          type: string
          description: The tested custom image id. 'osName', 'release', 'buildVersion' and 'mediaPackageVersion' would be ignored when it's eligible.'
    PackageListResult:
      description: A list of Test Base Packages.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PackageResource'
          description: The list of Test Base Packages.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    PackageResource:
      description: The Test Base Package resource.
      properties:
        properties:
          $ref: '#/components/schemas/PackageProperties'
          x-ms-client-flatten: true
          description: Test Base Package properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    PackageProperties:
      description: The properties of the Test Base Package.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        applicationName:
          type: string
          description: Application name
        version:
          type: string
          description: Application version
        draftPackageId:
          type: string
          description: The id of draft package. Used to create or update this package from a draft package.
        packageStatus:
          readOnly: true
          type: string
          description: The status of the package.
          enum:
            - Unknown
            - Registered
            - Ready
            - Error
            - ValidatingPackage
            - PreValidationCheckPass
            - Deleted
            - ValidationLongerThanUsual
            - VerifyingPackage
          x-ms-enum:
            name: packageStatus
            modelAsString: true
        isEnabled:
          type: boolean
          readOnly: true
          description: Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
        blobPath:
          type: string
          description: The file path of the package.
        validationResults:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PackageValidationResult'
          x-ms-identifiers: []
          description: The validation results. There's validation on package when it's created or updated.
        testTypes:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/TestType'
          description: OOB, functional or flow driven. Mapped to the data in 'tests' property.
        targetOSList:
          type: array
          items:
            $ref: '#/components/schemas/TargetOSInfo'
          x-ms-identifiers: []
          description: Specifies the target OSs of specific OS Update types.
        inplaceUpgradeOSPair:
          $ref: '#/components/schemas/InplaceUpgradeOSInfo'
          description: Specifies the baseline os and target os for inplace upgrade.
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: The UTC timestamp when the package was last modified.
        flightingRing:
          type: string
          description: The flighting ring for feature update.
        firstPartyApps:
          description: The list of first party applications to test along with user application.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/FirstPartyAppDefinition'
        galleryApps:
          description: The list of gallery apps to test along with user application.
          type: array
          items:
            $ref: '#/components/schemas/GalleryAppDefinition'
          x-ms-identifiers:
            - skuId
          readOnly: true
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test'
          x-ms-identifiers: []
          description: The detailed test information.
        intuneEnrollmentMetadata:
          description: The metadata of Intune enrollment.
          $ref: '#/components/schemas/IntuneEnrollmentMetadata'
      required:
        - applicationName
        - version
    TestType:
      type: string
      description: The test type.
      enum:
        - OutOfBoxTest
        - FunctionalTest
        - FlowDrivenTest
      x-ms-enum:
        name: testType
        modelAsString: true
    Architecture:
      type: string
      description: The architecture of an OS or a first party application.
      enum:
        - x86
        - x64
        - arm64
      x-ms-enum:
        name: architecture
        modelAsString: true
    TargetOSInfo:
      description: The information of the target OS to be tested.
      type: object
      properties:
        osUpdateType:
          type: string
          description: Specifies the OS update type to test against, e.g., 'Security updates' or 'Feature updates'.
        targetOSs:
          type: array
          items:
            type: string
          description: Specifies the target OSs to be tested.
        insiderChannelIds:
          type: array
          items:
            type: string
          description: Insider Channel Ids. Only used for feature update.
        baselineOSs:
          type: array
          items:
            type: string
          description: Specifies the baseline OSs to be tested.
        targetOSImageIds:
          type: array
          items:
            type: string
          description: Specifies the ids of the target OSs from Custom Images to be tested.
      required:
        - osUpdateType
    PackageValidationResult:
      description: The validation results. There's validation on package when it's created or updated.
      type: object
      properties:
        validationName:
          type: string
          readOnly: true
          description: Validation name.
        isValid:
          type: boolean
          readOnly: true
          description: Indicates whether the package passed the validation.
        errors:
          type: array
          readOnly: true
          items:
            type: string
          description: Error information.
    Test:
      description: The definition of a Test.
      type: object
      properties:
        testType:
          $ref: '#/components/schemas/TestType'
          description: The type of the test.
        validationRunStatus:
          readOnly: true
          type: string
          description: The status of the validation run of the package.
          enum:
            - Unknown
            - Pending
            - Passed
            - Failed
          x-ms-enum:
            name: validationRunStatus
            modelAsString: true
        validationResultId:
          readOnly: true
          type: string
          description: Resource identifier of the validation test result.
        isActive:
          type: boolean
          description: Indicates if this test is active.It doesn't schedule test for not active Test.
        commands:
          type: array
          items:
            $ref: '#/components/schemas/Command'
          x-ms-identifiers: []
          description: The commands used in the test.
      required:
        - testType
        - commands
    Command:
      description: The command used in the test
      type: object
      properties:
        name:
          type: string
          description: The name of the command.
        action:
          type: string
          description: The action of the command.
          enum:
            - Install
            - Launch
            - Close
            - Uninstall
            - Custom
            - FlowDrivenCustom
          x-ms-enum:
            name: action
            modelAsString: true
        contentType:
          type: string
          description: The type of command content.
          enum:
            - Inline
            - File
            - Path
          x-ms-enum:
            name: contentType
            modelAsString: true
        content:
          type: string
          description: The content of the command. The content depends on source type.
        runElevated:
          type: boolean
          description: Specifies whether to run the command as administrator.
        restartAfter:
          type: boolean
          description: Specifies whether to restart the VM after the command executed.
        maxRunTime:
          type: integer
          format: int32
          description: Specifies the max run time of the command.
        runAsInteractive:
          type: boolean
          description: Specifies whether to run the command in interactive mode.
        alwaysRun:
          type: boolean
          description: Specifies whether to run the command even if a previous command is failed.
        applyUpdateBefore:
          type: boolean
          description: Specifies whether to apply update before the command.
        install1PAppBefore:
          type: boolean
          description: Specifies whether to install first party applications before running the command.
        preUpgrade:
          type: boolean
          description: Specifies whether the command is assigned to be executed before in-place upgrade.
        postUpgrade:
          type: boolean
          description: Specifies whether the command is assigned to be executed after in-place upgrade.
        enrollIntuneBefore:
          type: boolean
          description: Specifies whether to enroll Intune before the command.
      required:
        - name
        - action
        - contentType
        - content
    PackageUpdateParameters:
      description: Parameters supplied to update a Test Base Package.
      properties:
        properties:
          $ref: '#/components/schemas/PackageUpdateParameterProperties'
          x-ms-client-flatten: true
          description: Test Base Package update parameters.
        tags:
          description: The tags of the Package.
          $ref: '#/components/schemas/Tags'
      type: object
    PackageUpdateParameterProperties:
      description: Parameters supplied to update a Test Base Package.
      type: object
      properties:
        draftPackageId:
          type: string
          description: The id of draft package. Used to create or update this package from a draft package.
        isEnabled:
          type: boolean
          description: Specifies whether the package is enabled. It doesn't schedule test for package which is not enabled.
        blobPath:
          type: string
          description: The file name of the package.
        targetOSList:
          type: array
          items:
            $ref: '#/components/schemas/TargetOSInfo'
          x-ms-identifiers: []
          description: Specifies the target OSs of specific OS Update types.
        inplaceUpgradeOSPair:
          $ref: '#/components/schemas/InplaceUpgradeOSInfo'
          description: Specifies the baseline os and target os for in-place upgrade.
        flightingRing:
          type: string
          description: The flighting ring for feature update.
        firstPartyApps:
          description: Specifies the list of first party applications to test along with user application.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/FirstPartyAppDefinition'
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test'
          x-ms-identifiers: []
          description: The detailed test information.
        intuneEnrollmentMetadata:
          description: The metadata of Intune enrollment.
          $ref: '#/components/schemas/IntuneEnrollmentMetadata'
    TestResultConsoleLogDownloadURLParameters:
      description: Parameters body to pass for getting the download URL of the test execution console log file.
      type: object
      properties:
        logFileName:
          type: string
          description: The log file name corresponding to the download URL.
      required:
        - logFileName
    DownloadURLResponse:
      description: The response of getting a download URL.
      type: object
      properties:
        downloadUrl:
          type: string
          readOnly: true
          x-ms-secret: true
          description: The download URL.
        expirationTime:
          type: string
          readOnly: true
          format: date-time
          description: Expiry date of the download URL.
    TestSummaryListResult:
      description: A list of Test Summaries.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TestSummaryResource'
          description: The list of Test Summaries.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    TestSummaryResource:
      description: Summary of a Test.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TestSummaryProperties'
          description: Properties of a Test Summary.
      type: object
    TestSummaryProperties:
      description: Properties of a Test Summary.
      type: object
      properties:
        testSummaryId:
          type: string
          description: The Id of the current Test Summary.
        packageId:
          type: string
          description: The Azure resource Id of package.
        applicationName:
          type: string
          description: Application name.
        applicationVersion:
          type: string
          description: Application version.
        executionStatus:
          $ref: '#/components/schemas/TestExecutionStatus'
          description: The execution status of last test.
        testStatus:
          $ref: '#/components/schemas/TestStatus'
          description: The status of last test.
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        testRunTime:
          type: string
          description: The run time of the last test.
        featureUpdatesTestSummary:
          $ref: '#/components/schemas/OSUpdatesTestSummary'
          description: The result summary of tests triggered by feature updates
        securityUpdatesTestSummary:
          $ref: '#/components/schemas/OSUpdatesTestSummary'
          description: The result summary of tests triggered by security updates
        inplaceUpgradesTestSummary:
          $ref: '#/components/schemas/OSUpdatesTestSummary'
          description: The result summary of tests triggered by in-place upgrades
        packageTags:
          description: The tags of Package resource that are associated with the testSummary
          $ref: '#/components/schemas/Tags'
    TestExecutionStatus:
      type: string
      description: The execution status of a test.
      enum:
        - None
        - InProgress
        - Processing
        - Completed
        - NotExecuted
        - Incomplete
        - Failed
        - Succeeded
      x-ms-enum:
        name: executionStatus
        modelAsString: true
    TestStatus:
      type: string
      description: The status of a test.
      enum:
        - None
        - TestExecutionInProgress
        - DataProcessing
        - TestFailure
        - UpdateFailure
        - TestAndUpdateFailure
        - InfrastructureFailure
        - Completed
      x-ms-enum:
        name: testStatus
        modelAsString: true
    TestGrade:
      type: string
      description: The grade of a test.
      enum:
        - None
        - NotAvailable
        - Pass
        - Fail
      x-ms-enum:
        name: grade
        modelAsString: true
    OSUpdatesTestSummary:
      description: The summary of some tests.
      type: object
      properties:
        executionStatus:
          $ref: '#/components/schemas/TestExecutionStatus'
          description: The status of the last test.
        testStatus:
          $ref: '#/components/schemas/TestStatus'
          description: The status of last test.
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of last test.
        testRunTime:
          type: string
          description: The run time of the last test.
        osUpdateTestSummaries:
          type: array
          items:
            $ref: '#/components/schemas/OSUpdateTestSummary'
          x-ms-identifiers: []
          description: Detailed summary for each OS update
    OSUpdateTestSummary:
      description: The summary of a test.
      type: object
      properties:
        osName:
          type: string
          description: The operating system name. e.g. Windows 10 1809.
        customImageId:
          type: string
          description: Specify the referenced Test Base Custom Image Id if available.
        customImageDisplayName:
          type: string
          description: The name of the custom image resource.
        releaseName:
          type: string
          description: The name of the tested release (OS update).
        buildVersion:
          type: string
          description: The build version of the tested release (OS update)
        buildRevision:
          type: string
          description: The build revision of the tested release (OS update)
        releaseVersionDate:
          type: string
          format: date-time
          description: The release version date.
        flightingRing:
          type: string
          description: The flighting ring, only for release of feature updates.
        executionStatus:
          $ref: '#/components/schemas/TestExecutionStatus'
          description: The execution status of the test.
        testStatus:
          $ref: '#/components/schemas/TestStatus'
          description: The status of the test.
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        testRunTime:
          type: string
          description: The run time of the test.
        testType:
          type: string
          description: The test type of the package
        inplaceUpgradeBaselineProperties:
          $ref: '#/components/schemas/OsProperties'
          description: The properties of baseline os for in-place upgrade test.
    TestResultListResult:
      description: A list of Test Results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TestResultResource'
          description: The list of Test Results.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    TestResultResource:
      description: The Test Result Resource.
      properties:
        properties:
          $ref: '#/components/schemas/TestResultProperties'
          x-ms-client-flatten: true
          description: The properties of a Test Result.
      type: object
    TestResultProperties:
      description: The properties of a Test Result.
      type: object
      properties:
        baselineTestResultId:
          type: string
          description: Azure Id of the baseline test result.
        packageId:
          type: string
          description: Resource Id of the package.
        applicationName:
          type: string
          description: Application name.
        applicationVersion:
          type: string
          description: Application version.
        osName:
          type: string
          description: The operating system name, e.g. Windows 10 1809.
        customImageId:
          type: string
          description: Specify the referenced Test Base Custom Image Id if applicable.
        customImageDisplayName:
          type: string
          description: The name of the custom image resource.
        releaseName:
          type: string
          description: The name of the tested release (OS update).
        releaseVersionDate:
          type: string
          format: date-time
          description: The release version date of the tested release.
        flightingRing:
          type: string
          description: The flighting ring, only for release of feature updates.
        buildVersion:
          type: string
          description: The build version of the tested release (OS update).
        buildRevision:
          type: string
          description: The build revision of the tested release (OS update).
        testType:
          type: string
          description: Test type. E.g. 'Out of box test' or 'Functional test'.
        testRunTime:
          type: string
          description: The run time of the test.
        isDownloadDataAvailable:
          type: boolean
          description: Whether download data is available.
        isVideoAvailable:
          type: boolean
          description: Whether video data is available.
        executionStatus:
          $ref: '#/components/schemas/TestExecutionStatus'
          description: The execution status of the test.
        testStatus:
          $ref: '#/components/schemas/TestStatus'
          description: The status of the test.
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        kbNumber:
          type: string
          description: KB number.
        interopMediaType:
          type: string
          description: Interop media type.
        interopMediaVersion:
          type: string
          description: Interop media version.
        packageVersion:
          type: string
          description: The version of the Windows update package.
        analysisSummaries:
          type: array
          items:
            $ref: '#/components/schemas/TestResultAnalysisSummary'
          x-ms-identifiers:
            - name
          description: List of analysis summaries.
        inplaceUpgradeProperties:
          $ref: '#/components/schemas/InplaceUpgradeProperties'
          description: Properties for inplace upgrade test.
        testStartTime:
          type: string
          format: date-time
          description: The time when test starts.
        testEndTime:
          type: string
          format: date-time
          description: The time when test ends.
        firstPartyApps:
          type: array
          items:
            $ref: '#/components/schemas/TestResultFirstPartyAppDefinition'
          x-ms-identifiers: []
          description: The list of first party applications tested along with the package.
    TestResultAnalysisSummary:
      description: The summary of a Test Analysis Result.
      type: object
      properties:
        name:
          type: string
          description: Metric name
        analysisStatus:
          type: string
          description: The analysis status.
          enum:
            - None
            - Completed
            - InProgress
            - Failed
            - Succeeded
            - Available
            - NotAvailable
          x-ms-enum:
            name: analysisStatus
            modelAsString: true
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test result.
    OSUpdateListResult:
      description: A list of OS Updates.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OSUpdateResource'
          description: The list of OS Updates.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    OSUpdateResource:
      description: An OS Update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OSUpdateProperties'
          description: Properties of an OS Update.
      type: object
    OSUpdateProperties:
      description: Properties of an OS Update.
      type: object
      properties:
        osName:
          type: string
          description: The name of the OS.
        release:
          type: string
          description: The name of tested release.
        flightingRing:
          type: string
          description: The flighting ring, only for release of feature updates.
        buildVersion:
          type: string
          description: The build version of the tested release (OS update).
        buildRevision:
          type: string
          description: The build revision of the tested release (OS update)
        type:
          type: string
          description: The type of this release (OS update).
          enum:
            - SecurityUpdate
            - FeatureUpdate
            - InplaceUpgrade
          x-ms-enum:
            name: type
            modelAsString: true
        releaseVersionDate:
          type: string
          format: date-time
          description: The release version date the tested release (OS update)
        inplaceUpgradeBaselineProperties:
          $ref: '#/components/schemas/OsProperties'
          description: The properties of baseline os for in-place upgrade test.
        customImageId:
          type: string
          description: Specify the referenced Test Base Custom Image Id if available.
        customImageDisplayName:
          type: string
          description: The name of the custom image resource.
    FavoriteProcessListResult:
      description: A list of favorite processes for a package.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FavoriteProcessResource'
          description: The list of favorite processes for a package.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    FavoriteProcessResource:
      description: A favorite process identifier.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FavoriteProcessProperties'
          description: Properties of a favorite process identifier.
      type: object
    FavoriteProcessProperties:
      description: Properties of a favorite process identifier.
      type: object
      properties:
        actualProcessName:
          type: string
          description: The actual name of the favorite process. It will be equal to resource name except for the scenario that the process name contains characters that are not allowed in the resource name.
      required:
        - actualProcessName
    AnalysisResultListResult:
      description: A list of Analysis Results. It will only contain one element as all the data will be nested in a singleton object.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisResultSingletonResource'
          description: The list of Analysis Results.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    AnalysisResultSingletonResource:
      description: The Analysis Result Singleton Resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AnalysisResultSingletonResourceProperties'
          description: Properties of an Analysis Result.
      type: object
    AnalysisResultSingletonResourceProperties:
      description: The properties of Analysis Result resource.
      type: object
      discriminator:
        propertyName: analysisResultType
      required:
        - analysisResultType
      properties:
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        analysisResultType:
          description: Type of the Analysis Result.
          enum:
            - ScriptExecution
            - Reliability
            - CPUUtilization
            - MemoryUtilization
            - CPURegression
            - MemoryRegression
            - TestAnalysis
          type: string
          x-ms-enum:
            name: analysisResultType
            modelAsString: true
    ScriptExecutionResultSingletonResourceProperties:
      description: The properties of Script Execution Result.
      x-ms-discriminator-value: ScriptExecution
      properties:
        scriptExecutionResults:
          description: The result array data.
          type: array
          items:
            $ref: '#/components/schemas/ScriptExecutionResult'
          x-ms-identifiers: []
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        analysisResultType:
          description: Type of the Analysis Result.
          enum:
            - ScriptExecution
            - Reliability
            - CPUUtilization
            - MemoryUtilization
            - CPURegression
            - MemoryRegression
            - TestAnalysis
          type: string
          x-ms-enum:
            name: analysisResultType
            modelAsString: true
      type: object
    ScriptExecutionResult:
      description: The Script Execution Result.
      type: object
      properties:
        scriptName:
          type: string
          description: Name of script.
        startTime:
          type: string
          format: date-time
          description: Start time of script execution.
        endTime:
          type: string
          format: date-time
          description: End time of script execution.
        exitCode:
          type: integer
          format: int32
          description: Exit code.
        timedOut:
          type: boolean
          description: Whether the script execution is timed out.
        stdoutLogFileName:
          type: string
          description: The stdout log file name.
        stderrLogFileName:
          type: string
          description: The stderr log file name.
    ReliabilityResultSingletonResourceProperties:
      description: The properties of Reliability Result.
      x-ms-discriminator-value: Reliability
      properties:
        reliabilityResults:
          description: The result array data.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ReliabilityResult'
        inplaceUpgradeBaselineReliabilityResults:
          description: The result array data for target os in an in-place upgrade test.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ReliabilityResult'
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        analysisResultType:
          description: Type of the Analysis Result.
          enum:
            - ScriptExecution
            - Reliability
            - CPUUtilization
            - MemoryUtilization
            - CPURegression
            - MemoryRegression
            - TestAnalysis
          type: string
          x-ms-enum:
            name: analysisResultType
            modelAsString: true
      type: object
    ReliabilityResult:
      description: The Reliability Result.
      type: object
      properties:
        fileName:
          type: string
          description: File name.
        launchCount:
          type: integer
          format: int32
          description: Count of number of launches.
        crashCount:
          type: integer
          format: int32
          description: Count of number of crashes.
        hangCount:
          type: integer
          format: int32
          description: Count of number of hangs.
        regressionGrade:
          $ref: '#/components/schemas/TestGrade'
          description: The regression grade.
        crashRegressionGrade:
          $ref: '#/components/schemas/TestGrade'
          description: The statistic regression grade for crash signal.
        crashRegressionTestDetails:
          $ref: '#/components/schemas/RegressionTestDetails'
          description: Details related to the crash regression analysis.
        hangRegressionGrade:
          $ref: '#/components/schemas/TestGrade'
          description: The statistic regression grade for hang signal.
        hangRegressionTestDetails:
          $ref: '#/components/schemas/RegressionTestDetails'
          description: Details related to the hang regression analysis.
    RegressionTestDetails:
      description: The details of a regression test.
      type: object
      properties:
        diff:
          type: number
          format: double
          description: Difference between the two datasets being analyzed.
        isRegressed:
          type: boolean
          description: Indicates if a regression was inferred.
    CPUUtilizationResultSingletonResourceProperties:
      description: The properties of CPU Utilization Result.
      x-ms-discriminator-value: CPUUtilization
      properties:
        cpuUtilizationResults:
          description: The result array data.
          type: array
          items:
            $ref: '#/components/schemas/UtilizationResult'
          x-ms-identifiers: []
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        analysisResultType:
          description: Type of the Analysis Result.
          enum:
            - ScriptExecution
            - Reliability
            - CPUUtilization
            - MemoryUtilization
            - CPURegression
            - MemoryRegression
            - TestAnalysis
          type: string
          x-ms-enum:
            name: analysisResultType
            modelAsString: true
      type: object
    MemoryUtilizationResultSingletonResourceProperties:
      description: The properties of Memory Utilization Result.
      x-ms-discriminator-value: MemoryUtilization
      properties:
        memoryUtilizationResults:
          description: The result array data.
          type: array
          items:
            $ref: '#/components/schemas/UtilizationResult'
          x-ms-identifiers: []
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        analysisResultType:
          description: Type of the Analysis Result.
          enum:
            - ScriptExecution
            - Reliability
            - CPUUtilization
            - MemoryUtilization
            - CPURegression
            - MemoryRegression
            - TestAnalysis
          type: string
          x-ms-enum:
            name: analysisResultType
            modelAsString: true
      type: object
    UtilizationResult:
      description: The Utilization Result.
      type: object
      properties:
        process:
          type: string
          description: Process name, or '_total' for all processes
        upperBound:
          $ref: '#/components/schemas/UtilizationBound'
          description: Upper bound
        lowerBound:
          $ref: '#/components/schemas/UtilizationBound'
          description: Lower bound
        utilization:
          type: array
          items:
            $ref: '#/components/schemas/UtilizationEntry'
          x-ms-identifiers: []
          description: Utilization data
    UtilizationBound:
      description: The bound of a utilization result.
      type: object
      properties:
        percentile:
          type: number
          format: double
          description: The percentile of the bound.
        value:
          type: number
          format: double
          description: The value of the bound.
    UtilizationEntry:
      description: The utilization entry.
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: The timestamp.
        value:
          type: number
          format: double
          description: The value.
    CPURegressionResultSingletonResourceProperties:
      description: The properties of CPU Regression Result.
      x-ms-discriminator-value: CPURegression
      properties:
        cpuRegressionResults:
          description: The result array data.
          type: array
          items:
            $ref: '#/components/schemas/RegressionResult'
          x-ms-identifiers: []
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        analysisResultType:
          description: Type of the Analysis Result.
          enum:
            - ScriptExecution
            - Reliability
            - CPUUtilization
            - MemoryUtilization
            - CPURegression
            - MemoryRegression
            - TestAnalysis
          type: string
          x-ms-enum:
            name: analysisResultType
            modelAsString: true
      type: object
    MemoryRegressionResultSingletonResourceProperties:
      description: The properties of Memory Regression Result.
      x-ms-discriminator-value: MemoryRegression
      properties:
        memoryRegressionResults:
          description: The result array data.
          type: array
          items:
            $ref: '#/components/schemas/RegressionResult'
          x-ms-identifiers: []
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        analysisResultType:
          description: Type of the Analysis Result.
          enum:
            - ScriptExecution
            - Reliability
            - CPUUtilization
            - MemoryUtilization
            - CPURegression
            - MemoryRegression
            - TestAnalysis
          type: string
          x-ms-enum:
            name: analysisResultType
            modelAsString: true
      type: object
    RegressionResult:
      description: The regression result.
      type: object
      properties:
        fileName:
          type: string
          description: FileName of the binary being analyzed.
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        details:
          type: string
          description: Message that facilitates debugging a particular regression, if any was inferred.
        diff:
          type: number
          format: double
          description: Difference between the two datasets being analyzed.
        isRegressed:
          type: boolean
          description: Indicates if a regression was inferred.
    TestAnalysisResultSingletonResourceProperties:
      description: The properties of Test Analysis Result.
      x-ms-discriminator-value: TestAnalysis
      properties:
        testAnalysisResult:
          $ref: '#/components/schemas/TestAnalysisResult'
          description: The result of test analysis.
        grade:
          $ref: '#/components/schemas/TestGrade'
          description: The grade of the test.
        analysisResultType:
          description: Type of the Analysis Result.
          enum:
            - ScriptExecution
            - Reliability
            - CPUUtilization
            - MemoryUtilization
            - CPURegression
            - MemoryRegression
            - TestAnalysis
          type: string
          x-ms-enum:
            name: analysisResultType
            modelAsString: true
      type: object
    TestAnalysisResult:
      description: The test analysis result.
      type: object
      properties:
        blobData:
          type: string
          description: The data to provide more failure analysis information.
        testAnalysisStatus:
          type: string
          description: The status of the analysis.
          enum:
            - None
            - Analyzing
            - Completed
            - Failed
          x-ms-enum:
            name: testAnalysisStatus
            modelAsString: true
        identifiedFailures:
          description: The array of identified failures.
          type: array
          items:
            $ref: '#/components/schemas/IdentifiedFailure'
          x-ms-identifiers:
            - failureId
    IdentifiedFailure:
      description: The failure identified.
      type: object
      properties:
        failureId:
          type: string
          description: The Failure Id.
        category:
          type: string
          description: The category of the failure.
          enum:
            - None
            - Unidentified
            - Package
            - OSUpdate
            - Infrastructure
          x-ms-enum:
            name: category
            modelAsString: true
        errorMessage:
          type: string
          description: Message that shows information about the failure.
        guidance:
          type: string
          description: Guidance that shows what the customer needs to do for this failure.
    EmailEventListResult:
      description: A list of email events.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EmailEventResource'
          description: The list of email events.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    EmailEventResource:
      description: The email event resource.
      properties:
        properties:
          $ref: '#/components/schemas/EmailEventProperties'
          x-ms-client-flatten: true
          description: Email Event properties.
      type: object
    EmailEventProperties:
      description: The Email Event properties.
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the email event.
        eventName:
          type: string
          description: The name of the email event.
        displayName:
          type: string
          description: The display name of the email event.
    CustomerEventListResult:
      description: A list of Test Base Customer Events.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CustomerEventResource'
          description: The list of Test Base Customer Events.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    CustomerEventResource:
      description: The Customer Notification Event resource.
      properties:
        properties:
          $ref: '#/components/schemas/CustomerEventProperties'
          x-ms-client-flatten: true
          description: Customer Notification Event properties.
      type: object
    CustomerEventProperties:
      description: A notification events subscribed to be received by customer.
      type: object
      properties:
        eventName:
          type: string
          description: The name of the event subscribed to.
        receivers:
          type: array
          items:
            $ref: '#/components/schemas/NotificationEventReceiver'
          x-ms-identifiers: []
          description: The notification event receivers.
      required:
        - eventName
        - receivers
    NotificationEventReceiver:
      description: A notification event receivers.
      type: object
      properties:
        receiverType:
          type: string
          description: The type of the notification event receiver.
        receiverValue:
          description: The notification event receiver value.
          $ref: '#/components/schemas/NotificationReceiverValue'
    NotificationReceiverValue:
      description: A notification event receiver value.
      type: object
      properties:
        userObjectReceiverValue:
          description: The user object receiver value.
          $ref: '#/components/schemas/UserObjectReceiverValue'
        subscriptionReceiverValue:
          description: The user object receiver value.
          $ref: '#/components/schemas/SubscriptionReceiverValue'
        distributionGroupListReceiverValue:
          description: The user object receiver value.
          $ref: '#/components/schemas/DistributionGroupListReceiverValue'
    UserObjectReceiverValue:
      description: The user object receiver value.
      type: object
      properties:
        userObjectIds:
          type: array
          items:
            type: string
          description: user object ids.
    SubscriptionReceiverValue:
      description: The subscription role receiver value.
      type: object
      properties:
        subscriptionId:
          type: string
          description: The subscription id of the notification receiver.
        subscriptionName:
          type: string
          description: The subscription name of the notification receiver.
        role:
          type: string
          description: The role of the notification receiver.
    DistributionGroupListReceiverValue:
      description: The user object receiver value.
      type: object
      properties:
        distributionGroups:
          type: array
          items:
            type: string
          description: The list of distribution groups.
    BillingHubExecutionUsageDetail:
      type: object
      properties:
        applicationName:
          type: string
        applicationVersion:
          type: string
        executionRequestId:
          type: string
        sku:
          type: string
        meterId:
          type: string
        startTimeStamp:
          type: string
          format: date-time
        endTimeStamp:
          type: string
          format: date-time
        osBuild:
          type: string
        release:
          type: string
        testType:
          type: string
        updateType:
          type: string
        usedFreeHours:
          type: number
          format: double
        usedBillableHours:
          type: number
          format: double
        billedCharges:
          type: number
          format: double
    BillingHubGetFreeHourBalanceResponse:
      type: object
      properties:
        totalRemainingFreeHours:
          type: number
          format: double
        incrementEntries:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/BillingHubFreeHourIncrementEntry'
    BillingHubFreeHourIncrementEntry:
      type: object
      properties:
        freeHourType:
          type: string
          enum:
            - Permanent
            - Temporary
          x-ms-enum:
            name: freeHourType
            modelAsString: true
        freeHourStatus:
          type: string
          enum:
            - Enabled
            - Suspended
          x-ms-enum:
            name: freeHourStatus
            modelAsString: true
        createTimeStamp:
          type: string
          format: date-time
        expirationTimeStamp:
          type: string
          format: date-time
        incrementalFreeHours:
          type: number
          format: double
        remainingFreeHours:
          type: number
          format: double
    BillingHubGetUsageResponse:
      type: object
      properties:
        totalUsedFreeHours:
          type: number
          format: double
        totalUsedBillableHours:
          type: number
          format: double
        totalCharges:
          type: number
          format: double
        packageUsageEntries:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/BillingHubPackageUsage'
        nextRequest:
          type: object
          $ref: '#/components/schemas/BillingHubGetUsageRequest'
    BillingHubPackageUsage:
      type: object
      properties:
        applicationName:
          type: string
        applicationVersion:
          type: string
        azureResourceUri:
          type: string
        totalUsedFreeHours:
          type: number
          format: double
        totalUsedBillableHours:
          type: number
          format: double
        totalCharges:
          type: number
          format: double
        usageEntriesGroupedByUpdateType:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/BillingHubUsageGroupedByUpdateType'
    BillingHubUsageGroupedByUpdateType:
      type: object
      properties:
        updateType:
          type: string
        totalUsedFreeHours:
          type: number
          format: double
        totalUsedBillableHours:
          type: number
          format: double
        totalCharges:
          type: number
          format: double
        usageGroups:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/BillingHubUsageGroup'
    BillingHubUsage:
      type: object
      properties:
        applicationName:
          type: string
        applicationVersion:
          type: string
        azureResourceUri:
          type: string
        totalUsedFreeHours:
          type: number
          format: double
        totalUsedBillableHours:
          type: number
          format: double
        totalCharges:
          type: number
          format: double
        usageGroups:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/BillingHubUsageGroup'
    BillingHubUsageGroup:
      type: object
      properties:
        totalUsedFreeHours:
          type: number
          format: double
        totalUsedBillableHours:
          type: number
          format: double
        totalCharges:
          type: number
          format: double
        releaseBuildRevision:
          type: integer
          format: int64
        releaseBuildNumber:
          type: integer
          format: int64
        releaseBuildDate:
          type: string
          format: date-time
        osBuild:
          type: string
        release:
          type: string
        testType:
          type: string
        productFamily:
          type: string
        executionUsageDetails:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/BillingHubExecutionUsageDetail'
    BillingHubGetUsageRequest:
      type: object
      properties:
        startTimeStamp:
          type: string
          format: date-time
        endTimeStamp:
          type: string
          format: date-time
        pageSize:
          type: integer
          format: int32
        pageIndex:
          type: integer
          format: int32
      required:
        - startTimeStamp
        - endTimeStamp
    AvailableInplaceUpgradeOSListResult:
      description: A list of available In-place Upgrade OSs.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailableInplaceUpgradeOSResource'
          description: The list of available In-place Upgrade OS.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    AvailableInplaceUpgradeOSResource:
      description: The Available In-place Upgrade OS Map resource.
      properties:
        properties:
          $ref: '#/components/schemas/AvailableInplaceUpgradeOSProperties'
          x-ms-client-flatten: true
          description: Available In-place Upgrade OS Map properties.
      type: object
    AvailableInplaceUpgradeOSProperties:
      description: The Available In-place Upgrade OS properties.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        sourceOsName:
          type: string
          description: The name of an Available In-place Upgrade source OS of a Test Base Account.
        sourceOsReleases:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ReleaseProperties'
          description: The the release list of the source os.
        supportedTargetOsNameList:
          type: array
          items:
            type: string
          description: The list of the corresponding Available In-place Upgrade target OS name of a Test Base Account.
    InplaceUpgradeOSInfo:
      description: Specifies the baseline os and target os for in-place upgrade tests.
      type: object
      properties:
        baselineOS:
          $ref: '#/components/schemas/OsProperties'
          description: Specifies the baseline os for in-place upgrade tests.
        targetOS:
          type: string
          description: Specifies the target os for in-place upgrade tests.
    OsProperties:
      type: object
      properties:
        osName:
          type: string
          description: The name of the OS.
        customImageId:
          type: string
          description: Specify the referenced Test Base Custom Image Id if available.
        customImageDisplayName:
          type: string
          description: The name of the custom image resource.
          readOnly: true
        releaseProperties:
          $ref: '#/components/schemas/ReleaseProperties'
          description: The properties of the OS release.
      description: The properties of an operating system.
    ReleaseProperties:
      type: object
      properties:
        releaseName:
          type: string
          description: The name of the OS release.
        buildNumber:
          type: string
          description: The build number of the OS release.
        buildRevision:
          type: string
          description: The build revision of the OS release.
        releaseVersionDate:
          type: string
          format: date-time
          description: The release version date of the OS release.
      description: The properties of an operating system release.
    InplaceUpgradeProperties:
      type: object
      properties:
        upgradeStartTime:
          type: string
          format: date-time
          description: Time stamp for os upgrading start (UTC).
        upgradeEndTime:
          type: string
          format: date-time
          description: Time stamp for os upgrading end (UTC).
        customImageId:
          type: string
          description: Specify the referenced Test Base Custom Image Id if applicable.
        customImageDisplayName:
          type: string
          description: The name of the custom image resource.
        baselineOsName:
          type: string
          description: The name of the OS.
        baselineReleaseName:
          type: string
          description: The name of the baseline OS release.
        baselineBuildNumber:
          type: string
          description: The build number of the baseline OS release.
        baselineBuildRevision:
          type: string
          description: The build revision of the baseline OS release.
        baselineKbNumber:
          type: string
          description: The kb number of the baseline OS release.
        baselineReleaseVersionDate:
          type: string
          format: date-time
          description: The release version date of the baseline OS release.
      description: Properties for in-place upgrade test result.
    FreeHourBalancesListResult:
      description: A list of Test Base Free Hour Balances. It will only contain one element as all the data will be nested in a singleton object.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FreeHourBalanceResource'
          description: The list of FreeHourBalances.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    FreeHourBalanceResource:
      description: The Free Hour Balance Resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BillingHubGetFreeHourBalanceResponse'
          description: Properties of a Free Hour Balance.
      type: object
    IntuneEnrollmentMetadata:
      description: The metadata of Intune enrollment.
      type: object
      properties:
        appList:
          type: array
          items:
            $ref: '#/components/schemas/EnrolledIntuneApp'
          x-ms-identifiers: []
          description: The enrolled Intune apps.
        credentialId:
          description: The id of the Intune enrollment credential.
          type: string
        expectedDeploymentDurationInMinute:
          description: The expected duration of Intune applications and policies deployment.
          type: integer
          format: int32
    EnrolledIntuneApp:
      description: Metadata of the enrolled Intune app.
      type: object
      properties:
        appName:
          type: string
          description: Intune app name.
        appId:
          type: string
          description: Intune app id.
        expectedInstallationPath:
          type: string
          description: Intune app expected installation path.
      required:
        - appName
        - appId
        - expectedInstallationPath
    CredentialListResult:
      description: A list of credential resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CredentialResource'
          description: The list of credential resources.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    CredentialResource:
      description: The test base credential resource.
      properties:
        properties:
          $ref: '#/components/schemas/CredentialProperties'
          x-ms-client-flatten: true
          description: The test base credential properties.
      type: object
    CredentialProperties:
      description: The properties of test base credential
      discriminator:
        propertyName: credentialType
      type: object
      properties:
        credentialType:
          type: string
          description: Credential type.
          enum:
            - IntuneAccount
          x-ms-enum:
            name: CredentialType
            modelAsString: true
            values:
              - value: IntuneAccount
                description: Username password credential for intune enrollment.
        displayName:
          type: string
          description: Credential display name.
      required:
        - credentialType
        - displayName
    IntuneSingletonResourceProperties:
      description: The properties of intune credential.
      x-ms-discriminator-value: IntuneAccount
      properties:
        userNameKeyVaultSecretPath:
          type: string
          description: The key vault secret path of user name.
        passwordKeyVaultSecretPath:
          type: string
          description: The key vault secret path of password.
        credentialType:
          type: string
          description: Credential type.
          enum:
            - IntuneAccount
          x-ms-enum:
            name: CredentialType
            modelAsString: true
            values:
              - value: IntuneAccount
                description: Username password credential for intune enrollment.
        displayName:
          type: string
          description: Credential display name.
      type: object
    ActionRequests:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ActionRequest'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if value contains incomplete list of results.
    ActionRequest:
      properties:
        properties:
          $ref: '#/components/schemas/ActionRequestProperties'
          x-ms-client-flatten: true
          description: Test Base Draft Package properties.
      type: object
    ActionRequestProperties:
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        requestType:
          $ref: '#/components/schemas/RequestTypes'
        preReleaseAccessRequestSpec:
          $ref: '#/components/schemas/PreReleaseAccessRequestSpec'
        creationDate:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          enum:
            - InReview
            - Approved
            - Declined
          x-ms-enum:
            name: requestStatus
            modelAsString: true
          readOnly: true
      required:
        - requestType
    RequestTypes:
      type: string
      enum:
        - PreReleaseAccess
      x-ms-enum:
        name: requestTypes
        modelAsString: true
    PreReleaseAccessRequestSpec:
      type: object
      properties:
        organizationName:
          type: string
        email:
          type: string
        engagements:
          type: array
          items:
            type: string
            enum:
              - MVI
              - MVP
              - SUVP
              - MAPP
              - Other
            x-ms-enum:
              name: engagements
              modelAsString: true
        streetAddress:
          type: string
        city:
          type: string
        stateOrProvince:
          type: string
        zipCode:
          type: string
        countryAndRegion:
          type: string
        companyWebsite:
          type: string
  x-stackQL-resources:
    draft_packages:
      id: azure_extras.test_base.draft_packages
      name: draft_packages
      title: draft_packages
      methods:
        list_by_test_base_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages?api-version=2023-11-01-preview/get'
            operationId: DraftPackages_ListByTestBaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DraftPackageListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages~1{draftPackageName}?api-version=2023-11-01-preview/put'
            operationId: DraftPackages_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DraftPackageResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages~1{draftPackageName}?api-version=2023-11-01-preview/patch'
            operationId: DraftPackages_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DraftPackageResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages~1{draftPackageName}?api-version=2023-11-01-preview/delete'
            operationId: DraftPackages_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages~1{draftPackageName}?api-version=2023-11-01-preview/get'
            operationId: DraftPackages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DraftPackageResource
        copy_from_package:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages~1{draftPackageName}~1copyFromPackage?api-version=2023-11-01-preview/post'
            operationId: DraftPackages_CopyFromPackage
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        extract_file:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages~1{draftPackageName}~1extractFile?api-version=2023-11-01-preview/post'
            operationId: DraftPackages_ExtractFile
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        generate_folders_and_scripts:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages~1{draftPackageName}~1generateFoldersAndScripts?api-version=2023-11-01-preview/post'
            operationId: DraftPackages_GenerateFoldersAndScripts
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/draft_packages/methods/get'
          - $ref: '#/components/x-stackQL-resources/draft_packages/methods/list_by_test_base_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/draft_packages/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/draft_packages/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/draft_packages/methods/delete'
    draft_packages_paths:
      id: azure_extras.test_base.draft_packages_paths
      name: draft_packages_paths
      title: draft_packages_paths
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1draftPackages~1{draftPackageName}~1getPath?api-version=2023-11-01-preview/post'
            operationId: DraftPackagesPath_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DraftPackageGetPathResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/draft_packages_paths/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    custom_images:
      id: azure_extras.test_base.custom_images
      name: custom_images
      title: custom_images
      methods:
        list_by_test_base_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1customImages?api-version=2023-11-01-preview/get'
            operationId: CustomImages_ListByTestBaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomImageListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1customImages~1{customImageName}?api-version=2023-11-01-preview/put'
            operationId: CustomImages_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomImageResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1customImages~1{customImageName}?api-version=2023-11-01-preview/delete'
            operationId: CustomImages_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1customImages~1{customImageName}?api-version=2023-11-01-preview/get'
            operationId: CustomImages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomImageResource
        check_image_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1checkImageNameAvailability?api-version=2023-11-01-preview/post'
            operationId: CustomImages_CheckImageNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckImageAvailabilityResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/custom_images/methods/list_by_test_base_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_images/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_images/methods/delete'
    image_definitions:
      id: azure_extras.test_base.image_definitions
      name: image_definitions
      title: image_definitions
      methods:
        list_by_test_base_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1imageDefinitions?api-version=2023-11-01-preview/get'
            operationId: ImageDefinitions_ListByTestBaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageDefinitionsListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1imageDefinitions~1{imageDefinitionName}?api-version=2023-11-01-preview/put'
            operationId: ImageDefinitions_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageDefinitionResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1imageDefinitions~1{imageDefinitionName}?api-version=2023-11-01-preview/get'
            operationId: ImageDefinitions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageDefinitionResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1imageDefinitions~1{imageDefinitionName}?api-version=2023-11-01-preview/delete'
            operationId: ImageDefinitions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/image_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/image_definitions/methods/list_by_test_base_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/image_definitions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/image_definitions/methods/delete'
    vh_ds:
      id: azure_extras.test_base.vh_ds
      name: vh_ds
      title: vh_ds
      methods:
        list_by_test_base_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1vhds?api-version=2023-11-01-preview/get'
            operationId: VHDs_ListByTestBaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VHDListResult
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1vhds~1{vhdName}?api-version=2023-11-01-preview/delete'
            operationId: VHDs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1vhds~1{vhdName}?api-version=2023-11-01-preview/get'
            operationId: VHDs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VHDResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vh_ds/methods/get'
          - $ref: '#/components/x-stackQL-resources/vh_ds/methods/list_by_test_base_account'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vh_ds/methods/delete'
    chat_sessions:
      id: azure_extras.test_base.chat_sessions
      name: chat_sessions
      title: chat_sessions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1chatSessions?api-version=2023-11-01-preview/get'
            operationId: ChatSessions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ChatSessionResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1chatSessions~1{chatSessionName}?api-version=2023-11-01-preview/get'
            operationId: ChatSessions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ChatSessionResource
        chat:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1chatSessions~1{chatSessionName}~1chat?api-version=2023-11-01-preview/post'
            operationId: ChatSession_Chat
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ChatResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/chat_sessions/methods/get'
          - $ref: '#/components/x-stackQL-resources/chat_sessions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    free_hour_balances:
      id: azure_extras.test_base.free_hour_balances
      name: free_hour_balances
      title: free_hour_balances
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1freeHourBalances?api-version=2023-11-01-preview/get'
            operationId: FreeHourBalances_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FreeHourBalancesListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1freeHourBalances~1{freeHourBalanceName}?api-version=2023-11-01-preview/get'
            operationId: FreeHourBalances_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FreeHourBalanceResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/free_hour_balances/methods/get'
          - $ref: '#/components/x-stackQL-resources/free_hour_balances/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    skus:
      id: azure_extras.test_base.skus
      name: skus
      title: skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.TestBase~1skus?api-version=2023-11-01-preview/get'
            operationId: Skus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestBaseAccountSKUListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    accounts:
      id: azure_extras.test_base.accounts
      name: accounts
      title: accounts
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.TestBase~1testBaseAccounts?api-version=2023-11-01-preview/get'
            operationId: TestBaseAccounts_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestBaseAccountListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts?api-version=2023-11-01-preview/get'
            operationId: TestBaseAccounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestBaseAccountListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}?api-version=2023-11-01-preview/put'
            operationId: TestBaseAccounts_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestBaseAccountResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}?api-version=2023-11-01-preview/patch'
            operationId: TestBaseAccounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestBaseAccountResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}?api-version=2023-11-01-preview/delete'
            operationId: TestBaseAccounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}?api-version=2023-11-01-preview/get'
            operationId: TestBaseAccounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestBaseAccountResource
        offboard:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1offboard?api-version=2023-11-01-preview/post'
            operationId: TestBaseAccounts_Offboard
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_package_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1checkPackageNameAvailability?api-version=2023-11-01-preview/post'
            operationId: TestBaseAccounts_CheckPackageNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    usages:
      id: azure_extras.test_base.usages
      name: usages
      title: usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1usages?api-version=2023-11-01-preview/get'
            operationId: Usage_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestBaseAccountUsageDataList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    accounts_file_upload_urls:
      id: azure_extras.test_base.accounts_file_upload_urls
      name: accounts_file_upload_urls
      title: accounts_file_upload_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1getFileUploadUrl?api-version=2023-11-01-preview/post'
            operationId: TestBaseAccountsFileUploadUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileUploadURLResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_file_upload_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    available_os:
      id: azure_extras.test_base.available_os
      name: available_os
      title: available_os
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1availableOSs?api-version=2023-11-01-preview/get'
            operationId: AvailableOS_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableOSListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1availableOSs~1{availableOSResourceName}?api-version=2023-11-01-preview/get'
            operationId: AvailableOS_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableOSResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_os/methods/get'
          - $ref: '#/components/x-stackQL-resources/available_os/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    feature_update_supported_oses:
      id: azure_extras.test_base.feature_update_supported_oses
      name: feature_update_supported_oses
      title: feature_update_supported_oses
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1featureUpdateSupportedOses?api-version=2023-11-01-preview/get'
            operationId: FeatureUpdateSupportedOses_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FeatureUpdateSupportedOsesResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feature_update_supported_oses/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    flighting_rings:
      id: azure_extras.test_base.flighting_rings
      name: flighting_rings
      title: flighting_rings
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1flightingRings?api-version=2023-11-01-preview/get'
            operationId: FlightingRings_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FlightingRingListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1flightingRings~1{flightingRingResourceName}?api-version=2023-11-01-preview/get'
            operationId: FlightingRings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FlightingRingResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/flighting_rings/methods/get'
          - $ref: '#/components/x-stackQL-resources/flighting_rings/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    first_party_apps:
      id: azure_extras.test_base.first_party_apps
      name: first_party_apps
      title: first_party_apps
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1firstPartyApps?api-version=2023-11-01-preview/get'
            operationId: FirstPartyApps_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirstPartyAppListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1firstPartyApps~1{firstPartyAppResourceName}?api-version=2023-11-01-preview/get'
            operationId: FirstPartyApps_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirstPartyAppResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/first_party_apps/methods/get'
          - $ref: '#/components/x-stackQL-resources/first_party_apps/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    gallery_apps:
      id: azure_extras.test_base.gallery_apps
      name: gallery_apps
      title: gallery_apps
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1galleryApps?api-version=2023-11-01-preview/get'
            operationId: GalleryApps_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GalleryAppListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1galleryApps~1{galleryAppName}?api-version=2023-11-01-preview/get'
            operationId: GalleryApps_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GalleryAppResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_apps/methods/get'
          - $ref: '#/components/x-stackQL-resources/gallery_apps/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    gallery_app_skus:
      id: azure_extras.test_base.gallery_app_skus
      name: gallery_app_skus
      title: gallery_app_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1galleryApps~1{galleryAppName}~1galleryAppSkus?api-version=2023-11-01-preview/get'
            operationId: GalleryAppSkus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GalleryAppSkuListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1galleryApps~1{galleryAppName}~1galleryAppSkus~1{galleryAppSkuName}?api-version=2023-11-01-preview/get'
            operationId: GalleryAppSkus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GalleryAppSkuResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_app_skus/methods/get'
          - $ref: '#/components/x-stackQL-resources/gallery_app_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    test_types:
      id: azure_extras.test_base.test_types
      name: test_types
      title: test_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1testTypes?api-version=2023-11-01-preview/get'
            operationId: TestTypes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestTypeListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1testTypes~1{testTypeResourceName}?api-version=2023-11-01-preview/get'
            operationId: TestTypes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestTypeResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/test_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    packages:
      id: azure_extras.test_base.packages
      name: packages
      title: packages
      methods:
        list_by_test_base_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages?api-version=2023-11-01-preview/get'
            operationId: Packages_ListByTestBaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PackageListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}?api-version=2023-11-01-preview/put'
            operationId: Packages_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PackageResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}?api-version=2023-11-01-preview/patch'
            operationId: Packages_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PackageResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}?api-version=2023-11-01-preview/delete'
            operationId: Packages_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}?api-version=2023-11-01-preview/get'
            operationId: Packages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PackageResource
        hard_delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1hardDelete?api-version=2023-11-01-preview/post'
            operationId: Packages_HardDelete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run_test:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1runTest?api-version=2023-11-01-preview/post'
            operationId: Packages_RunTest
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/packages/methods/get'
          - $ref: '#/components/x-stackQL-resources/packages/methods/list_by_test_base_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/packages/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/packages/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/packages/methods/delete'
    packages_download_urls:
      id: azure_extras.test_base.packages_download_urls
      name: packages_download_urls
      title: packages_download_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1getDownloadUrl?api-version=2023-11-01-preview/post'
            operationId: PackagesDownloadURL_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DownloadURLResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/packages_download_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    test_summaries:
      id: azure_extras.test_base.test_summaries
      name: test_summaries
      title: test_summaries
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1testSummaries?api-version=2023-11-01-preview/get'
            operationId: TestSummaries_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestSummaryListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1testSummaries~1{testSummaryName}?api-version=2023-11-01-preview/get'
            operationId: TestSummaries_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestSummaryResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_summaries/methods/get'
          - $ref: '#/components/x-stackQL-resources/test_summaries/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    test_results:
      id: azure_extras.test_base.test_results
      name: test_results
      title: test_results
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1testResults?api-version=2023-11-01-preview/get'
            operationId: TestResults_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestResultListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1testResults~1{testResultName}?api-version=2023-11-01-preview/get'
            operationId: TestResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TestResultResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_results/methods/get'
          - $ref: '#/components/x-stackQL-resources/test_results/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    os_updates:
      id: azure_extras.test_base.os_updates
      name: os_updates
      title: os_updates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1osUpdates?api-version=2023-11-01-preview/get'
            operationId: OSUpdates_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OSUpdateListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1osUpdates~1{osUpdateResourceName}?api-version=2023-11-01-preview/get'
            operationId: OSUpdates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OSUpdateResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/os_updates/methods/get'
          - $ref: '#/components/x-stackQL-resources/os_updates/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    favorite_processes:
      id: azure_extras.test_base.favorite_processes
      name: favorite_processes
      title: favorite_processes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1favoriteProcesses?api-version=2023-11-01-preview/get'
            operationId: FavoriteProcesses_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FavoriteProcessListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1favoriteProcesses~1{favoriteProcessResourceName}?api-version=2023-11-01-preview/put'
            operationId: FavoriteProcesses_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FavoriteProcessResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1favoriteProcesses~1{favoriteProcessResourceName}?api-version=2023-11-01-preview/delete'
            operationId: FavoriteProcesses_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1favoriteProcesses~1{favoriteProcessResourceName}?api-version=2023-11-01-preview/get'
            operationId: FavoriteProcesses_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FavoriteProcessResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/favorite_processes/methods/get'
          - $ref: '#/components/x-stackQL-resources/favorite_processes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/favorite_processes/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/favorite_processes/methods/delete'
    analysis_results:
      id: azure_extras.test_base.analysis_results
      name: analysis_results
      title: analysis_results
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1testResults~1{testResultName}~1analysisResults?api-version=2023-11-01-preview/get'
            operationId: AnalysisResults_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AnalysisResultListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1testResults~1{testResultName}~1analysisResults~1{analysisResultName}?api-version=2023-11-01-preview/get'
            operationId: AnalysisResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AnalysisResultSingletonResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analysis_results/methods/get'
          - $ref: '#/components/x-stackQL-resources/analysis_results/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    test_results_download_urls:
      id: azure_extras.test_base.test_results_download_urls
      name: test_results_download_urls
      title: test_results_download_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1testResults~1{testResultName}~1getDownloadUrl?api-version=2023-11-01-preview/post'
            operationId: TestResultsDownloadURL_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DownloadURLResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_results_download_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    test_results_video_download_urls:
      id: azure_extras.test_base.test_results_video_download_urls
      name: test_results_video_download_urls
      title: test_results_video_download_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1testResults~1{testResultName}~1getVideoDownloadUrl?api-version=2023-11-01-preview/post'
            operationId: TestResultsVideoDownloadURL_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DownloadURLResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_results_video_download_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    test_results_console_log_download_urls:
      id: azure_extras.test_base.test_results_console_log_download_urls
      name: test_results_console_log_download_urls
      title: test_results_console_log_download_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1packages~1{packageName}~1testResults~1{testResultName}~1getConsoleLogDownloadUrl?api-version=2023-11-01-preview/post'
            operationId: TestResultsConsoleLogDownloadURL_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DownloadURLResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_results_console_log_download_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    email_events:
      id: azure_extras.test_base.email_events
      name: email_events
      title: email_events
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1emailEvents?api-version=2023-11-01-preview/get'
            operationId: EmailEvents_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EmailEventListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1emailEvents~1{emailEventResourceName}?api-version=2023-11-01-preview/get'
            operationId: EmailEvents_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EmailEventResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/email_events/methods/get'
          - $ref: '#/components/x-stackQL-resources/email_events/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    customer_events:
      id: azure_extras.test_base.customer_events
      name: customer_events
      title: customer_events
      methods:
        list_by_test_base_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1customerEvents?api-version=2023-11-01-preview/get'
            operationId: CustomerEvents_ListByTestBaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomerEventListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1customerEvents~1{customerEventName}?api-version=2023-11-01-preview/put'
            operationId: CustomerEvents_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomerEventResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1customerEvents~1{customerEventName}?api-version=2023-11-01-preview/delete'
            operationId: CustomerEvents_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1customerEvents~1{customerEventName}?api-version=2023-11-01-preview/get'
            operationId: CustomerEvents_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomerEventResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customer_events/methods/get'
          - $ref: '#/components/x-stackQL-resources/customer_events/methods/list_by_test_base_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/customer_events/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/customer_events/methods/delete'
    operations:
      id: azure_extras.test_base.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.TestBase~1operations?api-version=2023-11-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    billing_hub_service_free_hour_balances:
      id: azure_extras.test_base.billing_hub_service_free_hour_balances
      name: billing_hub_service_free_hour_balances
      title: billing_hub_service_free_hour_balances
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1getFreeHourBalance?api-version=2023-11-01-preview/post'
            operationId: BillingHubServiceFreeHourBalance_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BillingHubGetFreeHourBalanceResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_hub_service_free_hour_balances/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    billing_hub_service_usages:
      id: azure_extras.test_base.billing_hub_service_usages
      name: billing_hub_service_usages
      title: billing_hub_service_usages
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1getUsage?api-version=2023-11-01-preview/post'
            operationId: BillingHubServiceUsage_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BillingHubGetUsageResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_hub_service_usages/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    available_inplace_upgrade_os:
      id: azure_extras.test_base.available_inplace_upgrade_os
      name: available_inplace_upgrade_os
      title: available_inplace_upgrade_os
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1availableInplaceUpgradeOSs?api-version=2023-11-01-preview/get'
            operationId: AvailableInplaceUpgradeOS_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableInplaceUpgradeOSListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1availableInplaceUpgradeOSs~1{availableInplaceUpgradeOSResourceName}?api-version=2023-11-01-preview/get'
            operationId: AvailableInplaceUpgradeOS_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableInplaceUpgradeOSResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_inplace_upgrade_os/methods/get'
          - $ref: '#/components/x-stackQL-resources/available_inplace_upgrade_os/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    credentials:
      id: azure_extras.test_base.credentials
      name: credentials
      title: credentials
      methods:
        list_by_test_base_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1credentials?api-version=2023-11-01-preview/get'
            operationId: Credential_ListByTestBaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CredentialListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1credentials~1{credentialName}?api-version=2023-11-01-preview/put'
            operationId: Credentials_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CredentialResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1credentials~1{credentialName}?api-version=2023-11-01-preview/patch'
            operationId: Credentials_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CredentialResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1credentials~1{credentialName}?api-version=2023-11-01-preview/delete'
            operationId: Credentials_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1credentials~1{credentialName}?api-version=2023-11-01-preview/get'
            operationId: Credential_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CredentialResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/credentials/methods/get'
          - $ref: '#/components/x-stackQL-resources/credentials/methods/list_by_test_base_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/credentials/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/credentials/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/credentials/methods/delete'
    action_requests:
      id: azure_extras.test_base.action_requests
      name: action_requests
      title: action_requests
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1actionRequests~1{actionRequestName}?api-version=2023-11-01-preview/get'
            operationId: ActionRequests_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActionRequest
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1actionRequests~1{actionRequestName}?api-version=2023-11-01-preview/put'
            operationId: ActionRequests_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActionRequest
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1actionRequests~1{actionRequestName}?api-version=2023-11-01-preview/delete'
            operationId: ActionRequests_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TestBase~1testBaseAccounts~1{testBaseAccountName}~1actionRequests?api-version=2023-11-01-preview/get'
            operationId: ActionRequests_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActionRequests
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/action_requests/methods/get'
          - $ref: '#/components/x-stackQL-resources/action_requests/methods/list'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/action_requests/methods/put'
        delete:
          - $ref: '#/components/x-stackQL-resources/action_requests/methods/delete'
    vw_draft_packages:
      id: azure_extras.test_base.vw_draft_packages
      name: vw_draft_packages
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.applicationName') as "application_name",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.draftPackagePath') as "draft_package_path",
              JSON_EXTRACT(properties, '$.workingPath') as "working_path",
              JSON_EXTRACT(properties, '$.appFileName') as "app_file_name",
              JSON_EXTRACT(properties, '$.sourceType') as "source_type",
              JSON_EXTRACT(properties, '$.useSample') as "use_sample",
              JSON_EXTRACT(properties, '$.comments') as "comments",
              JSON_EXTRACT(properties, '$.intuneMetadata') as "intune_metadata",
              JSON_EXTRACT(properties, '$.highlightedFiles') as "highlighted_files",
              JSON_EXTRACT(properties, '$.packageTags') as "package_tags",
              JSON_EXTRACT(properties, '$.editPackage') as "edit_package",
              JSON_EXTRACT(properties, '$.packageId') as "package_id",
              JSON_EXTRACT(properties, '$.useAutofill') as "use_autofill",
              JSON_EXTRACT(properties, '$.executableLaunchCommand') as "executable_launch_command",
              JSON_EXTRACT(properties, '$.processName') as "process_name",
              JSON_EXTRACT(properties, '$.tabState') as "tab_state",
              JSON_EXTRACT(properties, '$.testTypes') as "test_types",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.targetOSList') as "target_os_list",
              JSON_EXTRACT(properties, '$.inplaceUpgradeOSPair') as "inplace_upgrade_os_pair",
              JSON_EXTRACT(properties, '$.lastModifiedTime') as "last_modified_time",
              JSON_EXTRACT(properties, '$.flightingRing') as "flighting_ring",
              JSON_EXTRACT(properties, '$.firstPartyApps') as "first_party_apps",
              JSON_EXTRACT(properties, '$.galleryApps') as "gallery_apps",
              JSON_EXTRACT(properties, '$.tests') as "tests",
              JSON_EXTRACT(properties, '$.intuneEnrollmentMetadata') as "intune_enrollment_metadata",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              draftPackageName
              FROM azure_extras.test_base.draft_packages
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.applicationName') as "application_name",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.draftPackagePath') as "draft_package_path",
                json_extract_path_text(properties, '$.workingPath') as "working_path",
                json_extract_path_text(properties, '$.appFileName') as "app_file_name",
                json_extract_path_text(properties, '$.sourceType') as "source_type",
                json_extract_path_text(properties, '$.useSample') as "use_sample",
                json_extract_path_text(properties, '$.comments') as "comments",
                json_extract_path_text(properties, '$.intuneMetadata') as "intune_metadata",
                json_extract_path_text(properties, '$.highlightedFiles') as "highlighted_files",
                json_extract_path_text(properties, '$.packageTags') as "package_tags",
                json_extract_path_text(properties, '$.editPackage') as "edit_package",
                json_extract_path_text(properties, '$.packageId') as "package_id",
                json_extract_path_text(properties, '$.useAutofill') as "use_autofill",
                json_extract_path_text(properties, '$.executableLaunchCommand') as "executable_launch_command",
                json_extract_path_text(properties, '$.processName') as "process_name",
                json_extract_path_text(properties, '$.tabState') as "tab_state",
                json_extract_path_text(properties, '$.testTypes') as "test_types",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.targetOSList') as "target_os_list",
                json_extract_path_text(properties, '$.inplaceUpgradeOSPair') as "inplace_upgrade_os_pair",
                json_extract_path_text(properties, '$.lastModifiedTime') as "last_modified_time",
                json_extract_path_text(properties, '$.flightingRing') as "flighting_ring",
                json_extract_path_text(properties, '$.firstPartyApps') as "first_party_apps",
                json_extract_path_text(properties, '$.galleryApps') as "gallery_apps",
                json_extract_path_text(properties, '$.tests') as "tests",
                json_extract_path_text(properties, '$.intuneEnrollmentMetadata') as "intune_enrollment_metadata",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                draftPackageName
                FROM azure_extras.test_base.draft_packages
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_custom_images:
      id: azure_extras.test_base.vw_custom_images
      name: vw_custom_images
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.vhdId') as "vhd_id",
              JSON_EXTRACT(properties, '$.definitionName') as "definition_name",
              JSON_EXTRACT(properties, '$.versionName') as "version_name",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.product') as "product",
              JSON_EXTRACT(properties, '$.release') as "release",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.validationResults') as "validation_results",
              JSON_EXTRACT(properties, '$.osDiskImageSizeInGB') as "os_disk_image_size_in_gb",
              JSON_EXTRACT(properties, '$.releaseVersionDate') as "release_version_date",
              JSON_EXTRACT(properties, '$.vhdFileName') as "vhd_file_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              customImageName
              FROM azure_extras.test_base.custom_images
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.vhdId') as "vhd_id",
                json_extract_path_text(properties, '$.definitionName') as "definition_name",
                json_extract_path_text(properties, '$.versionName') as "version_name",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.product') as "product",
                json_extract_path_text(properties, '$.release') as "release",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.validationResults') as "validation_results",
                json_extract_path_text(properties, '$.osDiskImageSizeInGB') as "os_disk_image_size_in_gb",
                json_extract_path_text(properties, '$.releaseVersionDate') as "release_version_date",
                json_extract_path_text(properties, '$.vhdFileName') as "vhd_file_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                customImageName
                FROM azure_extras.test_base.custom_images
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_image_definitions:
      id: azure_extras.test_base.vw_image_definitions
      name: vw_image_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.architecture') as "architecture",
              JSON_EXTRACT(properties, '$.osState') as "os_state",
              JSON_EXTRACT(properties, '$.securityType') as "security_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              imageDefinitionName
              FROM azure_extras.test_base.image_definitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.architecture') as "architecture",
                json_extract_path_text(properties, '$.osState') as "os_state",
                json_extract_path_text(properties, '$.securityType') as "security_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                imageDefinitionName
                FROM azure_extras.test_base.image_definitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_vh_ds:
      id: azure_extras.test_base.vw_vh_ds
      name: vw_vh_ds
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.path') as "path",
              JSON_EXTRACT(properties, '$.fileName') as "file_name",
              JSON_EXTRACT(properties, '$.fileSize') as "file_size",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              vhdName
              FROM azure_extras.test_base.vh_ds
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.path') as "path",
                json_extract_path_text(properties, '$.fileName') as "file_name",
                json_extract_path_text(properties, '$.fileSize') as "file_size",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                vhdName
                FROM azure_extras.test_base.vh_ds
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_chat_sessions:
      id: azure_extras.test_base.vw_chat_sessions
      name: vw_chat_sessions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              chatSessionName
              FROM azure_extras.test_base.chat_sessions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                chatSessionName
                FROM azure_extras.test_base.chat_sessions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_free_hour_balances:
      id: azure_extras.test_base.vw_free_hour_balances
      name: vw_free_hour_balances
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.totalRemainingFreeHours') as "total_remaining_free_hours",
              JSON_EXTRACT(properties, '$.incrementEntries') as "increment_entries",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              freeHourBalanceName
              FROM azure_extras.test_base.free_hour_balances
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.totalRemainingFreeHours') as "total_remaining_free_hours",
                json_extract_path_text(properties, '$.incrementEntries') as "increment_entries",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                freeHourBalanceName
                FROM azure_extras.test_base.free_hour_balances
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_accounts:
      id: azure_extras.test_base.vw_accounts
      name: vw_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.sku') as "sku",
              JSON_EXTRACT(properties, '$.accessLevel') as "access_level",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName
              FROM azure_extras.test_base.accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.sku') as "sku",
                json_extract_path_text(properties, '$.accessLevel') as "access_level",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName
                FROM azure_extras.test_base.accounts
                WHERE subscriptionId = 'replace-me';
    vw_available_os:
      id: azure_extras.test_base.vw_available_os
      name: vw_available_os
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.osId') as "os_id",
              JSON_EXTRACT(properties, '$.osName') as "os_name",
              JSON_EXTRACT(properties, '$.osVersion') as "os_version",
              JSON_EXTRACT(properties, '$.insiderChannel') as "insider_channel",
              JSON_EXTRACT(properties, '$.osUpdateType') as "os_update_type",
              JSON_EXTRACT(properties, '$.osPlatform') as "os_platform",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              availableOSResourceName,
              osUpdateType
              FROM azure_extras.test_base.available_os
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND osUpdateType = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.osId') as "os_id",
                json_extract_path_text(properties, '$.osName') as "os_name",
                json_extract_path_text(properties, '$.osVersion') as "os_version",
                json_extract_path_text(properties, '$.insiderChannel') as "insider_channel",
                json_extract_path_text(properties, '$.osUpdateType') as "os_update_type",
                json_extract_path_text(properties, '$.osPlatform') as "os_platform",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                availableOSResourceName,
                osUpdateType
                FROM azure_extras.test_base.available_os
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND osUpdateType = 'replace-me';
    vw_flighting_rings:
      id: azure_extras.test_base.vw_flighting_rings
      name: vw_flighting_rings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.actualFlightingRingName') as "actual_flighting_ring_name",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              flightingRingResourceName
              FROM azure_extras.test_base.flighting_rings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.actualFlightingRingName') as "actual_flighting_ring_name",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                flightingRingResourceName
                FROM azure_extras.test_base.flighting_rings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_first_party_apps:
      id: azure_extras.test_base.vw_first_party_apps
      name: vw_first_party_apps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.mediaType') as "media_type",
              JSON_EXTRACT(properties, '$.architecture') as "architecture",
              JSON_EXTRACT(properties, '$.channel') as "channel",
              JSON_EXTRACT(properties, '$.ring') as "ring",
              JSON_EXTRACT(properties, '$.supportedProducts') as "supported_products",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              firstPartyAppResourceName
              FROM azure_extras.test_base.first_party_apps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.mediaType') as "media_type",
                json_extract_path_text(properties, '$.architecture') as "architecture",
                json_extract_path_text(properties, '$.channel') as "channel",
                json_extract_path_text(properties, '$.ring') as "ring",
                json_extract_path_text(properties, '$.supportedProducts') as "supported_products",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                firstPartyAppResourceName
                FROM azure_extras.test_base.first_party_apps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_gallery_apps:
      id: azure_extras.test_base.vw_gallery_apps
      name: vw_gallery_apps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.applicationType') as "application_type",
              JSON_EXTRACT(properties, '$.applicationId') as "application_id",
              JSON_EXTRACT(properties, '$.applicationName') as "application_name",
              JSON_EXTRACT(properties, '$.popularity') as "popularity",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              galleryAppName
              FROM azure_extras.test_base.gallery_apps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.applicationType') as "application_type",
                json_extract_path_text(properties, '$.applicationId') as "application_id",
                json_extract_path_text(properties, '$.applicationName') as "application_name",
                json_extract_path_text(properties, '$.popularity') as "popularity",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                galleryAppName
                FROM azure_extras.test_base.gallery_apps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_gallery_app_skus:
      id: azure_extras.test_base.vw_gallery_app_skus
      name: vw_gallery_app_skus
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.applicationType') as "application_type",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              galleryAppName,
              galleryAppSkuName
              FROM azure_extras.test_base.gallery_app_skus
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND galleryAppName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.applicationType') as "application_type",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                galleryAppName,
                galleryAppSkuName
                FROM azure_extras.test_base.gallery_app_skus
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND galleryAppName = 'replace-me';
    vw_test_types:
      id: azure_extras.test_base.vw_test_types
      name: vw_test_types
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.actualTestTypeName') as "actual_test_type_name",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              testTypeResourceName
              FROM azure_extras.test_base.test_types
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.actualTestTypeName') as "actual_test_type_name",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                testTypeResourceName
                FROM azure_extras.test_base.test_types
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_packages:
      id: azure_extras.test_base.vw_packages
      name: vw_packages
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.applicationName') as "application_name",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.draftPackageId') as "draft_package_id",
              JSON_EXTRACT(properties, '$.packageStatus') as "package_status",
              JSON_EXTRACT(properties, '$.isEnabled') as "is_enabled",
              JSON_EXTRACT(properties, '$.blobPath') as "blob_path",
              JSON_EXTRACT(properties, '$.validationResults') as "validation_results",
              JSON_EXTRACT(properties, '$.testTypes') as "test_types",
              JSON_EXTRACT(properties, '$.targetOSList') as "target_os_list",
              JSON_EXTRACT(properties, '$.inplaceUpgradeOSPair') as "inplace_upgrade_os_pair",
              JSON_EXTRACT(properties, '$.lastModifiedTime') as "last_modified_time",
              JSON_EXTRACT(properties, '$.flightingRing') as "flighting_ring",
              JSON_EXTRACT(properties, '$.firstPartyApps') as "first_party_apps",
              JSON_EXTRACT(properties, '$.galleryApps') as "gallery_apps",
              JSON_EXTRACT(properties, '$.tests') as "tests",
              JSON_EXTRACT(properties, '$.intuneEnrollmentMetadata') as "intune_enrollment_metadata",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              packageName
              FROM azure_extras.test_base.packages
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.applicationName') as "application_name",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.draftPackageId') as "draft_package_id",
                json_extract_path_text(properties, '$.packageStatus') as "package_status",
                json_extract_path_text(properties, '$.isEnabled') as "is_enabled",
                json_extract_path_text(properties, '$.blobPath') as "blob_path",
                json_extract_path_text(properties, '$.validationResults') as "validation_results",
                json_extract_path_text(properties, '$.testTypes') as "test_types",
                json_extract_path_text(properties, '$.targetOSList') as "target_os_list",
                json_extract_path_text(properties, '$.inplaceUpgradeOSPair') as "inplace_upgrade_os_pair",
                json_extract_path_text(properties, '$.lastModifiedTime') as "last_modified_time",
                json_extract_path_text(properties, '$.flightingRing') as "flighting_ring",
                json_extract_path_text(properties, '$.firstPartyApps') as "first_party_apps",
                json_extract_path_text(properties, '$.galleryApps') as "gallery_apps",
                json_extract_path_text(properties, '$.tests') as "tests",
                json_extract_path_text(properties, '$.intuneEnrollmentMetadata') as "intune_enrollment_metadata",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                packageName
                FROM azure_extras.test_base.packages
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_test_summaries:
      id: azure_extras.test_base.vw_test_summaries
      name: vw_test_summaries
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.testSummaryId') as "test_summary_id",
              JSON_EXTRACT(properties, '$.packageId') as "package_id",
              JSON_EXTRACT(properties, '$.applicationName') as "application_name",
              JSON_EXTRACT(properties, '$.applicationVersion') as "application_version",
              JSON_EXTRACT(properties, '$.executionStatus') as "execution_status",
              JSON_EXTRACT(properties, '$.testStatus') as "test_status",
              JSON_EXTRACT(properties, '$.grade') as "grade",
              JSON_EXTRACT(properties, '$.testRunTime') as "test_run_time",
              JSON_EXTRACT(properties, '$.featureUpdatesTestSummary') as "feature_updates_test_summary",
              JSON_EXTRACT(properties, '$.securityUpdatesTestSummary') as "security_updates_test_summary",
              JSON_EXTRACT(properties, '$.inplaceUpgradesTestSummary') as "inplace_upgrades_test_summary",
              JSON_EXTRACT(properties, '$.packageTags') as "package_tags",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              testSummaryName
              FROM azure_extras.test_base.test_summaries
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.testSummaryId') as "test_summary_id",
                json_extract_path_text(properties, '$.packageId') as "package_id",
                json_extract_path_text(properties, '$.applicationName') as "application_name",
                json_extract_path_text(properties, '$.applicationVersion') as "application_version",
                json_extract_path_text(properties, '$.executionStatus') as "execution_status",
                json_extract_path_text(properties, '$.testStatus') as "test_status",
                json_extract_path_text(properties, '$.grade') as "grade",
                json_extract_path_text(properties, '$.testRunTime') as "test_run_time",
                json_extract_path_text(properties, '$.featureUpdatesTestSummary') as "feature_updates_test_summary",
                json_extract_path_text(properties, '$.securityUpdatesTestSummary') as "security_updates_test_summary",
                json_extract_path_text(properties, '$.inplaceUpgradesTestSummary') as "inplace_upgrades_test_summary",
                json_extract_path_text(properties, '$.packageTags') as "package_tags",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                testSummaryName
                FROM azure_extras.test_base.test_summaries
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_test_results:
      id: azure_extras.test_base.vw_test_results
      name: vw_test_results
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.baselineTestResultId') as "baseline_test_result_id",
              JSON_EXTRACT(properties, '$.packageId') as "package_id",
              JSON_EXTRACT(properties, '$.applicationName') as "application_name",
              JSON_EXTRACT(properties, '$.applicationVersion') as "application_version",
              JSON_EXTRACT(properties, '$.osName') as "os_name",
              JSON_EXTRACT(properties, '$.customImageId') as "custom_image_id",
              JSON_EXTRACT(properties, '$.customImageDisplayName') as "custom_image_display_name",
              JSON_EXTRACT(properties, '$.releaseName') as "release_name",
              JSON_EXTRACT(properties, '$.releaseVersionDate') as "release_version_date",
              JSON_EXTRACT(properties, '$.flightingRing') as "flighting_ring",
              JSON_EXTRACT(properties, '$.buildVersion') as "build_version",
              JSON_EXTRACT(properties, '$.buildRevision') as "build_revision",
              JSON_EXTRACT(properties, '$.testType') as "test_type",
              JSON_EXTRACT(properties, '$.testRunTime') as "test_run_time",
              JSON_EXTRACT(properties, '$.isDownloadDataAvailable') as "is_download_data_available",
              JSON_EXTRACT(properties, '$.isVideoAvailable') as "is_video_available",
              JSON_EXTRACT(properties, '$.executionStatus') as "execution_status",
              JSON_EXTRACT(properties, '$.testStatus') as "test_status",
              JSON_EXTRACT(properties, '$.grade') as "grade",
              JSON_EXTRACT(properties, '$.kbNumber') as "kb_number",
              JSON_EXTRACT(properties, '$.interopMediaType') as "interop_media_type",
              JSON_EXTRACT(properties, '$.interopMediaVersion') as "interop_media_version",
              JSON_EXTRACT(properties, '$.packageVersion') as "package_version",
              JSON_EXTRACT(properties, '$.analysisSummaries') as "analysis_summaries",
              JSON_EXTRACT(properties, '$.inplaceUpgradeProperties') as "inplace_upgrade_properties",
              JSON_EXTRACT(properties, '$.testStartTime') as "test_start_time",
              JSON_EXTRACT(properties, '$.testEndTime') as "test_end_time",
              JSON_EXTRACT(properties, '$.firstPartyApps') as "first_party_apps",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              packageName,
              testResultName,
              osUpdateType
              FROM azure_extras.test_base.test_results
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND packageName = 'replace-me' AND osUpdateType = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.baselineTestResultId') as "baseline_test_result_id",
                json_extract_path_text(properties, '$.packageId') as "package_id",
                json_extract_path_text(properties, '$.applicationName') as "application_name",
                json_extract_path_text(properties, '$.applicationVersion') as "application_version",
                json_extract_path_text(properties, '$.osName') as "os_name",
                json_extract_path_text(properties, '$.customImageId') as "custom_image_id",
                json_extract_path_text(properties, '$.customImageDisplayName') as "custom_image_display_name",
                json_extract_path_text(properties, '$.releaseName') as "release_name",
                json_extract_path_text(properties, '$.releaseVersionDate') as "release_version_date",
                json_extract_path_text(properties, '$.flightingRing') as "flighting_ring",
                json_extract_path_text(properties, '$.buildVersion') as "build_version",
                json_extract_path_text(properties, '$.buildRevision') as "build_revision",
                json_extract_path_text(properties, '$.testType') as "test_type",
                json_extract_path_text(properties, '$.testRunTime') as "test_run_time",
                json_extract_path_text(properties, '$.isDownloadDataAvailable') as "is_download_data_available",
                json_extract_path_text(properties, '$.isVideoAvailable') as "is_video_available",
                json_extract_path_text(properties, '$.executionStatus') as "execution_status",
                json_extract_path_text(properties, '$.testStatus') as "test_status",
                json_extract_path_text(properties, '$.grade') as "grade",
                json_extract_path_text(properties, '$.kbNumber') as "kb_number",
                json_extract_path_text(properties, '$.interopMediaType') as "interop_media_type",
                json_extract_path_text(properties, '$.interopMediaVersion') as "interop_media_version",
                json_extract_path_text(properties, '$.packageVersion') as "package_version",
                json_extract_path_text(properties, '$.analysisSummaries') as "analysis_summaries",
                json_extract_path_text(properties, '$.inplaceUpgradeProperties') as "inplace_upgrade_properties",
                json_extract_path_text(properties, '$.testStartTime') as "test_start_time",
                json_extract_path_text(properties, '$.testEndTime') as "test_end_time",
                json_extract_path_text(properties, '$.firstPartyApps') as "first_party_apps",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                packageName,
                testResultName,
                osUpdateType
                FROM azure_extras.test_base.test_results
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND packageName = 'replace-me' AND osUpdateType = 'replace-me';
    vw_os_updates:
      id: azure_extras.test_base.vw_os_updates
      name: vw_os_updates
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.osName') as "os_name",
              JSON_EXTRACT(properties, '$.release') as "release",
              JSON_EXTRACT(properties, '$.flightingRing') as "flighting_ring",
              JSON_EXTRACT(properties, '$.buildVersion') as "build_version",
              JSON_EXTRACT(properties, '$.buildRevision') as "build_revision",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.releaseVersionDate') as "release_version_date",
              JSON_EXTRACT(properties, '$.inplaceUpgradeBaselineProperties') as "inplace_upgrade_baseline_properties",
              JSON_EXTRACT(properties, '$.customImageId') as "custom_image_id",
              JSON_EXTRACT(properties, '$.customImageDisplayName') as "custom_image_display_name",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              packageName,
              osUpdateResourceName,
              osUpdateType
              FROM azure_extras.test_base.os_updates
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND packageName = 'replace-me' AND osUpdateType = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.osName') as "os_name",
                json_extract_path_text(properties, '$.release') as "release",
                json_extract_path_text(properties, '$.flightingRing') as "flighting_ring",
                json_extract_path_text(properties, '$.buildVersion') as "build_version",
                json_extract_path_text(properties, '$.buildRevision') as "build_revision",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.releaseVersionDate') as "release_version_date",
                json_extract_path_text(properties, '$.inplaceUpgradeBaselineProperties') as "inplace_upgrade_baseline_properties",
                json_extract_path_text(properties, '$.customImageId') as "custom_image_id",
                json_extract_path_text(properties, '$.customImageDisplayName') as "custom_image_display_name",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                packageName,
                osUpdateResourceName,
                osUpdateType
                FROM azure_extras.test_base.os_updates
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND packageName = 'replace-me' AND osUpdateType = 'replace-me';
    vw_favorite_processes:
      id: azure_extras.test_base.vw_favorite_processes
      name: vw_favorite_processes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.actualProcessName') as "actual_process_name",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              packageName,
              favoriteProcessResourceName
              FROM azure_extras.test_base.favorite_processes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND packageName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.actualProcessName') as "actual_process_name",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                packageName,
                favoriteProcessResourceName
                FROM azure_extras.test_base.favorite_processes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND packageName = 'replace-me';
    vw_analysis_results:
      id: azure_extras.test_base.vw_analysis_results
      name: vw_analysis_results
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.grade') as "grade",
              JSON_EXTRACT(properties, '$.analysisResultType') as "analysis_result_type",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              packageName,
              testResultName,
              analysisResultName,
              analysisResultType
              FROM azure_extras.test_base.analysis_results
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND packageName = 'replace-me' AND testResultName = 'replace-me' AND analysisResultType = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.grade') as "grade",
                json_extract_path_text(properties, '$.analysisResultType') as "analysis_result_type",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                packageName,
                testResultName,
                analysisResultName,
                analysisResultType
                FROM azure_extras.test_base.analysis_results
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND packageName = 'replace-me' AND testResultName = 'replace-me' AND analysisResultType = 'replace-me';
    vw_email_events:
      id: azure_extras.test_base.vw_email_events
      name: vw_email_events
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.eventId') as "event_id",
              JSON_EXTRACT(properties, '$.eventName') as "event_name",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              emailEventResourceName
              FROM azure_extras.test_base.email_events
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.eventId') as "event_id",
                json_extract_path_text(properties, '$.eventName') as "event_name",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                emailEventResourceName
                FROM azure_extras.test_base.email_events
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_customer_events:
      id: azure_extras.test_base.vw_customer_events
      name: vw_customer_events
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.eventName') as "event_name",
              JSON_EXTRACT(properties, '$.receivers') as "receivers",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              customerEventName
              FROM azure_extras.test_base.customer_events
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.eventName') as "event_name",
                json_extract_path_text(properties, '$.receivers') as "receivers",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                customerEventName
                FROM azure_extras.test_base.customer_events
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_available_inplace_upgrade_os:
      id: azure_extras.test_base.vw_available_inplace_upgrade_os
      name: vw_available_inplace_upgrade_os
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.sourceOsName') as "source_os_name",
              JSON_EXTRACT(properties, '$.sourceOsReleases') as "source_os_releases",
              JSON_EXTRACT(properties, '$.supportedTargetOsNameList') as "supported_target_os_name_list",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              availableInplaceUpgradeOSResourceName,
              osUpdateType
              FROM azure_extras.test_base.available_inplace_upgrade_os
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND osUpdateType = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.sourceOsName') as "source_os_name",
                json_extract_path_text(properties, '$.sourceOsReleases') as "source_os_releases",
                json_extract_path_text(properties, '$.supportedTargetOsNameList') as "supported_target_os_name_list",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                availableInplaceUpgradeOSResourceName,
                osUpdateType
                FROM azure_extras.test_base.available_inplace_upgrade_os
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me' AND osUpdateType = 'replace-me';
    vw_credentials:
      id: azure_extras.test_base.vw_credentials
      name: vw_credentials
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.credentialType') as "credential_type",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              credentialName
              FROM azure_extras.test_base.credentials
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.credentialType') as "credential_type",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                credentialName
                FROM azure_extras.test_base.credentials
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
    vw_action_requests:
      id: azure_extras.test_base.vw_action_requests
      name: vw_action_requests
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.requestType') as "request_type",
              JSON_EXTRACT(properties, '$.preReleaseAccessRequestSpec') as "pre_release_access_request_spec",
              JSON_EXTRACT(properties, '$.creationDate') as "creation_date",
              JSON_EXTRACT(properties, '$.status') as "status",
              subscriptionId,
              resourceGroupName,
              testBaseAccountName,
              actionRequestName
              FROM azure_extras.test_base.action_requests
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.requestType') as "request_type",
                json_extract_path_text(properties, '$.preReleaseAccessRequestSpec') as "pre_release_access_request_spec",
                json_extract_path_text(properties, '$.creationDate') as "creation_date",
                json_extract_path_text(properties, '$.status') as "status",
                subscriptionId,
                resourceGroupName,
                testBaseAccountName,
                actionRequestName
                FROM azure_extras.test_base.action_requests
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND testBaseAccountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/draftPackages?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Draft Package
      operationId: DraftPackages_ListByTestBaseAccount
      description: Lists all the draft packages under a test base account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameQueryParameter'
        - $ref: '#/components/parameters/DraftPackageEditPackageParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPackageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/draftPackages/{draftPackageName}?api-version=2023-11-01-preview:
    put:
      tags:
        - Test Base Draft Package
      operationId: DraftPackages_Create
      description: Creates or replaces a Test Base Draft Package.
      requestBody:
        description: Parameters supplied to create a Test Base Draft Package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPackageResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/DraftPackageNameParameter'
      responses:
        '200':
          description: The Test Base Draft Package was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPackageResource'
        '201':
          description: The Test Base Draft Package was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPackageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Test Base Draft Package
      operationId: DraftPackages_Update
      description: Updates an existing Test Base Draft Package.
      requestBody:
        description: Parameters supplied to update a Test Base Draft Package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPackageUpdateParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/DraftPackageNameParameter'
      responses:
        '200':
          description: The existing Test Base Draft Package was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPackageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Base Draft Package
      operationId: DraftPackages_Delete
      description: Deletes a Test Base Draft Package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/DraftPackageNameParameter'
      responses:
        '200':
          description: The Test Base Draft Package 'delete' operation was completed successfully.
        '204':
          description: The Test Base Draft Package 'delete' operation was completed successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Base Draft Package
      operationId: DraftPackages_Get
      description: Gets a Test Base Draft Package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/DraftPackageNameParameter'
      responses:
        '200':
          description: The Test Base Draft Package was successfully found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPackageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/draftPackages/{draftPackageName}/getPath?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Draft Package
      operationId: DraftPackagesPath_Get
      description: Gets draft package path and temp working path with SAS.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/DraftPackageNameParameter'
      responses:
        '200':
          description: The paths with access token is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPackageGetPathResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: DraftPackages_GetPath
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/draftPackages/{draftPackageName}/copyFromPackage?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Draft Package
      operationId: DraftPackages_CopyFromPackage
      description: Copy package file and metadata from a package to this draft package
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/DraftPackageNameParameter'
      requestBody:
        description: Parameters supplied to the Test Base Draft Package CopyFromPackage operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyFromPackageOperationParameters'
      responses:
        '202':
          description: The operation was accepted. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/draftPackages/{draftPackageName}/extractFile?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Draft Package
      operationId: DraftPackages_ExtractFile
      description: Performs extracting file operation for a Test Base Draft Package
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/DraftPackageNameParameter'
      requestBody:
        description: Parameters supplied to the Test Base Draft Package ExtractFile operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractFileOperationParameters'
      responses:
        '202':
          description: The 'ExtractFile' operation of Draft Package was accepted. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/draftPackages/{draftPackageName}/generateFoldersAndScripts?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Draft Package
      operationId: DraftPackages_GenerateFoldersAndScripts
      description: Generates folders and scripts
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/DraftPackageNameParameter'
      requestBody:
        description: Parameters supplied to the Test Base Draft Package Generate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateOperationParameters'
      responses:
        '202':
          description: The 'Generate' operation of Draft Package was accepted. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/customImages?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Custom Image
      operationId: CustomImages_ListByTestBaseAccount
      description: Lists all the custom images under a test base account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/customImages/{customImageName}?api-version=2023-11-01-preview:
    put:
      tags:
        - Test Base Custom Image
      operationId: CustomImages_Create
      description: Creates a test base custom image.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Parameters supplied to create a test base custom image.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomImageResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CustomImageNameParameter'
      responses:
        '200':
          description: The test base custom image was successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImageResource'
        '201':
          description: The test base custom image 'create' operation was successfully enqueued. Check provisioningState to track execution status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImageResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Base Custom Image
      operationId: CustomImages_Delete
      description: Deletes a test base custom image.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CustomImageNameParameter'
      responses:
        '202':
          description: The test base custom image 'delete' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The test base custom image was deleted successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Base Custom Image
      operationId: CustomImages_Get
      description: Gets a test base custom image.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CustomImageNameParameter'
      responses:
        '200':
          description: The test base custom image was successfully found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/checkImageNameAvailability?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Custom Image
      operationId: CustomImages_CheckImageNameAvailability
      description: Checks that the test vase custom image generated from VHD resource has valid and unique definition and version, return architecture and OS state of potential existing image definition.
      requestBody:
        description: Parameters supplied to the test base custom image CheckAvailability operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageNameCheckAvailabilityParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: Image definition and version is available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckImageAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/imageDefinitions?api-version=2023-11-01-preview:
    get:
      tags:
        - 'Test Base Image Definition // Reminder: Need renaming.'
      operationId: ImageDefinitions_ListByTestBaseAccount
      description: List all image definition properties created by test base custom images which are derived from 'VHD' source.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: Get image definition existence and get detailed properties if applicable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinitionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/imageDefinitions/{imageDefinitionName}?api-version=2023-11-01-preview:
    put:
      tags:
        - Test Base Image Definition
      operationId: ImageDefinitions_Create
      description: Create image definition for test base custom images which are derived from 'VHD' source.
      requestBody:
        description: Parameters supplied to create a test base image definition.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageDefinitionResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/ImageDefinitionNameParameter'
      responses:
        '200':
          description: The test base image definition Resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinitionResource'
        '201':
          description: Create a test base image definition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinitionResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Base ImageDefinition
      operationId: ImageDefinitions_Get
      description: Get image properties under the image definition name created by test base custom image which derived from 'VHD' source.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/ImageDefinitionNameParameter'
      responses:
        '200':
          description: Get the detailed properties of  the image definition if applicable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinitionResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Base Image Definition
      operationId: ImageDefinitions_Delete
      description: Delete a test base image definition resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/ImageDefinitionNameParameter'
      responses:
        '200':
          description: The test base image definition was deleted successfully.
        '204':
          description: The test base image definition was deleted successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/vhds?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base VHD
      operationId: VHDs_ListByTestBaseAccount
      description: Lists all the VHDs under a test base account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VHDListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/vhds/{vhdName}?api-version=2023-11-01-preview:
    delete:
      tags:
        - Test Base VHD
      operationId: VHDs_Delete
      description: Deletes a Test Base VHD.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/VhdNameParameter'
      responses:
        '200':
          description: The test base VHD was deleted successfully.
        '204':
          description: The test base VHD was deleted successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Base VHD
      operationId: VHDs_Get
      description: Gets a Test Base VHD.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/VhdNameParameter'
      responses:
        '200':
          description: The Test Base VHD was successfully found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VHDResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/chatSessions?api-version=2023-11-01-preview:
    get:
      tags:
        - Chat
      operationId: ChatSessions_List
      description: List all chat sessions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The chat session was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/chatSessions/{chatSessionName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Chat
      operationId: ChatSessions_Get
      description: Get a chat session
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/ChatSessionNameParameter'
      responses:
        '200':
          description: The chat session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/chatSessions/{chatSessionName}/chat?api-version=2023-11-01-preview:
    post:
      tags:
        - Chat
      operationId: ChatSession_Chat
      description: Start a new chat turn. Ask a question and see the answer in response.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/ChatSessionNameParameter'
      requestBody:
        description: Payload to ask a question.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: The question was answered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '202':
          description: The chat operation was successfully enqueued. Waiting for the answer.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/freeHourBalances?api-version=2023-11-01-preview:
    get:
      tags:
        - Free Hour Balances
      operationId: FreeHourBalances_List
      summary: List all the free hour balances of a test base account. The result collection will only contain one element as all the data will be nested in a singleton object.
      description: Return the Test Base free hour balances list.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: Succeeded to list the Test Base free hour balances.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeHourBalancesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/freeHourBalances/{freeHourBalanceName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Free Hour Balances
      operationId: FreeHourBalances_Get
      summary: Get the free hour balance of a test base account.
      description: Return the Test Base free hour balance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/FreeHourBalanceNameParameter'
      responses:
        '200':
          description: Succeeded to get the Test Base free hour balance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeHourBalanceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.TestBase/skus?api-version=2023-11-01-preview:
    get:
      tags:
        - test base account
      operationId: Skus_List
      description: Lists the available SKUs of Test Base Account in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBaseAccountSKUListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.TestBase/testBaseAccounts?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Account
      operationId: TestBaseAccounts_ListBySubscription
      description: Lists all the Test Base Accounts in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TestBaseAccountIncludeSoftDeletedParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBaseAccountListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Account
      operationId: TestBaseAccounts_ListByResourceGroup
      description: Lists all the Test Base Accounts in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountIncludeSoftDeletedParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBaseAccountListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}?api-version=2023-11-01-preview:
    put:
      tags:
        - Test Base Account
      operationId: TestBaseAccounts_Create
      description: Create or replace (overwrite/recreate, with potential downtime) a Test Base Account in the specified subscription.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Parameters supplied to create a Test Base Account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestBaseAccountResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountRestoreSoftDeletedParameter'
      responses:
        '200':
          description: The Test Base Account was successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBaseAccountResource'
        '201':
          description: The Test Base Account 'create' or 'update' operation was successfully enqueued. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBaseAccountResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Test Base Account
      operationId: TestBaseAccounts_Update
      description: Update an existing Test Base Account.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Parameters supplied to update a Test Base Account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestBaseAccountUpdateParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The existing Test Base Account was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBaseAccountResource'
        '201':
          description: The Test Base Account 'update' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '202':
          description: The Test Base Account 'update' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Base Account
      operationId: TestBaseAccounts_Delete
      description: Deletes a Test Base Account.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The Test Base Account 'delete' operation was completed successfully.
        '202':
          description: The Test Base Account 'delete' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The Test Base Account 'delete' operation was completed successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Base Account
      operationId: TestBaseAccounts_Get
      description: Gets a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The Test Base Account was successfully found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBaseAccountResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/offboard?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Account
      operationId: TestBaseAccounts_Offboard
      description: Offboard a Test Base Account.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The Test Base Account 'offboard' operation was completed successfully.
        '202':
          description: The Test Base Account 'offboard' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The Test Base Account 'offboard' operation was completed successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/usages?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Account
      operationId: Usage_List
      description: Lists the usage data of a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: The usage of the Test Base Account was returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBaseAccountUsageDataList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/getFileUploadUrl?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Package
      operationId: TestBaseAccountsFileUploadUrl_Get
      description: Gets the file upload URL of a Test Base Account.
      requestBody:
        description: Parameters supplied to the Test Base Account GetFileUploadURL operation.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFileUploadURLParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The file upload URL of the Test Base Account was returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadURLResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: TestBaseAccounts_GetFileUploadUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/availableOSs?api-version=2023-11-01-preview:
    get:
      tags:
        - Supported OSes
      operationId: AvailableOS_List
      description: Lists all the available OSs to run a package under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/OSUpdateTypeParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableOSListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/availableOSs/{availableOSResourceName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Supported OSes
      operationId: AvailableOS_Get
      description: Gets an available OS to run a package under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - name: availableOSResourceName
          in: path
          description: The resource name of an Available OS.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableOSResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/featureUpdateSupportedOses?api-version=2023-11-01-preview:
    get:
      tags:
        - Supported OSes
      operationId: FeatureUpdateSupportedOses_List
      description: Lists all the available OSs to run a package under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureUpdateSupportedOsesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/flightingRings?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Package
      operationId: FlightingRings_List
      description: Lists all the flighting rings of a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightingRingListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/flightingRings/{flightingRingResourceName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Package
      operationId: FlightingRings_Get
      description: Gets a flighting ring of a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - name: flightingRingResourceName
          in: path
          description: The resource name of a flighting ring.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightingRingResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/firstPartyApps?api-version=2023-11-01-preview:
    get:
      tags:
        - First Party Applications
      operationId: FirstPartyApps_List
      description: Lists all first party applications currently available for test runs under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstPartyAppListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/firstPartyApps/{firstPartyAppResourceName}?api-version=2023-11-01-preview:
    get:
      tags:
        - First Party Applications
      operationId: FirstPartyApps_Get
      description: Gets a first party application to prepare a test run for a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - name: firstPartyAppResourceName
          in: path
          description: The resource name of a first party application.
          required: true
          x-ms-parameter-location: method
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9]|(-[A-Za-z0-9]))+$
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstPartyAppResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/galleryApps?api-version=2023-11-01-preview:
    get:
      tags:
        - Gallery Applications
      operationId: GalleryApps_List
      description: Lists all gallery applications currently available for test runs under a Test Base Account which matches user query.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/KeywordParameter'
        - name: applicationType
          in: query
          description: The type of the gallery application.
          required: false
          x-ms-parameter-location: method
          schema:
            enum:
              - Winget
            x-ms-enum:
              name: applicationType
              modelAsString: true
            type: string
        - name: orderBy
          in: query
          description: The order of result list.
          required: false
          x-ms-parameter-location: method
          schema:
            enum:
              - popularity
              - relevance
            x-ms-enum:
              name: orderBy
              modelAsString: true
            default: relevance
            type: string
        - $ref: '#/components/parameters/TopFilter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryAppListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/galleryApps/{galleryAppName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Gallery Applications
      operationId: GalleryApps_Get
      description: Gets a gallery application to prepare a test run for a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/GalleryAppNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryAppResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/galleryApps/{galleryAppName}/galleryAppSkus?api-version=2023-11-01-preview:
    get:
      tags:
        - Gallery Applications
      operationId: GalleryAppSkus_List
      description: Lists all SKUs of a gallery application currently available for test runs under a Test Base account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/GalleryAppNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryAppSkuListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/galleryApps/{galleryAppName}/galleryAppSkus/{galleryAppSkuName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Gallery Applications
      operationId: GalleryAppSkus_Get
      description: Gets a gallery application SKU for test runs under a Test Base account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/GalleryAppNameParameter'
        - name: galleryAppSkuName
          in: path
          description: The resource name of a gallery application SKU.
          required: true
          x-ms-parameter-location: method
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9]|(-[A-Za-z0-9]))+$
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryAppSkuResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/testTypes?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Package
      operationId: TestTypes_List
      description: Lists all the test types of a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestTypeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/testTypes/{testTypeResourceName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Package
      operationId: TestTypes_Get
      description: Gets a test type of a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - name: testTypeResourceName
          in: path
          description: The resource name of a test type.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestTypeResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/checkPackageNameAvailability?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Package
      operationId: TestBaseAccounts_CheckPackageNameAvailability
      description: Checks that the Test Base Package name and version is valid and is not already in use.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      requestBody:
        description: Parameters supplied to the Test Base Package CheckNameAvailability operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCheckNameAvailabilityParameters'
      responses:
        '200':
          description: Name is available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Package
      operationId: Packages_ListByTestBaseAccount
      description: Lists all the packages under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}?api-version=2023-11-01-preview:
    put:
      tags:
        - Test Base Package
      operationId: Packages_Create
      description: Create or replace (overwrite/recreate, with potential downtime) a Test Base Package.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Parameters supplied to create a Test Base Package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
      responses:
        '200':
          description: The Test Base Package was successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResource'
        '201':
          description: The Test Base Package 'create' or 'update' operation was successfully enqueued. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Test Base Package
      operationId: Packages_Update
      description: Update an existing Test Base Package.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Parameters supplied to update a Test Base Package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageUpdateParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
      responses:
        '200':
          description: The existing Test Base Package was successfully updated. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResource'
        '201':
          description: The Test Base Package 'update' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '202':
          description: The Test Base Package 'update' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Base Package
      operationId: Packages_Delete
      description: Deletes a Test Base Package.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
      responses:
        '200':
          description: The Test Base Package 'delete' operation was completed successfully.
        '202':
          description: The Test Base Package 'delete' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The Test Base Package 'delete' operation was completed successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Base Package
      operationId: Packages_Get
      description: Gets a Test Base Package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
      responses:
        '200':
          description: The Test Base Package was successfully found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/hardDelete?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Package
      operationId: Packages_HardDelete
      description: Hard Delete a Test Base Package.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
      responses:
        '200':
          description: The Test Base Package 'HardDelete' operation was completed successfully.
        '202':
          description: The Test Base Package 'HardDelete' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The Test Base Package 'HardDelete' operation was completed successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/getDownloadUrl?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Package
      operationId: PackagesDownloadURL_Get
      description: Gets the download URL of a package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
      responses:
        '200':
          description: The package download URL is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadURLResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Packages_GetDownloadURL
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/runTest?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Base Package
      operationId: Packages_RunTest
      description: Trigger a test run on the package.
      requestBody:
        description: The parameters supplied to the Test Base Package to start a Test Run.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageRunTestParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
      responses:
        '200':
          description: The test is triggered successfully.
        '202':
          description: The request to trigger a test was accepted. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The test is triggered successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/testSummaries?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: TestSummaries_List
      description: Lists the Test Summaries of all the packages under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSummaryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/testSummaries/{testSummaryName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: TestSummaries_Get
      description: Gets a Test Summary with specific name from all the Test Summaries of all the packages under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - name: testSummaryName
          in: path
          description: The name of the Test Summary.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSummaryResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/testResults?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: TestResults_List
      description: Lists all the Test Results with specified OS Update type for a Test Base Package. Can be filtered by osName, releaseName, flightingRing, buildVersion, buildRevision.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/OSUpdateTypeParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResultListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/testResults/{testResultName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: TestResults_Get
      description: Get the Test Result by Id with specified OS Update type for a Test Base Package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/TestResultNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResultResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/osUpdates?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: OSUpdates_List
      description: Lists the OS Updates in which the package were tested before.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/OSUpdateTypeParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSUpdateListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/osUpdates/{osUpdateResourceName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: OSUpdates_Get
      description: Gets an OS Update by name in which the package was tested before.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - name: osUpdateResourceName
          in: path
          description: The resource name of an OS Update.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSUpdateResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/favoriteProcesses?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: FavoriteProcesses_List
      description: Lists the favorite processes for a specific package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProcessListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/favoriteProcesses/{favoriteProcessResourceName}?api-version=2023-11-01-preview:
    put:
      tags:
        - Test Result
      operationId: FavoriteProcesses_Create
      description: Create or replace a favorite process for a Test Base Package.
      requestBody:
        description: Parameters supplied to create a favorite process in a package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteProcessResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/FavoriteProcessResourceNameParameter'
      responses:
        '200':
          description: The favorite processes was successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProcessResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Result
      operationId: FavoriteProcesses_Delete
      description: Deletes a favorite process for a specific package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/FavoriteProcessResourceNameParameter'
      responses:
        '200':
          description: The package favorite process 'delete' operation was completed successfully.
        '204':
          description: The package favorite process 'delete' operation was completed successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Result
      operationId: FavoriteProcesses_Get
      description: Gets a favorite process for a Test Base Package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/FavoriteProcessResourceNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProcessResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/testResults/{testResultName}/analysisResults?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: AnalysisResults_List
      description: Lists the Analysis Results of a Test Result. The result collection will only contain one element as all the data will be nested in a singleton object.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/TestResultNameParameter'
        - $ref: '#/components/parameters/AnalysisResultTypeParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/testResults/{testResultName}/analysisResults/{analysisResultName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Result
      operationId: AnalysisResults_Get
      description: Gets an Analysis Result of a Test Result by name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/TestResultNameParameter'
        - $ref: '#/components/parameters/AnalysisResultNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultSingletonResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/testResults/{testResultName}/getDownloadUrl?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Result
      operationId: TestResultsDownloadURL_Get
      description: Gets the download URL of the test result.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/TestResultNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadURLResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: TestResults_GetDownloadURL
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/testResults/{testResultName}/getVideoDownloadUrl?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Result
      operationId: TestResultsVideoDownloadURL_Get
      description: Gets the download URL of the test execution screen recording.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/TestResultNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadURLResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: TestResults_GetVideoDownloadURL
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/testResults/{testResultName}/getConsoleLogDownloadUrl?api-version=2023-11-01-preview:
    post:
      tags:
        - Test Result
      operationId: TestResultsConsoleLogDownloadURL_Get
      description: Gets the download URL of the test execution console log file.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/PackageNameParameter'
        - $ref: '#/components/parameters/TestResultNameParameter'
      requestBody:
        description: Parameters supplied to the Test Result GetConsoleLogDownloadUrl operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestResultConsoleLogDownloadURLParameters'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadURLResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: TestResults_GetConsoleLogDownloadURL
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/emailEvents?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Email Event
      operationId: EmailEvents_List
      description: Lists all the email events of a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailEventListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/emailEvents/{emailEventResourceName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Email Event
      operationId: EmailEvents_Get
      description: Gets a email event of a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - name: emailEventResourceName
          in: path
          description: The resource name of an email event.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailEventResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/customerEvents?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Customer Notification Events
      operationId: CustomerEvents_ListByTestBaseAccount
      description: Lists all notification events subscribed under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/customerEvents/{customerEventName}?api-version=2023-11-01-preview:
    put:
      tags:
        - Test Base Customer Event
      operationId: CustomerEvents_Create
      description: Create or replace a Test Base Customer Event.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Parameters supplied to create a Test Base CustomerEvent.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerEventResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CustomerEventNameParameter'
      responses:
        '200':
          description: The Test Base Customer Event was successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventResource'
        '201':
          description: The Test Base Customer Event 'create' or 'update' operation was successfully enqueued. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Base Customer Event
      operationId: CustomerEvents_Delete
      description: Deletes a Test Base Customer Event.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CustomerEventNameParameter'
      responses:
        '200':
          description: The Test Base Customer Event 'delete' operation was completed successfully.
        '202':
          description: The Test Base Customer Event 'delete' operation was successfully enqueued. Follow the Location header to poll for final outcome.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The Test Base Customer Event 'delete' operation was completed successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Base Customer Event
      operationId: CustomerEvents_Get
      description: Gets a Test Base CustomerEvent.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CustomerEventNameParameter'
      responses:
        '200':
          description: The Test Base Customer Event was successfully found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.TestBase/operations?api-version=2023-11-01-preview:
    get:
      tags:
        - Operation
      description: Lists all of the available REST API operations of the Microsoft.TestBase provider.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Success. The response describes the list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/getFreeHourBalance?api-version=2023-11-01-preview:
    post:
      operationId: BillingHubServiceFreeHourBalance_Get
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingHubGetFreeHourBalanceResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      tags:
        - BillingHubService
      x-ms-original-operationId: BillingHubService_GetFreeHourBalance
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/getUsage?api-version=2023-11-01-preview:
    post:
      operationId: BillingHubServiceUsage_Get
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingHubGetUsageResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      requestBody:
        x-ms-requestBody-name: getUsageRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingHubGetUsageRequest'
      tags:
        - BillingHubService
      x-ms-original-operationId: BillingHubService_GetUsage
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/availableInplaceUpgradeOSs?api-version=2023-11-01-preview:
    get:
      tags:
        - Supported OSes
      operationId: AvailableInplaceUpgradeOS_List
      description: Lists all the available In-place Upgrade OSs to a package under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/OSUpdateTypeParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableInplaceUpgradeOSListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/availableInplaceUpgradeOSs/{availableInplaceUpgradeOSResourceName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Supported OSes
      operationId: AvailableInplaceUpgradeOS_Get
      description: Gets an available In-place Upgrade OS to run a package under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - name: availableInplaceUpgradeOSResourceName
          in: path
          description: The resource name of an Available In-place Upgrade OS.
          required: true
          x-ms-parameter-location: method
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9_]|(-{1,3}[A-Za-z0-9]))+$
            type: string
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableInplaceUpgradeOSResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/credentials?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Credential
      operationId: Credential_ListByTestBaseAccount
      description: Lists all the Credentials under a Test Base Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
      responses:
        '200':
          description: The operation is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/credentials/{credentialName}?api-version=2023-11-01-preview:
    put:
      tags:
        - Test Base Credential
      operationId: Credentials_Create
      description: Creates or replaces a Test Base Credential.
      requestBody:
        description: Parameters supplied to create a Test Base Credential.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CredentialNameParameter'
      responses:
        '200':
          description: The test base credential was successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResource'
        '201':
          description: Create a test base credential Resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Test Base Credential
      operationId: Credentials_Update
      description: Updates an existing test base credential.
      requestBody:
        description: Parameters supplied to create a test base credential.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CredentialNameParameter'
      responses:
        '200':
          description: Get the test base credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Base Credential
      operationId: Credentials_Delete
      description: Deletes an existing test base credential.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CredentialNameParameter'
      responses:
        '200':
          description: The test base credential was deleted successfully.
        '204':
          description: The test base credential was deleted successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Test Base Credential
      operationId: Credential_Get
      description: Gets a test base credential Resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/CredentialNameParameter'
      responses:
        '200':
          description: Get the test base Credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/actionRequests/{actionRequestName}?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Action Requests
      operationId: ActionRequests_Get
      description: Get the action request under the specified test base account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/ActionRequestName'
      responses:
        '200':
          description: Succeeded to get the action request under the specified test base account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRequest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Test Base Action Requests
      operationId: ActionRequests_Put
      description: Create (submit) an action request.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/ActionRequestName'
      requestBody:
        x-ms-requestBody-name: actionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRequest'
      responses:
        '200':
          description: Succeeded to update an action request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRequest'
        '201':
          description: Succeeded to create (submit) an action request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRequest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Test Base Action Requests
      operationId: ActionRequests_Delete
      description: Delete (revoke) an action request. Only requests in review can be deleted.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/ActionRequestName'
      responses:
        '200':
          description: Succeeded to delete the specified action request.
        '204':
          description: Succeeded to delete the specified action request.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/actionRequests?api-version=2023-11-01-preview:
    get:
      tags:
        - Test Base Action Requests
      operationId: ActionRequests_List
      description: List all action requests under the specified test base account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TestBaseAccountNameParameter'
        - $ref: '#/components/parameters/RequestTypeFilter'
        - $ref: '#/components/parameters/TopFilter'
      responses:
        '200':
          description: Succeeded to list all action requests under the specified test base account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRequests'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
