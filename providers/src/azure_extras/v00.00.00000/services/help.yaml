openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Help API
  description: By using Help API, you can get access to insight diagnostics, Troubleshooters, and other powerful solutions for your Azure resource and subscription. These solutions are curated by Azure engineers that will expedite your troubleshooting experiences across Billing, Subscription Management and technical issues.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Azure subscription ID.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: 'scope = resourceUri of affected resource.<br/> For example: /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read '
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    solutionId:
      name: solutionId
      in: path
      description: SolutionId is a unique id to identify a solution. You can retrieve the solution id using the Discovery api - https://learn.microsoft.com/en-us/rest/api/help/discovery-solution/list?view=rest-help-2023-09-01-preview&tabs=HTTP
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        type: string
    SolutionResourceNameParameter:
      name: solutionResourceName
      in: path
      description: Solution resource Name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ^[A-Za-z0-9-+@()_]+$
        type: string
    SimplifiedSolutionsResourceNameParameter:
      name: simplifiedSolutionsResourceName
      in: path
      description: Simplified Solutions Resource Name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ^[A-Za-z0-9-+@()_]+$
        type: string
    DiagnosticsResourceNameParameter:
      name: diagnosticsResourceName
      in: path
      description: Unique resource name for insight resources
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ^[A-Za-z0-9-+@()_]+$
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: '''ProblemClassificationId'' is a mandatory filter to get solutions ids. It also supports optional ''ResourceType'' and ''SolutionType'' filters. The [$filter](https://learn.microsoft.com/en-us/odata/webapi/first-odata-api#filter) supports only ''and'', ''or'' and ''eq'' operators. Example: $filter=ProblemClassificationId eq ''1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'''
      required: false
      allowReserved: true
      x-ms-parameter-location: method
      schema:
        type: string
    SkipTokenParameter:
      name: $skiptoken
      in: query
      description: Skiptoken is only used if a previous operation returned a partial result.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TroubleshooterNameParameter:
      name: troubleshooterName
      in: path
      description: Troubleshooter resource Name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ([A-Za-z0-9]+(-[A-Za-z0-9]+)+)
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: Response for whether the requested resource name is available or not.
      type: object
      properties:
        nameAvailable:
          description: Returns true or false depending on the availability of the name
          type: boolean
        reason:
          description: Reason for why value is not available. This field is returned if nameAvailable is false.
          type: string
        message:
          description: Gets an error message explaining the 'reason' value with more details. This field is returned iif nameAvailable is false.
          type: string
    DiagnosticInvocation:
      description: Solution Invocation with additional params needed for invocation.
      type: object
      properties:
        solutionId:
          description: Solution Id to invoke.
          type: string
        additionalParameters:
          description: Additional parameters required to invoke the solutionId.
          type: object
          additionalProperties:
            type: string
    DiagnosticResource:
      description: Diagnostic resource
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiagnosticResourceProperties'
          description: Diagnostic Resource properties.
      type: object
    DiagnosticResourceProperties:
      description: Diagnostic resource properties.
      type: object
      properties:
        globalParameters:
          description: Global parameters is an optional map which can be used to add key and  value to request body to improve the diagnostics results
          type: object
          additionalProperties:
            type: string
        insights:
          description: SolutionIds that are needed to be invoked.
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticInvocation'
          x-ms-identifiers:
            - solutionId
        acceptedAt:
          description: Diagnostic Request Accepted time.
          type: string
          readOnly: true
        provisioningState:
          description: Status of diagnostic provisioning.
          type: string
          readOnly: true
          enum:
            - Succeeded
            - PartialComplete
            - Failed
            - Running
            - Canceled
          x-ms-enum:
            name: DiagnosticProvisioningState
            modelAsString: true
            values:
              - value: Succeeded
                description: All Diagnostics in the Batch succeeded.
              - value: PartialComplete
                description: Some Diagnostics are still running or failed.
              - value: Failed
                description: All Diagnostics failed to run.
              - value: Running
                description: All Diagnostics are still running.
              - value: Canceled
                description: When Diagnostic request gets canceled.
        diagnostics:
          description: Array of Diagnostics.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Diagnostic'
          x-ms-identifiers:
            - solutionId
    Diagnostic:
      description: Properties returned with in an insight.
      type: object
      properties:
        solutionId:
          description: Solution Id
          type: string
        status:
          $ref: '#/components/schemas/DiagnosticStatus'
        insights:
          description: The problems (if any) detected by this insight.
          type: array
          items:
            $ref: '#/components/schemas/Insight'
          x-ms-identifiers: []
        error:
          $ref: '#/components/schemas/Error'
    DiagnosticStatus:
      description: Denotes the status of the diagnostic resource.
      type: string
      enum:
        - Failed
        - MissingInputs
        - Running
        - Succeeded
        - Timeout
      x-ms-enum:
        name: Status
        modelAsString: true
        values:
          - value: Failed
            description: Diagnostic creation failed.
          - value: MissingInputs
            description: Request is missing required inputs to run.
          - value: Running
            description: Diagnostic is still running.
          - value: Succeeded
            description: Diagnostic creation succeeded.
          - value: Timeout
            description: Diagnostic was timed out.
    Error:
      description: Error definition.
      type: object
      properties:
        code:
          description: Service specific error code which serves as the substatus for the HTTP error code.
          type: string
          readOnly: true
        type:
          description: Service specific error type which serves as additional context for the error herein.
          type: string
          readOnly: true
        message:
          description: Description of the error.
          type: string
          readOnly: true
        details:
          description: An array of additional nested error response info objects, as described by this contract.
          type: array
          items:
            $ref: '#/components/schemas/Error'
          x-ms-identifiers:
            - type
            - message
    DiscoveryResponse:
      description: Discovery response.
      type: object
      properties:
        value:
          description: The list of metadata.
          type: array
          items:
            $ref: '#/components/schemas/SolutionMetadataResource'
        nextLink:
          description: The link used to get the next page of solution metadata.
          type: string
    SolutionMetadataResource:
      description: Metadata resource
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Solutions'
          description: Solution metadata Resource properties.
      type: object
    Solutions:
      description: List of solutions
      type: object
      properties:
        solutions:
          description: List of metadata.
          type: array
          items:
            $ref: '#/components/schemas/SolutionMetadataProperties'
          x-ms-identifiers: []
    SolutionMetadataProperties:
      description: Metadata Properties
      type: object
      properties:
        solutionId:
          description: Solution Id.
          type: string
        solutionType:
          $ref: '#/components/schemas/SolutionType'
        description:
          description: A detailed description of solution.
          type: string
          readOnly: true
        requiredInputs:
          description: Required parameters for invoking this particular solution.
          type: array
          readOnly: true
          items:
            type: string
          x-ms-identifiers: []
    SolutionType:
      description: Solution Type.
      type: string
      readOnly: true
      enum:
        - Diagnostics
        - Solutions
        - Troubleshooters
        - SelfHelp
      x-ms-enum:
        name: SolutionType
        modelAsString: true
        values:
          - value: Diagnostics
            description: Diagnostics resource type.
          - value: Solutions
            description: Solutions resource type.
          - value: Troubleshooters
            description: Troubleshooters resource type.
          - value: SelfHelp
            description: SelfHelp resource type.
    TriggerCriterion:
      description: Solution request trigger criterion. SolutionId/ProblemClassificationId is the only supported trigger type for Solution PUT request. ReplacementKey is the only supported trigger type for Solution PATCH request.
      type: object
      properties:
        name:
          description: Trigger criterion name.
          type: string
          enum:
            - SolutionId
            - ProblemClassificationId
            - ReplacementKey
          x-ms-enum:
            name: name
            modelAsString: true
        value:
          description: Trigger criterion value.
          type: string
    SolutionPatchRequestBody:
      description: Solution PatchRequest body
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/SolutionResourceProperties'
          x-ms-client-flatten: true
      type: object
    SolutionWarmUpRequestBody:
      description: Solution WarmUpRequest body
      type: object
      x-ms-azure-resource: true
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
    SolutionResource:
      description: Solution response.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/SolutionResourceProperties'
          x-ms-client-flatten: true
      type: object
    SolutionResourceProperties:
      description: Solution result
      type: object
      properties:
        triggerCriteria:
          description: Solution request trigger criteria
          type: array
          items:
            $ref: '#/components/schemas/TriggerCriterion'
          x-ms-identifiers:
            - name
        parameters:
          description: Client input parameters to run Solution
          type: object
          additionalProperties:
            type: string
        solutionId:
          description: Solution Id to identify single solution.
          readOnly: true
          type: string
        provisioningState:
          description: Status of solution provisioning.
          type: string
          readOnly: true
          enum:
            - Succeeded
            - PartialComplete
            - Failed
            - Running
            - Canceled
          x-ms-enum:
            name: SolutionProvisioningState
            modelAsString: true
            values:
              - value: Succeeded
                description: All Solutions in the Batch succeeded.
              - value: PartialComplete
                description: Some Solutions are still running or failed.
              - value: Failed
                description: All Solutions failed to run.
              - value: Running
                description: All Solutions are still running.
              - value: Canceled
                description: When Solutions request gets canceled.
        title:
          description: The title.
          readOnly: true
          type: string
        content:
          description: The HTML content that needs to be rendered and shown to customer.
          readOnly: true
          type: string
        replacementMaps:
          $ref: '#/components/schemas/ReplacementMaps'
          readOnly: true
        sections:
          description: List of section object.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Section'
          x-ms-identifiers:
            - title
    Section:
      description: Part of the solution and are dividers in the solution rendering.
      type: object
      properties:
        title:
          description: Solution sections title.
          type: string
        content:
          description: Solution sections content.
          type: string
        replacementMaps:
          $ref: '#/components/schemas/ReplacementMaps'
    ReplacementMaps:
      description: Solution replacement maps.
      type: object
      properties:
        webResults:
          description: Solution AzureKB results
          type: array
          items:
            $ref: '#/components/schemas/WebResult'
          x-ms-identifiers: []
        diagnostics:
          description: Solution diagnostics results.
          type: array
          items:
            $ref: '#/components/schemas/SolutionsDiagnostic'
          x-ms-identifiers:
            - solutionId
        troubleshooters:
          description: Solutions Troubleshooters
          type: array
          items:
            $ref: '#/components/schemas/SolutionsTroubleshooters'
          x-ms-identifiers:
            - solutionId
        metricsBasedCharts:
          description: Solution metrics based charts
          type: array
          items:
            $ref: '#/components/schemas/MetricsBasedChart'
          x-ms-identifiers: []
        videos:
          description: Video solutions, which have the power to engage the customer by stimulating their senses
          type: array
          items:
            $ref: '#/components/schemas/Video'
          x-ms-identifiers: []
        videoGroups:
          description: Group of Videos
          type: array
          items:
            $ref: '#/components/schemas/VideoGroup'
          x-ms-identifiers: []
    WebResult:
      description: AzureKB web result
      type: object
      properties:
        replacementKey:
          description: Place holder used in HTML Content replace control with the content
          type: string
        searchResults:
          description: AzureKB search results
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          x-ms-identifiers:
            - solutionId
    SearchResult:
      description: Details of an AzureKB search result.
      type: object
      properties:
        solutionId:
          description: Unique id of the result.
          type: string
        content:
          description: Content of the search result.
          type: string
        title:
          description: Title of the search result.
          type: string
        confidence:
          description: Confidence of the search result.
          type: string
          enum:
            - Low
            - Medium
            - High
          x-ms-enum:
            name: confidence
            modelAsString: true
        source:
          description: Source of the search result.
          type: string
        resultType:
          description: Result type of the search result.
          type: string
          enum:
            - Community
            - Documentation
          x-ms-enum:
            name: resultType
            modelAsString: true
        rank:
          description: rank of the search result
          type: integer
          format: int32
        link:
          description: Link to the document.
          type: string
    SolutionsDiagnostic:
      description: Solutions Diagnostic
      type: object
      properties:
        solutionId:
          description: Solution Id to identify single Solutions Diagnostic
          type: string
        status:
          $ref: '#/components/schemas/Status'
        statusDetails:
          description: Details of the status
          type: string
        replacementKey:
          description: Place holder used in HTML Content replace control with the content
          type: string
        estimatedCompletionTime:
          description: Diagnostics estimated completion time in minutes
          type: string
        requiredParameters:
          description: Required parameters of this item
          type: array
          items:
            type: string
          x-ms-identifiers: []
        insights:
          description: Diagnostic insights
          type: array
          items:
            $ref: '#/components/schemas/Insight'
          x-ms-identifiers: []
    SolutionsTroubleshooters:
      description: Troubleshooters in Solutions
      type: object
      properties:
        solutionId:
          description: Solution Id to identify single Solutions Troubleshooter
          type: string
        title:
          description: Troubleshooter title
          type: string
        summary:
          description: Troubleshooter summary
          type: string
    Status:
      description: The status of the resource.
      type: string
      enum:
        - Failed
        - MissingInputs
        - Running
        - Succeeded
        - Timeout
      x-ms-enum:
        name: status
        modelAsString: true
    MetricsBasedChart:
      description: Solutions metrics based chart
      type: object
      properties:
        name:
          description: Chart name
          type: string
        aggregationType:
          description: Allowed values are Sum, Avg, Count, Min, Max. Default is Sum
          type: string
          enum:
            - Sum
            - Avg
            - Count
            - Min
            - Max
          x-ms-enum:
            name: aggregationType
            modelAsString: true
        timeSpanDuration:
          description: Time span duration
          type: string
        title:
          description: Chart title
          type: string
        filterGroup:
          $ref: '#/components/schemas/FilterGroup'
        replacementKey:
          description: Place holder used in HTML Content replace control with the content
          type: string
    FilterGroup:
      description: Filter group
      type: object
      properties:
        filter:
          description: List of filters
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          x-ms-identifiers: []
    Filter:
      description: Filter criterion
      type: object
      properties:
        name:
          description: Filter name
          type: string
        values:
          description: Filter values
          type: string
        operator:
          description: Filter operator
          type: string
    Video:
      description: Video detail
      properties:
        src:
          description: Link to the video
          type: string
        title:
          description: Title of the video
          type: string
        replacementKey:
          description: Place holder used in HTML Content replace control with the insight content
          type: string
      type: object
    VideoGroup:
      description: Video group detail
      type: object
      properties:
        videos:
          description: List of videos will be shown to customers
          type: array
          items:
            $ref: '#/components/schemas/VideoGroupVideo'
          x-ms-identifiers: []
        replacementKey:
          description: Place holder used in HTML Content replace control with the insight content
          type: string
    VideoGroupVideo:
      description: VideoGroup video detail
      type: object
      properties:
        src:
          description: Link to the video
          type: string
        title:
          description: Title of the video
          type: string
    SimplifiedSolutionsResource:
      description: Simplified Solutions response.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/SimplifiedSolutionsResourceProperties'
          x-ms-client-flatten: true
      type: object
    SimplifiedSolutionsResourceProperties:
      description: Simplified Solutions result
      type: object
      properties:
        solutionId:
          description: Solution Id to identify single Simplified Solution.
          type: string
        parameters:
          description: Client input parameters to run Simplified Solutions
          type: object
          additionalProperties:
            type: string
        title:
          description: The title.
          readOnly: true
          type: string
        appendix:
          description: Additional parameter response for Simplified Solutions
          readOnly: true
          type: object
          additionalProperties:
            type: string
        content:
          description: The HTML content that needs to be rendered and shown to customer.
          readOnly: true
          type: string
        provisioningState:
          description: Status of Simplified Solution provisioning.
          type: string
          readOnly: true
          enum:
            - Succeeded
            - PartialComplete
            - Failed
            - Running
            - Canceled
          x-ms-enum:
            name: SolutionProvisioningState
            modelAsString: true
            values:
              - value: Succeeded
                description: All Simplified Solutions in the Batch succeeded.
              - value: PartialComplete
                description: Some Simplified Solutions are still running or failed.
              - value: Failed
                description: All Simplified Solutions failed to run.
              - value: Running
                description: All Simplified Solutions are still running.
              - value: Canceled
                description: When Simplified Solutions request gets canceled.
    SolutionResourceSelfHelp:
      description: Self Help Solution response.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/SolutionsResourcePropertiesSelfHelp'
          x-ms-client-flatten: true
      type: object
    SolutionsResourcePropertiesSelfHelp:
      description: Solution result
      type: object
      properties:
        solutionId:
          description: SolutionId is a unique id to identify a solution. You can retrieve the solution id using the Discovery api - https://learn.microsoft.com/en-us/rest/api/help/discovery-solution/list?view=rest-help-2023-09-01-preview&tabs=HTTP
          readOnly: true
          type: string
        title:
          description: The title.
          readOnly: true
          type: string
        content:
          description: The HTML content that needs to be rendered and shown to customer.
          readOnly: true
          type: string
        replacementMaps:
          $ref: '#/components/schemas/ReplacementMapsSelfHelp'
          readOnly: true
        sections:
          description: List of section object.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SectionSelfHelp'
          x-ms-identifiers:
            - title
    SectionSelfHelp:
      description: Part of the solution and are dividers in the solution rendering.
      type: object
      properties:
        title:
          description: Solution sections title.
          type: string
        content:
          description: Solution sections content.
          type: string
        replacementMaps:
          $ref: '#/components/schemas/ReplacementMapsSelfHelp'
    ReplacementMapsSelfHelp:
      description: Solution replacement maps.
      type: object
      properties:
        webResults:
          description: Solution AzureKB results
          type: array
          items:
            $ref: '#/components/schemas/WebResult'
          x-ms-identifiers: []
        videos:
          description: Video solutions, which have the power to engage the customer by stimulating their senses
          type: array
          items:
            $ref: '#/components/schemas/Video'
          x-ms-identifiers: []
        videoGroups:
          description: Group of Videos
          type: array
          items:
            $ref: '#/components/schemas/VideoGroup'
          x-ms-identifiers: []
    ContinueRequestBody:
      description: Troubleshooter ContinueRequest body.
      type: object
      properties:
        stepId:
          description: Unique id of the result.
          type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/TroubleshooterResponse'
          x-ms-identifiers: []
    RestartTroubleshooterResponse:
      description: Troubleshooter restart response
      type: object
      properties:
        troubleshooterResourceName:
          description: Updated TroubleshooterResource Name .
          type: string
          readOnly: true
    TroubleshooterResource:
      description: Troubleshooter response.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/TroubleshooterInstanceProperties'
          x-ms-client-flatten: true
      type: object
    TroubleshooterInstanceProperties:
      description: Troubleshooter Instance properties.
      type: object
      properties:
        solutionId:
          description: Solution Id to identify single troubleshooter.
          type: string
        parameters:
          description: Client input parameters to run Troubleshooter Resource
          type: object
          additionalProperties:
            type: string
        provisioningState:
          description: Status of troubleshooter provisioning.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Running
            - AutoContinue
          x-ms-enum:
            name: TroubleshooterProvisioningState
            modelAsString: true
          readOnly: true
          required:
            - solutionId
            - parameters
        steps:
          description: List of step object.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Step'
          x-ms-identifiers:
            - id
    Step:
      description: Troubleshooter step
      type: object
      properties:
        id:
          description: Unique step id.
          type: string
        title:
          description: Step title.
          type: string
        description:
          description: Step description.
          type: string
        guidance:
          description: Get or sets the Step guidance.
          type: string
        executionStatus:
          description: Status of Troubleshooter Step execution.
          type: string
          enum:
            - Success
            - Running
            - Failed
            - Warning
          x-ms-enum:
            name: executionStatus
            modelAsString: true
            values:
              - value: Success
                description: Step execution succeeded.
              - value: Running
                description: Step execution running
              - value: Failed
                description: Step execution failed
              - value: Warning
                description: Step execution warning
        executionStatusDescription:
          description: This field has more detailed status description of the execution status.
          type: string
        type:
          description: Type of Troubleshooting step.
          type: string
          enum:
            - Decision
            - Solution
            - Insight
            - AutomatedCheck
            - Input
          x-ms-enum:
            name: type
            modelAsString: true
        isLastStep:
          description: is this last step of the workflow.
          type: boolean
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/StepInput'
          x-ms-identifiers:
            - questionId
        automatedCheckResults:
          $ref: '#/components/schemas/AutomatedCheckResult'
        insights:
          type: array
          items:
            $ref: '#/components/schemas/Insight'
          x-ms-identifiers:
            - id
        error:
          $ref: '#/components/schemas/ErrorDetail'
    AutomatedCheckResult:
      description: Only for AutomatedStep type
      type: object
      properties:
        version:
          description: Version for automated check result
          type: string
        status:
          description: Status for automated check result
          type: string
        result:
          description: Insight Article Content
          type: string
        type:
          description: Type of Result.
          type: string
          enum:
            - Success
            - Warning
            - Error
            - Information
          x-ms-enum:
            name: automatedCheckResultType
            modelAsString: true
    StepInput:
      description: Details of step input.
      type: object
      properties:
        questionId:
          description: Use Index as QuestionId.
          type: string
        questionType:
          $ref: '#/components/schemas/QuestionType'
        questionTitle:
          description: Question title
          type: string
        questionContent:
          description: User question content.
          type: string
        questionContentType:
          description: Default is Text.
          type: string
          enum:
            - Text
            - Html
            - Markdown
          x-ms-enum:
            name: questionContentType,
            modelAsString: true
        responseHint:
          description: Place holder text for response hints.
          type: string
        recommendedOption:
          description: Result of Automate step.
          type: string
        selectedOptionValue:
          description: Text of response that was selected.
          type: string
        responseValidationProperties:
          $ref: '#/components/schemas/ResponseValidationProperties'
        responseOptions:
          type: array
          items:
            $ref: '#/components/schemas/ResponseOption'
          x-ms-identifiers:
            - key
    ResponseValidationProperties:
      description: Troubleshooter step input response validation properties
      type: object
      properties:
        regex:
          description: Regex used for the input validation.
          type: string
        validationScope:
          description: Validation scope
          type: string
          enum:
            - None
            - URLFormat
            - GuidFormat
            - IpAddressFormat
            - NumberOnlyFormat
          x-ms-enum:
            name: validationScope
            modelAsString: true
        isRequired:
          description: Default True
          type: boolean
        validationErrorMessage:
          description: Validation Error Message.
          type: string
        maxLength:
          description: Max text input (open Ended Text).
          type: integer
          format: int64
    ResponseOption:
      description: The status of the resource.
      type: object
      properties:
        key:
          description: Unique string.
          type: string
        value:
          description: Option description
          type: string
    TroubleshooterResponse:
      description: User Response for Troubleshooter continue request
      type: object
      properties:
        questionId:
          description: id of the question.
          type: string
        questionType:
          $ref: '#/components/schemas/QuestionType'
        response:
          description: Response key for SingleInput. For Multi-line test/open ended question it is free form text
          type: string
    QuestionType:
      description: Type of Question
      type: string
      enum:
        - RadioButton
        - Dropdown
        - TextInput
        - MultiLineInfoBox
        - DateTimePicker
        - MultiSelect
      x-ms-enum:
        name: questionType
        modelAsString: true
        values:
          - value: RadioButton
            description: SingleChoice radio button
          - value: Dropdown
            description: SingleChoice dropdown.
          - value: TextInput
            description: Text Input
          - value: MultiLineInfoBox
            description: MultiLineInfoBox
          - value: DateTimePicker
            description: DateTime Picker
          - value: MultiSelect
            description: Multi Select
    Insight:
      description: Detailed insights(s) obtained via the invocation of an insight diagnostic
      type: object
      properties:
        id:
          description: Article id.
          type: string
        title:
          description: This insight's title.
          type: string
        results:
          description: Detailed result content.
          type: string
        importanceLevel:
          description: Importance level of the insight.
          type: string
          enum:
            - Critical
            - Warning
            - Information
          x-ms-enum:
            name: importanceLevel
            modelAsString: true
            values:
              - value: Critical
                description: A critical insight has been found after running the diagnostic.
              - value: Warning
                description: A warning insight has been found after running the diagnostic.
              - value: Information
                description: An information insight has been found after running the diagnostic.
    DiscoveryNlpRequest:
      description: Discover NLP request.
      type: object
      required:
        - issueSummary
      properties:
        issueSummary:
          description: Natural language description of the issue.
          type: string
        resourceId:
          description: ARM resource Id of the resource that is having the issue. Only applicable for Discovery Solution NLP Subscription Scope.
          type: string
        serviceId:
          description: ARM service Id of the service that is having the issue. For more information on service Id see https://learn.microsoft.com/rest/api/support/services/list?tabs=HTTP.
          type: string
        additionalContext:
          description: Additional information in the form of a string.
          type: string
    DiscoveryNlpResponse:
      description: Successfully fetched list of solution metadata.
      type: object
      properties:
        value:
          description: The list of solution metadata.
          type: array
          items:
            $ref: '#/components/schemas/SolutionNlpMetadataResource'
    SolutionNlpMetadataResource:
      description: Nlp Metadata resource
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NlpSolutions'
          description: Solution metadata Resource properties.
      type: object
    NlpSolutions:
      description: Nlp metadata.
      type: object
      properties:
        problemTitle:
          description: Title of the problem classification.
          type: string
        problemDescription:
          description: Description of the problem classification.
          type: string
        serviceId:
          description: Id of the service (https://learn.microsoft.com/en-us/rest/api/support/services?view=rest-support-2020-04-01) that may be used to create a support ticket.
          type: string
        problemClassificationId:
          description: Id of the ProblemClassification (https://learn.microsoft.com/en-us/rest/api/support/problem-classifications?view=rest-support-2020-04-01) that may be used to create a support ticket.
          type: string
        solutions:
          description: The list of solution metadata.
          type: array
          items:
            $ref: '#/components/schemas/SolutionMetadataProperties'
          x-ms-identifiers: []
        relatedServices:
          description: The set of services that are most likely related to the request. If relatedServices is included in the response then solutions may not be discovered until the client calls a second time specifying one of the service Ids in the relatedServices object.
          type: array
          items:
            $ref: '#/components/schemas/ClassificationService'
          x-ms-identifiers: []
    ClassificationService:
      description: Service Classification result object.
      type: object
      properties:
        serviceId:
          description: Azure resource Id of the service.
          type: string
          format: arm-id
          readOnly: true
        displayName:
          description: Localized name of the azure service.
          type: string
          readOnly: true
        resourceTypes:
          description: List of applicable ARM resource types for this service.
          type: array
          items:
            type: string
  x-stackQL-resources:
    operations:
      id: azure_extras.help.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Help~1operations~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    check_name_availability:
      id: azure_extras.help.check_name_availability
      name: check_name_availability
      title: check_name_availability
      methods:
        check_availability:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1checkNameAvailability~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    diagnostics:
      id: azure_extras.help.diagnostics
      name: diagnostics
      title: diagnostics
      methods:
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1diagnostics~1{diagnosticsResourceName}~1?api-version=2024-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1diagnostics~1{diagnosticsResourceName}~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/diagnostics/methods/create'
        update: []
        replace: []
        delete: []
    discovery_solution:
      id: azure_extras.help.discovery_solution
      name: discovery_solution
      title: discovery_solution
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Help~1discoverySolutions~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/discovery_solution/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    solution:
      id: azure_extras.help.solution
      name: solution
      title: solution
      methods:
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1solutions~1{solutionResourceName}~1?api-version=2024-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1solutions~1{solutionResourceName}~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1solutions~1{solutionResourceName}~1?api-version=2024-03-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        warm_up:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1solutions~1{solutionResourceName}~1warmup~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/solution/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/solution/methods/create'
        update: []
        replace: []
        delete: []
    simplified_solutions:
      id: azure_extras.help.simplified_solutions
      name: simplified_solutions
      title: simplified_solutions
      methods:
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1simplifiedSolutions~1{simplifiedSolutionsResourceName}~1?api-version=2024-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1simplifiedSolutions~1{simplifiedSolutionsResourceName}~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/simplified_solutions/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/simplified_solutions/methods/create'
        update: []
        replace: []
        delete: []
    troubleshooters:
      id: azure_extras.help.troubleshooters
      name: troubleshooters
      title: troubleshooters
      methods:
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1troubleshooters~1{troubleshooterName}~1?api-version=2024-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1troubleshooters~1{troubleshooterName}~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        continue:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1troubleshooters~1{troubleshooterName}~1continue~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        end:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1troubleshooters~1{troubleshooterName}~1end~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Help~1troubleshooters~1{troubleshooterName}~1restart~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/troubleshooters/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/troubleshooters/methods/create'
        update: []
        replace: []
        delete: []
    solution_self_help:
      id: azure_extras.help.solution_self_help
      name: solution_self_help
      title: solution_self_help
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Help~1selfHelp~1{solutionId}~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/solution_self_help/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    discovery_solution_nlp:
      id: azure_extras.help.discovery_solution_nlp
      name: discovery_solution_nlp
      title: discovery_solution_nlp
      methods:
        discover_solutions:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Help~1discoverSolutions~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        discover_solutions_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Help~1discoverSolutions~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vw_diagnostics:
      id: azure_extras.help.vw_diagnostics
      name: vw_diagnostics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.globalParameters') as global_parameters,
              JSON_EXTRACT(properties, '$.insights') as insights,
              JSON_EXTRACT(properties, '$.acceptedAt') as accepted_at,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.diagnostics') as diagnostics,
              scope,
              diagnosticsResourceName
              FROM azure_extras.help.diagnostics
              WHERE scope = 'replace-me' AND diagnosticsResourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.globalParameters') as global_parameters,
                JSON_EXTRACT(properties, '$.insights') as insights,
                JSON_EXTRACT(properties, '$.acceptedAt') as accepted_at,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.diagnostics') as diagnostics,
                scope,
                diagnosticsResourceName
                FROM azure_extras.help.diagnostics
                WHERE scope = 'replace-me' AND diagnosticsResourceName = 'replace-me';
    vw_solution:
      id: azure_extras.help.vw_solution
      name: vw_solution
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.triggerCriteria') as trigger_criteria,
              JSON_EXTRACT(properties, '$.parameters') as parameters,
              JSON_EXTRACT(properties, '$.solutionId') as solution_id,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.title') as title,
              JSON_EXTRACT(properties, '$.content') as content,
              JSON_EXTRACT(properties, '$.replacementMaps') as replacement_maps,
              JSON_EXTRACT(properties, '$.sections') as sections,
              scope,
              solutionResourceName
              FROM azure_extras.help.solution
              WHERE scope = 'replace-me' AND solutionResourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.triggerCriteria') as trigger_criteria,
                JSON_EXTRACT(properties, '$.parameters') as parameters,
                JSON_EXTRACT(properties, '$.solutionId') as solution_id,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.title') as title,
                JSON_EXTRACT(properties, '$.content') as content,
                JSON_EXTRACT(properties, '$.replacementMaps') as replacement_maps,
                JSON_EXTRACT(properties, '$.sections') as sections,
                scope,
                solutionResourceName
                FROM azure_extras.help.solution
                WHERE scope = 'replace-me' AND solutionResourceName = 'replace-me';
    vw_simplified_solutions:
      id: azure_extras.help.vw_simplified_solutions
      name: vw_simplified_solutions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.solutionId') as solution_id,
              JSON_EXTRACT(properties, '$.parameters') as parameters,
              JSON_EXTRACT(properties, '$.title') as title,
              JSON_EXTRACT(properties, '$.appendix') as appendix,
              JSON_EXTRACT(properties, '$.content') as content,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              scope,
              simplifiedSolutionsResourceName
              FROM azure_extras.help.simplified_solutions
              WHERE scope = 'replace-me' AND simplifiedSolutionsResourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.solutionId') as solution_id,
                JSON_EXTRACT(properties, '$.parameters') as parameters,
                JSON_EXTRACT(properties, '$.title') as title,
                JSON_EXTRACT(properties, '$.appendix') as appendix,
                JSON_EXTRACT(properties, '$.content') as content,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                scope,
                simplifiedSolutionsResourceName
                FROM azure_extras.help.simplified_solutions
                WHERE scope = 'replace-me' AND simplifiedSolutionsResourceName = 'replace-me';
    vw_troubleshooters:
      id: azure_extras.help.vw_troubleshooters
      name: vw_troubleshooters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.solutionId') as solution_id,
              JSON_EXTRACT(properties, '$.parameters') as parameters,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.steps') as steps,
              scope,
              troubleshooterName
              FROM azure_extras.help.troubleshooters
              WHERE scope = 'replace-me' AND troubleshooterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.solutionId') as solution_id,
                JSON_EXTRACT(properties, '$.parameters') as parameters,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.steps') as steps,
                scope,
                troubleshooterName
                FROM azure_extras.help.troubleshooters
                WHERE scope = 'replace-me' AND troubleshooterName = 'replace-me';
    vw_solution_self_help:
      id: azure_extras.help.vw_solution_self_help
      name: vw_solution_self_help
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.solutionId') as solution_id,
              JSON_EXTRACT(properties, '$.title') as title,
              JSON_EXTRACT(properties, '$.content') as content,
              JSON_EXTRACT(properties, '$.replacementMaps') as replacement_maps,
              JSON_EXTRACT(properties, '$.sections') as sections,
              solutionId
              FROM azure_extras.help.solution_self_help
              WHERE solutionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.solutionId') as solution_id,
                JSON_EXTRACT(properties, '$.title') as title,
                JSON_EXTRACT(properties, '$.content') as content,
                JSON_EXTRACT(properties, '$.replacementMaps') as replacement_maps,
                JSON_EXTRACT(properties, '$.sections') as sections,
                solutionId
                FROM azure_extras.help.solution_self_help
                WHERE solutionId = 'replace-me';
paths:
  /providers/Microsoft.Help/operations/?api-version=2024-03-01-preview:
    get:
      tags:
        - operations
      description: Returns list of operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Operation details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Help/checkNameAvailability/?api-version=2024-03-01-preview:
    post:
      tags:
        - checkNameAvailability
      description: This API is used to check the uniqueness of a resource name used for a diagnostic, troubleshooter or solutions
      operationId: CheckNameAvailability_CheckAvailability
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      requestBody:
        description: The required parameters for availability check.
        x-ms-requestBody-name: CheckNameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Response for the availability of the requested resource name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}/?api-version=2024-03-01-preview:
    put:
      tags:
        - diagnostics
      description: Creates a diagnostic for the specific resource using solutionId from discovery solutions. <br/>Diagnostics are powerful solutions that access product resources or other relevant data and provide the root cause of the issue and the steps to address the issue.<br/><br/>
      operationId: Diagnostics_Create
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DiagnosticsResourceNameParameter'
      requestBody:
        description: The required request body for this insightResource invocation.
        x-ms-requestBody-name: diagnosticResourceRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticResource'
      responses:
        '200':
          description: Create or Update diagnostics successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticResource'
        '201':
          description: Create or Update diagnostics successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - diagnostics
      description: Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.
      operationId: Diagnostics_Get
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DiagnosticsResourceNameParameter'
      responses:
        '200':
          description: Successful fetched insight diagnostic (may contain errors).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Help/discoverySolutions/?api-version=2024-03-01-preview:
    get:
      tags:
        - discoverySolutions
      description: 'Lists the relevant Azure Diagnostics, Solutions and Troubleshooters using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.<br/> Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. <br/><br/> Required Input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) <br/>Optional input: resourceUri OR resource Type <br/><br/> <b>Note: </b>  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.'
      operationId: DiscoverySolution_List
      parameters:
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/SkipTokenParameter'
      responses:
        '200':
          description: Successful fetched list of solution metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}/?api-version=2024-03-01-preview:
    put:
      tags:
        - solutions
      description: 'Creates a solution for the specific Azure resource or subscription using the inputs ‘solutionId and requiredInputs’ from discovery solutions. <br/> Azure solutions comprise a comprehensive library of self-help resources that have been thoughtfully curated by Azure engineers to aid customers in resolving typical troubleshooting issues. These solutions encompass: <br/> (1.) Dynamic and context-aware diagnostics, guided troubleshooting wizards, and data visualizations. <br/> (2.) Rich instructional video tutorials and illustrative diagrams and images. <br/> (3.) Thoughtfully assembled textual troubleshooting instructions. <br/> All these components are seamlessly converged into unified solutions tailored to address a specific support problem area.'
      operationId: Solution_Create
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/SolutionResourceNameParameter'
      requestBody:
        description: The required request body for this solution resource creation.
        x-ms-requestBody-name: solutionRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionResource'
      responses:
        '200':
          description: Create or Update solution invocation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResource'
        '201':
          description: Create or Update solution invocation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - solutions
      description: Get the solution using the applicable solutionResourceName while creating the solution.
      operationId: Solution_Get
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/SolutionResourceNameParameter'
      responses:
        '200':
          description: Successful fetched solution result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - solutions
      description: 'Update the requiredInputs or additional information needed to execute the solution '
      operationId: Solution_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/SolutionResourceNameParameter'
      requestBody:
        description: The required request body for updating a solution resource.
        x-ms-requestBody-name: solutionPatchRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionPatchRequestBody'
      responses:
        '200':
          description: Successful updated solution resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResource'
          headers:
            Location:
              schema:
                type: string
        '202':
          description: Successful updated solution resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResource'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Help/simplifiedSolutions/{simplifiedSolutionsResourceName}/?api-version=2024-03-01-preview:
    put:
      tags:
        - simplifiedSolutions
      description: Creates Simplified Solutions for an Azure subscription using 'solutionId' from Discovery Solutions as the input. <br/><br/> Simplified Solutions API makes the consumption of solutions APIs easier while still providing access to the same powerful solutions rendered in Solutions API. With Simplified Solutions, users don't have to worry about stitching together the article using replacement maps and can use the content in the API response to directly render as HTML content.<br/>
      operationId: SimplifiedSolutions_Create
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/SimplifiedSolutionsResourceNameParameter'
      requestBody:
        description: The required request body for simplified Solutions resource creation.
        x-ms-requestBody-name: simplifiedSolutionsRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplifiedSolutionsResource'
      responses:
        '200':
          description: Create solution invocation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplifiedSolutionsResource'
        '201':
          description: Create simplified Solutions invocation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplifiedSolutionsResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - simplifiedSolutions
      description: Get the simplified Solutions using the applicable solutionResourceName while creating the simplified Solutions.
      operationId: SimplifiedSolutions_Get
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/SimplifiedSolutionsResourceNameParameter'
      responses:
        '200':
          description: Successful fetched simplified Solutions result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplifiedSolutionsResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}/warmup/?api-version=2024-03-01-preview:
    post:
      tags:
        - solutions
      description: Warm up the solution resource by preloading asynchronous diagnostics results into cache
      operationId: Solution_WarmUp
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/SolutionResourceNameParameter'
      requestBody:
        description: The required request body for warming up a solution resource.
        x-ms-requestBody-name: solutionWarmUpRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionWarmUpRequestBody'
      responses:
        '204':
          description: Successfully warmed up the solution resource
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}/?api-version=2024-03-01-preview:
    put:
      tags:
        - troubleshooter
      description: Creates the specific troubleshooter action under a resource or subscription using the ‘solutionId’ and  ‘properties.parameters’ as the trigger. <br/> Azure Troubleshooters help with hard to classify issues, reducing the gap between customer observed problems and solutions by guiding the user effortlessly through the troubleshooting process. Each Troubleshooter flow represents a problem area within Azure and has a complex tree-like structure that addresses many root causes. These flows are prepared with the help of Subject Matter experts and customer support engineers by carefully considering previous support requests raised by customers. Troubleshooters terminate at a well curated solution based off of resource backend signals and customer manual selections.
      operationId: Troubleshooters_Create
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/TroubleshooterNameParameter'
      requestBody:
        description: The required request body for this Troubleshooter resource creation.
        x-ms-requestBody-name: createTroubleshooterRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TroubleshooterResource'
      responses:
        '200':
          description: Successful Troubleshooter update invocation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshooterResource'
        '201':
          description: Successful Troubleshooter create invocation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshooterResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - troubleshooter
      description: Gets troubleshooter instance result which includes the step status/result of the troubleshooter resource name that is being executed.<br/> Get API is used to retrieve the result of a Troubleshooter instance, which includes the status and result of each step in the Troubleshooter workflow. This API requires the Troubleshooter resource name that was created using the Create API.
      operationId: Troubleshooters_Get
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/TroubleshooterNameParameter'
      responses:
        '200':
          description: Successful fetched Troubleshooter instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshooterResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}/continue/?api-version=2024-03-01-preview:
    post:
      tags:
        - troubleshooter
      description: Uses ‘stepId’ and ‘responses’ as the trigger to continue the troubleshooting steps for the respective troubleshooter resource name. <br/>Continue API is used to provide inputs that are required for the specific troubleshooter to progress into the next step in the process. This API is used after the Troubleshooter has been created using the Create API.
      operationId: Troubleshooters_Continue
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/TroubleshooterNameParameter'
      requestBody:
        description: The required request body for going to next step in Troubleshooter resource.
        x-ms-requestBody-name: continueRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinueRequestBody'
      responses:
        '204':
          description: Successfully Continued to next step
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}/end/?api-version=2024-03-01-preview:
    post:
      tags:
        - troubleshooter
      description: Ends the troubleshooter action
      operationId: Troubleshooters_End
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/TroubleshooterNameParameter'
      responses:
        '204':
          description: Successfully ended the Troubleshooter instance
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}/restart/?api-version=2024-03-01-preview:
    post:
      tags:
        - troubleshooter
      description: Restarts the troubleshooter API using applicable troubleshooter resource name as the input.<br/> It returns new resource name which should be used in subsequent request. The old resource name is obsolete after this API is invoked.
      operationId: Troubleshooters_Restart
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/TroubleshooterNameParameter'
      responses:
        '200':
          description: Successfully restarted troubleshooter instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestartTroubleshooterResponse'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Help/selfHelp/{solutionId}/?api-version=2024-03-01-preview:
    get:
      tags:
        - SolutionSelfHelp
      description: Gets Self Help Solutions for a given solutionId. Self Help Solutions consist of rich instructional video tutorials, links and guides to public documentation related to a specific problem that enables users to troubleshoot Azure issues.
      operationId: SolutionSelfHelp_Get
      parameters:
        - $ref: '#/components/parameters/solutionId'
      responses:
        '200':
          description: Successful fetched solution result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResourceSelfHelp'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Help/discoverSolutions/?api-version=2024-03-01-preview:
    post:
      tags:
        - discoverSolutions
      description: Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary.
      operationId: DiscoverySolutionNLP_DiscoverSolutions
      parameters: []
      requestBody:
        description: Request body for discovering solutions using NLP.
        x-ms-requestBody-name: discoverSolutionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryNlpRequest'
      responses:
        '200':
          description: Successful fetched list of solution metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryNlpResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Help/discoverSolutions/?api-version=2024-03-01-preview:
    post:
      tags:
        - discoverSolutions
      description: Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary and subscription.
      operationId: DiscoverySolutionNLP_DiscoverSolutionsBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Request body for discovering solutions using NLP.
        x-ms-requestBody-name: discoverSolutionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryNlpRequest'
      responses:
        '200':
          description: Successful fetched list of solution metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryNlpResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
