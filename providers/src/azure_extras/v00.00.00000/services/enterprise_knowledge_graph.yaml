openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Enterprise Knowledge Graph Service
  description: Azure Enterprise Knowledge Graph Service is a platform for creating knowledge graphs at scale.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the EnterpriseKnowledgeGraph resource group in the user subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 64
        minLength: 2
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        type: string
    resourceNameParameter:
      name: resourceName
      in: path
      description: The name of the EnterpriseKnowledgeGraph resource.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 64
        minLength: 2
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Azure Subscription ID.
      required: true
      schema:
        type: string
    apiVersionParameter:
      name: api-version
      in: query
      description: Version of the API to be used with the client request.
      required: false
      schema:
        type: string
  schemas:
    Resource:
      description: Azure resource
      x-ms-azure-resource: true
      properties:
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
      type: object
    Sku:
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
          description: The sku name
      required:
        - name
      description: The SKU of the EnterpriseKnowledgeGraph service account.
      type: object
    SkuName:
      type: string
      description: The name of SKU.
      enum:
        - F0
        - S1
      x-ms-enum:
        name: SkuName
        modelAsString: true
    EnterpriseKnowledgeGraph:
      description: EnterpriseKnowledgeGraph resource definition
      properties:
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
        properties:
          $ref: '#/components/schemas/EnterpriseKnowledgeGraphProperties'
          description: The set of properties specific to EnterpriseKnowledgeGraph resource
      type: object
    EnterpriseKnowledgeGraphProperties:
      properties:
        description:
          type: string
          description: The description of the EnterpriseKnowledgeGraph
        metadata:
          description: Specifies the metadata  of the resource.
          type: object
        provisioningState:
          type: string
          description: The state of EnterpriseKnowledgeGraph provisioning
          enum:
            - Creating
            - Deleting
            - Failed
            - Succeeded
      description: The parameters to provide for the EnterpriseKnowledgeGraph.
      type: object
    EnterpriseKnowledgeGraphResponseList:
      properties:
        nextLink:
          description: The link used to get the next page of EnterpriseKnowledgeGraph service resources.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseKnowledgeGraph'
          description: Gets the list of EnterpriseKnowledgeGraph service results and their properties.
      description: The list of  EnterpriseKnowledgeGraph service operation response.
      type: object
    Error:
      properties:
        error:
          $ref: '#/components/schemas/ErrorBody'
          description: The error body.
      description: EnterpriseKnowledgeGraph Service error object.
      type: object
    ErrorBody:
      properties:
        code:
          type: string
          description: error code
        message:
          type: string
          description: error message
      description: EnterpriseKnowledgeGraph Service error body.
      required:
        - code
        - message
      type: object
    OperationEntityListResult:
      description: The list of EnterpriseKnowledgeGraph service operation response.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of operations.
          type: array
          items:
            $ref: '#/components/schemas/OperationEntity'
    OperationEntity:
      description: The operations supported by EnterpriseKnowledgeGraph Service Management.
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        display:
          $ref: '#/components/schemas/OperationDisplayInfo'
          description: The operation supported by EnterpriseKnowledgeGraph Service Management.
        origin:
          description: The origin of the operation.
          type: string
        properties:
          description: Additional properties.
          type: object
      type: object
    OperationDisplayInfo:
      description: The operation supported by EnterpriseKnowledgeGraph Service Management.
      type: object
      properties:
        description:
          description: The description of the operation.
          type: string
        operation:
          description: The action that users can perform, based on their permission level.
          type: string
        provider:
          description: 'Service provider: Microsoft EnterpriseKnowledgeGraph Service.'
          type: string
        resource:
          description: Resource on which the operation is performed.
          type: string
  x-stackQL-resources:
    enterprise_knowledge_graphs:
      id: azure_extras.enterprise_knowledge_graph.enterprise_knowledge_graphs
      name: enterprise_knowledge_graphs
      title: enterprise_knowledge_graphs
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EnterpriseKnowledgeGraph~1services~1{resourceName}?api-version=2018-12-03/put'
            operationId: EnterpriseKnowledgeGraph_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnterpriseKnowledgeGraph
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EnterpriseKnowledgeGraph~1services~1{resourceName}?api-version=2018-12-03/patch'
            operationId: EnterpriseKnowledgeGraph_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnterpriseKnowledgeGraph
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EnterpriseKnowledgeGraph~1services~1{resourceName}?api-version=2018-12-03/delete'
            operationId: EnterpriseKnowledgeGraph_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EnterpriseKnowledgeGraph~1services~1{resourceName}?api-version=2018-12-03/get'
            operationId: EnterpriseKnowledgeGraph_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnterpriseKnowledgeGraph
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EnterpriseKnowledgeGraph~1services?api-version=2018-12-03/get'
            operationId: EnterpriseKnowledgeGraph_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnterpriseKnowledgeGraphResponseList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EnterpriseKnowledgeGraph~1services?api-version=2018-12-03/get'
            operationId: EnterpriseKnowledgeGraph_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnterpriseKnowledgeGraphResponseList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/enterprise_knowledge_graphs/methods/get'
          - $ref: '#/components/x-stackQL-resources/enterprise_knowledge_graphs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/enterprise_knowledge_graphs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/enterprise_knowledge_graphs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/enterprise_knowledge_graphs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/enterprise_knowledge_graphs/methods/delete'
    operations:
      id: azure_extras.enterprise_knowledge_graph.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EnterpriseKnowledgeGraph~1operations?api-version=2018-12-03/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationEntityListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_enterprise_knowledge_graphs:
      id: azure_extras.enterprise_knowledge_graph.vw_enterprise_knowledge_graphs
      name: vw_enterprise_knowledge_graphs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              sku as sku,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              resourceName
              FROM azure_extras.enterprise_knowledge_graph.enterprise_knowledge_graphs
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                sku as sku,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                resourceName
                FROM azure_extras.enterprise_knowledge_graph.enterprise_knowledge_graphs
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EnterpriseKnowledgeGraph/services/{resourceName}?api-version=2018-12-03:
    put:
      tags:
        - EnterpriseKnowledgeGraph
      description: Creates a EnterpriseKnowledgeGraph Service. EnterpriseKnowledgeGraph Service is a resource group wide resource type.
      operationId: EnterpriseKnowledgeGraph_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created EnterpriseKnowledgeGraph.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseKnowledgeGraph'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseKnowledgeGraph'
        '201':
          description: If resource is created successfully, the service should return 201 (Creating). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseKnowledgeGraph'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - EnterpriseKnowledgeGraph
      description: Updates a EnterpriseKnowledgeGraph Service
      operationId: EnterpriseKnowledgeGraph_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created EnterpriseKnowledgeGraph.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseKnowledgeGraph'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseKnowledgeGraph'
        '201':
          description: If resource is updated successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseKnowledgeGraph'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - EnterpriseKnowledgeGraph
      description: 'Deletes a EnterpriseKnowledgeGraph Service from the resource group. '
      operationId: EnterpriseKnowledgeGraph_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: A 200 (OK) should be returned if the object exists and was deleted successfully;
        '204':
          description: a 204 (NoContent) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - EnterpriseKnowledgeGraph
      description: Returns a EnterpriseKnowledgeGraph service specified by the parameters.
      operationId: EnterpriseKnowledgeGraph_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseKnowledgeGraph'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EnterpriseKnowledgeGraph/services?api-version=2018-12-03:
    get:
      tags:
        - EnterpriseKnowledgeGraph
      description: Returns all the resources of a particular type belonging to a resource group
      operationId: EnterpriseKnowledgeGraph_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.
            The nextLink should be implemented using following query parameters:
            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.
            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.
            Implementation details:
            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. 
            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. 
            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseKnowledgeGraphResponseList'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.EnterpriseKnowledgeGraph/services?api-version=2018-12-03:
    get:
      tags:
        - EnterpriseKnowledgeGraph
      description: Returns all the resources of a particular type belonging to a subscription.
      operationId: EnterpriseKnowledgeGraph_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.
            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseKnowledgeGraphResponseList'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.EnterpriseKnowledgeGraph/operations?api-version=2018-12-03:
    get:
      tags:
        - Operations
      description: Lists all the available EnterpriseKnowledgeGraph services operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationEntityListResult'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
