openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Trusted Signing
  description: Trusted Signing (formerly Azure Code Signing) is a fully managed service that facilitates app signing for developers.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    AccountSku:
      type: object
      description: SKU of the trusted signing account.
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
          description: Name of the SKU.
      required:
        - name
    Certificate:
      type: object
      description: Properties of the certificate.
      properties:
        serialNumber:
          type: string
          description: Serial number of the certificate.
        subjectName:
          type: string
          description: Subject name of the certificate.
        thumbprint:
          type: string
          description: Thumbprint of the certificate.
        createdDate:
          type: string
          description: Certificate created date.
        expiryDate:
          type: string
          description: Certificate expiry date.
        status:
          $ref: '#/components/schemas/CertificateStatus'
          description: Status of the certificate.
        revocation:
          $ref: '#/components/schemas/Revocation'
          description: Revocations history of a certificate.
          x-ms-client-flatten: true
    CertificateProfile:
      description: Certificate profile resource.
      properties:
        properties:
          $ref: '#/components/schemas/CertificateProfileProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    CertificateProfileListResult:
      type: object
      description: The response of a CertificateProfile list operation.
      properties:
        value:
          type: array
          description: The CertificateProfile items on this page
          items:
            $ref: '#/components/schemas/CertificateProfile'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    CertificateProfileProperties:
      type: object
      description: Properties of the certificate profile.
      properties:
        profileType:
          $ref: '#/components/schemas/ProfileType'
          description: Profile type of the certificate.
        commonName:
          type: string
          description: Used as CN in the certificate subject name.
          readOnly: true
        organization:
          type: string
          description: Used as O in the certificate subject name.
          readOnly: true
        organizationUnit:
          type: string
          description: Used as OU in the private trust certificate subject name.
          readOnly: true
        streetAddress:
          type: string
          description: Used as STREET in the certificate subject name.
          readOnly: true
        includeStreetAddress:
          type: boolean
          description: Whether to include STREET in the certificate subject name.
          default: false
        city:
          type: string
          description: Used as L in the certificate subject name.
          readOnly: true
        includeCity:
          type: boolean
          description: Whether to include L in the certificate subject name. Applicable only for private trust, private trust ci profile types
          default: false
        state:
          type: string
          description: Used as S in the certificate subject name.
          readOnly: true
        includeState:
          type: boolean
          description: Whether to include S in the certificate subject name. Applicable only for private trust, private trust ci profile types
          default: false
        country:
          type: string
          description: Used as C in the certificate subject name.
          readOnly: true
        includeCountry:
          type: boolean
          description: Whether to include C in the certificate subject name. Applicable only for private trust, private trust ci profile types
          default: false
        postalCode:
          type: string
          description: Used as PC in the certificate subject name.
          readOnly: true
        includePostalCode:
          type: boolean
          description: Whether to include PC in the certificate subject name.
          default: false
        enhancedKeyUsage:
          type: string
          description: Enhanced key usage of the certificate.
          readOnly: true
        identityValidationId:
          type: string
          description: Identity validation id used for the certificate subject name.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Status of the current operation on certificate profile.
          readOnly: true
        status:
          $ref: '#/components/schemas/CertificateProfileStatus'
          description: Status of the certificate profile.
          readOnly: true
        certificates:
          type: array
          description: List of renewed certificates.
          items:
            $ref: '#/components/schemas/Certificate'
          readOnly: true
          x-ms-client-flatten: true
          x-ms-identifiers: []
      required:
        - profileType
    CertificateProfileStatus:
      type: string
      description: Status of the certificate profiles.
      enum:
        - Active
        - Disabled
        - Suspended
      x-ms-enum:
        name: CertificateProfileStatus
        modelAsString: true
        values:
          - name: Active
            value: Active
            description: The certificate profile is active.
          - name: Disabled
            value: Disabled
            description: The certificate profile is disabled.
          - name: Suspended
            value: Suspended
            description: The certificate profile is suspended.
    CertificateStatus:
      type: string
      description: Status of the certificate
      enum:
        - Active
        - Expired
        - Revoked
      x-ms-enum:
        name: CertificateStatus
        modelAsString: true
        values:
          - name: Active
            value: Active
            description: The certificate is active.
          - name: Expired
            value: Expired
            description: The certificate is expired.
          - name: Revoked
            value: Revoked
            description: The certificate is revoked.
    CheckNameAvailability:
      type: object
      description: The parameters used to check the availability of the trusted signing account name.
      properties:
        name:
          type: string
          description: Trusted signing account name.
      required:
        - name
    CheckNameAvailabilityResult:
      type: object
      description: The CheckNameAvailability operation response.
      properties:
        nameAvailable:
          type: boolean
          description: A boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.
          readOnly: true
        reason:
          $ref: '#/components/schemas/NameUnavailabilityReason'
          description: The reason that a trusted signing account name could not be used. The Reason element is only returned if nameAvailable is false.
          readOnly: true
        message:
          type: string
          description: An error message explaining the Reason value in more detail.
          readOnly: true
    CodeSigningAccount:
      description: Trusted signing account resource.
      properties:
        properties:
          $ref: '#/components/schemas/CodeSigningAccountProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    CodeSigningAccountListResult:
      type: object
      description: The response of a CodeSigningAccount list operation.
      properties:
        value:
          type: array
          description: The CodeSigningAccount items on this page
          items:
            $ref: '#/components/schemas/CodeSigningAccount'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    CodeSigningAccountPatch:
      description: Parameters for creating or updating a trusted signing account.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/CodeSigningAccountPatchProperties'
          description: Properties of the trusted signing account.
          x-ms-client-flatten: true
      type: object
    CodeSigningAccountPatchProperties:
      type: object
      description: Properties of the trusted signing account.
      properties:
        sku:
          $ref: '#/components/schemas/AccountSku'
          description: SKU of the trusted signing account.
    CodeSigningAccountProperties:
      type: object
      description: Properties of the trusted signing account.
      properties:
        accountUri:
          type: string
          description: The URI of the trusted signing account which is used during signing files.
          readOnly: true
        sku:
          $ref: '#/components/schemas/AccountSku'
          description: SKU of the trusted signing account.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Status of the current operation on trusted signing account.
          readOnly: true
    NameUnavailabilityReason:
      type: string
      description: The reason that a trusted signing account name could not be used. The Reason element is only returned if nameAvailable is false.
      enum:
        - AccountNameInvalid
        - AlreadyExists
      x-ms-enum:
        name: NameUnavailabilityReason
        modelAsString: true
        values:
          - name: AccountNameInvalid
            value: AccountNameInvalid
            description: Account name is invalid
          - name: AlreadyExists
            value: AlreadyExists
            description: Account name already exists
    ProfileType:
      type: string
      description: Type of the certificate
      enum:
        - PublicTrust
        - PrivateTrust
        - PrivateTrustCIPolicy
        - VBSEnclave
        - PublicTrustTest
      x-ms-enum:
        name: ProfileType
        modelAsString: true
        values:
          - name: PublicTrust
            value: PublicTrust
            description: Used for signing files which are distributed publicly.
          - name: PrivateTrust
            value: PrivateTrust
            description: Used for signing files which are distributed internally within organization or group boundary.
          - name: PrivateTrustCIPolicy
            value: PrivateTrustCIPolicy
            description: Used for signing CI policy files.
          - name: VBSEnclave
            value: VBSEnclave
            description: Used for signing files which are run in secure vbs enclave.
          - name: PublicTrustTest
            value: PublicTrustTest
            description: Used for signing files for testing purpose.
    ProvisioningState:
      type: string
      description: The status of the current operation.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Updating
        - Deleting
        - Accepted
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Updating
            value: Updating
            description: Updating in progress.
          - name: Deleting
            value: Deleting
            description: Deletion in progress.
          - name: Accepted
            value: Accepted
            description: Resource creation started.
      readOnly: true
    Revocation:
      type: object
      description: Revocation details of the certificate.
      properties:
        requestedAt:
          type: string
          format: date-time
          description: The timestamp when the revocation is requested.
        effectiveAt:
          type: string
          format: date-time
          description: The timestamp when the revocation is effective.
        reason:
          type: string
          description: Reason for revocation.
        remarks:
          type: string
          description: Remarks for the revocation.
        status:
          $ref: '#/components/schemas/RevocationStatus'
          description: Status of the revocation.
        failureReason:
          type: string
          description: Reason for the revocation failure.
    RevocationStatus:
      type: string
      description: Revocation status of the certificate.
      enum:
        - Succeeded
        - InProgress
        - Failed
      x-ms-enum:
        name: RevocationStatus
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Certificate revocation succeeded.
          - name: InProgress
            value: InProgress
            description: Certificate revocation is in progress.
          - name: Failed
            value: Failed
            description: Certificate revocation failed.
      readOnly: true
    RevokeCertificate:
      type: object
      description: Defines the certificate revocation properties.
      properties:
        serialNumber:
          type: string
          description: Serial number of the certificate.
        thumbprint:
          type: string
          description: Thumbprint of the certificate.
        effectiveAt:
          type: string
          format: date-time
          description: The timestamp when the revocation is effective.
        reason:
          type: string
          description: Reason for the revocation.
        remarks:
          type: string
          description: Remarks for the revocation.
      required:
        - serialNumber
        - thumbprint
        - effectiveAt
        - reason
    SkuName:
      type: string
      description: Name of the sku.
      enum:
        - Basic
        - Premium
      x-ms-enum:
        name: SkuName
        modelAsString: true
        values:
          - name: Basic
            value: Basic
            description: Basic sku.
          - name: Premium
            value: Premium
            description: Premium sku.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure_extras.codesigning.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.CodeSigning~1operations~1?api-version=2024-02-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    code_signing_accounts:
      id: azure_extras.codesigning.code_signing_accounts
      name: code_signing_accounts
      title: code_signing_accounts
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CodeSigning~1checkNameAvailability~1?api-version=2024-02-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1?api-version=2024-02-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1?api-version=2024-02-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1?api-version=2024-02-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1?api-version=2024-02-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1?api-version=2024-02-05-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1?api-version=2024-02-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/code_signing_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/code_signing_accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/code_signing_accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/code_signing_accounts/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/code_signing_accounts/methods/delete'
    certificate_profiles:
      id: azure_extras.codesigning.certificate_profiles
      name: certificate_profiles
      title: certificate_profiles
      methods:
        list_by_code_signing_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1certificateProfiles~1?api-version=2024-02-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1certificateProfiles~1{profileName}~1?api-version=2024-02-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1certificateProfiles~1{profileName}~1?api-version=2024-02-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1certificateProfiles~1{profileName}~1?api-version=2024-02-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_certificate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CodeSigning~1codeSigningAccounts~1{accountName}~1certificateProfiles~1{profileName}~1revokeCertificate~1?api-version=2024-02-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/certificate_profiles/methods/list_by_code_signing_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate_profiles/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate_profiles/methods/delete'
paths:
  /providers/Microsoft.CodeSigning/operations/?api-version=2024-02-05-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.CodeSigning/checkNameAvailability/?api-version=2024-02-05-preview:
    post:
      operationId: CodeSigningAccounts_CheckNameAvailability
      tags:
        - CodeSigningAccounts
      description: Checks that the trusted signing account name is valid and is not already in use.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The CheckAvailability request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailability'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.CodeSigning/codeSigningAccounts/?api-version=2024-02-05-preview:
    get:
      operationId: CodeSigningAccounts_ListBySubscription
      tags:
        - CodeSigningAccounts
      description: Lists trusted signing accounts within a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSigningAccountListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CodeSigning/codeSigningAccounts/?api-version=2024-02-05-preview:
    get:
      operationId: CodeSigningAccounts_ListByResourceGroup
      tags:
        - CodeSigningAccounts
      description: Lists trusted signing accounts within a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSigningAccountListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CodeSigning/codeSigningAccounts/{accountName}/?api-version=2024-02-05-preview:
    get:
      operationId: CodeSigningAccounts_Get
      tags:
        - CodeSigningAccounts
      description: Get a trusted Signing Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSigningAccount'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: CodeSigningAccounts_Create
      tags:
        - CodeSigningAccounts
      description: Create a trusted Signing Account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      requestBody:
        description: Parameters to create the trusted signing account
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeSigningAccount'
      responses:
        '200':
          description: Resource 'CodeSigningAccount' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSigningAccount'
        '201':
          description: Resource 'CodeSigningAccount' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSigningAccount'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: CodeSigningAccounts_Update
      tags:
        - CodeSigningAccounts
      description: Update a trusted signing account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      requestBody:
        description: Parameters supplied to update the trusted signing account
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeSigningAccountPatch'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSigningAccount'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: CodeSigningAccounts_Delete
      tags:
        - CodeSigningAccounts
      description: Delete a trusted signing account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CodeSigning/codeSigningAccounts/{accountName}/certificateProfiles/?api-version=2024-02-05-preview:
    get:
      operationId: CertificateProfiles_ListByCodeSigningAccount
      tags:
        - CertificateProfiles
      description: List certificate profiles under a trusted signing account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateProfileListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CodeSigning/codeSigningAccounts/{accountName}/certificateProfiles/{profileName}/?api-version=2024-02-05-preview:
    get:
      operationId: CertificateProfiles_Get
      tags:
        - CertificateProfiles
      description: Get details of a certificate profile.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
        - name: profileName
          in: path
          description: Certificate profile name.
          required: true
          schema:
            pattern: ^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: CertificateProfiles_Create
      tags:
        - CertificateProfiles
      description: Create a certificate profile.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
        - name: profileName
          in: path
          description: Certificate profile name.
          required: true
          schema:
            pattern: ^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      requestBody:
        description: Parameters to create the certificate profile
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateProfile'
      responses:
        '200':
          description: Resource 'CertificateProfile' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateProfile'
        '201':
          description: Resource 'CertificateProfile' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateProfile'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: CertificateProfiles_Delete
      tags:
        - CertificateProfiles
      description: Delete a certificate profile.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
        - name: profileName
          in: path
          description: Certificate profile name.
          required: true
          schema:
            pattern: ^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CodeSigning/codeSigningAccounts/{accountName}/certificateProfiles/{profileName}/revokeCertificate/?api-version=2024-02-05-preview:
    post:
      operationId: CertificateProfiles_RevokeCertificate
      tags:
        - CertificateProfiles
      description: Revoke a certificate under a certificate profile.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: Trusted Signing account name.
          required: true
          schema:
            pattern: ^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
        - name: profileName
          in: path
          description: Certificate profile name.
          required: true
          schema:
            pattern: ^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
            type: string
      requestBody:
        description: Parameters to revoke the certificate profile
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeCertificate'
      responses:
        '204':
          description: Action completed successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
