openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Developer Hub Service Client (Microsoft.DevHub)
  description: The AKS Developer Hub Service Client
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-09-22-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ManagedClusterParameter:
      name: managedClusterResource
      in: query
      description: The ManagedCluster resource associated with the workflows.
      required: false
      x-ms-parameter-location: client
      schema:
        type: string
    WorkflowNameParameter:
      name: workflowName
      in: path
      description: The name of the workflow resource.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 63
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$
        type: string
    GitHubOAuthCodeParameter:
      name: code
      in: query
      description: The code response from authenticating the GitHub App.
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    GitHubOAuthStateParameter:
      name: state
      in: query
      description: The state response from authenticating the GitHub App.
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Workflow:
      title: Workflow
      description: Resource representation of a workflow
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Properties of a workflow.
          $ref: '#/components/schemas/WorkflowProperties'
          x-ms-client-flatten: true
      type: object
    WorkflowProperties:
      type: object
      description: Workflow properties
      properties:
        githubWorkflowProfile:
          description: Profile of a github workflow.
          $ref: '#/components/schemas/GitHubWorkflowProfile'
          x-ms-client-flatten: true
    GitHubWorkflowProfile:
      type: object
      description: GitHub Workflow Profile
      properties:
        repositoryOwner:
          type: string
          title: The owner of the repository the workflow is associated with.
          description: Repository Owner
        repositoryName:
          type: string
          title: The name of the repository the workflow is associated with.
          description: Repository Name
        branchName:
          type: string
          title: The name of the branch the workflow is associated with.
          description: Repository Branch Name
        dockerfile:
          type: string
          title: Path to Dockerfile within the repository.
          description: Path to the Dockerfile within the repository.
        dockerBuildContext:
          type: string
          title: Path to Dockerfile Build Context within the repository.
          description: Path to Dockerfile Build Context within the repository.
        deploymentProperties:
          $ref: '#/components/schemas/DeploymentProperties'
        namespace:
          type: string
          description: Kubernetes namespace the application is deployed to.
          title: The Kubernetes namespace the application is deployed to
        acr:
          $ref: '#/components/schemas/ACR'
        oidcCredentials:
          type: object
          description: The fields needed for OIDC with GitHub.
          properties:
            azureClientId:
              type: string
              description: Azure Application Client ID
            azureTenantId:
              type: string
              description: Azure Directory (tenant) ID
        aksResourceId:
          type: string
          description: The Azure Kubernetes Cluster Resource the application will be deployed to.
          title: The Azure Kubernetes Managed Cluster resource.
        prURL:
          type: string
          description: The URL to the Pull Request submitted against the users repository.
          readOnly: true
        pullNumber:
          type: integer
          format: int32
          readOnly: true
          description: The number associated with the submitted pull request.
        prStatus:
          $ref: '#/components/schemas/PullRequestStatus'
        lastWorkflowRun:
          $ref: '#/components/schemas/WorkflowRun'
        authStatus:
          $ref: '#/components/schemas/AuthorizationStatus'
    WorkflowListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Workflow'
          description: The list of workflows.
        nextLink:
          type: string
          description: The URL to the next set of workflow results.
          readOnly: true
      description: The response from List Workflows operation.
    PullRequestStatus:
      type: string
      readOnly: true
      enum:
        - unknown
        - submitted
        - merged
        - removed
      x-ms-enum:
        name: PullRequestStatus
        modelAsString: true
        values:
          - value: unknown
            description: Pull Request state unknown.
          - value: submitted
            description: Pull Request submitted to repository.
          - value: merged
            description: Pull Request merged into repository.
          - value: merged
            description: Workflow no longer found within repository.
      description: The status of the Pull Request submitted against the users repository.
    DeploymentProperties:
      type: object
      properties:
        manifestType:
          $ref: '#/components/schemas/ManifestType'
        kubeManifestLocations:
          type: array
          items:
            type: string
        helmChartPath:
          type: string
          description: Helm chart directory path in repository.
        helmValues:
          type: string
          description: Helm Values.yaml file location in repository.
        overrides:
          type: object
          additionalProperties:
            type: string
          title: Manifest override values.
          description: Manifest override values.
    ManifestType:
      type: string
      enum:
        - helm
        - kube
      x-ms-enum:
        name: ManifestType
        modelAsString: true
        values:
          - value: helm
            description: Repositories using helm
          - value: kube
            description: Repositories using kubernetes manifests
      description: Determines the type of manifests within the repository.
    AuthorizationStatus:
      type: string
      enum:
        - Authorized
        - NotFound
        - Error
      readOnly: true
      x-ms-enum:
        name: ManifestType
        modelAsString: true
        values:
          - value: Authorized
            description: Requests authorized successfully
          - value: NotFound
            description: Requests returned NotFound response
          - value: Error
            description: Requests returned other error response
      description: Determines the authorization status of requests.
    WorkflowRun:
      type: object
      properties:
        succeeded:
          type: boolean
          readOnly: true
          description: Describes if the workflow run succeeded.
        workflowRunURL:
          type: string
          readOnly: true
          description: URL to the run of the workflow.
        lastRunAt:
          type: string
          readOnly: true
          format: date-time
          description: The timestamp of the last workflow run.
    ACR:
      type: object
      description: Information on the azure container registry
      properties:
        acrSubscriptionId:
          type: string
          description: ACR subscription id
        acrResourceGroup:
          type: string
          description: ACR resource group
        acrRegistryName:
          type: string
          description: ACR registry
        acrRepositoryName:
          type: string
          description: ACR repository
    GitHubOAuthInfoResponse:
      type: object
      description: URL used to authorize the Developer Hub GitHub App
      properties:
        authURL:
          type: string
          description: URL for authorizing the Developer Hub GitHub App
        token:
          type: string
          description: OAuth token used to make calls to GitHub
    TagsObject:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
      x-ms-mutability:
        - read
        - create
        - update
      description: Resource tags.
    DeleteWorkflowResponse:
      type: object
      properties:
        status:
          type: string
          description: delete status message
      description: delete response if content must be provided on delete operation
    GitHubOAuthCallRequest:
      type: object
      properties:
        redirectUrl:
          type: string
          description: The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
      description: GitHubOAuth request object
    GitHubOAuthResponse:
      description: 'Singleton response of GitHubOAuth containing '
      properties:
        properties:
          description: Properties of a workflow.
          $ref: '#/components/schemas/GitHubOAuthProperties'
          x-ms-client-flatten: true
      type: object
    GitHubOAuthProperties:
      type: object
      properties:
        username:
          type: string
          description: user making request
      description: The response from List GitHubOAuth operation.
    GitHubOAuthListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GitHubOAuthResponse'
          description: Singleton list response containing one GitHubOAuthResponse response
      description: The response from List GitHubOAuth operation.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure_extras.dev_hub.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DevHub~1operations~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    github_oauth:
      id: azure_extras.dev_hub.github_oauth
      name: github_oauth
      title: Github_oauth
      methods:
        GitHubOAuth:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevHub~1locations~1{location}~1githuboauth~1default~1getGitHubOAuthInfo~1?api-version=2022-04-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GitHubOAuthCallback:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevHub~1locations~1{location}~1githuboauth~1default~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListGitHubOAuth:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevHub~1locations~1{location}~1githuboauth~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    workflow:
      id: azure_extras.dev_hub.workflow
      name: workflow
      title: Workflow
      methods:
        Workflow_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevHub~1workflows~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Workflow_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevHub~1workflows~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Workflow_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevHub~1workflows~1{workflowName}~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Workflow_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevHub~1workflows~1{workflowName}~1?api-version=2022-04-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Workflow_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevHub~1workflows~1{workflowName}~1?api-version=2022-04-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Workflow_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevHub~1workflows~1{workflowName}~1?api-version=2022-04-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow/methods/Workflow_Get'
          - $ref: '#/components/x-stackQL-resources/workflow/methods/Workflow_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/workflow/methods/Workflow_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/workflow/methods/Workflow_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflow/methods/Workflow_Delete'
paths:
  /providers/Microsoft.DevHub/operations/?api-version=2022-04-01-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Returns list of operations.
      summary: Gets a list of operations.
      parameters: []
      responses:
        '200':
          description: Operation details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-stackQL-resource: operations
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth/default/getGitHubOAuthInfo/?api-version=2022-04-01-preview:
    post:
      tags:
        - GitHubOAuth
      operationId: GitHubOAuth
      summary: Gets GitHubOAuth info used to authenticate users with the Developer Hub GitHub App.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitHubOAuthCallRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHubOAuthInfoResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: github_oauth
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth/default/?api-version=2022-04-01-preview:
    get:
      tags:
        - GitHubOAuth
      operationId: GitHubOAuthCallback
      summary: Callback URL to hit once authenticated with GitHub App to have the service store the OAuth token.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/GitHubOAuthCodeParameter'
        - $ref: '#/components/parameters/GitHubOAuthStateParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHubOAuthResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: github_oauth
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth/?api-version=2022-04-01-preview:
    get:
      tags:
        - GitHubOAuth
      operationId: ListGitHubOAuth
      summary: Callback URL to hit once authenticated with GitHub App to have the service store the OAuth token.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHubOAuthListResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: github_oauth
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DevHub/workflows/?api-version=2022-04-01-preview:
    get:
      tags:
        - Workflow
      operationId: Workflow_List
      summary: Gets a list of workflows associated with the specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: workflow
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/workflows/?api-version=2022-04-01-preview:
    get:
      tags:
        - Workflow
      operationId: Workflow_ListByResourceGroup
      summary: Gets a list of workflows within a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedClusterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: workflow
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/workflows/{workflowName}/?api-version=2022-04-01-preview:
    get:
      tags:
        - Workflow
      operationId: Workflow_Get
      summary: Gets a workflow.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkflowNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workflow
      x-stackQL-verb: select
    put:
      tags:
        - Workflow
      operationId: Workflow_CreateOrUpdate
      summary: Creates or updates a workflow
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkflowNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workflow
      x-stackQL-verb: insert
    delete:
      tags:
        - Workflow
      operationId: Workflow_Delete
      summary: Deletes a workflow
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkflowNameParameter'
      responses:
        '200':
          description: successful delete with response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkflowResponse'
        '204':
          description: Successfully deleted the resource
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workflow
      x-stackQL-verb: delete
    patch:
      tags:
        - Workflow
      operationId: Workflow_UpdateTags
      summary: Updates tags on a workflow.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkflowNameParameter'
      requestBody:
        description: Parameters supplied to the Update Workflow Tags operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workflow
      x-stackQL-verb: exec
