openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Elastic San (Microsoft.ElasticSan)
  description: Elastic San
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-09-22-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]*[0-9A-Za-z]$
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ElasticSanNameParameter:
      name: elasticSanName
      in: path
      description: The name of the ElasticSan.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$
        minLength: 3
        maxLength: 24
        type: string
    VolumeGroupNameParameter:
      name: volumeGroupName
      in: path
      description: The name of the VolumeGroup.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$
        minLength: 3
        maxLength: 63
        type: string
    VolumeNameParameter:
      name: volumeName
      in: path
      description: The name of the Volume.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z0-9]+(-[a-z0-9A-Z]+)*$
        minLength: 3
        maxLength: 63
        type: string
  schemas:
    Resource:
      type: object
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
      description: The resource model definition.
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
      type: object
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource.
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives.
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
        tier:
          $ref: '#/components/schemas/SkuTier'
      description: The SKU name. Required for account creation; optional for update.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers: []
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
      description: The resource management error response.
    ErrorAdditionalInfo:
      description: The resource management error additional info.
      type: object
      x-ms-identifiers: []
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ElasticSanOperationDisplay:
      type: object
      required:
        - provider
        - resource
        - operation
        - description
      description: Metadata about an operation.
      properties:
        provider:
          type: string
          description: Localized friendly form of the resource provider name.
        resource:
          type: string
          description: Localized friendly form of the resource type related to this action/operation.
        operation:
          type: string
          description: Localized friendly name for the operation, as it should be shown to the user.
        description:
          type: string
          description: Localized friendly description for the operation, as it should be shown to the user.
    ElasticSanRPOperation:
      type: object
      required:
        - name
      description: Description of a ElasticSan RP Operation
      properties:
        name:
          type: string
          description: The name of the operation being performed on this particular object
        isDataAction:
          type: boolean
          description: Indicates whether the operation applies to data-plane.
          readOnly: true
        display:
          description: Additional metadata about RP operation.
          $ref: '#/components/schemas/ElasticSanOperationDisplay'
          readOnly: true
    ElasticSanOperationListResult:
      type: object
      required:
        - value
      description: List of operations supported by the RP.
      properties:
        value:
          type: array
          description: An array of operations supported by the ElasticSan RP.
          items:
            $ref: '#/components/schemas/ElasticSanRPOperation'
          x-ms-identifiers: []
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
    ElasticSanList:
      type: object
      required:
        - value
      description: List of Elastic Sans
      properties:
        value:
          description: An array of Elastic San objects.
          type: array
          items:
            $ref: '#/components/schemas/ElasticSan'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    ElasticSan:
      description: Response for ElasticSan request.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of ElasticSan.
          $ref: '#/components/schemas/ElasticSanProperties'
        systemData:
          description: Resource metadata required by ARM RPC
          readOnly: true
          $ref: '#/components/schemas/systemData'
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives.
      type: object
    ElasticSanProperties:
      type: object
      description: Elastic San response properties.
      required:
        - baseSizeTiB
        - extendedCapacitySizeTiB
        - sku
      properties:
        sku:
          description: resource sku
          $ref: '#/components/schemas/Sku'
        availabilityZones:
          type: array
          description: 'Logical zone for Elastic San resource; example: ["1"].'
          items:
            $ref: '#/components/schemas/AvailabilityZone'
        provisioningState:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        baseSizeTiB:
          description: Base size of the Elastic San appliance in TiB.
          type: integer
          format: int64
          x-ms-mutability:
            - read
            - create
        extendedCapacitySizeTiB:
          description: Extended size of the Elastic San appliance in TiB.
          type: integer
          format: int64
          x-ms-mutability:
            - read
            - create
        totalVolumeSizeGiB:
          description: Total size of the provisioned Volumes in GiB.
          type: integer
          format: int64
          readOnly: true
        volumeGroupCount:
          description: Total number of volume groups in this Elastic San appliance.
          type: integer
          format: int64
          readOnly: true
        totalIops:
          description: Total Provisioned IOPS of the Elastic San appliance.
          type: integer
          format: int64
          readOnly: true
        totalMBps:
          description: Total Provisioned MBps Elastic San appliance.
          type: integer
          format: int64
          readOnly: true
        totalSizeTiB:
          description: Total size of the Elastic San appliance in TB.
          type: integer
          format: int64
          readOnly: true
    ElasticSanUpdate:
      description: Response for ElasticSan update request.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of ElasticSan.
          $ref: '#/components/schemas/ElasticSanUpdateProperties'
        tags:
          type: object
          description: Update tags
          additionalProperties:
            type: string
      type: object
    ElasticSanUpdateProperties:
      type: object
      description: Elastic San update properties.
      properties:
        baseSizeTiB:
          description: Base size of the Elastic San appliance in TiB.
          type: integer
          format: int64
          x-ms-mutability:
            - read
            - create
        extendedCapacitySizeTiB:
          description: Extended size of the Elastic San appliance in TiB.
          type: integer
          format: int64
          x-ms-mutability:
            - read
            - create
    AvailabilityZone:
      type: string
      description: Availability zone.
    SkuInformationList:
      description: List of SKU Information objects
      type: object
      properties:
        value:
          description: List of ResourceType Sku
          type: array
          items:
            $ref: '#/components/schemas/SkuInformation'
          x-ms-identifiers: []
          readOnly: true
    SkuInformation:
      description: ElasticSAN SKU and its properties
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Sku Name
          $ref: '#/components/schemas/SkuName'
        tier:
          type: string
          description: Sku Tier
          $ref: '#/components/schemas/SkuTier'
        resourceType:
          readOnly: true
          type: string
          description: The type of the resource.
        locations:
          readOnly: true
          type: array
          items:
            type: string
          description: The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
        locationInfo:
          description: Availability of the SKU for the location/zone
          type: array
          items:
            $ref: '#/components/schemas/SkuLocationInfo'
          x-ms-identifiers: []
          readOnly: true
        capabilities:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SKUCapability'
          x-ms-identifiers: []
          description: The capability information in the specified SKU.
    SKUCapability:
      properties:
        name:
          readOnly: true
          type: string
          description: The name of capability.
        value:
          readOnly: true
          type: string
          description: A string value to indicate states of given capability.
      description: The capability information in the specified SKU.
      type: object
    SkuLocationInfo:
      description: The location info.
      type: object
      properties:
        location:
          description: The location.
          type: string
          readOnly: true
        zones:
          description: The zones.
          type: array
          items:
            type: string
          readOnly: true
    SkuName:
      type: string
      enum:
        - Premium_LRS
        - Premium_ZRS
      x-ms-enum:
        name: SkuName
        modelAsString: true
        values:
          - value: Premium_LRS
            description: Premium locally redundant storage
          - value: Premium_ZRS
            description: Premium zone redundant storage
      description: The sku name.
    SkuTier:
      type: string
      enum:
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: true
        values:
          - value: Premium
            description: Premium Tier
      description: The sku tier.
    IscsiTargetInfo:
      type: object
      description: Iscsi target information
      readOnly: true
      properties:
        targetIqn:
          type: string
          description: 'iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".'
          readOnly: true
        targetPortalHostname:
          type: string
          description: iSCSI Target Portal Host Name
          readOnly: true
        targetPortalPort:
          type: integer
          format: int32
          description: iSCSI Target Portal Port
          readOnly: true
        provisioningState:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/ProvisioningState'
        status:
          $ref: '#/components/schemas/OperationalStatus'
          description: Operational status of the iSCSI Target.
    VolumeGroup:
      description: Response for Volume Group request.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of VolumeGroup.
          $ref: '#/components/schemas/VolumeGroupProperties'
        systemData:
          description: Resource metadata required by ARM RPC
          readOnly: true
          $ref: '#/components/schemas/systemData'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
      type: object
    VolumeGroupList:
      type: object
      required:
        - value
      description: List of Volume Groups
      properties:
        value:
          description: An array of Volume Groups objects.
          type: array
          items:
            $ref: '#/components/schemas/VolumeGroup'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    VolumeGroupProperties:
      type: object
      description: VolumeGroup response properties.
      properties:
        provisioningState:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/ProvisioningState'
        protocolType:
          description: Type of storage target
          $ref: '#/components/schemas/StorageTargetType'
        encryption:
          description: Type of encryption
          $ref: '#/components/schemas/EncryptionType'
        networkAcls:
          $ref: '#/components/schemas/NetworkRuleSet'
          description: A collection of rules governing the accessibility from specific network locations.
          x-ms-mutability:
            - create
            - read
    VolumeGroupUpdate:
      description: Volume Group request.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of VolumeGroup.
          $ref: '#/components/schemas/VolumeGroupUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VolumeGroupUpdateProperties:
      type: object
      description: VolumeGroup response properties.
      properties:
        protocolType:
          description: Type of storage target
          $ref: '#/components/schemas/StorageTargetType'
        encryption:
          description: Type of encryption
          $ref: '#/components/schemas/EncryptionType'
        networkAcls:
          $ref: '#/components/schemas/NetworkRuleSet'
          description: A collection of rules governing the accessibility from specific network locations.
          x-ms-mutability:
            - create
            - read
    Volume:
      description: Response for Volume request.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of Volume.
          $ref: '#/components/schemas/VolumeProperties'
        systemData:
          description: Resource metadata required by ARM RPC
          readOnly: true
          $ref: '#/components/schemas/systemData'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
      type: object
    VolumeList:
      type: object
      required:
        - value
      description: List of Volumes
      properties:
        value:
          description: An array of Volume objects.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    VolumeProperties:
      type: object
      description: Volume response properties.
      properties:
        volumeId:
          description: Unique Id of the volume in GUID format
          type: string
          readOnly: true
        creationData:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/SourceCreationData'
        sizeGiB:
          description: Volume size.
          type: integer
          format: int64
        storageTarget:
          description: Storage target information
          $ref: '#/components/schemas/IscsiTargetInfo'
    VolumeUpdate:
      description: Response for Volume request.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of Volume.
          $ref: '#/components/schemas/VolumeUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VolumeUpdateProperties:
      type: object
      description: Volume response properties.
      properties:
        sizeGiB:
          description: Volume size.
          type: integer
          format: int64
    SourceCreationData:
      type: object
      description: Data source used when creating the volume.
      properties:
        createSource:
          type: string
          enum:
            - None
          x-ms-enum:
            name: VolumeCreateOption
            modelAsString: false
          description: This enumerates the possible sources of a volume creation.
        sourceUri:
          type: string
          description: If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like id of the source disk restore point.
    Error:
      type: object
      description: The resource management error response.
      properties:
        error:
          description: RP error response.
          $ref: '#/components/schemas/ErrorResponse'
    ProvisioningState:
      type: string
      enum:
        - Invalid
        - Succeeded
        - Failed
        - Canceled
        - Pending
        - Creating
        - Updating
        - Deleting
      x-ms-enum:
        name: ProvisioningStates
        modelAsString: true
      description: Provisioning state of the iSCSI Target.
      readOnly: true
    OperationalStatus:
      type: string
      enum:
        - Invalid
        - Unknown
        - Healthy
        - Unhealthy
        - Updating
        - Running
        - Stopped
        - Stopped (deallocated)
      x-ms-enum:
        name: OperationalStatus
        modelAsString: true
      description: Operational status of the resource.
    StorageTargetType:
      type: string
      enum:
        - Iscsi
        - None
      x-ms-enum:
        name: StorageTargetType
        modelAsString: true
      description: Storage Target type.
    EncryptionType:
      type: string
      description: The type of key used to encrypt the data of the disk.
      enum:
        - EncryptionAtRestWithPlatformKey
      x-ms-enum:
        name: EncryptionType
        modelAsString: true
        values:
          - value: EncryptionAtRestWithPlatformKey
            description: Volume is encrypted at rest with Platform managed key. It is the default encryption type.
    NetworkRuleSet:
      type: object
      properties:
        virtualNetworkRules:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          description: The list of virtual network rules.
      description: A set of rules governing the network accessibility.
    VirtualNetworkRule:
      type: object
      properties:
        id:
          type: string
          x-ms-client-name: VirtualNetworkResourceId
          description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
        action:
          type: string
          enum:
            - Allow
          x-ms-enum:
            name: Action
            modelAsString: false
          default: Allow
          description: The action of virtual network rule.
        state:
          type: string
          readOnly: true
          enum:
            - provisioning
            - deprovisioning
            - succeeded
            - failed
            - networkSourceDeleted
          x-ms-enum:
            name: State
            modelAsString: false
          description: Gets the state of virtual network rule.
      required:
        - id
      description: Virtual Network rule.
  x-stackQL-resources:
    operations:
      id: azure_extras.elastic_san.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ElasticSan~1operations~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    skus:
      id: azure_extras.elastic_san.skus
      name: skus
      title: Skus
      methods:
        Skus_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ElasticSan~1skus~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/Skus_List'
        insert: []
        update: []
        delete: []
    elastic_san:
      id: azure_extras.elastic_san.elastic_san
      name: elastic_san
      title: Elastic_san
      methods:
        ElasticSans_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ElasticSan~1elasticSans~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ElasticSans_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ElasticSans_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1?api-version=2021-11-20-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ElasticSans_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1?api-version=2021-11-20-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ElasticSans_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1?api-version=2021-11-20-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ElasticSans_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/elastic_san/methods/ElasticSans_Get'
          - $ref: '#/components/x-stackQL-resources/elastic_san/methods/ElasticSans_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/elastic_san/methods/ElasticSans_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/elastic_san/methods/ElasticSans_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/elastic_san/methods/ElasticSans_Delete'
    volume_groups:
      id: azure_extras.elastic_san.volume_groups
      name: volume_groups
      title: Volume_groups
      methods:
        VolumeGroups_ListByElasticSan:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumeGroups~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VolumeGroups_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1?api-version=2021-11-20-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VolumeGroups_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1?api-version=2021-11-20-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VolumeGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1?api-version=2021-11-20-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VolumeGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/VolumeGroups_Get'
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/VolumeGroups_ListByElasticSan'
        insert:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/VolumeGroups_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/VolumeGroups_Delete'
    volumes:
      id: azure_extras.elastic_san.volumes
      name: volumes
      title: Volumes
      methods:
        Volumes_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1{volumeName}~1?api-version=2021-11-20-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Volumes_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1{volumeName}~1?api-version=2021-11-20-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Volumes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1{volumeName}~1?api-version=2021-11-20-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Volumes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1{volumeName}~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Volumes_ListByVolumeGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1?api-version=2021-11-20-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/Volumes_Get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/Volumes_ListByVolumeGroup'
        insert:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/Volumes_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/Volumes_Delete'
paths:
  /providers/Microsoft.ElasticSan/operations/?api-version=2021-11-20-preview:
    get:
      tags:
        - Elastic San Operations
      operationId: Operations_List
      description: Gets a list of ElasticSan operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSanOperationListResult'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: operations
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/skus/?api-version=2021-11-20-preview:
    get:
      tags:
        - Elastic San Skus
      summary: List all the available Skus in the region and information related to them
      operationId: Skus_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: Specify $filter='location eq <location>' to filter on location.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lists the available SKUs supported by Microsoft.ElasticSan for given subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuInformationList'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: skus
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/elasticSans/?api-version=2021-11-20-preview:
    get:
      tags:
        - ElasticSans
      operationId: ElasticSans_ListBySubscription
      description: Gets a list of ElasticSans in a subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Operation completed successfully; retrieved Elastic San by subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSanList'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ''
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/?api-version=2021-11-20-preview:
    get:
      tags:
        - ElasticSan
      operationId: ElasticSans_ListByResourceGroup
      description: Gets a list of ElasticSan in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK -- Operation completed successfully; retrieved elasticSans by resource group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSanList'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ''
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/?api-version=2021-11-20-preview:
    put:
      tags:
        - ElasticSans
      operationId: ElasticSans_Create
      description: Create ElasticSan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      requestBody:
        description: Elastic San object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElasticSan'
      responses:
        '200':
          description: OK -- Returned when the create operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSan'
        '202':
          description: Accepted -- Create request accepted; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSan'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: ''
      x-stackQL-verb: insert
    patch:
      tags:
        - ElasticSans
      operationId: ElasticSans_Update
      description: Update a Elastic San.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      requestBody:
        description: Elastic San object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElasticSanUpdate'
      responses:
        '200':
          description: OK -- ElasticSAN properties updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSan'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously.
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: ''
      x-stackQL-verb: exec
    delete:
      tags:
        - ElasticSans
      operationId: ElasticSans_Delete
      description: Delete a Elastic San.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      responses:
        '200':
          description: OK -- Delete operation completed successfully.
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously.
        '204':
          description: NoContent --ElasticSAN does not exist in the subscription.
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: ''
      x-stackQL-verb: delete
    get:
      tags:
        - ElasticSans
      operationId: ElasticSans_Get
      description: Get a ElasticSan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      responses:
        '200':
          description: OK -- Operation completed successfully; retrieved ElasticSan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSan'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: ''
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumeGroups/?api-version=2021-11-20-preview:
    get:
      tags:
        - VolumeGroups
      description: List VolumeGroups.
      operationId: VolumeGroups_ListByElasticSan
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      responses:
        '200':
          description: OK -- Operation completed successfully; retrieved Volume Group List.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupList'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: volume_groups
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/?api-version=2021-11-20-preview:
    put:
      tags:
        - VolumeGroups
      description: Create a Volume Group.
      operationId: VolumeGroups_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      requestBody:
        description: Volume Group object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroup'
      responses:
        '200':
          description: OK -- Returned when the create operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroup'
        '202':
          description: Accepted -- Create request accepted; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroup'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: volume_groups
      x-stackQL-verb: insert
    patch:
      tags:
        - VolumeGroups
      description: Update an VolumeGroup.
      operationId: VolumeGroups_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      requestBody:
        description: Volume Group object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroupUpdate'
      responses:
        '200':
          description: OK -- Returned when the update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroup'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously.
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: volume_groups
      x-stackQL-verb: exec
    delete:
      tags:
        - VolumeGroups
      description: Delete an VolumeGroup.
      operationId: VolumeGroups_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      responses:
        '200':
          description: OK -- Delete operation completed successfully.
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously.
        '204':
          description: NoContent -- Resource does not exist in the subscription.
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: volume_groups
      x-stackQL-verb: delete
    get:
      tags:
        - VolumeGroups
      description: Get an VolumeGroups.
      operationId: VolumeGroups_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved iSCSI Target.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroup'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: volume_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}/?api-version=2021-11-20-preview:
    put:
      tags:
        - Volumes
      description: Create a Volume.
      operationId: Volumes_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      requestBody:
        description: Volume object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      responses:
        '200':
          description: OK -- Returned when the create operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '202':
          description: Accepted -- Create request accepted; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: volumes
      x-stackQL-verb: insert
    patch:
      tags:
        - Volumes
      description: Update an Volume.
      operationId: Volumes_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      requestBody:
        description: Volume object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeUpdate'
      responses:
        '200':
          description: OK -- Returned when the update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously.
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
    delete:
      tags:
        - Volumes
      description: Delete an Volume.
      operationId: Volumes_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      responses:
        '200':
          description: Delete operation completed successfully.
        '202':
          description: Delete request accepted; operation will complete asynchronously.
        '204':
          description: Resource does not exist in the subscription.
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: volumes
      x-stackQL-verb: delete
    get:
      tags:
        - Volumes
      description: Get an Volume.
      operationId: Volumes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved Volume.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/?api-version=2021-11-20-preview:
    get:
      tags:
        - Volumes
      description: List Volumes in a VolumeGroup.
      operationId: Volumes_ListByVolumeGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved volumes in a volume group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeList'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: volumes
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
