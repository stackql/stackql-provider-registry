openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Alerts Management Service Resource Provider (Microsoft.AlertsManagement)
  description: APIs for Azure alert processing rules CRUD operations.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-19-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    operation:
      description: Operation provided by provider
      properties:
        name:
          type: string
          description: Name of the operation
        display:
          type: object
          description: Properties of the operation
          properties:
            provider:
              type: string
              description: Provider name
            resource:
              type: string
              description: Resource name
            operation:
              type: string
              description: Operation name
            description:
              type: string
              description: Description of the operation
        origin:
          type: string
          description: Origin of the operation
    operationsList:
      description: Lists the operations available in the AlertsManagement RP.
      properties:
        nextLink:
          description: URL to fetch the next set of alerts.
          type: string
        value:
          description: Array of operations
          type: array
          items:
            $ref: '#/components/schemas/operation'
      required:
        - value
    errorResponse:
      description: An error response from the service.
      properties:
        error:
          $ref: '#/components/schemas/errorResponseBody'
    errorResponseBody:
      description: Details of error response.
      properties:
        code:
          type: string
          description: Error code, intended to be consumed programmatically.
        message:
          type: string
          description: Description of the error, intended for display in user interface.
        target:
          type: string
          description: Target of the particular error, for example name of the property.
        details:
          type: array
          description: A list of additional details about the error.
          items:
            $ref: '#/components/schemas/errorResponseBody'
    Resource:
      x-ms-azure-resource: true
      description: An azure resource object
      properties:
        id:
          type: string
          readOnly: true
          description: Azure resource Id
        type:
          type: string
          readOnly: true
          description: Azure resource type
        name:
          type: string
          readOnly: true
          description: Azure resource name
    alert:
      type: object
      description: An alert created in alert management service.
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/alertProperties'
    alertsList:
      type: object
      description: List the alerts.
      properties:
        nextLink:
          description: URL to fetch the next set of alerts.
          type: string
        value:
          description: List of alerts
          type: array
          items:
            $ref: '#/components/schemas/alert'
    alertProperties:
      type: object
      description: Alert property bag
      properties:
        essentials:
          $ref: '#/components/schemas/essentials'
        context:
          $ref: '#/components/schemas/alertContext'
        egressConfig:
          $ref: '#/components/schemas/egressConfig'
    egressConfig:
      type: object
      description: Config which would be used for displaying the data in portal.
      readOnly: true
    alertContext:
      type: object
      description: Information specific to the monitor service that gives more contextual details about the alert.
      readOnly: true
    actionStatus:
      type: object
      description: Action status
      properties:
        isSuppressed:
          type: boolean
          description: Value indicating whether alert is suppressed.
    essentials:
      type: object
      description: This object contains consistent fields across different monitor services.
      properties:
        severity:
          type: string
          description: Severity of alert Sev0 being highest and Sev4 being lowest.
          readOnly: true
          enum:
            - Sev0
            - Sev1
            - Sev2
            - Sev3
            - Sev4
          x-ms-enum:
            name: Severity
            modelAsString: true
        signalType:
          type: string
          description: The type of signal the alert is based on, which could be metrics, logs or activity logs.
          readOnly: true
          enum:
            - Metric
            - Log
            - Unknown
          x-ms-enum:
            name: SignalType
            modelAsString: true
        alertState:
          type: string
          description: Alert object state, which can be modified by the user.
          readOnly: true
          enum:
            - New
            - Acknowledged
            - Closed
          x-ms-enum:
            name: AlertState
            modelAsString: true
        monitorCondition:
          type: string
          description: Condition of the rule at the monitor service. It represents whether the underlying conditions have crossed the defined alert rule thresholds.
          readOnly: true
          enum:
            - Fired
            - Resolved
          x-ms-enum:
            name: MonitorCondition
            modelAsString: true
        targetResource:
          type: string
          description: Target ARM resource, on which alert got created.
        targetResourceName:
          type: string
          description: Name of the target ARM resource name, on which alert got created.
        targetResourceGroup:
          type: string
          description: Resource group of target ARM resource, on which alert got created.
        targetResourceType:
          type: string
          description: Resource type of target ARM resource, on which alert got created.
        monitorService:
          type: string
          description: Monitor service on which the rule(monitor) is set.
          readOnly: true
          enum:
            - Application Insights
            - ActivityLog Administrative
            - ActivityLog Security
            - ActivityLog Recommendation
            - ActivityLog Policy
            - ActivityLog Autoscale
            - Log Analytics
            - Nagios
            - Platform
            - SCOM
            - ServiceHealth
            - SmartDetector
            - VM Insights
            - Zabbix
          x-ms-enum:
            name: MonitorService
            modelAsString: true
        alertRule:
          type: string
          description: Rule(monitor) which fired alert instance. Depending on the monitor service,  this would be ARM id or name of the rule.
          readOnly: true
        sourceCreatedId:
          type: string
          description: Unique Id created by monitor service for each alert instance. This could be used to track the issue at the monitor service, in case of Nagios, Zabbix, SCOM etc.
          readOnly: true
        smartGroupId:
          type: string
          description: Unique Id of the smart group
          readOnly: true
        smartGroupingReason:
          type: string
          description: Verbose reason describing the reason why this alert instance is added to a smart group
          readOnly: true
        startDateTime:
          type: string
          format: date-time
          description: Creation time(ISO-8601 format) of alert instance.
          readOnly: true
        lastModifiedDateTime:
          type: string
          format: date-time
          description: Last modification time(ISO-8601 format) of alert instance.
          readOnly: true
        monitorConditionResolvedDateTime:
          type: string
          format: date-time
          description: Resolved time(ISO-8601 format) of alert instance. This will be updated when monitor service resolves the alert instance because the rule condition is no longer met.
          readOnly: true
        lastModifiedUserName:
          type: string
          description: User who last modified the alert, in case of monitor service updates user would be 'system', otherwise name of the user.
          readOnly: true
        actionStatus:
          $ref: '#/components/schemas/actionStatus'
        description:
          type: string
          description: Alert description.
    alertModification:
      type: object
      description: Alert Modification details
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/alertModificationProperties'
    alertModificationProperties:
      type: object
      description: Properties of the alert modification item.
      properties:
        alertId:
          type: string
          description: Unique Id of the alert for which the history is being retrieved
          readOnly: true
        modifications:
          type: array
          description: Modification details
          items:
            $ref: '#/components/schemas/alertModificationItem'
    alertModificationItem:
      type: object
      description: Alert modification item.
      properties:
        modificationEvent:
          type: string
          description: Reason for the modification
          enum:
            - AlertCreated
            - StateChange
            - MonitorConditionChange
            - SeverityChange
            - ActionRuleTriggered
            - ActionRuleSuppressed
            - ActionsTriggered
            - ActionsSuppressed
            - ActionsFailed
          x-ms-enum:
            name: AlertModificationEvent
        oldValue:
          type: string
          description: Old value
        newValue:
          type: string
          description: New value
        modifiedAt:
          type: string
          description: Modified date and time
        modifiedBy:
          type: string
          description: Modified user details (Principal client name)
        comments:
          type: string
          description: Modification comments
        description:
          type: string
          description: Description of the modification
    alertsSummary:
      type: object
      description: Summary of alerts based on the input filters and 'groupby' parameters.
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/alertsSummaryGroup'
    alertsSummaryGroup:
      type: object
      description: Group the result set.
      properties:
        total:
          type: integer
          format: int64
          description: Total count of the result set.
        smartGroupsCount:
          type: integer
          format: int64
          description: Total count of the smart groups.
        groupedby:
          type: string
          description: Name of the field aggregated
        values:
          type: array
          description: List of the items
          items:
            $ref: '#/components/schemas/alertsSummaryGroupItem'
    alertsSummaryGroupItem:
      type: object
      description: Alerts summary group item
      properties:
        name:
          type: string
          description: Value of the aggregated field
        count:
          type: integer
          format: int64
          description: Count of the aggregated field
        groupedby:
          type: string
          description: Name of the field aggregated
        values:
          type: array
          description: List of the items
          items:
            $ref: '#/components/schemas/alertsSummaryGroupItem'
    alertsMetaData:
      type: object
      description: alert meta data information.
      properties:
        properties:
          $ref: '#/components/schemas/alertsMetaDataProperties'
    alertsMetaDataProperties:
      type: object
      description: alert meta data property bag
      discriminator:
        propertyName: metadataIdentifier
      required:
        - metadataIdentifier
      properties:
        metadataIdentifier:
          type: string
          description: Identification of the information to be retrieved by API call
          enum:
            - MonitorServiceList
          x-ms-enum:
            name: metadataIdentifier
            modelAsString: true
    MonitorServiceList:
      type: object
      title: Monitor service details
      description: Monitor service details
      required:
        - data
      allOf:
        - $ref: '#/components/schemas/alertsMetaDataProperties'
        - type: object
      properties:
        data:
          description: Array of operations
          type: array
          items:
            $ref: '#/components/schemas/MonitorServiceDetails'
    MonitorServiceDetails:
      type: object
      description: Details of a monitor service
      properties:
        name:
          type: string
          description: Monitor service name
        displayName:
          type: string
          description: Monitor service display name
    smartGroupModification:
      type: object
      description: Alert Modification details
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/smartGroupModificationProperties'
    smartGroupModificationProperties:
      type: object
      description: Properties of the smartGroup modification item.
      properties:
        smartGroupId:
          type: string
          description: Unique Id of the smartGroup for which the history is being retrieved
          readOnly: true
        modifications:
          type: array
          description: Modification details
          items:
            $ref: '#/components/schemas/smartGroupModificationItem'
        nextLink:
          description: URL to fetch the next set of results.
          type: string
    smartGroupModificationItem:
      type: object
      description: smartGroup modification item.
      properties:
        modificationEvent:
          type: string
          description: Reason for the modification
          enum:
            - SmartGroupCreated
            - StateChange
            - AlertAdded
            - AlertRemoved
          x-ms-enum:
            name: SmartGroupModificationEvent
        oldValue:
          type: string
          description: Old value
        newValue:
          type: string
          description: New value
        modifiedAt:
          type: string
          description: Modified date and time
        modifiedBy:
          type: string
          description: Modified user details (Principal client name)
        comments:
          type: string
          description: Modification comments
        description:
          type: string
          description: Description of the modification
    smartGroupsList:
      type: object
      description: List the alerts.
      properties:
        nextLink:
          description: URL to fetch the next set of alerts.
          type: string
        value:
          description: List of alerts
          type: array
          items:
            $ref: '#/components/schemas/smartGroup'
    smartGroup:
      type: object
      description: Set of related alerts grouped together smartly by AMS.
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/smartGroupProperties'
    smartGroupProperties:
      type: object
      description: Properties of smart group.
      properties:
        alertsCount:
          type: integer
          format: int64
          description: Total number of alerts in smart group
        smartGroupState:
          type: string
          description: Smart group state
          readOnly: true
          enum:
            - New
            - Acknowledged
            - Closed
          x-ms-enum:
            name: State
            modelAsString: true
        severity:
          type: string
          description: Severity of smart group is the highest(Sev0 >... > Sev4) severity of all the alerts in the group.
          readOnly: true
          enum:
            - Sev0
            - Sev1
            - Sev2
            - Sev3
            - Sev4
          x-ms-enum:
            name: Severity
            modelAsString: true
        startDateTime:
          type: string
          format: date-time
          description: Creation time of smart group. Date-Time in ISO-8601 format.
          readOnly: true
        lastModifiedDateTime:
          type: string
          format: date-time
          description: Last updated time of smart group. Date-Time in ISO-8601 format.
          readOnly: true
        lastModifiedUserName:
          type: string
          description: Last modified by user name.
          readOnly: true
        resources:
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
          description: Summary of target resources in the smart group
        resourceTypes:
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
          description: Summary of target resource types in the smart group
        resourceGroups:
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
          description: Summary of target resource groups in the smart group
        monitorServices:
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
          description: Summary of monitorServices in the smart group
        monitorConditions:
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
          description: Summary of monitorConditions in the smart group
        alertStates:
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
          description: Summary of alertStates in the smart group
        alertSeverities:
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
          description: Summary of alertSeverities in the smart group
        nextLink:
          type: string
          description: The URI to fetch the next page of alerts. Call ListNext() with this URI to fetch the next page alerts.
    smartGroupAggregatedProperty:
      type: object
      description: Aggregated property of each type
      properties:
        name:
          type: string
          description: Name of the type.
        count:
          type: integer
          format: int64
          description: Total number of items of type.
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ManagedResource:
      description: An azure managed resource object.
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      required:
        - location
    Scopes:
      type: array
      description: List of ARM IDs which will be the target of the given alert processing rule.
      items:
        type: string
    Condition:
      type: object
      description: Condition to trigger an alert processing rule.
      properties:
        field:
          type: string
          description: Field for a given condition.
          enum:
            - Severity
            - MonitorService
            - MonitorCondition
            - SignalType
            - TargetResourceType
            - TargetResource
            - TargetResourceGroup
            - AlertRuleId
            - AlertRuleName
            - Description
            - AlertContext
          x-ms-enum:
            name: Field
            modelAsString: true
        operator:
          type: string
          description: Operator for a given condition.
          enum:
            - Equals
            - NotEquals
            - Contains
            - DoesNotContain
          x-ms-enum:
            name: Operator
            modelAsString: true
        values:
          type: array
          description: List of values to match for a given condition.
          items:
            type: string
    Conditions:
      type: array
      description: Conditions in alert instance to be matched for a given alert processing rule. Default value is all. Multiple values could be provided with comma separation.
      items:
        $ref: '#/components/schemas/Condition'
    Schedule:
      type: object
      description: Scheduling configuration for a given alert processing rule.
      properties:
        effectiveFrom:
          type: string
          pattern: ^(?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))$
          description: Scheduling effective from time. Date-Time in ISO-8601 format without timezone suffix.
        effectiveUntil:
          type: string
          pattern: ^(?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))$
          description: Scheduling effective until time. Date-Time in ISO-8601 format without timezone suffix.
        timeZone:
          type: string
          description: Scheduling time zone.
        recurrences:
          type: array
          description: List of recurrences.
          items:
            $ref: '#/components/schemas/Recurrence'
    Recurrence:
      type: object
      description: Recurrence object.
      discriminator:
        propertyName: recurrenceType
      required:
        - recurrenceType
      properties:
        recurrenceType:
          type: string
          description: Specifies when the recurrence should be applied.
          enum:
            - Daily
            - Weekly
            - Monthly
          x-ms-enum:
            name: RecurrenceType
            modelAsString: true
        startTime:
          type: string
          description: Start time for recurrence.
        endTime:
          type: string
          description: End time for recurrence.
    DailyRecurrence:
      x-ms-discriminator-value: Daily
      type: object
      description: Daily recurrence object.
      required:
        - startTime
        - endTime
      allOf:
        - $ref: '#/components/schemas/Recurrence'
    WeeklyRecurrence:
      x-ms-discriminator-value: Weekly
      type: object
      description: Weekly recurrence object.
      required:
        - daysOfWeek
      allOf:
        - $ref: '#/components/schemas/Recurrence'
      properties:
        daysOfWeek:
          type: array
          description: Specifies the values for weekly recurrence pattern.
          items:
            $ref: '#/components/schemas/DaysOfWeek'
    MonthlyRecurrence:
      x-ms-discriminator-value: Monthly
      type: object
      description: Monthly recurrence object.
      required:
        - daysOfMonth
      allOf:
        - $ref: '#/components/schemas/Recurrence'
      properties:
        daysOfMonth:
          type: array
          description: Specifies the values for monthly recurrence pattern.
          items:
            type: integer
            format: int32
    DaysOfWeek:
      type: string
      description: Days of week.
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      x-ms-enum:
        name: DaysOfWeek
        modelAsString: true
    AlertProcessingRule:
      type: object
      description: Alert processing rule object containing target scopes, conditions and scheduling logic.
      allOf:
        - $ref: '#/components/schemas/ManagedResource'
      properties:
        properties:
          description: Alert processing rule properties.
          $ref: '#/components/schemas/AlertProcessingRuleProperties'
        systemData:
          description: Alert processing rule system data.
          $ref: '#/components/schemas/systemData'
    AlertProcessingRuleProperties:
      type: object
      description: Alert processing rule properties defining scopes, conditions and scheduling logic for alert processing rule.
      required:
        - scopes
        - actions
      properties:
        scopes:
          description: Scopes on which alert processing rule will apply.
          $ref: '#/components/schemas/Scopes'
        conditions:
          description: Conditions on which alerts will be filtered.
          $ref: '#/components/schemas/Conditions'
        schedule:
          description: Scheduling for alert processing rule.
          $ref: '#/components/schemas/Schedule'
        actions:
          type: array
          description: Actions to be applied.
          items:
            $ref: '#/components/schemas/Action'
        description:
          type: string
          description: Description of alert processing rule.
        enabled:
          type: boolean
          default: true
          description: Indicates if the given alert processing rule is enabled or disabled.
    Action:
      type: object
      description: Action to be applied.
      discriminator:
        propertyName: actionType
      required:
        - actionType
      properties:
        actionType:
          type: string
          description: Action that should be applied.
          enum:
            - AddActionGroups
            - RemoveAllActionGroups
          x-ms-enum:
            name: actionType
            modelAsString: true
    AddActionGroups:
      x-ms-discriminator-value: AddActionGroups
      type: object
      description: Add action groups to alert processing rule.
      required:
        - actionGroupIds
      allOf:
        - $ref: '#/components/schemas/Action'
      properties:
        actionGroupIds:
          description: List of action group Ids to add to alert processing rule.
          type: array
          items:
            type: string
    RemoveAllActionGroups:
      x-ms-discriminator-value: RemoveAllActionGroups
      type: object
      description: Indicates if all action groups should be removed.
      allOf:
        - $ref: '#/components/schemas/Action'
    AlertProcessingRulesList:
      type: object
      description: List of alert processing rules.
      properties:
        nextLink:
          type: string
          description: URL to fetch the next set of alert processing rules.
        value:
          type: array
          description: List of alert processing rules.
          items:
            $ref: '#/components/schemas/AlertProcessingRule'
    PatchProperties:
      description: Alert processing rule properties supported by patch.
      properties:
        enabled:
          type: boolean
          description: Indicates if the given alert processing rule is enabled or disabled.
    PatchObject:
      description: Data contract for patch.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties supported by patch operation.
          $ref: '#/components/schemas/PatchProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Tags to be updated.
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    api-version:
      name: api-version
      in: query
      description: Client API version.
      required: true
      schema:
        enum:
          - '2021-08-08'
        x-ms-enum:
          name: api-version
          modelAsString: true
        type: string
    alertId:
      name: alertId
      in: path
      description: Unique ID of an alert instance.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    targetResourceGroup:
      name: targetResourceGroup
      in: query
      description: Filter by target resource group name. Default value is select all.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    targetResource:
      name: targetResource
      in: query
      description: Filter by target resource( which is full ARM ID) Default value is select all.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    targetResourceType:
      name: targetResourceType
      in: query
      description: Filter by target resource type. Default value is select all.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    monitorService:
      name: monitorService
      in: query
      description: Filter by monitor service which generates the alert instance. Default value is select all.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - Application Insights
          - ActivityLog Administrative
          - ActivityLog Security
          - ActivityLog Recommendation
          - ActivityLog Policy
          - ActivityLog Autoscale
          - Log Analytics
          - Nagios
          - Platform
          - SCOM
          - ServiceHealth
          - SmartDetector
          - VM Insights
          - Zabbix
        x-ms-enum:
          name: MonitorService
          modelAsString: true
        type: string
    severity:
      name: severity
      in: query
      description: Filter by severity.  Default value is select all.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - Sev0
          - Sev1
          - Sev2
          - Sev3
          - Sev4
        x-ms-enum:
          name: Severity
          modelAsString: true
        type: string
    smartGroupIdFilter:
      name: smartGroupId
      in: query
      description: Filter the alerts list by the Smart Group Id. Default value is none.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    newState:
      name: newState
      in: query
      description: New state of the alert.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - New
          - Acknowledged
          - Closed
        x-ms-enum:
          name: AlertState
          modelAsString: true
        type: string
    alertState:
      name: alertState
      in: query
      description: Filter by state of the alert instance. Default value is to select all.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - New
          - Acknowledged
          - Closed
        x-ms-enum:
          name: AlertState
          modelAsString: true
        type: string
    monitorCondition:
      name: monitorCondition
      in: query
      description: Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - Fired
          - Resolved
        x-ms-enum:
          name: MonitorCondition
          modelAsString: true
        type: string
    alertRule:
      name: alertRule
      in: query
      description: Filter by specific alert rule.  Default value is to select all.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    timeRange:
      name: timeRange
      in: query
      description: Filter by time range by below listed values. Default value is 1 day.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - 1h
          - 1d
          - 7d
          - 30d
        x-ms-enum:
          name: TimeRange
          modelAsString: true
        type: string
    customTimeRange:
      name: customTimeRange
      in: query
      description: Filter by custom time range in the format <start-time>/<end-time>  where time is in (ISO-8601 format)'. Permissible values is within 30 days from  query time. Either timeRange or customTimeRange could be used but not both. Default is none.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    includeContext:
      name: includeContext
      in: query
      description: Include context which has contextual data specific to the monitor service. Default value is false'
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    includeEgressConfig:
      name: includeEgressConfig
      in: query
      description: Include egress config which would be used for displaying the content in portal.  Default value is 'false'.
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    includeSmartGroupsCount:
      name: includeSmartGroupsCount
      in: query
      description: Include count of the SmartGroups as part of the summary. Default value is 'false'.
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    pageCount:
      name: pageCount
      in: query
      description: Determines number of alerts returned per page in response. Permissible value is between 1 to 250. When the "includeContent"  filter is selected, maximum value allowed is 25. Default value is 25.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int64
        type: integer
    alertsSortBy:
      name: sortBy
      in: query
      description: Sort the query results by input field,  Default value is 'lastModifiedDateTime'.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - name
          - severity
          - alertState
          - monitorCondition
          - targetResource
          - targetResourceName
          - targetResourceGroup
          - targetResourceType
          - startDateTime
          - lastModifiedDateTime
        x-ms-enum:
          name: AlertsSortByFields
          modelAsString: true
        type: string
    alertsSummaryGroupBy:
      name: groupby
      in: query
      description: This parameter allows the result set to be grouped by input fields (Maximum 2 comma separated fields supported). For example, groupby=severity or groupby=severity,alertstate.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - severity
          - alertState
          - monitorCondition
          - monitorService
          - signalType
          - alertRule
        x-ms-enum:
          name: AlertsSummaryGroupByFields
          modelAsString: true
        type: string
    sortOrder:
      name: sortOrder
      in: query
      description: Sort the query results order in either ascending or descending.  Default value is 'desc' for time fields and 'asc' for others.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - asc
          - desc
        x-ms-enum:
          name: SortOrder
          modelAsString: true
        type: string
    select:
      name: select
      in: query
      description: This filter allows to selection of the fields(comma separated) which would  be part of the essential section. This would allow to project only the  required fields rather than getting entire content.  Default is to fetch all the fields in the essentials section.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    identifier:
      name: identifier
      in: query
      description: Identification of the information to be retrieved by API call.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - MonitorServiceList
        x-ms-enum:
          name: identifier
          modelAsString: true
        type: string
    smartGroupId:
      name: smartGroupId
      in: path
      description: 'Smart group unique id. '
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    smartGroupState:
      name: smartGroupState
      in: query
      description: Filter by state of the smart group. Default value is to select all.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - New
          - Acknowledged
          - Closed
        x-ms-enum:
          name: AlertState
          modelAsString: true
        type: string
    smartGroupsSortBy:
      name: sortBy
      in: query
      description: Sort the query results by input field. Default value is sort by 'lastModifiedDateTime'.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - alertsCount
          - state
          - severity
          - startDateTime
          - lastModifiedDateTime
        x-ms-enum:
          name: SmartGroupsSortByFields
          modelAsString: true
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: Resource group name where the resource is created.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: azure_extras.alerts_management.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AlertsManagement~1operations?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    alerts:
      id: azure_extras.alerts_management.alerts
      name: alerts
      title: Alerts
      methods:
        Alerts_MetaData:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AlertsManagement~1alertsMetaData?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Alerts_GetAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alerts?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Alerts_GetById:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alerts~1{alertId}?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Alerts_ChangeState:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alerts~1{alertId}~1changestate?api-version=2019-05-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Alerts_GetHistory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alerts~1{alertId}~1history?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Alerts_GetSummary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alertsSummary?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    smart_groups:
      id: azure_extras.alerts_management.smart_groups
      name: smart_groups
      title: Smart_groups
      methods:
        SmartGroups_GetAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1smartGroups?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SmartGroups_GetById:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1smartGroups~1{smartGroupId}?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SmartGroups_ChangeState:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1smartGroups~1{smartGroupId}~1changeState?api-version=2019-05-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SmartGroups_GetHistory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1smartGroups~1{smartGroupId}~1history?api-version=2019-05-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    alert_processing_rules:
      id: azure_extras.alerts_management.alert_processing_rules
      name: alert_processing_rules
      title: Alert_processing_rules
      methods:
        AlertProcessingRules_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1actionRules?api-version=2021-08-08/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AlertProcessingRules_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules?api-version=2021-08-08/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AlertProcessingRules_GetByName:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1{alertProcessingRuleName}?api-version=2021-08-08/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AlertProcessingRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1{alertProcessingRuleName}?api-version=2021-08-08/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AlertProcessingRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1{alertProcessingRuleName}?api-version=2021-08-08/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        AlertProcessingRules_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1{alertProcessingRuleName}?api-version=2021-08-08/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_processing_rules/methods/AlertProcessingRules_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/alert_processing_rules/methods/AlertProcessingRules_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/alert_processing_rules/methods/AlertProcessingRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/alert_processing_rules/methods/AlertProcessingRules_Delete'
paths:
  /providers/Microsoft.AlertsManagement/operations?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: Operations_List
      description: List all operations available through Azure Alerts Management Resource Provider.
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Successfully retrieved operations list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operationsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /providers/Microsoft.AlertsManagement/alertsMetaData?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: Alerts_MetaData
      description: List alerts meta data information based on value of identifier parameter.
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/identifier'
      responses:
        '200':
          description: OK. Successfully listed alert meta data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alertsMetaData'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: Alerts_GetAll
      description: 'List all existing alerts, where the results can be filtered on the basis of multiple parameters (e.g. time range). The results can then be sorted on the basis specific fields, with the default being lastModifiedDateTime. '
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/targetResource'
        - $ref: '#/components/parameters/targetResourceType'
        - $ref: '#/components/parameters/targetResourceGroup'
        - $ref: '#/components/parameters/monitorService'
        - $ref: '#/components/parameters/monitorCondition'
        - $ref: '#/components/parameters/severity'
        - $ref: '#/components/parameters/alertState'
        - $ref: '#/components/parameters/alertRule'
        - $ref: '#/components/parameters/smartGroupIdFilter'
        - $ref: '#/components/parameters/includeContext'
        - $ref: '#/components/parameters/includeEgressConfig'
        - $ref: '#/components/parameters/pageCount'
        - $ref: '#/components/parameters/alertsSortBy'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/timeRange'
        - $ref: '#/components/parameters/customTimeRange'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Successfully listed alert objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alertsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: Alerts_GetById
      summary: Get a specific alert.
      description: Get information related to a specific alert
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Returns the alert with the specified ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/changestate?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    post:
      operationId: Alerts_ChangeState
      description: Change the state of an alert.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/newState'
      requestBody:
        description: reason of change alert state
        required: false
        x-ms-requestBody-name: comment
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: OK. Alert state updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/history?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: Alerts_GetHistory
      description: Get the history of an alert, which captures any monitor condition changes (Fired/Resolved) and alert state changes (New/Acknowledged/Closed).
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Returns the history of the specified alert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alertModification'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alertsSummary?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: Alerts_GetSummary
      description: Get a summarized count of your alerts grouped by various parameters (e.g. grouping by 'Severity' returns the count of alerts for each severity).
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/alertsSummaryGroupBy'
        - $ref: '#/components/parameters/includeSmartGroupsCount'
        - $ref: '#/components/parameters/targetResource'
        - $ref: '#/components/parameters/targetResourceType'
        - $ref: '#/components/parameters/targetResourceGroup'
        - $ref: '#/components/parameters/monitorService'
        - $ref: '#/components/parameters/monitorCondition'
        - $ref: '#/components/parameters/severity'
        - $ref: '#/components/parameters/alertState'
        - $ref: '#/components/parameters/alertRule'
        - $ref: '#/components/parameters/timeRange'
        - $ref: '#/components/parameters/customTimeRange'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Alert summary returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alertsSummary'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: SmartGroups_GetAll
      summary: Get all Smart Groups within a specified subscription
      description: 'List all the Smart Groups within a specified subscription. '
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/targetResource'
        - $ref: '#/components/parameters/targetResourceGroup'
        - $ref: '#/components/parameters/targetResourceType'
        - $ref: '#/components/parameters/monitorService'
        - $ref: '#/components/parameters/monitorCondition'
        - $ref: '#/components/parameters/severity'
        - $ref: '#/components/parameters/smartGroupState'
        - $ref: '#/components/parameters/timeRange'
        - $ref: '#/components/parameters/pageCount'
        - $ref: '#/components/parameters/smartGroupsSortBy'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Returns list of all smartGroups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartGroupsList'
                description: List of smart groups in value property.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: smart_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: SmartGroups_GetById
      summary: Get information related to a specific Smart Group.
      description: Get information related to a specific Smart Group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/smartGroupId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Returns the group with the specified smart group Id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartGroup'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: smart_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/changeState?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    post:
      operationId: SmartGroups_ChangeState
      description: Change the state of a Smart Group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/smartGroupId'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/newState'
      responses:
        '200':
          description: OK. Smart Group state updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartGroup'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: smart_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/history?api-version=2019-05-05-preview:
    x-api-version: 2019-05-05-preview
    get:
      operationId: SmartGroups_GetHistory
      description: Get the history a smart group, which captures any Smart Group state changes (New/Acknowledged/Closed) .
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/smartGroupId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Returns the list of changes of smart group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartGroupModification'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: smart_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/actionRules?api-version=2021-08-08:
    x-api-version: '2021-08-08'
    get:
      description: List all alert processing rules in a subscription.
      operationId: AlertProcessingRules_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Return the list of alert processing rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertProcessingRulesList'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: alert_processing_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/actionRules?api-version=2021-08-08:
    x-api-version: '2021-08-08'
    get:
      operationId: AlertProcessingRules_ListByResourceGroup
      description: List all alert processing rules in a resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Return the list of alert processing rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertProcessingRulesList'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: alert_processing_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/actionRules/{alertProcessingRuleName}?api-version=2021-08-08:
    x-api-version: '2021-08-08'
    get:
      description: Get an alert processing rule by name.
      operationId: AlertProcessingRules_GetByName
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: alertProcessingRuleName
          in: path
          description: The name of the alert processing rule that needs to be fetched.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. Returns the specific alert processing rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertProcessingRule'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alert_processing_rules
      x-stackQL-verb: exec
    put:
      operationId: AlertProcessingRules_CreateOrUpdate
      description: Create or update an alert processing rule.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: alertProcessingRuleName
          in: path
          description: The name of the alert processing rule that needs to be created/updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Alert processing rule to be created/updated.
        required: true
        x-ms-requestBody-name: alertProcessingRule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertProcessingRule'
      responses:
        '200':
          description: OK. Returns the updated alert processing rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertProcessingRule'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        '201':
          description: Created. Returns the created alert processing rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertProcessingRule'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alert_processing_rules
      x-stackQL-verb: insert
    delete:
      description: Delete an alert processing rule.
      operationId: AlertProcessingRules_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: alertProcessingRuleName
          in: path
          description: The name of the alert processing rule that needs to be deleted.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Successful request to delete an alert processing rule.
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        '204':
          description: 'No content: the request was successful, but the response is empty.'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alert_processing_rules
      x-stackQL-verb: delete
    patch:
      description: Enable, disable, or update tags for an alert processing rule.
      operationId: AlertProcessingRules_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: alertProcessingRuleName
          in: path
          description: The name that needs to be updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: alertProcessingRulePatch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchObject'
      responses:
        '200':
          description: OK. Returns the created/updated alert processing rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertProcessingRule'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: Service generated Request ID.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-stackQL-resource: alert_processing_rules
      x-stackQL-verb: exec
