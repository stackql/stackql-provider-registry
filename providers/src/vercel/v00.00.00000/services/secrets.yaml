openapi: 3.0.3
servers:
  - url: 'https://api.vercel.com'
    description: Production API
info:
  contact:
    email: support@vercel.com
    name: Vercel Support
    url: 'https://vercel.com/support'
  version: 0.0.1
  title: Vercel API - secrets
  description: secrets
components:
  schemas:
    Pagination:
      properties:
        count:
          type: number
          description: Amount of items in the current page.
          example: 20
        next:
          nullable: true
          type: number
          description: Timestamp that must be used to request the next page.
          example: 1540095775951
        prev:
          nullable: true
          type: number
          description: Timestamp that must be used to request the previous page.
          example: 1540095775951
      required:
        - count
        - next
        - prev
      type: object
      description: 'This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.'
  responses: {}
  securitySchemes:
    bearerToken:
      type: http
      description: Default authentication mechanism
      scheme: bearer
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://api.vercel.com/oauth/authorize'
          tokenUrl: 'https://api.vercel.com/oauth/access_token'
          scopes: {}
  x-stackQL-resources:
    secrets:
      id: vercel.secrets.secrets
      name: secrets
      title: Secrets
      methods:
        get_secrets:
          operation:
            $ref: '#/paths/~1v3~1secrets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.secrets
        _get_secrets:
          operation:
            $ref: '#/paths/~1v3~1secrets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_secret:
          operation:
            $ref: '#/paths/~1v2~1secrets~1{name}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename_secret:
          operation:
            $ref: '#/paths/~1v2~1secrets~1{name}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_secret:
          operation:
            $ref: '#/paths/~1v3~1secrets~1{idOrName}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_secret:
          operation:
            $ref: '#/paths/~1v2~1secrets~1{idOrName}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/get_secret'
          - $ref: '#/components/x-stackQL-resources/secrets/methods/get_secrets'
        insert:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/create_secret'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/delete_secret'
paths:
  /v3/secrets:
    get:
      description: Retrieves the active Vercel secrets for the authenticated user or team. By default it returns 20 secrets. The rest can be retrieved using the pagination options. The body will contain an entry for each secret.
      operationId: getSecrets
      security:
        - bearerToken: []
      summary: List secrets
      tags:
        - secrets
      responses:
        '200':
          description: Successful response retrieving a list of secrets.
          content:
            application/json:
              schema:
                properties:
                  secrets:
                    items:
                      properties:
                        created:
                          type: string
                          format: date-time
                          description: The date when the secret was created.
                          example: '2021-02-10T13:11:49.180Z'
                        name:
                          type: string
                          description: The name of the secret.
                          example: my-api-key
                        teamId:
                          nullable: true
                          type: string
                          description: The unique identifier of the team the secret was created for.
                          example: team_LLHUOMOoDlqOp8wPE4kFo9pE
                        uid:
                          type: string
                          description: The unique identifier of the secret.
                          example: sec_XCG7t7AIHuO2SBA8667zNUiM
                        userId:
                          type: string
                          description: The unique identifier of the user who created the secret.
                          example: 2qDDuGFTWXBLDNnqZfWPDp1A
                        value:
                          type: string
                          description: The value of the secret.
                        createdAt:
                          type: number
                          description: Timestamp for when the secret was created.
                          example: 1609492210000
                        projectId:
                          type: string
                          description: The unique identifier of the project which the secret belongs to.
                          example: prj_2WjyKQmM8ZnGcJsPWMrHRHrE
                        decryptable:
                          type: boolean
                          description: Indicates whether the secret value can be decrypted after it has been created.
                          example: true
                      required:
                        - created
                        - name
                        - uid
                      type: object
                      description: Data representing a secret.
                    type: array
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - secrets
                  - pagination
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: id
          description: Filter out secrets based on comma separated secret ids.
          in: query
          schema:
            description: Filter out secrets based on comma separated secret ids.
            type: string
            example: 'sec_RKc5iV0rV3ZSrFrHiruRno7k,sec_fGc5iV0rV3ZSrFrHiruRnouQ'
            deprecated: true
        - name: projectId
          description: Filter out secrets that belong to a project.
          in: query
          schema:
            description: Filter out secrets that belong to a project.
            type: string
            example: prj_2WjyKQmM8ZnGcJsPWMrHRHrE
            deprecated: true
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
  '/v2/secrets/{name}':
    post:
      description: Allows to create a new secret.
      operationId: createSecret
      security:
        - bearerToken: []
      summary: Create a new secret
      tags:
        - secrets
      responses:
        '200':
          description: Successful response showing the created secret.
          content:
            application/json:
              schema:
                properties:
                  value:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - Buffer
                      data:
                        type: array
                        items:
                          type: number
                  created:
                    type: string
                    format: date-time
                    description: The date when the secret was created.
                    example: '2021-02-10T13:11:49.180Z'
                  name:
                    type: string
                    description: The name of the secret.
                    example: my-api-key
                  teamId:
                    nullable: true
                    type: string
                    description: The unique identifier of the team the secret was created for.
                    example: team_LLHUOMOoDlqOp8wPE4kFo9pE
                  uid:
                    type: string
                    description: The unique identifier of the secret.
                    example: sec_XCG7t7AIHuO2SBA8667zNUiM
                  userId:
                    type: string
                    description: The unique identifier of the user who created the secret.
                    example: 2qDDuGFTWXBLDNnqZfWPDp1A
                  createdAt:
                    type: number
                    description: Timestamp for when the secret was created.
                    example: 1609492210000
                  projectId:
                    type: string
                    description: The unique identifier of the project which the secret belongs to.
                    example: prj_2WjyKQmM8ZnGcJsPWMrHRHrE
                  decryptable:
                    type: boolean
                    description: Indicates whether the secret value can be decrypted after it has been created.
                    example: true
                required:
                  - value
                  - created
                  - name
                  - uid
                type: object
        '400':
          description: One of the provided values in the request body is invalid.
        '401':
          description: ''
        '402':
          description: |-
            The account was soft-blocked for an unhandled reason.
            The account is missing a payment so payment method must be updated
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: name
          description: The name of the secret.
          in: path
          required: true
          schema:
            type: string
            description: The name of the secret.
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              type: object
              required:
                - name
                - value
              properties:
                name:
                  description: The name of the secret (max 100 characters).
                  type: string
                  example: my-api-key
                  maximum: 100
                value:
                  description: The value of the new secret.
                  type: string
                  example: some secret value
                decryptable:
                  description: Whether the secret value can be decrypted after it has been created.
                  type: boolean
                  example: true
                projectId:
                  description: Associate a secret to a project.
                  type: string
                  example: prj_2WjyKQmM8ZnGcJsPWMrHRHrE
                  deprecated: true
    patch:
      description: Enables to edit the name of a secret. The name has to be unique to the user or team’s secrets.
      operationId: renameSecret
      security:
        - bearerToken: []
      summary: Change secret name
      tags:
        - secrets
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  uid:
                    type: string
                  name:
                    type: string
                  created:
                    type: string
                    format: date-time
                  oldName:
                    type: string
                required:
                  - uid
                  - name
                  - created
                  - oldName
                type: object
        '400':
          description: |-
            One of the provided values in the request body is invalid.
            One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: name
          description: The name of the secret.
          in: path
          required: true
          schema:
            description: The name of the secret.
            type: string
            example: my-api-key
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              type: object
              required:
                - name
              properties:
                name:
                  description: The name of the new secret.
                  type: string
                  example: my-api-key
                  maximum: 100
  '/v3/secrets/{idOrName}':
    get:
      description: Retrieves the information for a specific secret by passing either the secret id or name in the URL.
      operationId: getSecret
      security:
        - bearerToken: []
      summary: Get a single secret
      tags:
        - secrets
      responses:
        '200':
          description: Successful response retrieving a secret.
          content:
            application/json:
              schema:
                properties:
                  created:
                    type: string
                    format: date-time
                    description: The date when the secret was created.
                    example: '2021-02-10T13:11:49.180Z'
                  name:
                    type: string
                    description: The name of the secret.
                    example: my-api-key
                  teamId:
                    nullable: true
                    type: string
                    description: The unique identifier of the team the secret was created for.
                    example: team_LLHUOMOoDlqOp8wPE4kFo9pE
                  uid:
                    type: string
                    description: The unique identifier of the secret.
                    example: sec_XCG7t7AIHuO2SBA8667zNUiM
                  userId:
                    type: string
                    description: The unique identifier of the user who created the secret.
                    example: 2qDDuGFTWXBLDNnqZfWPDp1A
                  value:
                    type: string
                    description: The value of the secret.
                  createdAt:
                    type: number
                    description: Timestamp for when the secret was created.
                    example: 1609492210000
                  projectId:
                    type: string
                    description: The unique identifier of the project which the secret belongs to.
                    example: prj_2WjyKQmM8ZnGcJsPWMrHRHrE
                  decryptable:
                    type: boolean
                    description: Indicates whether the secret value can be decrypted after it has been created.
                    example: true
                required:
                  - created
                  - name
                  - uid
                type: object
                description: Data representing a secret.
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: ''
      parameters:
        - name: idOrName
          description: The name or the unique identifier to which the secret belongs to.
          in: path
          required: true
          schema:
            description: The name or the unique identifier to which the secret belongs to.
            type: string
            example: sec_RKc5iV0rV3ZSrFrHiruRno7k
        - name: decrypt
          description: Whether to try to decrypt the value of the secret. Only works if `decryptable` has been set to `true` when the secret was created.
          in: query
          required: false
          schema:
            description: Whether to try to decrypt the value of the secret. Only works if `decryptable` has been set to `true` when the secret was created.
            type: string
            enum:
              - 'true'
              - 'false'
            example: 'true'
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
  '/v2/secrets/{idOrName}':
    delete:
      description: This deletes the user or team’s secret defined in the URL.
      operationId: deleteSecret
      security:
        - bearerToken: []
      summary: Delete a secret
      tags:
        - secrets
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  uid:
                    type: string
                    description: The unique identifier of the deleted secret.
                    example: sec_XCG7t7AIHuO2SBA8667zNUiM
                  name:
                    type: string
                    description: The name of the deleted secret.
                    example: my-api-key
                  created:
                    type: number
                    description: The date when the secret was created.
                    example: '2021-02-10T13:11:49.180Z'
                required:
                  - uid
                  - name
                  - created
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: idOrName
          description: The name or the unique identifier to which the secret belongs to.
          in: path
          required: true
          schema:
            description: The name or the unique identifier to which the secret belongs to.
            type: string
            example: sec_RKc5iV0rV3ZSrFrHiruRno7k
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
