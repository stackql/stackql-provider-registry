openapi: 3.0.3
servers:
  - url: 'https://api.vercel.com'
    description: Production API
info:
  contact:
    email: support@vercel.com
    name: Vercel Support
    url: 'https://vercel.com/support'
  version: 0.0.1
  title: Vercel API - domains
  description: domains
components:
  schemas:
    Pagination:
      properties:
        count:
          type: number
          description: Amount of items in the current page.
          example: 20
        next:
          nullable: true
          type: number
          description: Timestamp that must be used to request the next page.
          example: 1540095775951
        prev:
          nullable: true
          type: number
          description: Timestamp that must be used to request the previous page.
          example: 1540095775951
      required:
        - count
        - next
        - prev
      type: object
      description: 'This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.'
  responses: {}
  securitySchemes:
    bearerToken:
      type: http
      description: Default authentication mechanism
      scheme: bearer
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://api.vercel.com/oauth/authorize'
          tokenUrl: 'https://api.vercel.com/oauth/access_token'
          scopes: {}
  x-stackQL-resources:
    domains:
      id: vercel.domains.domains
      name: domains
      title: Domains
      methods:
        buy_domain:
          operation:
            $ref: '#/paths/~1v4~1domains~1buy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_domain:
          operation:
            $ref: '#/paths/~1v5~1domains~1{domain}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.domain
        _get_domain:
          operation:
            $ref: '#/paths/~1v5~1domains~1{domain}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_domains:
          operation:
            $ref: '#/paths/~1v5~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.domains
        _get_domains:
          operation:
            $ref: '#/paths/~1v5~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_transfer_domain:
          operation:
            $ref: '#/paths/~1v5~1domains/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch_domain:
          operation:
            $ref: '#/paths/~1v3~1domains~1{domain}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_domain:
          operation:
            $ref: '#/paths/~1v6~1domains~1{domain}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains/methods/get_domain'
          - $ref: '#/components/x-stackQL-resources/domains/methods/get_domains'
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create_or_transfer_domain'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete_domain'
    price:
      id: vercel.domains.price
      name: price
      title: Price
      methods:
        check_domain_price:
          operation:
            $ref: '#/paths/~1v4~1domains~1price/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/price/methods/check_domain_price'
        insert: []
        update: []
        delete: []
    status:
      id: vercel.domains.status
      name: status
      title: Status
      methods:
        check_domain_status:
          operation:
            $ref: '#/paths/~1v4~1domains~1status/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/status/methods/check_domain_status'
        insert: []
        update: []
        delete: []
    domain_registry:
      id: vercel.domains.domain_registry
      name: domain_registry
      title: Domain Registry
      methods:
        get_domain_transfer:
          operation:
            $ref: '#/paths/~1v1~1domains~1{domain}~1registry/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_registry/methods/get_domain_transfer'
        insert: []
        update: []
        delete: []
    config:
      id: vercel.domains.config
      name: config
      title: Config
      methods:
        get_domain_config:
          operation:
            $ref: '#/paths/~1v6~1domains~1{domain}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/config/methods/get_domain_config'
        insert: []
        update: []
        delete: []
paths:
  /v4/domains/buy:
    post:
      description: Allows to purchase the specified domain.
      operationId: buyDomain
      security:
        - bearerToken: []
      summary: Purchase a domain
      tags:
        - domains
      responses:
        '201':
          description: Successful response for purchasing a Domain.
          content:
            application/json:
              schema:
                properties:
                  domain:
                    properties:
                      uid:
                        type: string
                      ns:
                        items:
                          type: string
                        type: array
                      verified:
                        type: boolean
                      created:
                        type: number
                      pending:
                        type: boolean
                    required:
                      - uid
                      - ns
                      - verified
                      - created
                      - pending
                    type: object
                required:
                  - domain
                type: object
        '202':
          description: Domain purchase is being processed asynchronously.
          content:
            application/json:
              schema:
                properties:
                  domain:
                    properties:
                      uid:
                        type: string
                      ns:
                        items:
                          type: string
                        type: array
                      verified:
                        type: boolean
                      created:
                        type: number
                      pending:
                        type: boolean
                    required:
                      - uid
                      - ns
                      - verified
                      - created
                      - pending
                    type: object
                required:
                  - domain
                type: object
        '400':
          description: One of the provided values in the request body is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '409':
          description: ''
        '429':
          description: ''
      parameters:
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              type: object
              required:
                - name
              properties:
                name:
                  description: The domain name to purchase.
                  type: string
                  example: example.com
                expectedPrice:
                  description: The price you expect to be charged for the purchase.
                  type: number
                  example: 10
                renew:
                  description: Indicates whether the domain should be automatically renewed.
                  type: boolean
                  example: true
  /v4/domains/price:
    get:
      description: Check the price to purchase a domain and how long a single purchase period is.
      operationId: checkDomainPrice
      security:
        - bearerToken: []
      summary: Check the price for a domain
      tags:
        - domains
      responses:
        '200':
          description: Successful response which returns the price of the domain and the period.
          content:
            application/json:
              schema:
                properties:
                  price:
                    type: number
                    description: The domain price in USD.
                    example: 20
                  period:
                    type: number
                    description: The number of years the domain could be held before paying again.
                    example: 1
                required:
                  - price
                  - period
                type: object
                description: Successful response which returns the price of the domain and the period.
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: name
          description: The name of the domain for which the price needs to be checked.
          in: query
          required: true
          schema:
            description: The name of the domain for which the price needs to be checked.
            type: string
            example: example.com
        - name: type
          description: In which status of the domain the price needs to be checked.
          in: query
          required: false
          schema:
            description: In which status of the domain the price needs to be checked.
            type: string
            enum:
              - new
              - renewal
            example: new
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
  /v4/domains/status:
    get:
      description: Check if a domain name is available for purchase.
      operationId: checkDomainStatus
      security:
        - bearerToken: []
      summary: Check a Domain Availability
      tags:
        - domains
      responses:
        '200':
          description: Successful response checking if a Domain's name is available.
          content:
            application/json:
              schema:
                properties:
                  available:
                    type: boolean
                required:
                  - available
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: name
          description: The name of the domain for which we would like to check the status.
          in: query
          required: true
          schema:
            description: The name of the domain for which we would like to check the status.
            type: string
            example: example.com
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
  '/v1/domains/{domain}/registry':
    get:
      description: Fetch domain transfer availability or transfer status if a transfer is in progress.
      operationId: getDomainTransfer
      security:
        - bearerToken: []
      summary: Get domain transfer info.
      tags:
        - domains
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  transferable:
                    type: boolean
                    description: Whether or not the domain is transferable
                  transferPolicy:
                    nullable: true
                    type: string
                    enum:
                      - charge-and-renew
                      - no-charge-no-change
                      - no-change
                      - new-term
                      - not-supported
                    description: 'The domain''s transfer policy (depends on TLD requirements). `charge-and-renew`: transfer will charge for renewal and will renew the existing domain''s registration. `no-charge-no-change`: transfer will have no change to registration period and does not require charge. `no-change`: transfer charge is required, but no change in registration period. `new-term`: transfer charge is required and a new registry term is set based on the transfer date. `not-supported`: transfers are not supported for this domain or TLD. `null`: This TLD is not supported by Vercel''s Registrar.'
                  reason:
                    type: string
                    description: Description associated with transferable state.
                  status:
                    type: string
                    enum:
                      - pending_owner
                      - pending_admin
                      - pending_registry
                      - completed
                      - cancelled
                      - undef
                      - unknown
                    description: 'The current state of an ongoing transfer. `pending_owner`: Awaiting approval by domain''s admin contact (every transfer begins with this status). If approval is not given within five days, the transfer is cancelled. `pending_admin`: Waiting for approval by Vercel Registrar admin. `pending_registry`: Awaiting registry approval (the transfer completes after 7 days unless it is declined by the current registrar). `completed`: The transfer completed successfully. `cancelled`: The transfer was cancelled. `undef`: No transfer exists for this domain. `unknown`: This TLD is not supported by Vercel''s Registrar.'
                required:
                  - transferable
                  - transferPolicy
                  - reason
                  - status
                type: object
        '400':
          description: ''
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: domain
          description: The name of the domain.
          in: path
          required: true
          schema:
            type: string
            description: The name of the domain.
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
  '/v6/domains/{domain}/config':
    get:
      description: Get a Domain's configuration.
      operationId: getDomainConfig
      security:
        - bearerToken: []
      summary: Get a Domain's configuration
      tags:
        - domains
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  configuredBy:
                    nullable: true
                    type: string
                    enum:
                      - CNAME
                      - A
                      - http
                    description: 'How we see the domain''s configuration. - `CNAME`: Domain has a CNAME pointing to Vercel. - `A`: Domain''s A record is resolving to Vercel. - `http`: Domain is resolving to Vercel but may be behind a Proxy. - `null`: Domain is not resolving to Vercel.'
                  acceptedChallenges:
                    items:
                      type: string
                      enum:
                        - dns-01
                        - http-01
                      description: Which challenge types the domain can use for issuing certs.
                    type: array
                    description: Which challenge types the domain can use for issuing certs.
                  misconfigured:
                    type: boolean
                    description: Whether or not the domain is configured AND we can automatically generate a TLS certificate.
                required:
                  - misconfigured
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: domain
          description: The name of the domain.
          in: path
          required: true
          schema:
            description: The name of the domain.
            type: string
            example: example.com
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
  '/v5/domains/{domain}':
    get:
      description: Get information for a single domain in an account or team.
      operationId: getDomain
      security:
        - bearerToken: []
      summary: Get Information for a Single Domain
      tags:
        - domains
      responses:
        '200':
          description: Successful response retrieving an information for a specific domains.
          content:
            application/json:
              schema:
                properties:
                  domain:
                    properties:
                      suffix:
                        type: boolean
                      verified:
                        type: boolean
                        description: If the domain has the ownership verified.
                        example: true
                      nameservers:
                        items:
                          type: string
                        type: array
                        description: A list of the current nameservers of the domain.
                        example:
                          - ns1.nameserver.net
                          - ns2.nameserver.net
                      intendedNameservers:
                        items:
                          type: string
                        type: array
                        description: A list of the intended nameservers for the domain to point to Vercel DNS.
                        example:
                          - ns1.vercel-dns.com
                          - ns2.vercel-dns.com
                      customNameservers:
                        items:
                          type: string
                        type: array
                        description: A list of custom nameservers for the domain to point to. Only applies to domains purchased with Vercel.
                        example:
                          - ns1.nameserver.net
                          - ns2.nameserver.net
                      creator:
                        properties:
                          username:
                            type: string
                          email:
                            type: string
                          customerId:
                            nullable: true
                            type: string
                          isDomainReseller:
                            type: boolean
                          id:
                            type: string
                        required:
                          - username
                          - email
                          - id
                        type: object
                        description: 'An object containing information of the domain creator, including the user''s id, username, and email.'
                        example:
                          id: ZspSRT4ljIEEmMHgoDwKWDei
                          username: vercel_user
                          email: demo@example.com
                      boughtAt:
                        nullable: true
                        type: number
                        description: 'If it was purchased through Vercel, the timestamp in milliseconds when it was purchased.'
                        example: 1613602938882
                      createdAt:
                        type: number
                        description: Timestamp in milliseconds when the domain was created in the registry.
                        example: 1613602938882
                      expiresAt:
                        nullable: true
                        type: number
                        description: Timestamp in milliseconds at which the domain is set to expire. `null` if not bought with Vercel.
                        example: 1613602938882
                      id:
                        type: string
                        description: The unique identifier of the domain.
                        example: EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1
                      name:
                        type: string
                        description: The domain name.
                        example: example.com
                      orderedAt:
                        type: number
                        description: Timestamp in milliseconds at which the domain was ordered.
                        example: 1613602938882
                      renew:
                        type: boolean
                        description: Indicates whether the domain is set to automatically renew.
                        example: true
                      serviceType:
                        type: string
                        enum:
                          - zeit.world
                          - external
                          - na
                        description: 'The type of service the domain is handled by. `external` if the DNS is externally handled, `zeit.world` if handled with Vercel, or `na` if the service is not available.'
                        example: zeit.world
                      transferredAt:
                        nullable: true
                        type: number
                        description: Timestamp in milliseconds at which the domain was successfully transferred into Vercel. `null` if the transfer is still processing or was never transferred in.
                        example: 1613602938882
                      transferStartedAt:
                        type: number
                        description: 'If transferred into Vercel, timestamp in milliseconds when the domain transfer was initiated.'
                        example: 1613602938882
                    required:
                      - suffix
                      - verified
                      - nameservers
                      - intendedNameservers
                      - creator
                      - boughtAt
                      - createdAt
                      - expiresAt
                      - id
                      - name
                      - serviceType
                    type: object
                required:
                  - domain
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: ''
      parameters:
        - name: domain
          description: The name of the domain.
          in: path
          required: true
          schema:
            description: The name of the domain.
            type: string
            example: example.com
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
  /v5/domains:
    get:
      description: Retrieves a list of domains registered for the authenticated user or team. By default it returns the last 20 domains if no limit is provided.
      operationId: getDomains
      security:
        - bearerToken: []
      summary: List all the domains
      tags:
        - domains
      responses:
        '200':
          description: Successful response retrieving a list of domains.
          content:
            application/json:
              schema:
                properties:
                  domains:
                    items:
                      properties:
                        verified:
                          type: boolean
                          description: If the domain has the ownership verified.
                          example: true
                        nameservers:
                          items:
                            type: string
                          type: array
                          description: A list of the current nameservers of the domain.
                          example:
                            - ns1.nameserver.net
                            - ns2.nameserver.net
                        intendedNameservers:
                          items:
                            type: string
                          type: array
                          description: A list of the intended nameservers for the domain to point to Vercel DNS.
                          example:
                            - ns1.vercel-dns.com
                            - ns2.vercel-dns.com
                        customNameservers:
                          items:
                            type: string
                          type: array
                          description: A list of custom nameservers for the domain to point to. Only applies to domains purchased with Vercel.
                          example:
                            - ns1.nameserver.net
                            - ns2.nameserver.net
                        creator:
                          properties:
                            username:
                              type: string
                            email:
                              type: string
                            customerId:
                              nullable: true
                              type: string
                            isDomainReseller:
                              type: boolean
                            id:
                              type: string
                          required:
                            - username
                            - email
                            - id
                          type: object
                          description: 'An object containing information of the domain creator, including the user''s id, username, and email.'
                          example:
                            id: ZspSRT4ljIEEmMHgoDwKWDei
                            username: vercel_user
                            email: demo@example.com
                        renew:
                          type: boolean
                          description: Indicates whether the domain is set to automatically renew.
                          example: true
                        boughtAt:
                          nullable: true
                          type: number
                          description: 'If it was purchased through Vercel, the timestamp in milliseconds when it was purchased.'
                          example: 1613602938882
                        createdAt:
                          type: number
                          description: Timestamp in milliseconds when the domain was created in the registry.
                          example: 1613602938882
                        expiresAt:
                          nullable: true
                          type: number
                          description: Timestamp in milliseconds at which the domain is set to expire. `null` if not bought with Vercel.
                          example: 1613602938882
                        id:
                          type: string
                          description: The unique identifier of the domain.
                          example: EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1
                        name:
                          type: string
                          description: The domain name.
                          example: example.com
                        orderedAt:
                          type: number
                          description: Timestamp in milliseconds at which the domain was ordered.
                          example: 1613602938882
                        serviceType:
                          type: string
                          enum:
                            - zeit.world
                            - external
                            - na
                          description: 'The type of service the domain is handled by. `external` if the DNS is externally handled, `zeit.world` if handled with Vercel, or `na` if the service is not available.'
                          example: zeit.world
                        transferredAt:
                          nullable: true
                          type: number
                          description: Timestamp in milliseconds at which the domain was successfully transferred into Vercel. `null` if the transfer is still processing or was never transferred in.
                          example: 1613602938882
                        transferStartedAt:
                          type: number
                          description: 'If transferred into Vercel, timestamp in milliseconds when the domain transfer was initiated.'
                          example: 1613602938882
                      required:
                        - verified
                        - nameservers
                        - intendedNameservers
                        - creator
                        - boughtAt
                        - createdAt
                        - expiresAt
                        - id
                        - name
                        - serviceType
                      type: object
                    type: array
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - domains
                  - pagination
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '409':
          description: ''
      parameters:
        - name: limit
          description: Maximum number of domains to list from a request.
          in: query
          schema:
            description: Maximum number of domains to list from a request.
            type: number
            example: 20
        - name: since
          description: Get domains created after this JavaScript timestamp.
          in: query
          schema:
            description: Get domains created after this JavaScript timestamp.
            type: number
            example: 1609499532000
        - name: until
          description: Get domains created before this JavaScript timestamp.
          in: query
          schema:
            description: Get domains created before this JavaScript timestamp.
            type: number
            example: 1612264332000
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
    post:
      description: This endpoint is used for adding a new apex domain name with Vercel for the authenticating user. Can also be used for initiating a domain transfer request from an external Registrar to Vercel.
      operationId: createOrTransferDomain
      security:
        - bearerToken: []
      summary: Register or transfer-in a new Domain
      tags:
        - domains
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  domain:
                    properties:
                      verified:
                        type: boolean
                        description: If the domain has the ownership verified.
                        example: true
                      nameservers:
                        items:
                          type: string
                        type: array
                        description: A list of the current nameservers of the domain.
                        example:
                          - ns1.nameserver.net
                          - ns2.nameserver.net
                      intendedNameservers:
                        items:
                          type: string
                        type: array
                        description: A list of the intended nameservers for the domain to point to Vercel DNS.
                        example:
                          - ns1.vercel-dns.com
                          - ns2.vercel-dns.com
                      customNameservers:
                        items:
                          type: string
                        type: array
                        description: A list of custom nameservers for the domain to point to. Only applies to domains purchased with Vercel.
                        example:
                          - ns1.nameserver.net
                          - ns2.nameserver.net
                      creator:
                        properties:
                          username:
                            type: string
                          email:
                            type: string
                          customerId:
                            nullable: true
                            type: string
                          isDomainReseller:
                            type: boolean
                          id:
                            type: string
                        required:
                          - username
                          - email
                          - id
                        type: object
                        description: 'An object containing information of the domain creator, including the user''s id, username, and email.'
                        example:
                          id: ZspSRT4ljIEEmMHgoDwKWDei
                          username: vercel_user
                          email: demo@example.com
                      id:
                        type: string
                        description: The unique identifier of the domain.
                        example: EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1
                      boughtAt:
                        nullable: true
                        type: number
                        description: 'If it was purchased through Vercel, the timestamp in milliseconds when it was purchased.'
                        example: 1613602938882
                      createdAt:
                        type: number
                        description: Timestamp in milliseconds when the domain was created in the registry.
                        example: 1613602938882
                      expiresAt:
                        nullable: true
                        type: number
                        description: Timestamp in milliseconds at which the domain is set to expire. `null` if not bought with Vercel.
                        example: 1613602938882
                      name:
                        type: string
                        description: The domain name.
                        example: example.com
                      orderedAt:
                        type: number
                        description: Timestamp in milliseconds at which the domain was ordered.
                        example: 1613602938882
                      renew:
                        type: boolean
                        description: Indicates whether the domain is set to automatically renew.
                        example: true
                      serviceType:
                        type: string
                        enum:
                          - zeit.world
                          - external
                          - na
                        description: 'The type of service the domain is handled by. `external` if the DNS is externally handled, `zeit.world` if handled with Vercel, or `na` if the service is not available.'
                        example: zeit.world
                      transferredAt:
                        nullable: true
                        type: number
                        description: Timestamp in milliseconds at which the domain was successfully transferred into Vercel. `null` if the transfer is still processing or was never transferred in.
                        example: 1613602938882
                      transferStartedAt:
                        type: number
                        description: 'If transferred into Vercel, timestamp in milliseconds when the domain transfer was initiated.'
                        example: 1613602938882
                    required:
                      - verified
                      - nameservers
                      - intendedNameservers
                      - creator
                      - id
                      - boughtAt
                      - createdAt
                      - expiresAt
                      - name
                      - serviceType
                    type: object
                required:
                  - domain
                type: object
        '400':
          description: One of the provided values in the request body is invalid.
        '401':
          description: ''
        '402':
          description: |-
            The account was soft-blocked for an unhandled reason.
            The account is missing a payment so payment method must be updated
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: ''
        '409':
          description: ''
      parameters:
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                method:
                  description: The domain operation to perform. It can be either `add` or `transfer-in`.
                  type: string
                  example: transfer-in
              oneOf:
                - additionalProperties: false
                  type: object
                  description: add
                  required:
                    - name
                  properties:
                    name:
                      description: The domain name you want to add.
                      type: string
                      example: example.com
                    cdnEnabled:
                      description: Whether the domain has the Vercel Edge Network enabled or not.
                      type: boolean
                      example: true
                    zone:
                      type: boolean
                    method:
                      description: The domain operation to perform.
                      type: string
                      example: add
                - additionalProperties: false
                  type: object
                  description: move-in
                  required:
                    - method
                    - name
                  properties:
                    name:
                      description: The domain name you want to add.
                      type: string
                      example: example.com
                    method:
                      description: The domain operation to perform.
                      type: string
                      example: move-in
                    token:
                      description: The move-in token from Move Requested email.
                      type: string
                      example: fdhfr820ad#@FAdlj$$
                - additionalProperties: false
                  type: object
                  description: transfer-in
                  required:
                    - method
                    - name
                  properties:
                    name:
                      description: The domain name you want to add.
                      type: string
                      example: example.com
                    method:
                      description: The domain operation to perform.
                      type: string
                      example: transfer-in
                    authCode:
                      description: The authorization code assigned to the domain.
                      type: string
                      example: fdhfr820ad#@FAdlj$$
                    expectedPrice:
                      description: The price you expect to be charged for the required 1 year renewal.
                      type: number
                      example: 8
  '/v3/domains/{domain}':
    patch:
      description: Update or move apex domain.
      operationId: patchDomain
      security:
        - bearerToken: []
      summary: Update or move apex domain
      tags:
        - domains
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      moved:
                        type: boolean
                    required:
                      - moved
                    type: object
                  - properties:
                      moved:
                        type: boolean
                      token:
                        type: string
                    required:
                      - moved
                      - token
                    type: object
                  - properties:
                      renew:
                        type: boolean
                      customNameservers:
                        items:
                          type: string
                        type: array
                      zone:
                        type: boolean
                    type: object
        '400':
          description: |-
            One of the provided values in the request body is invalid.
            One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: ''
        '409':
          description: ''
      parameters:
        - name: domain
          description: The name of the domain.
          in: path
          required: true
          schema:
            type: string
            description: The name of the domain.
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  description: update
                  additionalProperties: false
                  properties:
                    op:
                      example: update
                      type: string
                    renew:
                      description: Specifies whether domain should be renewed.
                      type: boolean
                    customNameservers:
                      description: The custom nameservers for this project.
                      items:
                        type: string
                      maxItems: 4
                      minItems: 0
                      type: array
                      uniqueItems: true
                    zone:
                      description: Specifies whether this is a DNS zone that intends to use Vercel's nameservers.
                      type: boolean
                - type: object
                  description: move-out
                  additionalProperties: false
                  properties:
                    op:
                      example: move-out
                      type: string
                    destination:
                      description: User or team to move domain to
                      type: string
  '/v6/domains/{domain}':
    delete:
      description: Delete a previously registered domain name from Vercel. Deleting a domain will automatically remove any associated aliases.
      operationId: deleteDomain
      security:
        - bearerToken: []
      summary: Remove a domain by name
      tags:
        - domains
      responses:
        '200':
          description: Successful response removing a domain.
          content:
            application/json:
              schema:
                properties:
                  uid:
                    type: string
                required:
                  - uid
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: ''
        '409':
          description: ''
      parameters:
        - name: domain
          description: The name of the domain.
          in: path
          required: true
          schema:
            description: The name of the domain.
            type: string
            example: example.com
        - description: The Team identifier or slug to perform the request on behalf of.
          in: query
          name: teamId
          required: true
          schema:
            type: string
