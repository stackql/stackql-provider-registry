openapi: 3.0.3
servers:
  - url: 'https://api.vercel.com'
    description: Production API
info:
  contact:
    email: support@vercel.com
    name: Vercel Support
    url: 'https://vercel.com/support'
  version: 0.0.1
  title: Vercel API - teams
  description: teams
components:
  schemas:
    Team:
      type: object
      description: Data representing a Team.
      properties:
        id:
          type: string
          description: The Team's unique identifier.
          example: team_nllPyCtREAqxxdyFKbbMDlxd
        slug:
          type: string
          description: 'The Team''s slug, which is unique across the Vercel platform.'
          example: my-team
        name:
          nullable: true
          type: string
          description: 'Name associated with the Team account, or `null` if none has been provided.'
          example: My Team
        avatar:
          nullable: true
          type: string
          description: The ID of the file used as avatar for this Team.
          example: 6eb07268bcfadd309905ffb1579354084c24655c
      additionalProperties: true
    TeamLimited:
      properties:
        limited:
          type: boolean
          description: 'Property indicating that this Team data contains only limited information, due to the authentication token missing privileges to read the full Team data. Re-login with the Team''s configured SAML Single Sign-On provider in order to upgrade the authentication token with the necessary privileges.'
        saml:
          properties:
            connection:
              properties:
                type:
                  type: string
                  description: 'The Identity Provider "type", for example Okta.'
                  example: OktaSAML
                status:
                  type: string
                  description: Current status of the connection.
                  example: linked
                state:
                  type: string
                  description: Current state of the connection.
                  example: active
                connectedAt:
                  type: number
                  description: Timestamp (in milliseconds) of when the configuration was connected.
                  example: 1611796915677
                lastReceivedWebhookEvent:
                  type: number
                  description: Timestamp (in milliseconds) of when the last webhook event was received from WorkOS.
                  example: 1611796915677
              required:
                - type
                - status
                - state
                - connectedAt
              type: object
              description: Information for the SAML Single Sign-On configuration.
            directory:
              properties:
                type:
                  type: string
                  description: 'The Identity Provider "type", for example Okta.'
                  example: OktaSAML
                status:
                  type: string
                  description: Current status of the connection.
                  example: linked
                state:
                  type: string
                  description: Current state of the connection.
                  example: active
                connectedAt:
                  type: number
                  description: Timestamp (in milliseconds) of when the configuration was connected.
                  example: 1611796915677
                lastReceivedWebhookEvent:
                  type: number
                  description: Timestamp (in milliseconds) of when the last webhook event was received from WorkOS.
                  example: 1611796915677
              required:
                - type
                - status
                - state
                - connectedAt
              type: object
              description: Information for the SAML Single Sign-On configuration.
            enforced:
              type: boolean
              description: 'When `true`, interactions with the Team **must** be done with an authentication token that has been authenticated with the Team''s SAML Single Sign-On provider.'
          required:
            - enforced
          type: object
          description: 'When "Single Sign-On (SAML)" is configured, this object contains information that allows the client-side to identify whether or not this Team has SAML enforced.'
        id:
          type: string
          description: The Team's unique identifier.
          example: team_nllPyCtREAqxxdyFKbbMDlxd
        slug:
          type: string
          description: 'The Team''s slug, which is unique across the Vercel platform.'
          example: my-team
        name:
          nullable: true
          type: string
          description: 'Name associated with the Team account, or `null` if none has been provided.'
          example: My Team
        avatar:
          nullable: true
          type: string
          description: The ID of the file used as avatar for this Team.
          example: 6eb07268bcfadd309905ffb1579354084c24655c
        membership:
          oneOf:
            - properties:
                confirmed:
                  type: boolean
                confirmedAt:
                  type: number
                accessRequestedAt:
                  type: number
                role:
                  type: string
                  enum:
                    - OWNER
                    - MEMBER
                    - VIEWER
                    - DEVELOPER
                    - BILLING
                    - CONTRIBUTOR
                teamId:
                  type: string
                uid:
                  type: string
                createdAt:
                  type: number
                created:
                  type: number
                joinedFrom:
                  properties:
                    origin:
                      type: string
                      enum:
                        - link
                        - saml
                        - mail
                        - import
                        - teams
                        - github
                        - gitlab
                        - bitbucket
                        - dsync
                        - feedback
                        - organization-teams
                    commitId:
                      type: string
                    repoId:
                      type: string
                    repoPath:
                      type: string
                    gitUserId:
                      oneOf:
                        - type: string
                        - type: number
                    gitUserLogin:
                      type: string
                    ssoUserId:
                      type: string
                    ssoConnectedAt:
                      type: number
                    idpUserId:
                      type: string
                    dsyncUserId:
                      type: string
                    dsyncConnectedAt:
                      type: number
                  required:
                    - origin
                  type: object
              required:
                - confirmed
                - confirmedAt
                - role
                - uid
                - createdAt
                - created
              type: object
              description: The membership of the authenticated User in relation to the Team.
            - properties:
                confirmed:
                  type: boolean
                confirmedAt:
                  type: number
                accessRequestedAt:
                  type: number
                role:
                  type: string
                  enum:
                    - OWNER
                    - MEMBER
                    - VIEWER
                    - DEVELOPER
                    - BILLING
                    - CONTRIBUTOR
                teamId:
                  type: string
                uid:
                  type: string
                createdAt:
                  type: number
                created:
                  type: number
                joinedFrom:
                  properties:
                    origin:
                      type: string
                      enum:
                        - link
                        - saml
                        - mail
                        - import
                        - teams
                        - github
                        - gitlab
                        - bitbucket
                        - dsync
                        - feedback
                        - organization-teams
                    commitId:
                      type: string
                    repoId:
                      type: string
                    repoPath:
                      type: string
                    gitUserId:
                      oneOf:
                        - type: string
                        - type: number
                    gitUserLogin:
                      type: string
                    ssoUserId:
                      type: string
                    ssoConnectedAt:
                      type: number
                    idpUserId:
                      type: string
                    dsyncUserId:
                      type: string
                    dsyncConnectedAt:
                      type: number
                  required:
                    - origin
                  type: object
              required:
                - confirmed
                - accessRequestedAt
                - role
                - uid
                - createdAt
                - created
              type: object
              description: The membership of the authenticated User in relation to the Team.
        created:
          type: string
          description: Will remain undocumented. Remove in v3 API.
        createdAt:
          type: number
          description: UNIX timestamp (in milliseconds) when the Team was created.
          example: 1630748523395
      required:
        - limited
        - id
        - slug
        - name
        - avatar
        - membership
        - created
        - createdAt
      type: object
      description: 'A limited form of data representing a Team, due to the authentication token missing privileges to read the full Team data.'
    Pagination:
      properties:
        count:
          type: number
          description: Amount of items in the current page.
          example: 20
        next:
          nullable: true
          type: number
          description: Timestamp that must be used to request the next page.
          example: 1540095775951
        prev:
          nullable: true
          type: number
          description: Timestamp that must be used to request the previous page.
          example: 1540095775951
      required:
        - count
        - next
        - prev
      type: object
      description: 'This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.'
  responses: {}
  securitySchemes:
    bearerToken:
      type: http
      description: Default authentication mechanism
      scheme: bearer
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://api.vercel.com/oauth/authorize'
          tokenUrl: 'https://api.vercel.com/oauth/access_token'
          scopes: {}
  x-stackQL-resources:
    members:
      id: vercel.teams.members
      name: members
      title: Members
      methods:
        get_team_members:
          operation:
            $ref: '#/paths/~1v2~1teams~1{teamId}~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.members
        _get_team_members:
          operation:
            $ref: '#/paths/~1v2~1teams~1{teamId}~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        invite_user_to_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1members/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_team_member:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1members~1{uid}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_team_member:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1members~1{uid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/members/methods/get_team_members'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/members/methods/remove_team_member'
    request:
      id: vercel.teams.request
      name: request
      title: Request
      methods:
        request_access_to_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1request/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_team_access_request:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1request~1{userId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/request/methods/get_team_access_request'
        insert: []
        update: []
        delete: []
    teams:
      id: vercel.teams.teams
      name: teams
      title: Teams
      methods:
        join_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1members~1teams~1join/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_team:
          operation:
            $ref: '#/paths/~1v2~1teams~1{teamId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch_team:
          operation:
            $ref: '#/paths/~1v2~1teams~1{teamId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_teams:
          operation:
            $ref: '#/paths/~1v2~1teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.teams
        _get_teams:
          operation:
            $ref: '#/paths/~1v2~1teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_team:
          operation:
            $ref: '#/paths/~1v1~1teams/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/teams/methods/get_team'
          - $ref: '#/components/x-stackQL-resources/teams/methods/get_teams'
        insert:
          - $ref: '#/components/x-stackQL-resources/teams/methods/create_team'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/teams/methods/delete_team'
    invites:
      id: vercel.teams.invites
      name: invites
      title: Invites
      methods:
        delete_team_invite_code:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1invites~1{inviteId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/invites/methods/delete_team_invite_code'
paths:
  '/v2/teams/{teamId}/members':
    get:
      description: Get a paginated list of team members for the provided team.
      operationId: getTeamMembers
      security:
        - bearerToken: []
      summary: List team members
      tags:
        - teams
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  members:
                    items:
                      properties:
                        avatar:
                          type: string
                          description: ID of the file for the Avatar of this member.
                          example: 123a6c5209bc3778245d011443644c8d27dc2c50
                        confirmed:
                          type: boolean
                          description: Boolean that indicates if this member was confirmed by an owner.
                          example: true
                        email:
                          type: string
                          description: The email of this member.
                          example: jane.doe@example.com
                        github:
                          properties:
                            login:
                              type: string
                          type: object
                          description: Information about the GitHub account for this user.
                        gitlab:
                          properties:
                            login:
                              type: string
                          type: object
                          description: Information about the GitLab account of this user.
                        bitbucket:
                          properties:
                            login:
                              type: string
                          type: object
                          description: Information about the Bitbucket account of this user.
                        role:
                          type: string
                          enum:
                            - OWNER
                            - MEMBER
                            - DEVELOPER
                            - VIEWER
                            - BILLING
                            - CONTRIBUTOR
                          description: Role of this user in the team.
                          example: OWNER
                        uid:
                          type: string
                          description: The ID of this user.
                          example: zTuNVUXEAvvnNN3IaqinkyMw
                        username:
                          type: string
                          description: The unique username of this user.
                          example: jane-doe
                        name:
                          type: string
                          description: The name of this user.
                          example: Jane Doe
                        createdAt:
                          type: number
                          description: Timestamp in milliseconds when this member was added.
                          example: 1588720733602
                        accessRequestedAt:
                          type: number
                          description: Timestamp in milliseconds for when this team member was accepted by an owner.
                          example: 1588820733602
                        joinedFrom:
                          properties:
                            origin:
                              type: string
                              enum:
                                - mail
                                - link
                                - import
                                - teams
                                - github
                                - gitlab
                                - bitbucket
                                - saml
                                - dsync
                                - feedback
                                - organization-teams
                            commitId:
                              type: string
                            repoId:
                              type: string
                            repoPath:
                              type: string
                            gitUserId:
                              oneOf:
                                - type: string
                                - type: number
                            gitUserLogin:
                              type: string
                            ssoUserId:
                              type: string
                            ssoConnectedAt:
                              type: number
                            idpUserId:
                              type: string
                            dsyncUserId:
                              type: string
                            dsyncConnectedAt:
                              type: number
                          required:
                            - origin
                          type: object
                          description: Map with information about the members origin if they joined by requesting access.
                        projects:
                          items:
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              role:
                                type: string
                                enum:
                                  - ADMIN
                                  - PROJECT_DEVELOPER
                                  - PROJECT_VIEWER
                            type: object
                            description: Array of project memberships
                          type: array
                          description: Array of project memberships
                      required:
                        - confirmed
                        - email
                        - role
                        - uid
                        - username
                        - createdAt
                      type: object
                    type: array
                  emailInviteCodes:
                    items:
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                          enum:
                            - OWNER
                            - MEMBER
                            - DEVELOPER
                            - VIEWER
                            - BILLING
                            - CONTRIBUTOR
                        isDSyncUser:
                          type: boolean
                        createdAt:
                          type: number
                        expired:
                          type: boolean
                        projects:
                          additionalProperties:
                            type: string
                            enum:
                              - ADMIN
                              - PROJECT_DEVELOPER
                              - PROJECT_VIEWER
                          type: object
                      required:
                        - id
                        - isDSyncUser
                      type: object
                    type: array
                  pagination:
                    properties:
                      hasNext:
                        type: boolean
                      count:
                        type: number
                        description: Amount of items in the current page.
                        example: 20
                      next:
                        nullable: true
                        type: number
                        description: Timestamp that must be used to request the next page.
                        example: 1540095775951
                      prev:
                        nullable: true
                        type: number
                        description: Timestamp that must be used to request the previous page.
                        example: 1540095775951
                    required:
                      - hasNext
                      - count
                      - next
                      - prev
                    type: object
                required:
                  - members
                  - pagination
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: No team was found.
      parameters:
        - name: teamId
          description: ID of the Team.
          in: path
          required: true
          schema:
            type: string
            description: ID of the Team.
        - name: limit
          description: Limit how many teams should be returned
          in: query
          required: false
          schema:
            description: Limit how many teams should be returned
            example: 20
            type: number
        - name: since
          description: Timestamp in milliseconds to only include members added since then.
          in: query
          required: false
          schema:
            description: Timestamp in milliseconds to only include members added since then.
            example: 1540095775951
            type: number
        - name: until
          description: Timestamp in milliseconds to only include members added until then.
          in: query
          required: false
          schema:
            description: Timestamp in milliseconds to only include members added until then.
            example: 1540095775951
            type: number
        - name: search
          description: 'Search team members by their name, username, and email.'
          in: query
          required: false
          schema:
            description: 'Search team members by their name, username, and email.'
            type: string
        - name: role
          description: Only return members with the specified team role.
          in: query
          required: false
          schema:
            description: Only return members with the specified team role.
            example: OWNER
            type: string
            enum:
              - OWNER
              - MEMBER
              - DEVELOPER
              - VIEWER
              - BILLING
              - CONTRIBUTOR
        - name: excludeProject
          description: Exclude members who belong to the specified project.
          in: query
          required: false
          schema:
            description: Exclude members who belong to the specified project.
            type: string
        - name: eligibleMembersForProjectId
          description: Include team members who are eligible to be members of the specified project.
          in: query
          required: false
          schema:
            description: Include team members who are eligible to be members of the specified project.
            type: string
  '/v1/teams/{teamId}/members':
    post:
      description: 'Invite a user to join the team specified in the URL. The authenticated user needs to be an `OWNER` in order to successfully invoke this endpoint. The user can be specified with an email or an ID. If both email and ID are provided, ID will take priority.'
      operationId: inviteUserToTeam
      security:
        - bearerToken: []
      summary: Invite a user
      tags:
        - teams
      responses:
        '200':
          description: The member was successfully added to the team
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      uid:
                        type: string
                        description: The ID of the invited user
                        example: kr1PsOIzqEL5Xg6M4VZcZosf
                      username:
                        type: string
                        description: The username of the invited user
                        example: john-doe
                      email:
                        type: string
                        description: The email of the invited user. Not included if the user was invited via their UID.
                        example: john@user.co
                      role:
                        type: string
                        enum:
                          - OWNER
                          - MEMBER
                          - VIEWER
                          - DEVELOPER
                          - BILLING
                          - CONTRIBUTOR
                        description: The role used for the invitation
                        example: MEMBER
                    required:
                      - uid
                      - username
                      - email
                      - role
                    type: object
                    description: The member was successfully added to the team
                  - properties:
                      uid:
                        type: string
                      username:
                        type: string
                      role:
                        type: string
                        enum:
                          - OWNER
                          - MEMBER
                          - VIEWER
                          - DEVELOPER
                          - BILLING
                          - CONTRIBUTOR
                    required:
                      - uid
                      - username
                      - role
                    type: object
        '400':
          description: |-
            One of the provided values in the request body is invalid.
            One of the provided values in the request query is invalid.
            The user already requested access to the team
            Hobby teams are not allowed to add seats.
            The team reached the maximum allowed amount of members
        '401':
          description: ''
        '403':
          description: |-
            You do not have permission to access this resource.
            The authenticated user must be a team owner to perform the action
        '404':
          description: The team was not found
      parameters:
        - name: teamId
          description: ID of the Team.
          in: path
          required: true
          schema:
            type: string
            description: ID of the Team.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                  description: The id of the user to invite
                  example: kr1PsOIzqEL5Xg6M4VZcZosf
                email:
                  type: string
                  format: email
                  description: The email address of the user to invite
                  example: john@example.com
                role:
                  type: string
                  enum:
                    - OWNER
                    - MEMBER
                    - VIEWER
                    - DEVELOPER
                    - BILLING
                    - CONTRIBUTOR
                  default:
                    - MEMBER
                    - VIEWER
                  description: The role of the user to invite
                  example:
                    - MEMBER
                    - VIEWER
                projects:
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - role
                      - projectId
                    properties:
                      projectId:
                        type: string
                        maxLength: 256
                        example: prj_ndlgr43fadlPyCtREAqxxdyFK
                        description: The ID of the project.
                      role:
                        type: string
                        enum:
                          - ADMIN
                          - PROJECT_VIEWER
                          - PROJECT_DEVELOPER
                        example: ADMIN
                        description: Sets the project roles for the invited user
  '/v1/teams/{teamId}/request':
    post:
      description: Request access to a team as a member. An owner has to approve the request. Only 10 users can request access to a team at the same time.
      operationId: requestAccessToTeam
      security:
        - bearerToken: []
      summary: Request access to a team
      tags:
        - teams
      responses:
        '200':
          description: Successfuly requested access to the team.
          content:
            application/json:
              schema:
                properties:
                  teamSlug:
                    type: string
                  teamName:
                    type: string
                  confirmed:
                    type: boolean
                  joinedFrom:
                    properties:
                      origin:
                        type: string
                        enum:
                          - import
                          - teams
                          - github
                          - gitlab
                          - bitbucket
                          - feedback
                          - organization-teams
                          - mail
                          - link
                          - saml
                          - dsync
                      commitId:
                        type: string
                      repoId:
                        type: string
                      repoPath:
                        type: string
                      gitUserId:
                        oneOf:
                          - type: string
                          - type: number
                      gitUserLogin:
                        type: string
                      ssoUserId:
                        type: string
                      ssoConnectedAt:
                        type: number
                      idpUserId:
                        type: string
                      dsyncUserId:
                        type: string
                      dsyncConnectedAt:
                        type: number
                    required:
                      - origin
                    type: object
                  accessRequestedAt:
                    type: number
                  github:
                    nullable: true
                    properties:
                      login:
                        type: string
                    type: object
                  gitlab:
                    nullable: true
                    properties:
                      login:
                        type: string
                    type: object
                  bitbucket:
                    nullable: true
                    properties:
                      login:
                        type: string
                    type: object
                required:
                  - teamSlug
                  - teamName
                  - github
                  - gitlab
                  - bitbucket
                type: object
        '400':
          description: |-
            One of the provided values in the request body is invalid.
            One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: The team was not found.
      parameters:
        - name: teamId
          description: ID of the Team.
          in: path
          required: true
          schema:
            type: string
            description: ID of the Team.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - joinedFrom
              properties:
                joinedFrom:
                  type: object
                  additionalProperties: false
                  required:
                    - origin
                  properties:
                    origin:
                      type: string
                      enum:
                        - import
                        - teams
                        - github
                        - gitlab
                        - bitbucket
                        - feedback
                        - organization-teams
                      description: The origin of the request.
                      example: github
                    commitId:
                      type: string
                      description: The commit sha if the origin is a git provider.
                      example: f498d25d8bd654b578716203be73084b31130cd7
                    repoId:
                      type: string
                      description: The ID of the repository for the given Git provider.
                      example: '67753070'
                    repoPath:
                      type: string
                      description: The path to the repository for the given Git provider.
                      example: jane-doe/example
                    gitUserId:
                      description: The ID of the Git account of the user who requests access.
                      example: 103053343
                      oneOf:
                        - type: string
                        - type: number
                    gitUserLogin:
                      type: string
                      description: The login name for the Git account of the user who requests access.
                      example: jane-doe
  '/v1/teams/{teamId}/request/{userId}':
    get:
      description: 'Check the status of a join request. It''ll respond with a 404 if the request has been declined. If no `userId` path segment was provided, this endpoint will instead return the status of the authenticated user.'
      operationId: getTeamAccessRequest
      security:
        - bearerToken: []
      summary: Get access request status
      tags:
        - teams
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                properties:
                  teamSlug:
                    type: string
                    description: The slug of the team.
                    example: my-team
                  teamName:
                    type: string
                    description: The name of the team.
                    example: My Team
                  confirmed:
                    type: boolean
                    description: 'Current status of the membership. Will be `true` if confirmed, if pending it''ll be `false`.'
                    example: false
                  joinedFrom:
                    properties:
                      origin:
                        type: string
                        enum:
                          - mail
                          - link
                          - import
                          - teams
                          - github
                          - gitlab
                          - bitbucket
                          - saml
                          - dsync
                          - feedback
                          - organization-teams
                      commitId:
                        type: string
                      repoId:
                        type: string
                      repoPath:
                        type: string
                      gitUserId:
                        oneOf:
                          - type: string
                          - type: number
                      gitUserLogin:
                        type: string
                      ssoUserId:
                        type: string
                      ssoConnectedAt:
                        type: number
                      idpUserId:
                        type: string
                      dsyncUserId:
                        type: string
                      dsyncConnectedAt:
                        type: number
                    required:
                      - origin
                    type: object
                    description: A map that describes the origin from where the user joined.
                  accessRequestedAt:
                    type: number
                    description: Timestamp in milliseconds when the user requested access to the team.
                    example: 1588720733602
                  github:
                    nullable: true
                    properties:
                      login:
                        type: string
                    type: object
                    description: Map of the connected GitHub account.
                  gitlab:
                    nullable: true
                    properties:
                      login:
                        type: string
                    type: object
                    description: Map of the connected GitLab account.
                  bitbucket:
                    nullable: true
                    properties:
                      login:
                        type: string
                    type: object
                    description: Map of the connected Bitbucket account.
                required:
                  - teamSlug
                  - teamName
                  - confirmed
                  - joinedFrom
                  - accessRequestedAt
                  - github
                  - gitlab
                  - bitbucket
                type: object
        '400':
          description: |-
            One of the provided values in the request query is invalid.
            User is already a confirmed member of the team and did not request access. Only visible when the authenticated user does have access to the team.
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: |-
            The provided user doesn't have a membership.
            Team was not found.
      parameters:
        - name: teamId
          description: ID of the Team.
          in: path
          required: true
          schema:
            type: string
            description: ID of the Team.
        - name: userId
          description: User ID.
          in: path
          required: true
          schema:
            type: string
            description: User ID.
  '/v1/teams/{teamId}/members/teams/join':
    post:
      description: Join a team with a provided invite code or team ID.
      operationId: joinTeam
      security:
        - bearerToken: []
      summary: Join a team
      tags:
        - teams
      responses:
        '200':
          description: Successfully joined a team.
          content:
            application/json:
              schema:
                properties:
                  teamId:
                    type: string
                    description: The ID of the team the user joined.
                    example: team_LLHUOMOoDlqOp8wPE4kFo9pE
                  slug:
                    type: string
                    description: The slug of the team the user joined.
                    example: my-team
                  name:
                    type: string
                    description: The name of the team the user joined.
                    example: My Team
                  from:
                    type: string
                    description: The origin of how the user joined.
                    example: email
                required:
                  - teamId
                  - slug
                  - name
                  - from
                type: object
                description: Successfully joined a team.
        '400':
          description: |-
            One of the provided values in the request body is invalid.
            Reached the max. amount of team members.
        '401':
          description: ''
        '402':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: Team not found.
      parameters:
        - name: teamId
          description: ID of the Team.
          in: path
          required: true
          schema:
            type: string
            description: ID of the Team.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                inviteCode:
                  type: string
                  description: The invite code to join the team.
                  example: fisdh38aejkeivn34nslfore9vjtn4ls
                teamId:
                  example: team_3oNwMKqLHqEBh02CTPsrbNbe
                  description: The team ID.
                  type: string
  '/v1/teams/{teamId}/members/{uid}':
    patch:
      description: 'Update the membership of a Team Member on the Team specified by `teamId`, such as changing the _role_ of the member, or confirming a request to join the Team for an unconfirmed member. The authenticated user must be an `OWNER` of the Team.'
      operationId: updateTeamMember
      security:
        - bearerToken: []
      summary: Update a Team Member
      tags:
        - teams
      responses:
        '200':
          description: Successfully updated the membership.
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    description: ID of the team.
                required:
                  - id
                type: object
        '400':
          description: |-
            One of the provided values in the request body is invalid.
            One of the provided values in the request query is invalid.
            Cannot disconnect SSO from a Team member that does not have a SSO connection.
            Cannot confirm a member that is already confirmed.
            Cannot confirm a member that did not request access.
        '401':
          description: 'Team members can only be updated by an owner, or by the authenticated user if they are only disconnecting their SAML connection to the Team.'
        '402':
          description: ''
        '403':
          description: You do not have permission to access this resource.
        '404':
          description: |-
            The provided user is not part of this team.
            A user with the specified ID does not exist.
            Team not found.
        '500':
          description: ''
      parameters:
        - name: teamId
          description: ID of the Team.
          in: path
          required: true
          schema:
            type: string
            description: ID of the Team.
        - name: uid
          description: The ID of the member.
          in: path
          required: true
          schema:
            type: string
            description: The ID of the member.
            example: ndfasllgPyCtREAqxxdyFKb
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                confirmed:
                  type: boolean
                  enum:
                    - true
                  description: Accept a user who requested access to the team.
                  example: true
                role:
                  type: string
                  description: The role in the team of the member.
                  default:
                    - MEMBER
                    - VIEWER
                  example:
                    - MEMBER
                    - VIEWER
                projects:
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - role
                      - projectId
                    properties:
                      projectId:
                        type: string
                        maxLength: 256
                        example: prj_ndlgr43fadlPyCtREAqxxdyFK
                        description: The ID of the project.
                      role:
                        type: string
                        enum:
                          - ADMIN
                          - PROJECT_VIEWER
                          - PROJECT_DEVELOPER
                          - null
                        example: ADMIN
                        description: The project role of the member that will be added. \"null\" will remove this project level role.
                        nullable: true
                joinedFrom:
                  additionalProperties: false
                  type: object
                  properties:
                    ssoUserId:
                      type: 'null'
    delete:
      description: 'Remove a Team Member from the Team, or dismiss a user that requested access, or leave a team.'
      operationId: removeTeamMember
      security:
        - bearerToken: []
      summary: Remove a Team Member
      tags:
        - teams
      responses:
        '200':
          description: Successfully removed a member of the team.
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    description: ID of the team.
                  newDefaultTeamIdError:
                    type: boolean
                required:
                  - id
                  - newDefaultTeamIdError
                type: object
        '400':
          description: |-
            One of the provided values in the request query is invalid.
            Cannot leave the team as the only owner.
        '401':
          description: ''
        '403':
          description: |-
            You do not have permission to access this resource.
            Not authorized to update the team.
        '404':
          description: |-
            A user with the specified ID does not exist.
            No team found.
      parameters:
        - name: teamId
          description: ID of the Team.
          in: path
          required: true
          schema:
            type: string
            description: ID of the Team.
        - name: uid
          description: The user ID of the member.
          in: path
          required: true
          schema:
            type: string
            description: The user ID of the member.
            example: ndlgr43fadlPyCtREAqxxdyFK
        - name: newDefaultTeamId
          description: The ID of the team to set as the new default team for the Northstar user.
          in: query
          required: false
          schema:
            type: string
            description: The ID of the team to set as the new default team for the Northstar user.
            example: team_nllPyCtREAqxxdyFKbbMDlxd
  '/v2/teams/{teamId}':
    get:
      description: Get information for the Team specified by the `teamId` parameter.
      operationId: getTeam
      security:
        - bearerToken: []
      summary: Get a Team
      tags:
        - teams
      responses:
        '200':
          description: The requested team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: |-
            You do not have permission to access this resource.
            Not authorized to access the team.
        '404':
          description: Team was not found.
      parameters:
        - name: slug
          in: query
          schema:
            type: string
        - description: The Team identifier or slug to perform the request on behalf of.
          in: path
          name: teamId
          schema:
            type: string
          required: true
    patch:
      description: Update the information of a Team specified by the `teamId` parameter. The request body should contain the information that will be updated on the Team.
      operationId: patchTeam
      security:
        - bearerToken: []
      summary: Update a Team
      tags:
        - teams
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: One of the provided values in the request body is invalid.
        '401':
          description: ''
        '402':
          description: ''
        '403':
          description: |-
            You do not have permission to access this resource.
            Not authorized to update the team. Must be an OWNER.
        '404':
          description: Team was not found.
      parameters:
        - description: The Team identifier or slug to perform the request on behalf of.
          in: path
          name: teamId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                avatar:
                  type: string
                  format: regex
                  regex: '^[0-9a-f]{40}$'
                  description: The hash value of an uploaded image.
                description:
                  type: string
                  maxLength: 140
                  example: Our mission is to make cloud computing accessible to everyone
                  description: A short text that describes the team.
                emailDomain:
                  type: string
                  format: regex
                  regex: '\\b((?=[a-z0-9-]{1,63}\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}\\b'
                  example: example.com
                  nullable: true
                name:
                  type: string
                  maxLength: 256
                  example: My Team
                  description: The name of the team.
                previewDeploymentSuffix:
                  type: string
                  format: hostname
                  example: example.dev
                  description: Suffix that will be used for all preview deployments.
                  nullable: true
                regenerateInviteCode:
                  type: boolean
                  example: true
                  description: Create a new invite code and replace the current one.
                saml:
                  type: object
                  additionalProperties: false
                  properties:
                    enforced:
                      type: boolean
                      example: true
                      description: Require that members of the team use SAML Single Sign-On.
                    roles:
                      type: object
                      additionalProperties:
                        type: string
                        enum:
                          - OWNER
                          - MEMBER
                          - VIEWER
                          - DEVELOPER
                          - BILLING
                          - CONTRIBUTOR
                slug:
                  type: string
                  example: my-team
                  description: A new slug for the team.
                enablePreviewFeedback:
                  type: string
                  example: 'on'
                  description: 'Enable preview comments: one of on, off or default.'
                sensitiveEnvironmentVariablePolicy:
                  type: string
                  example: 'on'
                  description: 'Sensitive environment variable policy: one of on, off or default.'
                migrateExistingEnvVariablesToSensitive:
                  type: boolean
                  example: false
                  description: Runs a task that migrates all existing environment variables to sensitive environment variables.
                remoteCaching:
                  type: object
                  description: Whether or not remote caching is enabled for the team
                  additionalProperties: false
                  properties:
                    enabled:
                      type: boolean
                      example: true
                      description: Enable or disable remote caching for the team.
                hideIpAddresses:
                  type: boolean
                  example: false
                  description: Display or hide IP addresses in Monitoring queries.
  /v2/teams:
    get:
      description: Get a paginated list of all the Teams the authenticated User is a member of.
      operationId: getTeams
      security:
        - bearerToken: []
      summary: List all teams
      tags:
        - teams
      responses:
        '200':
          description: A paginated list of teams.
          content:
            application/json:
              schema:
                properties:
                  teams:
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Team'
                        - $ref: '#/components/schemas/TeamLimited'
                    type: array
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - teams
                  - pagination
                type: object
                description: A paginated list of teams.
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: You do not have permission to access this resource.
      parameters:
        - name: limit
          description: Maximum number of Teams which may be returned.
          in: query
          schema:
            description: Maximum number of Teams which may be returned.
            example: 20
            type: number
        - name: since
          description: Timestamp (in milliseconds) to only include Teams created since then.
          in: query
          schema:
            description: Timestamp (in milliseconds) to only include Teams created since then.
            example: 1540095775951
            type: number
        - name: until
          description: Timestamp (in milliseconds) to only include Teams created until then.
          in: query
          schema:
            description: Timestamp (in milliseconds) to only include Teams created until then.
            example: 1540095775951
            type: number
  /v1/teams:
    post:
      description: 'Create a new Team under your account. You need to send a POST request with the desired Team slug, and optionally the Team name.'
      operationId: createTeam
      security:
        - bearerToken: []
      summary: Create a Team
      tags:
        - teams
      responses:
        '200':
          description: The team was created successfully
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    description: Id of the created team
                    example: team_nLlpyC6RE1qxqglFKbrMxlud
                  slug:
                    type: string
                  billing:
                    properties:
                      currency:
                        type: string
                        enum:
                          - usd
                          - eur
                      cancelation:
                        nullable: true
                        type: number
                      period:
                        nullable: true
                        properties:
                          start:
                            type: number
                          end:
                            type: number
                        required:
                          - start
                          - end
                        type: object
                      contract:
                        nullable: true
                        properties:
                          start:
                            type: number
                          end:
                            type: number
                        required:
                          - start
                          - end
                        type: object
                      plan:
                        type: string
                        enum:
                          - hobby
                          - pro
                          - enterprise
                      platform:
                        type: string
                        enum:
                          - stripe
                          - stripeTestMode
                      orbCustomerId:
                        type: string
                      syncedAt:
                        type: number
                      programType:
                        type: string
                        enum:
                          - startup
                          - agency
                      trial:
                        nullable: true
                        properties:
                          start:
                            type: number
                          end:
                            type: number
                        required:
                          - start
                          - end
                        type: object
                      email:
                        nullable: true
                        type: string
                      tax:
                        nullable: true
                        properties:
                          type:
                            type: string
                          id:
                            type: string
                        required:
                          - type
                          - id
                        type: object
                      language:
                        nullable: true
                        type: string
                      address:
                        nullable: true
                        properties:
                          line1:
                            type: string
                          line2:
                            type: string
                          postalCode:
                            type: string
                          city:
                            type: string
                          country:
                            type: string
                          state:
                            type: string
                        required:
                          - line1
                        type: object
                      name:
                        nullable: true
                        type: string
                      invoiceItems:
                        nullable: true
                        properties:
                          monitoring:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          pro:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          enterprise:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          analytics:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          concurrentBuilds:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          passwordProtection:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          previewDeploymentSuffix:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          saml:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          teamSeats:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          webAnalytics:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              quantity:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              createdAt:
                                type: number
                              disabledAt:
                                nullable: true
                                type: number
                              frequency:
                                properties:
                                  interval:
                                    type: string
                                    enum:
                                      - month
                                  intervalCount:
                                    type: number
                                    enum:
                                      - 1
                                      - 2
                                      - 3
                                      - 6
                                      - 12
                                required:
                                  - interval
                                  - intervalCount
                                type: object
                              maxQuantity:
                                type: number
                            required:
                              - price
                              - quantity
                              - hidden
                            type: object
                            description: 'Will be used to create an invoice item. The price must be in cents: 2000 for $20.'
                          analyticsUsage:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          artifacts:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          bandwidth:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          cronJobInvocation:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          dataCacheRead:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          dataCacheRevalidation:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          dataCacheWrite:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          edgeConfigRead:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          edgeConfigWrite:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          edgeFunctionExecutionUnits:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          edgeMiddlewareInvocations:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          monitoringMetric:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          postgresComputeTime:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          postgresDatabase:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          postgresDataStorage:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          postgresDataTransfer:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          postgresWrittenData:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          serverlessFunctionExecution:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          sourceImages:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          storageRedisTotalBandwidthInBytes:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          storageRedisTotalCommands:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          storageRedisTotalDailyAvgStorageInBytes:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          storageRedisTotalDatabases:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                          webAnalyticsEvent:
                            properties:
                              tier:
                                type: number
                              price:
                                type: number
                              batch:
                                type: number
                              threshold:
                                type: number
                              name:
                                type: string
                              hidden:
                                type: boolean
                              disabledAt:
                                nullable: true
                                type: number
                              enabledAt:
                                nullable: true
                                type: number
                            required:
                              - price
                              - batch
                              - threshold
                              - hidden
                            type: object
                        type: object
                      invoiceSettings:
                        properties:
                          footer:
                            type: string
                        type: object
                      subscriptions:
                        nullable: true
                        items:
                          properties:
                            id:
                              type: string
                            trial:
                              nullable: true
                              properties:
                                start:
                                  type: number
                                end:
                                  type: number
                              required:
                                - start
                                - end
                              type: object
                            period:
                              properties:
                                start:
                                  type: number
                                end:
                                  type: number
                              required:
                                - start
                                - end
                              type: object
                            frequency:
                              properties:
                                interval:
                                  type: string
                                  enum:
                                    - month
                                    - day
                                    - week
                                    - year
                                intervalCount:
                                  type: number
                              required:
                                - interval
                                - intervalCount
                              type: object
                            discount:
                              nullable: true
                              properties:
                                id:
                                  type: string
                                coupon:
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      nullable: true
                                      type: string
                                    amountOff:
                                      nullable: true
                                      type: number
                                    percentageOff:
                                      nullable: true
                                      type: number
                                    durationInMonths:
                                      nullable: true
                                      type: number
                                    duration:
                                      type: string
                                      enum:
                                        - forever
                                        - repeating
                                        - once
                                  required:
                                    - id
                                    - name
                                    - amountOff
                                    - percentageOff
                                    - durationInMonths
                                    - duration
                                  type: object
                              required:
                                - id
                                - coupon
                              type: object
                            items:
                              items:
                                properties:
                                  id:
                                    type: string
                                  priceId:
                                    type: string
                                  productId:
                                    type: string
                                  amount:
                                    type: number
                                  quantity:
                                    type: number
                                required:
                                  - id
                                  - priceId
                                  - productId
                                  - amount
                                  - quantity
                                type: object
                              type: array
                          required:
                            - id
                            - trial
                            - period
                            - frequency
                            - discount
                            - items
                          type: object
                        type: array
                      controls:
                        nullable: true
                        properties:
                          analyticsSampleRateInPercent:
                            nullable: true
                            type: number
                          analyticsSpendLimitInDollars:
                            nullable: true
                            type: number
                        type: object
                      purchaseOrder:
                        nullable: true
                        type: string
                      status:
                        type: string
                        enum:
                          - active
                          - trialing
                          - overdue
                          - expired
                          - canceled
                      pricingExperiment:
                        type: string
                        enum:
                          - august-2022
                      orbMigrationScheduledAt:
                        nullable: true
                        type: number
                    required:
                      - period
                      - plan
                    type: object
                required:
                  - id
                  - slug
                  - billing
                type: object
                description: The team was created successfully
        '400':
          description: |-
            One of the provided values in the request body is invalid.
            The slug is already in use
        '403':
          description: You do not have permission to access this resource.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - slug
              properties:
                slug:
                  example: a-random-team
                  description: The desired slug for the Team
                  type: string
                  maxLength: 48
                name:
                  example: A Random Team
                  description: The desired name for the Team. It will be generated from the provided slug if nothing is provided
                  type: string
                  maxLength: 256
  '/v1/teams/{teamId}':
    delete:
      description: Delete a team under your account. You need to send a `DELETE` request with the desired team `id`. An optional array of reasons for deletion may also be sent.
      operationId: deleteTeam
      security:
        - bearerToken: []
      summary: Delete a Team
      tags:
        - teams
      responses:
        '200':
          description: The Team was successfully deleted
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    description: The ID of the deleted Team
                    example: team_LLHUOMOoDlqOp8wPE4kFo9pE
                  newDefaultTeamIdError:
                    type: boolean
                    description: 'Signifies whether the default team update has failed, when newDefaultTeamId is provided in request query.'
                    example: true
                required:
                  - id
                type: object
                description: The Team was successfully deleted
        '400':
          description: |-
            One of the provided values in the request body is invalid.
            One of the provided values in the request query is invalid.
        '401':
          description: ''
        '402':
          description: ''
        '403':
          description: |-
            You do not have permission to access this resource.
            The authenticated user can't access the team
        '404':
          description: The team was not found
        '409':
          description: ''
      parameters:
        - name: newDefaultTeamId
          description: Id of the team to be set as the new default team
          in: query
          required: false
          schema:
            type: string
            description: Id of the team to be set as the new default team
            example: team_LLHUOMOoDlqOp8wPE4kFo9pE
        - description: The Team identifier or slug to perform the request on behalf of.
          in: path
          name: teamId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                reasons:
                  type: array
                  description: Optional array of objects that describe the reason why the team is being deleted.
                  items:
                    type: object
                    description: An object describing the reason why the team is being deleted.
                    required:
                      - slug
                      - description
                    additionalProperties: false
                    properties:
                      slug:
                        type: string
                        description: Idenitifier slug of the reason why the team is being deleted.
                      description:
                        type: string
                        description: Description of the reason why the team is being deleted.
  '/v1/teams/{teamId}/invites/{inviteId}':
    delete:
      description: Delete an active Team invite code.
      operationId: deleteTeamInviteCode
      security:
        - bearerToken: []
      summary: Delete a Team invite code
      tags:
        - teams
      responses:
        '200':
          description: Successfully deleted Team invite code.
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    description: ID of the team.
                required:
                  - id
                type: object
        '400':
          description: One of the provided values in the request query is invalid.
        '401':
          description: ''
        '403':
          description: |-
            You do not have permission to access this resource.
            Invite managed by directory sync
            Not authorized to access this team.
        '404':
          description: |-
            Team invite code not found.
            No team found.
      parameters:
        - description: The Team identifier or slug to perform the request on behalf of.
          in: path
          name: teamId
          schema:
            type: string
          required: true
        - name: inviteId
          description: The Team invite code ID.
          in: path
          required: true
          schema:
            type: string
            description: The Team invite code ID.
            example: 2wn2hudbr4chb1ecywo9dvzo7g9sscs6mzcz8htdde0txyom4l
