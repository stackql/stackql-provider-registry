openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Permission Groups
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - users
  version: 4.0.0
components:
  schemas:
    schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              example:
                - id: 7cf72faf220841aabcfdfab81c43c4f6
                  name: Billing Read
                  scopes:
                    - com.cloudflare.api.account
                - id: 9d24387c6e8544e2bc4024a03991339f
                  name: 'Load Balancing: Monitors and Pools Read'
                  scopes:
                    - com.cloudflare.api.account
                - id: d2a1802cc9a34e30852f8b33869b2f3c
                  name: 'Load Balancing: Monitors and Pools Write'
                  scopes:
                    - com.cloudflare.api.account
                - id: 8b47d2786a534c08a1f94ee8f9f599ef
                  name: Workers KV Storage Read
                  scopes:
                    - com.cloudflare.api.account
                - id: f7f0eda5697f475c90846e879bab8666
                  name: Workers KV Storage Write
                  scopes:
                    - com.cloudflare.api.account
                - id: 1a71c399035b4950a1bd1466bbe4f420
                  name: Workers Scripts Read
                  scopes:
                    - com.cloudflare.api.account
                - id: e086da7e2179491d91ee5f35b3ca210a
                  name: Workers Scripts Write
                  scopes:
                    - com.cloudflare.api.account
              items:
                type: object
              type: array
          type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    single_user_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    country:
      description: The country in which the user lives.
      example: US
      maxLength: 30
      nullable: true
      type: string
    first_name:
      description: User's first name
      example: John
      maxLength: 60
      nullable: true
      type: string
    last_name:
      description: User's last name
      example: Appleseed
      maxLength: 60
      nullable: true
      type: string
    telephone:
      description: User's telephone number
      example: +1 123-123-1234
      maxLength: 20
      nullable: true
      type: string
    zipcode:
      description: The zipcode or postal code where the user lives.
      example: '12345'
      maxLength: 20
      nullable: true
      type: string
    response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                type: object
              type: array
          type: object
    create_payload:
      properties:
        condition:
          $ref: '#/components/schemas/condition'
        expires_on:
          $ref: '#/components/schemas/expires_on'
        name:
          $ref: '#/components/schemas/name'
        not_before:
          $ref: '#/components/schemas/not_before'
        policies:
          $ref: '#/components/schemas/policies'
      required:
        - name
        - policies
      type: object
    response_create:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              allOf:
                - type: object
                - properties:
                    value:
                      $ref: '#/components/schemas/value'
                  type: object
          type: object
    condition:
      properties:
        request.ip:
          $ref: '#/components/schemas/request.ip'
      type: object
    expires_on:
      description: The expiration time on or after which the JWT MUST NOT be accepted for processing.
      example: '2020-01-01T00:00:00Z'
      format: date-time
      type: string
    name:
      description: Token name.
      example: readonly token
      maxLength: 120
      type: string
    not_before:
      description: The time before which the token MUST NOT be accepted for processing.
      example: '2018-07-01T05:20:00Z'
      format: date-time
      type: string
    policies:
      description: List of access policies assigned to the token.
      items:
        $ref: '#/components/schemas/access-policy'
      type: array
    value:
      description: The token value.
      example: 8M7wS6hCpXVc-DoRnPPY_UCWPgy8aea4Wy6kCe5T
      maxLength: 80
      minLength: 40
      readOnly: true
      type: string
    request.ip:
      description: Client IP restrictions.
      example:
        in:
          - 123.123.123.0/24
          - '2606:4700::/32'
        not_in:
          - 123.123.123.100/24
          - '2606:4700:4700::/48'
      properties:
        in:
          $ref: '#/components/schemas/cidr_list'
        not_in:
          $ref: '#/components/schemas/cidr_list'
      type: object
    access-policy:
      oneOf:
        - $ref: '#/components/schemas/policy_with_permission_groups'
      type: object
    cidr_list:
      description: List of IPv4/IPv6 CIDR addresses.
      example:
        - 199.27.128.0/21
        - '2400:cb00::/32'
      items:
        description: IPv4/IPv6 CIDR.
        example: 199.27.128.0/21
        type: string
      type: array
    policy_with_permission_groups:
      properties:
        effect:
          $ref: '#/components/schemas/effect'
        id:
          $ref: '#/components/schemas/identifier'
        permission_groups:
          $ref: '#/components/schemas/permission_groups'
        resources:
          $ref: '#/components/schemas/resources'
      required:
        - id
        - effect
        - resources
        - permission_groups
      title: policy_with_permission_groups
    effect:
      description: Allow or deny operations against the resources.
      enum:
        - allow
        - deny
      example: allow
      type: string
    identifier:
      description: Policy identifier.
      example: f267e341f3dd4697bd3b9f71dd96247f
      readOnly: true
      type: string
    permission_groups:
      description: A set of permission groups that are specified to the policy.
      example:
        - id: c8fed203ed3043cba015a93ad1616f1f
          name: Zone Read
        - id: 82e64a83756745bbbb1c9c2701bf816b
          name: DNS Read
      items:
        $ref: '#/components/schemas/permission_group'
      type: array
    resources:
      description: A list of resource names that the policy applies to.
      example:
        com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43: '*'
        com.cloudflare.api.account.zone.eb78d65290b24279ba6f44721b3ea3c4: '*'
      type: object
    permission_group:
      description: A named group of permissions that map to a group of operations against resources.
      properties:
        id:
          description: Identifier of the group.
          example: 6d7f2f5f5b1d4a0e9081fdc98d432fd1
          readOnly: true
          type: string
        name:
          description: Name of the group.
          example: Load Balancers Write
          readOnly: true
          type: string
      required:
        - id
      type: object
    response_single_segment:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                expires_on:
                  $ref: '#/components/schemas/expires_on'
                id:
                  $ref: '#/components/schemas/components-schemas-identifier'
                not_before:
                  $ref: '#/components/schemas/not_before'
                status:
                  $ref: '#/components/schemas/status'
              required:
                - id
                - status
          type: object
    components-schemas-identifier:
      description: Token identifier tag.
      example: ed17574386854bf78a67040be0a770b0
      maxLength: 32
      readOnly: true
      type: string
    status:
      description: Status of the token.
      enum:
        - active
        - disabled
        - expired
      example: active
      type: string
    schemas-identifier: {}
    api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                id:
                  $ref: '#/components/schemas/common_components-schemas-identifier'
              required:
                - id
              type: object
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    schemas-token:
      allOf:
        - $ref: '#/components/schemas/token'
    token:
      properties:
        condition:
          $ref: '#/components/schemas/condition'
        expires_on:
          $ref: '#/components/schemas/expires_on'
        id:
          $ref: '#/components/schemas/components-schemas-identifier'
        issued_on:
          $ref: '#/components/schemas/issued_on'
        modified_on:
          $ref: '#/components/schemas/modified_on'
        name:
          $ref: '#/components/schemas/name'
        not_before:
          $ref: '#/components/schemas/not_before'
        policies:
          $ref: '#/components/schemas/policies'
        status:
          $ref: '#/components/schemas/status'
      required:
        - id
        - name
        - status
        - policies
      type: object
    issued_on:
      description: The time on which the token was created.
      example: '2018-07-01T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    modified_on:
      description: Last time the token was modified.
      example: '2018-07-02T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    response_single_value:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/value'
          type: object
    firewalluablock_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/ua-rules'
              type: array
          type: object
    ua-rules:
      allOf:
        - $ref: '#/components/schemas/firewalluablock'
    firewalluablock:
      properties:
        configuration:
          $ref: '#/components/schemas/components-schemas-configuration'
        description:
          $ref: '#/components/schemas/ua-rules_components-schemas-description'
        id:
          $ref: '#/components/schemas/ua-rules_components-schemas-id'
        mode:
          $ref: '#/components/schemas/ua-rules_components-schemas-mode'
        paused:
          $ref: '#/components/schemas/components-schemas-paused'
    components-schemas-configuration:
      description: The configuration object for the current rule.
      properties:
        target:
          description: The configuration target for this rule. You must set the target to `ua` for User Agent Blocking rules.
          example: ua
          type: string
        value:
          description: The exact user agent string to match. This value will be compared to the received `User-Agent` HTTP header value.
          example: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/603.2.4 (KHTML, like Gecko) Version/10.1.1 Safari/603.2.4'
          type: string
      type: object
    ua-rules_components-schemas-description:
      description: An informative summary of the rule.
      example: Prevent access from abusive clients identified by this User Agent to mitigate a DDoS attack
      maxLength: 1024
      type: string
    ua-rules_components-schemas-id:
      description: The unique identifier of the User Agent Blocking rule.
      example: 372e67954025e0ba6aaa6d586b9e0b59
      maxLength: 32
      readOnly: true
      type: string
    ua-rules_components-schemas-mode:
      description: The action to apply to a matched request.
      enum:
        - block
        - challenge
        - js_challenge
        - managed_challenge
      example: js_challenge
      maxLength: 12
    components-schemas-paused:
      description: 'When true, indicates that the rule is currently paused.'
      example: false
      type: boolean
    firewalluablock_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    billing_history_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/billing-history'
              type: array
    billing-history:
      properties:
        action:
          $ref: '#/components/schemas/action'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        description:
          $ref: '#/components/schemas/schemas-description'
        id:
          $ref: '#/components/schemas/billing-history_components-schemas-identifier'
        occurred_at:
          $ref: '#/components/schemas/occurred_at'
        type:
          $ref: '#/components/schemas/type'
        zone:
          $ref: '#/components/schemas/schemas-zone'
      required:
        - id
        - type
        - action
        - description
        - occurred_at
        - amount
        - currency
        - zone
      type: object
    action:
      description: The billing item action.
      example: subscription
      maxLength: 30
      readOnly: true
      type: string
    amount:
      description: The amount associated with this billing item.
      example: 20.99
      readOnly: true
      type: number
    currency:
      description: The monetary unit in which pricing information is displayed.
      example: USD
      readOnly: true
      type: string
    schemas-description:
      description: The billing item description.
      example: The billing item description
      maxLength: 255
      readOnly: true
      type: string
    billing-history_components-schemas-identifier:
      description: Billing item identifier tag.
      example: b69a9f3492637782896352daae219e7d
      maxLength: 32
      readOnly: true
      type: string
    occurred_at:
      description: When the billing item was created.
      example: '2014-03-01T12:21:59.3456Z'
      format: date-time
      readOnly: true
      type: string
    type:
      description: The billing item type.
      example: charge
      maxLength: 30
      readOnly: true
      type: string
    schemas-zone:
      properties:
        name:
          readOnly: true
      type: object
    billing_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    user_subscription_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/subscription'
              type: array
          type: object
    subscription:
      allOf:
        - $ref: '#/components/schemas/subscription-v2'
    subscription-v2:
      properties:
        app:
          properties:
            install_id:
              $ref: '#/components/schemas/install_id'
        component_values:
          $ref: '#/components/schemas/component_values'
        currency:
          $ref: '#/components/schemas/currency'
        current_period_end:
          $ref: '#/components/schemas/current_period_end'
        current_period_start:
          $ref: '#/components/schemas/current_period_start'
        frequency:
          $ref: '#/components/schemas/frequency'
        id:
          $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
        price:
          $ref: '#/components/schemas/price'
        rate_plan:
          $ref: '#/components/schemas/rate_plan'
        state:
          $ref: '#/components/schemas/state'
        zone:
          $ref: '#/components/schemas/zone'
      type: object
    install_id:
      description: app install id.
      type: string
    component_values:
      description: The list of add-ons subscribed to.
      items:
        $ref: '#/components/schemas/component_value'
      type: array
    current_period_end:
      description: The end of the current period and also when the next billing is due.
      example: '2014-03-31T12:20:00Z'
      format: date-time
      readOnly: true
      type: string
    current_period_start:
      description: When the current billing period started. May match initial_period_start if this is the first period.
      example: '2014-05-11T12:20:00Z'
      format: date-time
      readOnly: true
      type: string
    frequency:
      description: How often the subscription is renewed automatically.
      enum:
        - weekly
        - monthly
        - quarterly
        - yearly
      example: monthly
      type: string
    subscription-v2_components-schemas-identifier:
      description: Subscription identifier tag.
      example: 506e3185e9c882d175a2d0cb0093d9f2
      maxLength: 32
      readOnly: true
      type: string
    price:
      description: 'The price of the subscription that will be billed, in US dollars.'
      example: 20
      readOnly: true
      type: number
    rate_plan:
      description: The rate plan applied to the subscription.
      properties:
        currency:
          description: The currency applied to the rate plan subscription.
          example: USD
          type: string
        externally_managed:
          description: Whether this rate plan is managed externally from Cloudflare.
          example: false
          type: boolean
        id:
          description: The ID of the rate plan.
          example: free
        is_contract:
          description: Whether a rate plan is enterprise-based (or newly adopted term contract).
          example: false
          type: boolean
        public_name:
          description: The full name of the rate plan.
          example: Business Plan
          type: string
        scope:
          description: The scope that this rate plan applies to.
          example: zone
          type: string
        sets:
          description: The list of sets this rate plan applies to.
          items:
            type: string
          type: array
      type: object
    state:
      description: The state that the subscription is in.
      enum:
        - Trial
        - Provisioned
        - Paid
        - AwaitingPayment
        - Cancelled
        - Failed
        - Expired
      example: Paid
      readOnly: true
      type: string
    zone:
      description: A simple zone object. May have null properties if not a zone subscription.
      properties:
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/properties-name'
      type: object
    component_value:
      description: A component value for a subscription.
      properties:
        default:
          description: The default amount assigned.
          example: 5
          type: number
        name:
          description: The name of the component value.
          example: page_rules
          type: string
        price:
          description: The unit price for the component value.
          example: 5
          type: number
        value:
          description: The amount of the component value assigned.
          example: 20
          type: number
      type: object
    properties-name:
      description: The domain name
      example: example.com
      maxLength: 253
      pattern: '^([a-zA-Z0-9][\-a-zA-Z0-9]*\.)+[\-a-zA-Z0-9]{2,20}$'
      readOnly: true
      type: string
    user_subscription_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    collection_membership_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/membership'
              type: array
          type: object
    membership:
      properties:
        account:
          $ref: '#/components/schemas/schemas-account'
        api_access_enabled:
          $ref: '#/components/schemas/api_access_enabled'
        code:
          $ref: '#/components/schemas/code'
        id:
          $ref: '#/components/schemas/membership_components-schemas-identifier'
        permissions:
          allOf:
            - $ref: '#/components/schemas/permissions'
          description: All access permissions for the user at the account.
          readOnly: true
        roles:
          $ref: '#/components/schemas/roles'
        status:
          $ref: '#/components/schemas/schemas-status'
      type: object
    schemas-account:
      allOf:
        - $ref: '#/components/schemas/account'
      readOnly: true
    api_access_enabled:
      description: Enterprise only. Indicates whether or not API access is enabled specifically for this user on a given account.
      example: true
      nullable: true
      type: boolean
    code:
      description: The unique activation code for the account membership.
      example: 05dd05cce12bbed97c0d87cd78e89bc2fd41a6cee72f27f6fc84af2e45c0fac0
      maxLength: 64
      readOnly: true
      type: string
    membership_components-schemas-identifier:
      description: Membership identifier tag.
      example: 4536bcfad5faccb111b47003c79917fa
      maxLength: 32
      readOnly: true
      type: string
    permissions:
      example:
        analytics:
          read: true
          write: false
        zones:
          read: true
          write: true
      properties:
        analytics:
          $ref: '#/components/schemas/grants'
        billing:
          $ref: '#/components/schemas/grants'
        cache_purge:
          $ref: '#/components/schemas/grants'
        dns:
          $ref: '#/components/schemas/grants'
        dns_records:
          $ref: '#/components/schemas/grants'
        lb:
          $ref: '#/components/schemas/grants'
        logs:
          $ref: '#/components/schemas/grants'
        organization:
          $ref: '#/components/schemas/grants'
        ssl:
          $ref: '#/components/schemas/grants'
        waf:
          $ref: '#/components/schemas/grants'
        zone_settings:
          $ref: '#/components/schemas/grants'
        zones:
          $ref: '#/components/schemas/grants'
      type: object
    roles:
      description: List of role names for the user at the account.
      items:
        example: Account Administrator
        maxLength: 120
        type: string
      readOnly: true
      type: array
    schemas-status:
      description: Status of this membership.
      enum:
        - accepted
        - pending
        - rejected
      example: accepted
      type: string
    account:
      properties:
        created_on:
          description: Timestamp for the creation of the account
          example: '2014-03-01T12:21:02.0000Z'
          format: date-time
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        name:
          description: Account name
          example: Demo Account
          maxLength: 100
          type: string
        settings:
          description: Account settings
          properties:
            enforce_twofactor:
              default: false
              description: |-
                Indicates whether membership in this account requires that
                Two-Factor Authentication is enabled
              type: boolean
            use_account_custom_ns_by_default:
              default: false
              description: |-
                Indicates whether new zones should use the account-level custom
                nameservers by default
              type: boolean
          type: object
      required:
        - id
        - name
      type: object
    grants:
      example:
        read: true
        write: false
      properties:
        read:
          example: true
          type: boolean
        write:
          example: true
          type: boolean
      type: object
    single_membership_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    schemas-collection_invite_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-invite'
              type: array
          type: object
    schemas-invite:
      allOf:
        - $ref: '#/components/schemas/user_invite'
    user_invite:
      allOf:
        - $ref: '#/components/schemas/base'
        - properties:
            status:
              description: Current status of the invitation.
              enum:
                - pending
                - accepted
                - rejected
                - expired
              example: accepted
    base:
      properties:
        expires_on:
          $ref: '#/components/schemas/schemas-expires_on'
        id:
          $ref: '#/components/schemas/invite_components-schemas-identifier'
        invited_by:
          $ref: '#/components/schemas/invited_by'
        invited_member_email:
          $ref: '#/components/schemas/invited_member_email'
        invited_member_id:
          description: ID of the user to add to the organization.
          example: 5a7805061c76ada191ed06f989cc3dac
          maxLength: 32
          nullable: true
          readOnly: true
          type: string
        invited_on:
          $ref: '#/components/schemas/invited_on'
        organization_id:
          description: ID of the organization the user will be added to.
          example: 5a7805061c76ada191ed06f989cc3dac
          maxLength: 32
          readOnly: true
          type: string
        organization_name:
          description: Organization name.
          example: 'Cloudflare, Inc.'
          maxLength: 100
          readOnly: true
          type: string
        roles:
          description: Roles to be assigned to this user.
          items:
            $ref: '#/components/schemas/schemas-role'
          type: array
      required:
        - invited_member_id
        - organization_id
      type: object
    schemas-expires_on:
      description: When the invite is no longer active.
      example: '2014-01-01T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    invite_components-schemas-identifier:
      description: Invite identifier tag.
      example: 4f5f0c14a2a41d5063dd301b2f829f04
      maxLength: 32
      readOnly: true
      type: string
    invited_by:
      description: The email address of the user who created the invite.
      example: user@example.com
      maxLength: 90
      type: string
    invited_member_email:
      description: Email address of the user to add to the organization.
      example: user@example.com
      maxLength: 90
      type: string
    invited_on:
      description: When the invite was sent.
      example: '2014-01-01T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    schemas-role:
      properties:
        description:
          $ref: '#/components/schemas/description'
        id:
          $ref: '#/components/schemas/role_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/components-schemas-name'
        permissions:
          $ref: '#/components/schemas/schemas-permissions'
      required:
        - id
        - name
        - description
        - permissions
      type: object
    description:
      description: Description of role's permissions.
      example: Administrative access to the entire Organization
      readOnly: true
      type: string
    role_components-schemas-identifier:
      description: Role identifier tag.
      example: 3536bcfad5faccb999b47003c79917fb
      maxLength: 32
      readOnly: true
      type: string
    components-schemas-name:
      description: Role Name.
      example: Organization Admin
      maxLength: 120
      readOnly: true
      type: string
    schemas-permissions:
      description: Access permissions for this User.
      items:
        example: '#zones:read'
        maxLength: 160
        type: string
      readOnly: true
      type: array
    single_invite_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    collection_organization_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/organization'
              type: array
          type: object
    organization:
      properties:
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/schemas-name'
        permissions:
          $ref: '#/components/schemas/schemas-permissions'
        roles:
          description: List of roles that a user has within an organization.
          items:
            example: All Privileges - Super Administrator
            maxLength: 120
            type: string
          readOnly: true
          type: array
        status:
          $ref: '#/components/schemas/components-schemas-status'
      type: object
    schemas-name:
      description: Organization name.
      example: 'Cloudflare, Inc.'
      maxLength: 100
      type: string
    components-schemas-status:
      description: Whether the user is a member of the organization or has an inivitation pending.
      enum:
        - member
        - invited
      example: member
      type: string
    single_organization_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    user_tokens_permission_groups:
      id: cloudflare.users.user_tokens_permission_groups
      name: user_tokens_permission_groups
      title: User Tokens Permission Groups
      methods:
        permission_groups_list_permission_groups:
          operation:
            $ref: '#/paths/~1user~1tokens~1permission_groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _permission_groups_list_permission_groups:
          operation:
            $ref: '#/paths/~1user~1tokens~1permission_groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_tokens_permission_groups/methods/permission_groups_list_permission_groups'
        insert: []
        update: []
        delete: []
    user:
      id: cloudflare.users.user
      name: user
      title: User
      methods:
        user_details:
          operation:
            $ref: '#/paths/~1user/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _user_details:
          operation:
            $ref: '#/paths/~1user/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        edit_user:
          operation:
            $ref: '#/paths/~1user/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user/methods/user_details'
        insert: []
        update: []
        delete: []
    user_tokens:
      id: cloudflare.users.user_tokens
      name: user_tokens
      title: User Tokens
      methods:
        user_api_tokens_list_tokens:
          operation:
            $ref: '#/paths/~1user~1tokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _user_api_tokens_list_tokens:
          operation:
            $ref: '#/paths/~1user~1tokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_api_tokens_create_token:
          operation:
            $ref: '#/paths/~1user~1tokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_api_tokens_delete_token:
          operation:
            $ref: '#/paths/~1user~1tokens~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_api_tokens_token_details:
          operation:
            $ref: '#/paths/~1user~1tokens~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _user_api_tokens_token_details:
          operation:
            $ref: '#/paths/~1user~1tokens~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_api_tokens_update_token:
          operation:
            $ref: '#/paths/~1user~1tokens~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_api_tokens_verify_token:
          operation:
            $ref: '#/paths/~1user~1tokens~1verify/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _user_api_tokens_verify_token:
          operation:
            $ref: '#/paths/~1user~1tokens~1verify/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_api_tokens_roll_token:
          operation:
            $ref: '#/paths/~1user~1tokens~1{identifier}~1value/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_tokens/methods/user_api_tokens_list_tokens'
          - $ref: '#/components/x-stackQL-resources/user_tokens/methods/user_api_tokens_token_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/user_tokens/methods/user_api_tokens_create_token'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_tokens/methods/user_api_tokens_delete_token'
    zones_firewall_ua_rules:
      id: cloudflare.users.zones_firewall_ua_rules
      name: zones_firewall_ua_rules
      title: Zones Firewall Ua Rules
      methods:
        user_agent_blocking_rules_list_user_agent_blocking_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1ua_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _user_agent_blocking_rules_list_user_agent_blocking_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1ua_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_agent_blocking_rules_create_a_user_agent_blocking_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1ua_rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_agent_blocking_rules_delete_a_user_agent_blocking_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1ua_rules~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_agent_blocking_rules_get_a_user_agent_blocking_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1ua_rules~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _user_agent_blocking_rules_get_a_user_agent_blocking_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1ua_rules~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_agent_blocking_rules_update_a_user_agent_blocking_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1ua_rules~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_ua_rules/methods/user_agent_blocking_rules_list_user_agent_blocking_rules'
          - $ref: '#/components/x-stackQL-resources/zones_firewall_ua_rules/methods/user_agent_blocking_rules_get_a_user_agent_blocking_rule'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_ua_rules/methods/user_agent_blocking_rules_create_a_user_agent_blocking_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_ua_rules/methods/user_agent_blocking_rules_delete_a_user_agent_blocking_rule'
    user_billing_history:
      id: cloudflare.users.user_billing_history
      name: user_billing_history
      title: User Billing History
      methods:
        billing_history_details:
          operation:
            $ref: '#/paths/~1user~1billing~1history/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _billing_history_details:
          operation:
            $ref: '#/paths/~1user~1billing~1history/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_billing_history/methods/billing_history_details'
        insert: []
        update: []
        delete: []
    user_billing_profile:
      id: cloudflare.users.user_billing_profile
      name: user_billing_profile
      title: User Billing Profile
      methods:
        billing_profile_details:
          operation:
            $ref: '#/paths/~1user~1billing~1profile/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _billing_profile_details:
          operation:
            $ref: '#/paths/~1user~1billing~1profile/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_billing_profile/methods/billing_profile_details'
        insert: []
        update: []
        delete: []
    user_subscriptions:
      id: cloudflare.users.user_subscriptions
      name: user_subscriptions
      title: User Subscriptions
      methods:
        user_subscription_get_user_subscriptions:
          operation:
            $ref: '#/paths/~1user~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _user_subscription_get_user_subscriptions:
          operation:
            $ref: '#/paths/~1user~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_subscription_delete_user_subscription:
          operation:
            $ref: '#/paths/~1user~1subscriptions~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        user_subscription_update_user_subscription:
          operation:
            $ref: '#/paths/~1user~1subscriptions~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_subscriptions/methods/user_subscription_get_user_subscriptions'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_subscriptions/methods/user_subscription_delete_user_subscription'
    memberships:
      id: cloudflare.users.memberships
      name: memberships
      title: Memberships
      methods:
        account_memberships_list_memberships:
          operation:
            $ref: '#/paths/~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_memberships_list_memberships:
          operation:
            $ref: '#/paths/~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_memberships_delete_membership:
          operation:
            $ref: '#/paths/~1memberships~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_memberships_membership_details:
          operation:
            $ref: '#/paths/~1memberships~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_memberships_membership_details:
          operation:
            $ref: '#/paths/~1memberships~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_memberships_update_membership:
          operation:
            $ref: '#/paths/~1memberships~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/account_memberships_list_memberships'
          - $ref: '#/components/x-stackQL-resources/memberships/methods/account_memberships_membership_details'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/account_memberships_delete_membership'
    user_invites:
      id: cloudflare.users.user_invites
      name: user_invites
      title: User Invites
      methods:
        invites_list_invitations:
          operation:
            $ref: '#/paths/~1user~1invites/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _invites_list_invitations:
          operation:
            $ref: '#/paths/~1user~1invites/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        invites_invitation_details:
          operation:
            $ref: '#/paths/~1user~1invites~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _invites_invitation_details:
          operation:
            $ref: '#/paths/~1user~1invites~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        invites_respond_to_invitation:
          operation:
            $ref: '#/paths/~1user~1invites~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_invites/methods/invites_list_invitations'
          - $ref: '#/components/x-stackQL-resources/user_invites/methods/invites_invitation_details'
        insert: []
        update: []
        delete: []
    user_organizations:
      id: cloudflare.users.user_organizations
      name: user_organizations
      title: User Organizations
      methods:
        organizations_list_organizations:
          operation:
            $ref: '#/paths/~1user~1organizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _organizations_list_organizations:
          operation:
            $ref: '#/paths/~1user~1organizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_leave_organization:
          operation:
            $ref: '#/paths/~1user~1organizations~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_organization_details:
          operation:
            $ref: '#/paths/~1user~1organizations~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _organizations_organization_details:
          operation:
            $ref: '#/paths/~1user~1organizations~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_organizations/methods/organizations_list_organizations'
          - $ref: '#/components/x-stackQL-resources/user_organizations/methods/organizations_organization_details'
        insert: []
        update: []
        delete: []
paths:
  /user/tokens/permission_groups:
    get:
      description: Find all available permission groups.
      operationId: permission-groups-list-permission-groups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-response_collection'
          description: List Permission Groups response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Permission Groups response failure
      security:
        - api_token: []
      summary: List Permission Groups
      tags:
        - Permission Groups
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.token.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /user:
    get:
      operationId: user-user-details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user_response'
          description: User Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_user_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: User Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: User Details
      tags:
        - User
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.user.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Edit part of your user details.
      operationId: user-edit-user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                country:
                  $ref: '#/components/schemas/country'
                first_name:
                  $ref: '#/components/schemas/first_name'
                last_name:
                  $ref: '#/components/schemas/last_name'
                telephone:
                  $ref: '#/components/schemas/telephone'
                zipcode:
                  $ref: '#/components/schemas/zipcode'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_user_response'
          description: Edit User response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_user_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit User response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit User
      tags:
        - User
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.user.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /user/tokens:
    get:
      description: List all access tokens you created.
      operationId: user-api-tokens-list-tokens
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_collection'
          description: List Tokens response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Tokens response failure
      security:
        - api_token: []
      summary: List Tokens
      tags:
        - User API Tokens
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.token.list
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Create a new access token.
      operationId: user-api-tokens-create-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_payload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_create'
          description: Create Token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_create'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Token response failure
      security:
        - api_token: []
      summary: Create Token
      tags:
        - User API Tokens
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.token.create
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /user/tokens/verify:
    get:
      description: Test whether a token works.
      operationId: user-api-tokens-verify-token
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single_segment'
          description: Verify Token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single_segment'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Verify Token response failure
      security:
        - api_token: []
      summary: Verify Token
      tags:
        - User API Tokens
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/user/tokens/{identifier}':
    delete:
      description: Destroy a token.
      operationId: user-api-tokens-delete-token
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Delete Token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Token response failure
      security:
        - api_token: []
      summary: Delete Token
      tags:
        - User API Tokens
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.token.delete
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Get information about a specific token.
      operationId: user-api-tokens-token-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Token Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Token Details response failure
      security:
        - api_token: []
      summary: Token Details
      tags:
        - User API Tokens
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.token.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Update an existing token.
      operationId: user-api-tokens-update-token
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-token'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Update Token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Token response failure
      security:
        - api_token: []
      summary: Update Token
      tags:
        - User API Tokens
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.token.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/user/tokens/{identifier}/value':
    put:
      description: Roll the token secret.
      operationId: user-api-tokens-roll-token
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single_value'
          description: Roll Token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single_value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Roll Token response failure
      security:
        - api_token: []
      summary: Roll Token
      tags:
        - User API Tokens
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.token.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/firewall/ua_rules':
    get:
      description: Fetches User Agent Blocking rules in a zone. You can filter the results using several optional parameters.
      operationId: user-agent-blocking-rules-list-user-agent-blocking-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewalluablock_response_collection'
          description: List User Agent Blocking rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewalluablock_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List User Agent Blocking rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List User Agent Blocking rules
      tags:
        - User Agent Blocking rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates a new User Agent Blocking rule in a zone.
      operationId: user-agent-blocking-rules-create-a-user-agent-blocking-rule
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - mode
                - configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewalluablock_response_single'
          description: Create a User Agent Blocking rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewalluablock_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a User Agent Blocking rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a User Agent Blocking rule
      tags:
        - User Agent Blocking rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/firewall/ua_rules/{id}':
    delete:
      description: Deletes an existing User Agent Blocking rule.
      operationId: user-agent-blocking-rules-delete-a-user-agent-blocking-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ua-rules_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewalluablock_response_single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/ua-rules_components-schemas-id'
                    type: object
          description: Delete a User Agent Blocking rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/firewalluablock_response_single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/ua-rules_components-schemas-id'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a User Agent Blocking rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a User Agent Blocking rule
      tags:
        - User Agent Blocking rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the details of a User Agent Blocking rule.
      operationId: user-agent-blocking-rules-get-a-user-agent-blocking-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ua-rules_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewalluablock_response_single'
          description: Get a User Agent Blocking rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewalluablock_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a User Agent Blocking rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a User Agent Blocking rule
      tags:
        - User Agent Blocking rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates an existing User Agent Blocking rule.
      operationId: user-agent-blocking-rules-update-a-user-agent-blocking-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ua-rules_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
                - mode
                - configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewalluablock_response_single'
          description: Update a User Agent Blocking rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewalluablock_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a User Agent Blocking rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a User Agent Blocking rule
      tags:
        - User Agent Blocking rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /user/billing/history:
    get:
      description: Accesses your billing history object.
      operationId: user-billing-history-billing-history-details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/billing_history_collection'
          description: Billing History Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/billing_history_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Billing History Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Billing History Details
      tags:
        - User Billing History
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /user/billing/profile:
    get:
      description: Accesses your billing profile object.
      operationId: user-billing-profile-billing-profile-details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/billing_response_single'
          description: Billing Profile Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/billing_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Billing Profile Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Billing Profile Details
      tags:
        - User Billing Profile
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /user/subscriptions:
    get:
      description: Lists all of a user's subscriptions.
      operationId: user-subscription-get-user-subscriptions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_subscription_response_collection'
          description: Get User Subscriptions response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/user_subscription_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get User Subscriptions response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get User Subscriptions
      tags:
        - User Subscription
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
  '/user/subscriptions/{identifier}':
    delete:
      description: Deletes a user's subscription.
      operationId: user-subscription-delete-user-subscription
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  subscription_id:
                    $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
                type: object
          description: Delete User Subscription response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      subscription_id:
                        $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
                    type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete User Subscription response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete User Subscription
      tags:
        - User Subscription
      x-cfPermissionsRequired:
        enum:
          - '#billing:edit'
    put:
      description: Updates a user's subscriptions.
      operationId: user-subscription-update-user-subscription
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription-v2'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_subscription_response_single'
          description: Update User Subscription response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/user_subscription_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update User Subscription response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update User Subscription
      tags:
        - User Subscription
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
          - '#billing:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /memberships:
    get:
      description: List memberships of accounts the user can access.
      operationId: user'-s-account-memberships-list-memberships
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection_membership_response'
          description: List Memberships response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_membership_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Memberships response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Memberships
      tags:
        - User's Account Memberships
  '/memberships/{identifier}':
    delete:
      description: Remove the associated member from an account.
      operationId: user'-s-account-memberships-delete-membership
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/membership_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/membership_components-schemas-identifier'
                    type: object
          description: Delete Membership response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/membership_components-schemas-identifier'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Membership response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Membership
      tags:
        - User's Account Memberships
    get:
      description: Get a specific membership.
      operationId: user'-s-account-memberships-membership-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/membership_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_membership_response'
          description: Membership Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_membership_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Membership Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Membership Details
      tags:
        - User's Account Memberships
    put:
      description: Accept or reject this account invitation.
      operationId: user'-s-account-memberships-update-membership
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/membership_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: Whether to accept or reject this account invitation.
                  enum:
                    - accepted
                    - rejected
                  example: accepted
              required:
                - status
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_membership_response'
          description: Update Membership response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_membership_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Membership response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Membership
      tags:
        - User's Account Memberships
  /user/invites:
    get:
      description: Lists all invitations associated with my user.
      operationId: user'-s-invites-list-invitations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-collection_invite_response'
          description: List Invitations response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-collection_invite_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Invitations response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Invitations
      tags:
        - User's Invites
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/user/invites/{identifier}':
    get:
      description: Gets the details of an invitation.
      operationId: user'-s-invites-invitation-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/invite_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_invite_response'
          description: Invitation Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_invite_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Invitation Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Invitation Details
      tags:
        - User's Invites
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: Responds to an invitation.
      operationId: user'-s-invites-respond-to-invitation
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/invite_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: Status of your response to the invitation (rejected or accepted).
                  enum:
                    - accepted
                    - rejected
                  example: accepted
              required:
                - status
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_invite_response'
          description: Respond to Invitation response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_invite_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Respond to Invitation response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Respond to Invitation
      tags:
        - User's Invites
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  /user/organizations:
    get:
      description: Lists organizations the user is associated with.
      operationId: user'-s-organizations-list-organizations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection_organization_response'
          description: List Organizations response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_organization_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Organizations response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Organizations
      tags:
        - User's Organizations
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/user/organizations/{identifier}':
    delete:
      description: Removes association to an organization.
      operationId: user'-s-organizations-leave-organization
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/common_components-schemas-identifier'
                type: object
          description: Leave Organization response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        $ref: '#/components/schemas/common_components-schemas-identifier'
                    type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Leave Organization response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Leave Organization
      tags:
        - User's Organizations
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Gets a specific organization the user is associated with.
      operationId: user'-s-organizations-organization-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_organization_response'
          description: Organization Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_organization_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Organization Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Organization Details
      tags:
        - User's Organizations
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
