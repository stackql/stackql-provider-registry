openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Spectrum Aggregate Analytics
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - spectrum
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    analytics-aggregate_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items:
                type: object
              type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    app_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                type: object
              type: array
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    argo_smart_routing:
      default: false
      description: |-
        Enables Argo Smart Routing for this application.
        Notes: Only available for TCP applications with traffic_type set to "direct".
      example: true
      type: boolean
    dns:
      description: The name and type of DNS record for the Spectrum application.
      properties:
        name:
          $ref: '#/components/schemas/dns_name'
        type:
          $ref: '#/components/schemas/dns_type'
      type: object
    edge_ips:
      default:
        connectivity: all
        type: dynamic
      description: The anycast edge IP configuration for the hostname of this application.
      oneOf:
        - properties:
            connectivity:
              description: The IP versions supported for inbound connections on Spectrum anycast IPs.
              enum:
                - all
                - ipv4
                - ipv6
              example: all
              type: string
            type:
              description: The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.
              enum:
                - dynamic
              example: dynamic
              type: string
          type: object
        - properties:
            ips:
              description: The array of customer owned IPs we broadcast via anycast for this hostname and application.
              example:
                - 192.0.2.1
              items:
                description: Edge anycast IPs.
                example: 192.0.2.1
                type: string
              type: array
            type:
              description: The type of edge IP configuration specified. Statically allocated edge IPs use customer IPs in accordance with the ips array you specify. Only valid with ADDRESS DNS names.
              enum:
                - static
              example: static
              type: string
          type: object
    ip_firewall:
      description: |-
        Enables IP Access Rules for this application.
        Notes: Only available for TCP applications.
      example: true
      type: boolean
    origin_dns:
      description: The name and type of DNS record for the Spectrum application.
      properties:
        name:
          $ref: '#/components/schemas/origin_dns_name'
        ttl:
          $ref: '#/components/schemas/dns_ttl'
        type:
          $ref: '#/components/schemas/origin_dns_type'
      type: object
    origin_port:
      anyOf:
        - type: integer
        - type: string
      description: |-
        The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `"1000-2000"`.
        Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the "protocol" field.
      example: 22
      maximum: 65535
      minimum: 1
    protocol:
      description: 'The port configuration at Cloudflareâ€™s edge. May specify a single port, for example `"tcp/1000"`, or a range of ports, for example `"tcp/1000-2000"`.'
      example: tcp/22
      type: string
    proxy_protocol:
      default: 'off'
      description: 'Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.'
      enum:
        - 'off'
        - v1
        - v2
        - simple
      example: 'off'
      type: string
    tls:
      description: The type of TLS termination associated with the application.
      enum:
        - 'off'
        - flexible
        - full
        - strict
      example: full
      type: string
    traffic_type:
      default: direct
      description: 'Determines how data travels from the edge to your origin. When set to "direct", Spectrum will send traffic directly to your origin, and the application''s type is derived from the `protocol`. When set to "http" or "https", Spectrum will apply Cloudflare''s HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.'
      enum:
        - direct
        - http
        - https
      example: direct
      type: string
    response_single_origin_dns:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                argo_smart_routing:
                  $ref: '#/components/schemas/argo_smart_routing'
                created_on:
                  $ref: '#/components/schemas/app_components-schemas-created'
                dns:
                  $ref: '#/components/schemas/dns'
                edge_ips:
                  $ref: '#/components/schemas/edge_ips'
                id:
                  $ref: '#/components/schemas/app_id'
                ip_firewall:
                  $ref: '#/components/schemas/ip_firewall'
                modified_on:
                  $ref: '#/components/schemas/app_components-schemas-modified'
                origin_dns:
                  $ref: '#/components/schemas/origin_dns'
                origin_port:
                  $ref: '#/components/schemas/origin_port'
                protocol:
                  $ref: '#/components/schemas/protocol'
                proxy_protocol:
                  $ref: '#/components/schemas/proxy_protocol'
                tls:
                  $ref: '#/components/schemas/tls'
                traffic_type:
                  $ref: '#/components/schemas/traffic_type'
    dns_name:
      description: The name of the DNS record associated with the application.
      example: ssh.example.com
      format: hostname
      type: string
    dns_type:
      description: The type of DNS record associated with the application.
      enum:
        - CNAME
        - ADDRESS
      example: CNAME
      type: string
    origin_dns_name:
      description: The name of the DNS record associated with the origin.
      example: origin.example.com
      format: hostname
      type: string
    dns_ttl:
      description: The TTL of our resolution of your DNS record in seconds.
      minimum: 600
      type: integer
    origin_dns_type:
      description: The type of DNS record associated with the origin. "" is used to specify a combination of A/AAAA records.
      enum:
        - ''
        - A
        - AAAA
        - SRV
      example: ''
      type: string
    app_components-schemas-created:
      description: When the Application was created.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    app_id:
      description: Application identifier.
      example: ea95132c15732412d22c1476fa83f27a
      maxLength: 32
      readOnly: true
      type: string
    app_components-schemas-modified:
      description: When the Application was last modified.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    schemas-response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    zones_analytics_aggregate_current:
      id: cloudflare.spectrum.zones_analytics_aggregate_current
      name: zones_analytics_aggregate_current
      title: Zones Analytics Aggregate Current
      methods:
        aggregate_analytics_get_current_aggregated_analytics:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1analytics~1aggregate~1current/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _aggregate_analytics_get_current_aggregated_analytics:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1analytics~1aggregate~1current/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_analytics_aggregate_current/methods/aggregate_analytics_get_current_aggregated_analytics'
        insert: []
        update: []
        delete: []
    zones_analytics_events_bytime:
      id: cloudflare.spectrum.zones_analytics_events_bytime
      name: zones_analytics_events_bytime
      title: Zones Analytics Events Bytime
      methods:
        analytics___by_time__get_analytics_by_time:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1analytics~1events~1bytime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _analytics___by_time__get_analytics_by_time:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1analytics~1events~1bytime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_analytics_events_bytime/methods/analytics___by_time__get_analytics_by_time'
        insert: []
        update: []
        delete: []
    zones_analytics_events_summary:
      id: cloudflare.spectrum.zones_analytics_events_summary
      name: zones_analytics_events_summary
      title: Zones Analytics Events Summary
      methods:
        analytics___summary__get_analytics_summary:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1analytics~1events~1summary/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _analytics___summary__get_analytics_summary:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1analytics~1events~1summary/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_analytics_events_summary/methods/analytics___summary__get_analytics_summary'
        insert: []
        update: []
        delete: []
    zones_apps:
      id: cloudflare.spectrum.zones_apps
      name: zones_apps
      title: Zones Apps
      methods:
        applications_list_spectrum_applications:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _applications_list_spectrum_applications:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_create_spectrum_application_using_a_name_for_the_origin:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1apps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_delete_spectrum_application:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1apps~1{app_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_get_spectrum_application_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1apps~1{app_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _applications_get_spectrum_application_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1apps~1{app_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_update_spectrum_application_configuration_using_a_name_for_the_origin:
          operation:
            $ref: '#/paths/~1zones~1{zone}~1spectrum~1apps~1{app_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_apps/methods/applications_list_spectrum_applications'
          - $ref: '#/components/x-stackQL-resources/zones_apps/methods/applications_get_spectrum_application_configuration'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_apps/methods/applications_create_spectrum_application_using_a_name_for_the_origin'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_apps/methods/applications_delete_spectrum_application'
paths:
  '/zones/{zone}/spectrum/analytics/aggregate/current':
    get:
      description: Retrieves analytics aggregated from the last minute of usage on Spectrum applications underneath a given zone.
      operationId: spectrum-aggregate-analytics-get-current-aggregated-analytics
      parameters:
        - in: path
          name: zone
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics-aggregate_components-schemas-response_collection'
          description: Get current aggregated analytics response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/analytics-aggregate_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get current aggregated analytics response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get current aggregated analytics
      tags:
        - Spectrum Aggregate Analytics
  '/zones/{zone}/spectrum/analytics/events/bytime':
    get:
      description: Retrieves a list of aggregate metrics grouped by time interval.
      operationId: spectrum-analytics-(-by-time)-get-analytics-by-time
      parameters:
        - in: path
          name: zone
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Get analytics by time response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get analytics by time response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get analytics by time
      tags:
        - Spectrum Analytics (By Time)
  '/zones/{zone}/spectrum/analytics/events/summary':
    get:
      description: Retrieves a list of summarised aggregate metrics over a given time period.
      operationId: spectrum-analytics-(-summary)-get-analytics-summary
      parameters:
        - in: path
          name: zone
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Get analytics summary response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get analytics summary response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get analytics summary
      tags:
        - Spectrum Analytics (Summary)
  '/zones/{zone}/spectrum/apps':
    get:
      description: Retrieves a list of currently existing Spectrum applications inside a zone.
      operationId: spectrum-applications-list-spectrum-applications
      parameters:
        - in: path
          name: zone
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_components-schemas-response_collection'
          description: List Spectrum applications response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/app_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Spectrum applications response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Spectrum applications
      tags:
        - Spectrum Applications
    post:
      description: Creates a new Spectrum application from a configuration using a name for the origin.
      operationId: spectrum-applications-create-spectrum-application-using-a-name-for-the-origin
      parameters:
        - in: path
          name: zone
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                argo_smart_routing:
                  $ref: '#/components/schemas/argo_smart_routing'
                dns:
                  $ref: '#/components/schemas/dns'
                edge_ips:
                  $ref: '#/components/schemas/edge_ips'
                ip_firewall:
                  $ref: '#/components/schemas/ip_firewall'
                origin_dns:
                  $ref: '#/components/schemas/origin_dns'
                origin_port:
                  $ref: '#/components/schemas/origin_port'
                protocol:
                  $ref: '#/components/schemas/protocol'
                proxy_protocol:
                  $ref: '#/components/schemas/proxy_protocol'
                tls:
                  $ref: '#/components/schemas/tls'
                traffic_type:
                  $ref: '#/components/schemas/traffic_type'
              required:
                - protocol
                - dns
                - origin_dns
                - origin_port
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single_origin_dns'
          description: Create Spectrum application using a name for the origin response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single_origin_dns'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Spectrum application using a name for the origin response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Spectrum application using a name for the origin
      tags:
        - Spectrum Applications
  '/zones/{zone}/spectrum/apps/{app_id}':
    delete:
      description: Deletes a previously existing application.
      operationId: spectrum-applications-delete-spectrum-application
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/app_id'
        - in: path
          name: zone
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/app_id'
                        type: object
                    type: object
          description: Delete Spectrum application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/app_id'
                            type: object
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Spectrum application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Spectrum application
      tags:
        - Spectrum Applications
    get:
      description: Gets the application configuration of a specific application inside a zone.
      operationId: spectrum-applications-get-spectrum-application-configuration
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/app_id'
        - in: path
          name: zone
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-response_single'
          description: Get Spectrum application configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Spectrum application configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Spectrum application configuration
      tags:
        - Spectrum Applications
    put:
      description: Updates a previously existing application's configuration that uses a name for the origin.
      operationId: spectrum-applications-update-spectrum-application-configuration-using-a-name-for-the-origin
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/app_id'
        - in: path
          name: zone
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                argo_smart_routing:
                  $ref: '#/components/schemas/argo_smart_routing'
                dns:
                  $ref: '#/components/schemas/dns'
                edge_ips:
                  $ref: '#/components/schemas/edge_ips'
                ip_firewall:
                  $ref: '#/components/schemas/ip_firewall'
                origin_dns:
                  $ref: '#/components/schemas/origin_dns'
                origin_port:
                  $ref: '#/components/schemas/origin_port'
                protocol:
                  $ref: '#/components/schemas/protocol'
                proxy_protocol:
                  $ref: '#/components/schemas/proxy_protocol'
                tls:
                  $ref: '#/components/schemas/tls'
                traffic_type:
                  $ref: '#/components/schemas/traffic_type'
              required:
                - protocol
                - dns
                - origin_dns
                - origin_port
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single_origin_dns'
          description: Update Spectrum application configuration using a name for the origin response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single_origin_dns'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Spectrum application configuration using a name for the origin response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Spectrum application configuration using a name for the origin
      tags:
        - Spectrum Applications
