openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Email Routing destination addresses
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - email_routing
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    destination_addresses_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/addresses'
              type: array
            result_info:
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 20
                total_count:
                  example: 1
              type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    addresses:
      allOf:
        - $ref: '#/components/schemas/destination_address_properties'
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    destination_address_properties:
      properties:
        created:
          $ref: '#/components/schemas/created'
        email:
          $ref: '#/components/schemas/email'
        modified:
          $ref: '#/components/schemas/modified'
        tag:
          $ref: '#/components/schemas/destination_address_identifier'
        verified:
          $ref: '#/components/schemas/verified'
      type: object
    created:
      description: The date and time the destination address has been created.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    email:
      description: The contact email address of the user.
      example: user@example.com
      maxLength: 90
      type: string
    modified:
      description: The date and time the destination address was last modified.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    destination_address_identifier:
      description: Destination address identifier.
      example: ea95132c15732412d22c1476fa83f27a
      maxLength: 32
      readOnly: true
      type: string
    verified:
      description: The date and time the destination address has been verified. Null means not verified yet.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    create_destination_address_properties:
      properties:
        email:
          $ref: '#/components/schemas/email'
      required:
        - email
      type: object
    destination_address_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    rules_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/rules'
              type: array
            result_info:
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 20
                total_count:
                  example: 1
              type: object
    rules:
      allOf:
        - $ref: '#/components/schemas/rule_properties'
    rule_properties:
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled'
        matchers:
          $ref: '#/components/schemas/matchers'
        name:
          $ref: '#/components/schemas/rules_components-schemas-name'
        priority:
          $ref: '#/components/schemas/components-schemas-priority'
        tag:
          $ref: '#/components/schemas/rule_identifier'
      type: object
    actions:
      description: List actions patterns.
      items:
        $ref: '#/components/schemas/schemas-action'
      type: array
    rules_components-schemas-enabled:
      default: true
      description: Routing rule status.
      enum:
        - true
        - false
      example: true
      type: boolean
    matchers:
      description: Matching patterns to forward to your actions.
      items:
        $ref: '#/components/schemas/matcher'
      type: array
    rules_components-schemas-name:
      description: Routing rule name.
      example: Send to user@example.net rule.
      maxLength: 256
      type: string
    components-schemas-priority:
      default: 0
      description: Priority of the routing rule.
      minimum: 0
      type: number
    rule_identifier:
      description: Routing rule identifier.
      example: a7e6fb77503c41d8a7f3113c6918f10c
      maxLength: 32
      readOnly: true
      type: string
    schemas-action:
      description: Actions pattern.
      properties:
        type:
          description: Type of supported action.
          enum:
            - forward
            - worker
          example: forward
          type: string
        value:
          items:
            description: Value for action.
            example: destinationaddress@example.net
            maxLength: 90
            type: string
          type: array
      required:
        - type
        - value
      type: object
    matcher:
      description: Matching pattern to forward your actions.
      properties:
        field:
          description: Field for type matcher.
          enum:
            - to
          example: to
          type: string
        type:
          description: Type of matcher.
          enum:
            - literal
          example: literal
          type: string
        value:
          description: Value for matcher.
          example: test@example.com
          maxLength: 90
          type: string
      required:
        - type
        - field
        - value
      type: object
    create_rule_properties:
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled'
        matchers:
          $ref: '#/components/schemas/matchers'
        name:
          $ref: '#/components/schemas/rules_components-schemas-name'
        priority:
          $ref: '#/components/schemas/components-schemas-priority'
      required:
        - actions
        - matchers
      type: object
    rule_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    catch_all_rule_response_single:
      properties:
        actions:
          $ref: '#/components/schemas/catchall-actions'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled'
        matchers:
          $ref: '#/components/schemas/catchall-matchers'
        name:
          $ref: '#/components/schemas/rules_components-schemas-name'
        tag:
          $ref: '#/components/schemas/rule_identifier'
      type: object
    catchall-actions:
      description: List actions for the catch-all routing rule.
      items:
        $ref: '#/components/schemas/catchall-action'
      type: array
    catchall-matchers:
      description: List of matchers for the catch-all routing rule.
      items:
        $ref: '#/components/schemas/catchall-matcher'
      type: array
    catchall-action:
      description: Action for the catch-all routing rule.
      properties:
        type:
          description: Type of action for catch-all rule.
          enum:
            - drop
            - forward
            - worker
          example: forward
          type: string
        value:
          items:
            description: Input value for action.
            example: destinationaddress@example.net
            maxLength: 90
            type: string
          type: array
      required:
        - type
      type: object
    catchall-matcher:
      description: Matcher for catch-all routing rule.
      properties:
        type:
          description: Type of matcher. Default is 'all'.
          enum:
            - all
          example: all
          type: string
      required:
        - type
      type: object
    update_catch_all_rule_properties:
      properties:
        actions:
          $ref: '#/components/schemas/catchall-actions'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled'
        matchers:
          $ref: '#/components/schemas/catchall-matchers'
        name:
          $ref: '#/components/schemas/rules_components-schemas-name'
      required:
        - actions
        - matchers
      type: object
    update_rule_properties:
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled'
        matchers:
          $ref: '#/components/schemas/matchers'
        name:
          $ref: '#/components/schemas/rules_components-schemas-name'
        priority:
          $ref: '#/components/schemas/components-schemas-priority'
      required:
        - actions
        - matchers
      type: object
    email-settings_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    dns-settings_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-dns-record'
              type: array
    schemas-dns-record:
      description: List of records needed to enable an Email Routing zone.
      properties:
        content:
          description: DNS record content.
          example: 127.0.0.1
          type: string
        name:
          description: DNS record name (or @ for the zone apex).
          example: example.com
          maxLength: 255
          type: string
        priority:
          description: 'Required for MX, SRV and URI records. Unused by other record types. Records with lower priorities are preferred.'
          example: 10
          maximum: 65535
          minimum: 0
          type: number
        ttl:
          anyOf:
            - example: 3600
              maximum: 86400
              minimum: 60
              type: number
            - enum:
                - 1
              type: number
          description: 'Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for ''automatic''.'
          example: 3600
          type: number
        type:
          description: DNS record type.
          enum:
            - A
            - AAAA
            - CNAME
            - HTTPS
            - TXT
            - SRV
            - LOC
            - MX
            - NS
            - CERT
            - DNSKEY
            - DS
            - NAPTR
            - SMIMEA
            - SSHFP
            - SVCB
            - TLSA
            - URI
          example: A
          readOnly: true
          type: string
      type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_email_routing_addresses:
      id: cloudflare.email_routing.accounts_email_routing_addresses
      name: accounts_email_routing_addresses
      title: Accounts Email Routing Addresses
      methods:
        destination_addresses_list_destination_addresses:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1email~1routing~1addresses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _destination_addresses_list_destination_addresses:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1email~1routing~1addresses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        destination_addresses_create_a_destination_address:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1email~1routing~1addresses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        destination_addresses_delete_destination_address:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1email~1routing~1addresses~1{destination_address_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        destination_addresses_get_a_destination_address:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1email~1routing~1addresses~1{destination_address_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _destination_addresses_get_a_destination_address:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1email~1routing~1addresses~1{destination_address_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_email_routing_addresses/methods/destination_addresses_list_destination_addresses'
          - $ref: '#/components/x-stackQL-resources/accounts_email_routing_addresses/methods/destination_addresses_get_a_destination_address'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_email_routing_addresses/methods/destination_addresses_create_a_destination_address'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_email_routing_addresses/methods/destination_addresses_delete_destination_address'
    zones_email_routing_rules:
      id: cloudflare.email_routing.zones_email_routing_rules
      name: zones_email_routing_rules
      title: Zones Email Routing Rules
      methods:
        routing_rules_list_routing_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _routing_rules_list_routing_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        routing_rules_create_routing_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        routing_rules_delete_routing_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules~1{rule_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        routing_rules_get_routing_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules~1{rule_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _routing_rules_get_routing_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules~1{rule_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        routing_rules_update_routing_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules~1{rule_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_email_routing_rules/methods/routing_rules_list_routing_rules'
          - $ref: '#/components/x-stackQL-resources/zones_email_routing_rules/methods/routing_rules_get_routing_rule'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_email_routing_rules/methods/routing_rules_create_routing_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_email_routing_rules/methods/routing_rules_delete_routing_rule'
    zones_email_routing_rules_catch_all:
      id: cloudflare.email_routing.zones_email_routing_rules_catch_all
      name: zones_email_routing_rules_catch_all
      title: Zones Email Routing Rules Catch All
      methods:
        routing_rules_get_catch_all_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules~1catch_all/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _routing_rules_get_catch_all_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules~1catch_all/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        routing_rules_update_catch_all_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1rules~1catch_all/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_email_routing_rules_catch_all/methods/routing_rules_get_catch_all_rule'
        insert: []
        update: []
        delete: []
    zones_email_routing:
      id: cloudflare.email_routing.zones_email_routing
      name: zones_email_routing
      title: Zones Email Routing
      methods:
        settings_get_email_routing_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _settings_get_email_routing_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        settings_disable_email_routing:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1disable/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        settings_email_routing_dns_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1dns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _settings_email_routing_dns_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1dns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        settings_enable_email_routing:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1email~1routing~1enable/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_email_routing/methods/settings_get_email_routing_settings'
        insert: []
        update: []
        delete: []
paths:
  '/accounts/{account_identifier}/email/routing/addresses':
    get:
      description: Lists existing destination addresses.
      operationId: email-routing-destination-addresses-list-destination-addresses
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/destination_addresses_response_collection'
          description: List destination addresses response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/destination_addresses_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List destination addresses response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List destination addresses
      tags:
        - Email Routing destination addresses
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.email.routing.address.list
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Create a destination address to forward your emails to. Destination addresses need to be verified before they can be used.
      operationId: email-routing-destination-addresses-create-a-destination-address
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_destination_address_properties'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/destination_address_response_single'
          description: Create a destination address response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/destination_address_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a destination address response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a destination address
      tags:
        - Email Routing destination addresses
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.email.routing.address.create
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/email/routing/addresses/{destination_address_identifier}':
    delete:
      description: Deletes a specific destination address.
      operationId: email-routing-destination-addresses-delete-destination-address
      parameters:
        - in: path
          name: destination_address_identifier
          required: true
          schema:
            $ref: '#/components/schemas/destination_address_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/destination_address_response_single'
          description: Delete destination address response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/destination_address_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete destination address response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete destination address
      tags:
        - Email Routing destination addresses
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.email.routing.address.delete
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Gets information for a specific destination email already created.
      operationId: email-routing-destination-addresses-get-a-destination-address
      parameters:
        - in: path
          name: destination_address_identifier
          required: true
          schema:
            $ref: '#/components/schemas/destination_address_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/destination_address_response_single'
          description: Get a destination address response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/destination_address_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a destination address response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a destination address
      tags:
        - Email Routing destination addresses
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.email.routing.address.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/email/routing/rules':
    get:
      description: Lists existing routing rules.
      operationId: email-routing-routing-rules-list-routing-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rules_response_collection'
          description: List routing rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rules_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List routing rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List routing rules
      tags:
        - Email Routing routing rules
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.list
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Rules consist of a set of criteria for matching emails (such as an email being sent to a specific custom email address) plus a set of actions to take on the email (like forwarding it to a specific destination address).
      operationId: email-routing-routing-rules-create-routing-rule
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_rule_properties'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_single'
          description: Create routing rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create routing rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create routing rule
      tags:
        - Email Routing routing rules
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.create
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/email/routing/rules/catch_all':
    get:
      description: Get information on the default catch-all routing rule.
      operationId: email-routing-routing-rules-get-catch-all-rule
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/catch_all_rule_response_single'
          description: Get catch-all rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/catch_all_rule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get catch-all rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get catch-all rule
      tags:
        - Email Routing routing rules
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: 'Enable or disable catch-all routing rule, or change action to forward to specific destination address.'
      operationId: email-routing-routing-rules-update-catch-all-rule
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_catch_all_rule_properties'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/catch_all_rule_response_single'
          description: Update catch-all rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/catch_all_rule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update catch-all rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update catch-all rule
      tags:
        - Email Routing routing rules
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/email/routing/rules/{rule_identifier}':
    delete:
      description: Delete a specific routing rule.
      operationId: email-routing-routing-rules-delete-routing-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_single'
          description: Delete routing rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete routing rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete routing rule
      tags:
        - Email Routing routing rules
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.delete
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Get information for a specific routing rule already created.
      operationId: email-routing-routing-rules-get-routing-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_single'
          description: Get routing rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get routing rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get routing rule
      tags:
        - Email Routing routing rules
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: 'Update actions and matches, or enable/disable specific routing rules.'
      operationId: email-routing-routing-rules-update-routing-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_rule_properties'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_single'
          description: Update routing rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update routing rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update routing rule
      tags:
        - Email Routing routing rules
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/email/routing':
    get:
      description: Get information about the settings for your Email Routing zone.
      operationId: email-routing-settings-get-email-routing-settings
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email-settings_response_single'
          description: Get Email Routing settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/email-settings_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Email Routing settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Email Routing settings
      tags:
        - Email Routing settings
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.config.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/email/routing/disable':
    post:
      description: Disable your Email Routing zone. Also removes additional MX records previously required for Email Routing to work.
      operationId: email-routing-settings-disable-email-routing
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email-settings_response_single'
          description: Disable Email Routing response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/email-settings_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Disable Email Routing response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Disable Email Routing
      tags:
        - Email Routing settings
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.config.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/email/routing/dns':
    get:
      description: Show the DNS records needed to configure your Email Routing zone.
      operationId: email-routing-settings-email-routing-dns-settings
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-settings_response_collection'
          description: Email Routing - DNS settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-settings_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Email Routing - DNS settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Email Routing - DNS settings
      tags:
        - Email Routing settings
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.config.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/email/routing/enable':
    post:
      description: Enable you Email Routing zone. Add and lock the necessary MX and SPF records.
      operationId: email-routing-settings-enable-email-routing
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email-settings_response_single'
          description: Enable Email Routing response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/email-settings_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Enable Email Routing response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Enable Email Routing
      tags:
        - Email Routing settings
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.config.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
