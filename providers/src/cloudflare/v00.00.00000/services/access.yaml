openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Access Bookmark applications (Deprecated)
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - access
  version: 4.0.0
components:
  schemas:
    bookmarks_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    bookmarks_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/bookmarks'
              type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    bookmarks:
      properties:
        app_launcher_visible:
          $ref: '#/components/schemas/schemas-app_launcher_visible'
        created_at:
          $ref: '#/components/schemas/timestamp'
        domain:
          $ref: '#/components/schemas/components-schemas-domain'
        id:
          description: The unique identifier for the Bookmark application.
        logo_url:
          $ref: '#/components/schemas/logo_url'
        name:
          $ref: '#/components/schemas/bookmarks_components-schemas-name'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    schemas-app_launcher_visible:
      description: Displays the application in the App Launcher.
      example: true
      type: boolean
    timestamp:
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    components-schemas-domain:
      description: The domain of the Bookmark application.
      example: example.com
      type: string
    logo_url:
      description: The image URL for the logo shown in the App Launcher dashboard.
      example: 'https://www.cloudflare.com/img/logo-web-badges/cf-logo-on-white-bg.svg'
      type: string
    bookmarks_components-schemas-name:
      description: The name of the Bookmark application.
      example: My Website
      type: string
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    uuid:
      description: UUID
      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      readOnly: true
      type: string
    bookmarks_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/uuid'
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    bookmarks_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/bookmarks'
    apps_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    apps_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/apps'
              type: array
    apps:
      anyOf:
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/self_hosted_props'
          title: Self Hosted Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/saas_props'
          title: SaaS Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/ssh_props'
          title: Browser SSH Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/vnc_props'
          title: Browser VNC Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/app_launcher_props'
          title: App Launcher Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/warp_props'
          title: Device Enrollment Permissions Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/biso_props'
          title: Browser Isolation Permissions Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/bookmark_props'
          title: Bookmark application
          type: object
    basic_app_response_props:
      properties:
        aud:
          $ref: '#/components/schemas/schemas-aud'
        created_at:
          $ref: '#/components/schemas/timestamp'
        id:
          $ref: '#/components/schemas/uuid'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    self_hosted_props:
      properties:
        allowed_idps:
          $ref: '#/components/schemas/allowed_idps'
        app_launcher_visible:
          $ref: '#/components/schemas/app_launcher_visible'
        auto_redirect_to_identity:
          $ref: '#/components/schemas/auto_redirect_to_identity'
        cors_headers:
          $ref: '#/components/schemas/cors_headers'
        custom_deny_message:
          $ref: '#/components/schemas/custom_deny_message'
        custom_deny_url:
          $ref: '#/components/schemas/custom_deny_url'
        domain:
          $ref: '#/components/schemas/schemas-domain'
        enable_binding_cookie:
          $ref: '#/components/schemas/enable_binding_cookie'
        http_only_cookie_attribute:
          $ref: '#/components/schemas/http_only_cookie_attribute'
        logo_url:
          $ref: '#/components/schemas/logo_url'
        name:
          $ref: '#/components/schemas/apps_components-schemas-name'
        same_site_cookie_attribute:
          $ref: '#/components/schemas/same_site_cookie_attribute'
        service_auth_401_redirect:
          $ref: '#/components/schemas/service_auth_401_redirect'
        session_duration:
          $ref: '#/components/schemas/session_duration'
        skip_interstitial:
          $ref: '#/components/schemas/skip_interstitial'
        type:
          description: The application type.
          example: self_hosted
          type: string
      title: Self Hosted Application
      type: object
    saas_props:
      properties:
        allowed_idps:
          $ref: '#/components/schemas/allowed_idps'
        app_launcher_visible:
          $ref: '#/components/schemas/app_launcher_visible'
        auto_redirect_to_identity:
          $ref: '#/components/schemas/auto_redirect_to_identity'
        logo_url:
          $ref: '#/components/schemas/logo_url'
        name:
          $ref: '#/components/schemas/apps_components-schemas-name'
        saas_app:
          $ref: '#/components/schemas/saas_app'
        type:
          description: The application type.
          example: saas
          type: string
      title: SaaS Application
      type: object
    ssh_props:
      allOf:
        - $ref: '#/components/schemas/self_hosted_props'
        - properties:
            type:
              description: The application type.
              example: ssh
              type: string
    vnc_props:
      allOf:
        - $ref: '#/components/schemas/self_hosted_props'
        - properties:
            type:
              description: The application type.
              example: vnc
              type: string
    app_launcher_props:
      allOf:
        - $ref: '#/components/schemas/feature_app_props'
        - properties:
            domain:
              example: authdomain.cloudflareaccess.com
              readOnly: true
            name:
              default: App Launcher
              example: App Launcher
              readOnly: true
            type:
              description: The application type.
              example: app_launcher
              type: string
    warp_props:
      allOf:
        - $ref: '#/components/schemas/feature_app_props'
        - properties:
            domain:
              example: authdomain.cloudflareaccess.com/warp
              readOnly: true
            name:
              default: Warp Login App
              example: Warp Login App
              readOnly: true
            type:
              description: The application type.
              example: warp
              type: string
    biso_props:
      allOf:
        - $ref: '#/components/schemas/feature_app_props'
        - properties:
            domain:
              example: authdomain.cloudflareaccess.com/browser
              readOnly: true
            name:
              default: Clientless Web Isolation
              example: Clientless Web Isolation
              readOnly: true
            type:
              description: The application type.
              example: biso
              type: string
    bookmark_props:
      properties:
        app_launcher_visible:
          default: true
        domain:
          description: The URL or domain of the bookmark.
          example: 'https://mybookmark.com'
        logo_url:
          $ref: '#/components/schemas/logo_url'
        name:
          $ref: '#/components/schemas/apps_components-schemas-name'
        type:
          description: The application type.
          example: bookmark
          type: string
      title: Bookmark application
      type: object
    schemas-aud:
      description: Audience tag.
      example: 737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe3893
      maxLength: 64
      readOnly: true
      type: string
    allowed_idps:
      description: The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
      items:
        description: The identity providers selected for application.
        example: 699d98642c564d2e855e9661899b7252
        type: string
      type: array
    app_launcher_visible:
      default: true
      description: Displays the application in the App Launcher.
      example: true
      type: boolean
    auto_redirect_to_identity:
      default: false
      description: 'When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.'
      type: boolean
    cors_headers:
      properties:
        allow_all_headers:
          $ref: '#/components/schemas/allow_all_headers'
        allow_all_methods:
          $ref: '#/components/schemas/allow_all_methods'
        allow_all_origins:
          $ref: '#/components/schemas/allow_all_origins'
        allow_credentials:
          $ref: '#/components/schemas/allow_credentials'
        allowed_headers:
          $ref: '#/components/schemas/allowed_headers'
        allowed_methods:
          $ref: '#/components/schemas/allowed_methods'
        allowed_origins:
          $ref: '#/components/schemas/allowed_origins'
        max_age:
          $ref: '#/components/schemas/max_age'
      type: object
    custom_deny_message:
      description: The custom error message shown to a user when they are denied access to the application.
      type: string
    custom_deny_url:
      description: The custom URL a user is redirected to when they are denied access to the application.
      type: string
    schemas-domain:
      description: The domain and path that Access will secure.
      example: test.example.com/admin
      type: string
    enable_binding_cookie:
      default: false
      description: 'Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.'
      type: boolean
    http_only_cookie_attribute:
      default: true
      description: 'Enables the HttpOnly cookie attribute, which increases security against XSS attacks.'
      example: true
      type: boolean
    apps_components-schemas-name:
      description: The name of the application.
      example: Admin Site
      type: string
    same_site_cookie_attribute:
      description: 'Sets the SameSite cookie setting, which provides increased security against CSRF attacks.'
      example: strict
      type: string
    service_auth_401_redirect:
      description: Returns a 401 status code when the request is blocked by a Service Auth policy.
      example: true
      type: boolean
    session_duration:
      default: 24h
      description: 'The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.'
      example: 24h
      type: string
    skip_interstitial:
      description: Enables automatic authentication through cloudflared.
      example: true
      type: boolean
    saas_app:
      properties:
        consumer_service_url:
          description: The service provider's endpoint that is responsible for receiving and parsing a SAML assertion.
          example: 'https://example.com'
          type: string
        created_at:
          $ref: '#/components/schemas/timestamp'
        custom_attributes:
          properties:
            name:
              description: The name of the attribute.
              example: family_name
              type: string
            name_format:
              description: A globally unique name for an identity or service provider.
              enum:
                - 'urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified'
                - 'urn:oasis:names:tc:SAML:2.0:attrname-format:basic'
                - 'urn:oasis:names:tc:SAML:2.0:attrname-format:uri'
              example: 'urn:oasis:names:tc:SAML:2.0:attrname-format:basic'
              type: string
            source:
              properties:
                name:
                  description: The name of the IdP attribute.
                  example: last_name
                  type: string
              type: object
          type: object
        idp_entity_id:
          description: The unique identifier for your SaaS application.
          example: 'https://example.cloudflareaccess.com'
          type: string
        name_id_format:
          description: The format of the name identifier sent to the SaaS application.
          enum:
            - id
            - email
          example: id
          type: string
        public_key:
          description: The Access public certificate that will be used to verify your identity.
          example: example unique name
          type: string
        sp_entity_id:
          description: A globally unique name for an identity or service provider.
          example: example unique name
          type: string
        sso_endpoint:
          description: The endpoint where your SaaS application will send login requests.
          example: 'https://example.cloudflareaccess.com/cdn-cgi/access/sso/saml/b3f58a2b414e0b51d45c8c2af26fccca0e27c63763c426fa52f98dcf0b3b3bfd'
          type: string
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    feature_app_props:
      properties:
        allowed_idps:
          $ref: '#/components/schemas/allowed_idps'
        auto_redirect_to_identity:
          $ref: '#/components/schemas/auto_redirect_to_identity'
        domain:
          $ref: '#/components/schemas/schemas-domain'
        name:
          $ref: '#/components/schemas/apps_components-schemas-name'
        session_duration:
          $ref: '#/components/schemas/session_duration'
        type:
          $ref: '#/components/schemas/apps_components-schemas-type'
      type: object
    allow_all_headers:
      description: Allows all HTTP request headers.
      example: true
      type: boolean
    allow_all_methods:
      description: Allows all HTTP request methods.
      type: boolean
    allow_all_origins:
      description: Allows all origins.
      type: boolean
    allow_credentials:
      description: 'When set to `true`, includes credentials (cookies, authorization headers, or TLS client certificates) with requests.'
      type: boolean
    allowed_headers:
      description: Allowed HTTP request headers.
      items: {}
      type: array
    allowed_methods:
      description: Allowed HTTP request methods.
      example:
        - GET
      items:
        enum:
          - GET
          - POST
          - HEAD
          - PUT
          - DELETE
          - CONNECT
          - OPTIONS
          - TRACE
          - PATCH
        type: string
      type: array
    allowed_origins:
      description: Allowed origins.
      example:
        - 'https://example.com'
      items: {}
      type: array
    max_age:
      description: The maximum number of seconds the results of a preflight request can be cached.
      example: -1
      maximum: 86400
      minimum: -1
      type: number
    apps_components-schemas-type:
      description: The application type.
      enum:
        - self_hosted
        - saas
        - ssh
        - vnc
        - app_launcher
        - warp
        - biso
        - bookmark
        - dash_sso
      example: self_hosted
      type: string
    apps_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/apps'
    schemas-app_id:
      example: 699d98642c564d2e855e9661899b7252
    apps_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/uuid'
              type: object
    components-schemas-empty_response:
      allOf:
        - properties:
            result:
              nullable: true
            success:
              enum:
                - true
                - false
              example: true
              type: boolean
    policy_check_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                app_state:
                  properties:
                    app_uid:
                      $ref: '#/components/schemas/uuid'
                    aud:
                      example: 737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe389
                      type: string
                    hostname:
                      example: test.com
                      type: string
                    name:
                      example: Test App
                      type: string
                    policies:
                      example:
                        - decision: allow
                          exclude: []
                          include:
                            - _type: email
                              email: testuser@gmail.com
                          precedence: 0
                          require: []
                          status: Success
                      items: {}
                      type: array
                    status:
                      example: Success
                      type: string
                  type: object
                user_identity:
                  properties:
                    account_id:
                      example: 41ecfbb341f033e52b46742756aabb8b
                      type: string
                    device_sessions:
                      example: {}
                      type: object
                    email:
                      example: testuser@gmail.com
                      type: string
                    geo:
                      properties:
                        country:
                          example: US
                          type: string
                      type: object
                    iat:
                      type: integer
                    id:
                      example: '1164449231815010287495'
                      type: string
                    is_gateway:
                      example: false
                      type: boolean
                    is_warp:
                      example: false
                      type: boolean
                    name:
                      example: Test User
                      type: string
                    user_uuid:
                      $ref: '#/components/schemas/uuid'
                    version:
                      type: integer
                  type: object
              type: object
    access-requests_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    access-requests_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/access-requests'
              type: array
    access-requests:
      properties:
        action:
          $ref: '#/components/schemas/access-requests_components-schemas-action'
        allowed:
          $ref: '#/components/schemas/schemas-allowed'
        app_domain:
          $ref: '#/components/schemas/app_domain'
        app_uid:
          $ref: '#/components/schemas/app_uid'
        connection:
          $ref: '#/components/schemas/components-schemas-connection'
        created_at:
          $ref: '#/components/schemas/timestamp'
        ip_address:
          $ref: '#/components/schemas/components-schemas-ip'
        ray_id:
          $ref: '#/components/schemas/ray_id'
        user_email:
          $ref: '#/components/schemas/schemas-email'
      type: object
    access-requests_components-schemas-action:
      description: 'The event that occurred, such as a login attempt.'
      example: login
      type: string
    schemas-allowed:
      default: false
      description: The result of the authentication event.
      type: boolean
    app_domain:
      description: The URL of the Access application.
      example: test.example.com/admin
      type: string
    app_uid:
      description: The unique identifier for the Access application.
      example: df7e2w5f-02b7-4d9d-af26-8d1988fca630
    components-schemas-connection:
      description: The IdP used to authenticate.
      example: saml
      type: string
    components-schemas-ip:
      description: The IP address of the authenticating user.
      example: 198.41.129.166
      type: string
    ray_id:
      description: The unique identifier for the request to Cloudflare.
      example: 187d944c61940c77
      maxLength: 16
      type: string
    schemas-email:
      description: The email address of the authenticating user.
      example: user@example.com
      format: email
      type: string
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    groups_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-groups'
              type: array
    schemas-groups:
      properties:
        created_at:
          $ref: '#/components/schemas/timestamp'
        exclude:
          $ref: '#/components/schemas/exclude'
        id:
          $ref: '#/components/schemas/schemas-uuid'
        include:
          $ref: '#/components/schemas/include'
        name:
          $ref: '#/components/schemas/groups_components-schemas-name'
        require:
          $ref: '#/components/schemas/require'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    exclude:
      description: 'Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.'
      items:
        $ref: '#/components/schemas/rule_components-schemas-rule'
      type: array
    schemas-uuid:
      description: The unique identifier for the Access group.
    include:
      description: Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.
      items:
        $ref: '#/components/schemas/rule_components-schemas-rule'
      type: array
    groups_components-schemas-name:
      description: The name of the Access group.
      example: Allow devs
      type: string
    require:
      description: 'Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.'
      items:
        $ref: '#/components/schemas/rule_components-schemas-rule'
      type: array
    rule_components-schemas-rule:
      oneOf:
        - $ref: '#/components/schemas/email_rule'
        - $ref: '#/components/schemas/domain_rule'
        - $ref: '#/components/schemas/everyone_rule'
        - $ref: '#/components/schemas/ip_rule'
        - $ref: '#/components/schemas/ip_list_rule'
        - $ref: '#/components/schemas/certificate_rule'
        - $ref: '#/components/schemas/access_group_rule'
        - $ref: '#/components/schemas/azure_group_rule'
        - $ref: '#/components/schemas/github_organization_rule'
        - $ref: '#/components/schemas/gsuite_group_rule'
        - $ref: '#/components/schemas/okta_group_rule'
        - $ref: '#/components/schemas/saml_group_rule'
      type: object
    email_rule:
      description: Matches a specific email.
      properties:
        email:
          properties:
            email:
              description: The email of the user.
              example: test@example.com
              format: email
              type: string
          required:
            - email
          type: object
      required:
        - email
      title: Email
      type: object
    domain_rule:
      description: Match an entire email domain.
      properties:
        email_domain:
          properties:
            domain:
              description: The email domain to match.
              example: example.com
              type: string
          required:
            - domain
          type: object
      required:
        - email_domain
      title: Email domain
      type: object
    everyone_rule:
      description: Matches everyone.
      properties:
        everyone:
          description: An empty object which matches on all users.
          example: {}
          type: object
      required:
        - everyone
      title: Everyone
      type: object
    ip_rule:
      description: Matches an IP address block.
      properties:
        ip:
          properties:
            ip:
              description: An IPv4 or IPv6 CIDR block.
              example: '2400:cb00:21:10a::/64'
              type: string
          required:
            - ip
          type: object
      required:
        - ip
      title: IP ranges
      type: object
    ip_list_rule:
      description: Matches an IP address from a list.
      properties:
        ip_list:
          properties:
            id:
              description: The ID of a previously created IP list.
              example: aa0a4aab-672b-4bdb-bc33-a59f1130a11f
              type: string
          required:
            - id
          type: object
      required:
        - ip_list
      title: IP list
      type: object
    certificate_rule:
      description: Matches any valid client certificate.
      example:
        certificate: {}
      properties:
        certificate:
          example: {}
          type: object
      required:
        - certificate
      title: Valid certificate
      type: object
    access_group_rule:
      description: Matches an Access group.
      properties:
        group:
          properties:
            id:
              description: The ID of a previously created Access group.
              example: aa0a4aab-672b-4bdb-bc33-a59f1130a11f
              type: string
          required:
            - id
          type: object
      required:
        - group
      title: Access groups
      type: object
    azure_group_rule:
      description: |-
        Matches an Azure group.
        Requires an Azure identity provider.
      properties:
        azureAD:
          properties:
            connection_id:
              description: The ID of your Azure identity provider.
              example: ea85612a-29c8-46c2-bacb-669d65136971
              type: string
            id:
              description: The ID of an Azure group.
              example: aa0a4aab-672b-4bdb-bc33-a59f1130a11f
              type: string
          required:
            - id
            - connection_id
          type: object
      required:
        - azureAD
      title: Azure group
      type: object
    github_organization_rule:
      description: |-
        Matches a Github organization.
        Requires a Github identity provider.
      properties:
        github-organization:
          properties:
            connection_id:
              description: The ID of your Github identity provider.
              example: ea85612a-29c8-46c2-bacb-669d65136971
              type: string
            name:
              description: The name of the organization.
              example: cloudflare
              type: string
          required:
            - name
            - connection_id
          type: object
      required:
        - github-organization
      title: Github organization
      type: object
    gsuite_group_rule:
      description: |-
        Matches a group in Google Workspace.
        Requires a Google Workspace identity provider.
      properties:
        gsuite:
          properties:
            connection_id:
              description: The ID of your Google Workspace identity provider.
              example: ea85612a-29c8-46c2-bacb-669d65136971
              type: string
            email:
              description: The email of the Google Workspace group.
              example: devs@cloudflare.com
              type: string
          required:
            - email
            - connection_id
          type: object
      required:
        - gsuite
      title: Google Workspace group
      type: object
    okta_group_rule:
      description: |-
        Matches an Okta group.
        Requires an Okta identity provider.
      properties:
        okta:
          properties:
            connection_id:
              description: The ID of your Okta identity provider.
              example: ea85612a-29c8-46c2-bacb-669d65136971
              type: string
            email:
              description: The email of the Okta group.
              example: devs@cloudflare.com
              type: string
          required:
            - email
            - connection_id
          type: object
      required:
        - okta
      title: Okta group
      type: object
    saml_group_rule:
      description: |-
        Matches a SAML group.
        Requires a SAML identity provider.
      properties:
        saml:
          properties:
            attribute_name:
              description: The name of the SAML attribute.
              example: group
              type: string
            attribute_value:
              description: The SAML attribute value to look for.
              example: devs@cloudflare.com
              type: string
          required:
            - attribute_name
            - attribute_value
          type: object
      required:
        - saml
      title: SAML group
      type: object
    groups_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/schemas-groups'
    groups_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/schemas-uuid'
              type: object
    identity-providers_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    identity-providers_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/identity-providers'
              type: array
    identity-providers:
      properties:
        config:
          $ref: '#/components/schemas/schemas-config'
        id:
          $ref: '#/components/schemas/uuid'
        name:
          $ref: '#/components/schemas/identity-providers_components-schemas-name'
        type:
          $ref: '#/components/schemas/identity-providers_components-schemas-type'
      type: object
    schemas-config:
      description: 'The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).'
      type: object
    identity-providers_components-schemas-name:
      description: 'The name of the identity provider, shown to users on the login page.'
      example: Widget Corps OTP
      type: string
    identity-providers_components-schemas-type:
      description: 'The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).'
      example: onetimepin
      type: string
    identity-providers_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/identity-providers'
    keys_components-schemas-identifier-2:
      example: 699d98642c564d2e855e9661899b7252
    keys_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - $ref: '#/components/schemas/key_config'
    key_config:
      properties:
        days_until_next_rotation:
          $ref: '#/components/schemas/days_until_next_rotation'
        key_rotation_interval_days:
          $ref: '#/components/schemas/key_rotation_interval_days'
        last_key_rotation_at:
          $ref: '#/components/schemas/last_key_rotation_at'
      type: object
    days_until_next_rotation:
      description: The number of days until the next key rotation.
      example: 1
      readOnly: true
      type: number
    key_rotation_interval_days:
      description: The number of days between key rotations.
      example: 30
      maximum: 365
      minimum: 21
      type: number
    last_key_rotation_at:
      description: The timestamp of the previous key rotation.
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      type: string
    certificates_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-certificates'
              type: array
    schemas-certificates:
      properties:
        associated_hostnames:
          $ref: '#/components/schemas/associated_hostnames'
        created_at:
          $ref: '#/components/schemas/timestamp'
        expires_on:
          $ref: '#/components/schemas/timestamp'
        fingerprint:
          $ref: '#/components/schemas/fingerprint'
        id:
          description: The ID of the application that will use this certificate.
        name:
          $ref: '#/components/schemas/certificates_components-schemas-name'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    associated_hostnames:
      description: The hostnames of the applications that will use this certificate.
      items:
        description: A fully-qualified domain name (FQDN).
        example: admin.example.com
        type: string
      type: array
    fingerprint:
      description: The MD5 fingerprint of the certificate.
      example: 'MD5 Fingerprint=1E:80:0F:7A:FD:31:55:96:DE:D5:CB:E2:F0:91:F6:91'
      type: string
    certificates_components-schemas-name:
      description: The name of the certificate.
      example: Allow devs
      type: string
    certificates_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/schemas-certificates'
    certificates_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/uuid'
              type: object
    components-schemas-uuid:
      description: The policy ID.
      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      type: string
    policies_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    policies_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/components-schemas-uuid'
              type: object
    policies_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/schemas-policies'
    schemas-policies:
      properties:
        approval_groups:
          $ref: '#/components/schemas/approval_groups'
        approval_required:
          $ref: '#/components/schemas/approval_required'
        created_at:
          $ref: '#/components/schemas/timestamp'
        decision:
          $ref: '#/components/schemas/decision'
        exclude:
          $ref: '#/components/schemas/schemas-exclude'
        id:
          $ref: '#/components/schemas/components-schemas-uuid'
        include:
          $ref: '#/components/schemas/include'
        name:
          $ref: '#/components/schemas/policies_components-schemas-name'
        precedence:
          $ref: '#/components/schemas/precedence'
        purpose_justification_prompt:
          $ref: '#/components/schemas/purpose_justification_prompt'
        purpose_justification_required:
          $ref: '#/components/schemas/purpose_justification_required'
        require:
          $ref: '#/components/schemas/schemas-require'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    approval_groups:
      description: Administrators who can approve a temporary authentication request.
      example:
        - approvals_needed: 1
          email_addresses:
            - test1@cloudflare.com
            - test2@cloudflare.com
        - approvals_needed: 3
          email_list_uuid: 597147a1-976b-4ef2-9af0-81d5d007fc34
      items:
        $ref: '#/components/schemas/approval_group'
      type: array
    approval_required:
      default: false
      description: Requires the user to request access from an administrator at the start of each session.
      example: true
      type: boolean
    decision:
      description: The action Access will take if a user matches this policy.
      enum:
        - allow
        - deny
        - non_identity
        - bypass
      example: allow
      type: string
    schemas-exclude:
      description: 'Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.'
      items:
        $ref: '#/components/schemas/rule_components-schemas-rule'
      type: array
    policies_components-schemas-name:
      description: The name of the Access policy.
      example: Allow devs
      type: string
    precedence:
      description: The order of execution for this policy. Must be unique for each policy.
      type: integer
    purpose_justification_prompt:
      description: A custom message that will appear on the purpose justification screen.
      example: Please enter a justification for entering this protected domain.
      type: string
    purpose_justification_required:
      default: false
      description: Require users to enter a justification when they log in to the application.
      example: true
      type: boolean
    schemas-require:
      description: 'Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.'
      items:
        $ref: '#/components/schemas/rule_components-schemas-rule'
      type: array
    approval_group:
      description: A group of email addresses that can approve a temporary authentication request.
      properties:
        approvals_needed:
          description: The number of approvals needed to obtain access.
          example: 1
          minimum: 0
          type: number
        email_addresses:
          description: A list of emails that can approve the access request.
          example:
            - test@cloudflare.com
            - test2@cloudflare.com
          items: {}
          type: array
        email_list_uuid:
          description: The UUID of an re-usable email list.
          type: string
      required:
        - approvals_needed
      type: object
    policies_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-policies'
              type: array
    service-tokens_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/service-tokens'
              type: array
    service-tokens:
      properties:
        client_id:
          $ref: '#/components/schemas/client_id'
        created_at:
          $ref: '#/components/schemas/timestamp'
        id:
          description: The ID of the service token.
        name:
          $ref: '#/components/schemas/service-tokens_components-schemas-name'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    client_id:
      description: The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
      example: 88bf3b6d86161464f6509f7219099e57.access.example.com
      type: string
    service-tokens_components-schemas-name:
      description: The name of the service token.
      example: CI/CD token
      type: string
    create_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                client_id:
                  $ref: '#/components/schemas/client_id'
                client_secret:
                  $ref: '#/components/schemas/client_secret'
                created_at:
                  $ref: '#/components/schemas/timestamp'
                id:
                  description: The ID of the service token.
                name:
                  $ref: '#/components/schemas/service-tokens_components-schemas-name'
                updated_at:
                  $ref: '#/components/schemas/timestamp'
    client_secret:
      description: The Client Secret for the service token. Access will check for this value in the `CF-Access-Client-Secret` request header.
      example: bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5
      type: string
    service-tokens_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/service-tokens'
    ca_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/ca'
              type: array
    ca:
      properties:
        aud:
          $ref: '#/components/schemas/aud'
        id:
          $ref: '#/components/schemas/ca_components-schemas-id'
        public_key:
          $ref: '#/components/schemas/public_key'
      type: object
    aud:
      description: The Application Audience (AUD) tag. Identifies the application associated with the CA.
      example: 737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe3893
      maxLength: 64
      readOnly: true
      type: string
    ca_components-schemas-id:
      description: The ID of the CA.
      example: 7eddae4619b50ab1361ba8ae9bd72269a432fea041529ed9
      maxLength: 48
      readOnly: true
      type: string
    public_key:
      description: The public key to add to your SSH server configuration.
      example: ecdsa-sha2-nistp256 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx= open-ssh-ca@cloudflareaccess.org
      readOnly: true
      type: string
    ca_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/ca_components-schemas-id'
              type: object
    ca_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    apps_components-schemas-response_collection-2:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-apps'
              type: array
    schemas-apps:
      anyOf:
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/self_hosted_props'
          title: Self Hosted Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/saas_props'
          title: SaaS Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/ssh_props'
          title: Browser SSH Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/vnc_props'
          title: Browser VNC Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/app_launcher_props'
          title: App Launcher Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/warp_props'
          title: Device Enrollment Permissions Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/biso_props'
          title: Browser Isolation Permissions Application
          type: object
        - allOf:
            - $ref: '#/components/schemas/basic_app_response_props'
            - $ref: '#/components/schemas/schemas-bookmark_props'
          title: Bookmark application
          type: object
      type: object
    schemas-bookmark_props:
      properties:
        app_launcher_visible:
          default: true
        domain:
          description: The URL or domain of the bookmark.
          example: 'https://mybookmark.com'
        logo_url:
          $ref: '#/components/schemas/logo_url'
        name:
          $ref: '#/components/schemas/apps_components-schemas-name'
        type:
          description: The application type.
          example: bookmark
          type: string
      title: Bookmark Application
      type: object
    apps_components-schemas-single_response-2:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/schemas-apps'
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_bookmarks:
      id: cloudflare.access.accounts_bookmarks
      name: accounts_bookmarks
      title: Accounts Bookmarks
      methods:
        bookmark_applications___deprecated__list_bookmark_applications:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1bookmarks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _bookmark_applications___deprecated__list_bookmark_applications:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1bookmarks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bookmark_applications___deprecated__delete_a_bookmark_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1bookmarks~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bookmark_applications___deprecated__get_a_bookmark_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1bookmarks~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _bookmark_applications___deprecated__get_a_bookmark_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1bookmarks~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bookmark_applications___deprecated__create_a_bookmark_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1bookmarks~1{uuid}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bookmark_applications___deprecated__update_a_bookmark_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1bookmarks~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_bookmarks/methods/bookmark_applications___deprecated__list_bookmark_applications'
          - $ref: '#/components/x-stackQL-resources/accounts_bookmarks/methods/bookmark_applications___deprecated__get_a_bookmark_application'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_bookmarks/methods/bookmark_applications___deprecated__create_a_bookmark_application'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_bookmarks/methods/bookmark_applications___deprecated__delete_a_bookmark_application'
    accounts_apps:
      id: cloudflare.access.accounts_apps
      name: accounts_apps
      title: Accounts Apps
      methods:
        applications_list_access_applications:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _applications_list_access_applications:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_add_a_bookmark_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_delete_an_access_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{app_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_get_an_access_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{app_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _applications_get_an_access_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{app_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_update_a_bookmark_application:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{app_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_revoke_service_tokens:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{app_id}~1revoke_tokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        applications_test_access_policies:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{app_id}~1user_policy_checks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _applications_test_access_policies:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{app_id}~1user_policy_checks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_apps/methods/applications_list_access_applications'
          - $ref: '#/components/x-stackQL-resources/accounts_apps/methods/applications_get_an_access_application'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_apps/methods/applications_delete_an_access_application'
    accounts_logs_access_requests:
      id: cloudflare.access.accounts_logs_access_requests
      name: accounts_logs_access_requests
      title: Accounts Logs Access Requests
      methods:
        authentication_logs_get_access_authentication_logs:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1logs~1access_requests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _authentication_logs_get_access_authentication_logs:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1logs~1access_requests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_logs_access_requests/methods/authentication_logs_get_access_authentication_logs'
        insert: []
        update: []
        delete: []
    accounts_groups:
      id: cloudflare.access.accounts_groups
      name: accounts_groups
      title: Accounts Groups
      methods:
        groups_list_access_groups:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _groups_list_access_groups:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_create_an_access_group:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_delete_an_access_group:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1groups~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_get_an_access_group:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1groups~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _groups_get_an_access_group:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1groups~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_update_an_access_group:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1groups~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_groups/methods/groups_list_access_groups'
          - $ref: '#/components/x-stackQL-resources/accounts_groups/methods/groups_get_an_access_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_groups/methods/groups_create_an_access_group'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_groups/methods/groups_delete_an_access_group'
    accounts_identity_providers:
      id: cloudflare.access.accounts_identity_providers
      name: accounts_identity_providers
      title: Accounts Identity Providers
      methods:
        identity_providers_list_access_identity_providers:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1identity_providers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _identity_providers_list_access_identity_providers:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1identity_providers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        identity_providers_add_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1identity_providers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        identity_providers_delete_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1identity_providers~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        identity_providers_get_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1identity_providers~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _identity_providers_get_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1identity_providers~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        identity_providers_update_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1identity_providers~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_identity_providers/methods/identity_providers_list_access_identity_providers'
          - $ref: '#/components/x-stackQL-resources/accounts_identity_providers/methods/identity_providers_get_an_access_identity_provider'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_identity_providers/methods/identity_providers_delete_an_access_identity_provider'
    accounts_keys:
      id: cloudflare.access.accounts_keys
      name: accounts_keys
      title: Accounts Keys
      methods:
        key_configuration_get_the_access_key_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _key_configuration_get_the_access_key_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        key_configuration_update_the_access_key_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1keys/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        key_configuration_rotate_access_keys:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1keys~1rotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_keys/methods/key_configuration_get_the_access_key_configuration'
        insert: []
        update: []
        delete: []
    accounts_certificates:
      id: cloudflare.access.accounts_certificates
      name: accounts_certificates
      title: Accounts Certificates
      methods:
        m_tls_authentication_list_m_tls_certificates:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _m_tls_authentication_list_m_tls_certificates:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        m_tls_authentication_add_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1certificates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        m_tls_authentication_delete_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1certificates~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        m_tls_authentication_get_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1certificates~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _m_tls_authentication_get_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1certificates~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        m_tls_authentication_update_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1certificates~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_certificates/methods/m_tls_authentication_list_m_tls_certificates'
          - $ref: '#/components/x-stackQL-resources/accounts_certificates/methods/m_tls_authentication_get_an_m_tls_certificate'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_certificates/methods/m_tls_authentication_delete_an_m_tls_certificate'
    accounts_apps_policies:
      id: cloudflare.access.accounts_apps_policies
      name: accounts_apps_policies
      title: Accounts Apps Policies
      methods:
        policies_delete_an_access_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid1}~1policies~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        policies_get_an_access_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid1}~1policies~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _policies_get_an_access_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid1}~1policies~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        policies_update_an_access_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid1}~1policies~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        policies_list_access_policies:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid}~1policies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _policies_list_access_policies:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid}~1policies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        policies_create_an_access_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid}~1policies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_apps_policies/methods/policies_get_an_access_policy'
          - $ref: '#/components/x-stackQL-resources/accounts_apps_policies/methods/policies_list_access_policies'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_apps_policies/methods/policies_create_an_access_policy'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_apps_policies/methods/policies_delete_an_access_policy'
    accounts_service_tokens:
      id: cloudflare.access.accounts_service_tokens
      name: accounts_service_tokens
      title: Accounts Service Tokens
      methods:
        service_tokens_list_service_tokens:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1service_tokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _service_tokens_list_service_tokens:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1service_tokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        service_tokens_create_a_service_token:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1service_tokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        service_tokens_delete_a_service_token:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1service_tokens~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        service_tokens_update_a_service_token:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1service_tokens~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        service_tokens_refresh_a_service_token:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1service_tokens~1{uuid}~1refresh/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        service_tokens_rotate_a_service_token:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1service_tokens~1{uuid}~1rotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_service_tokens/methods/service_tokens_list_service_tokens'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_service_tokens/methods/service_tokens_create_a_service_token'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_service_tokens/methods/service_tokens_delete_a_service_token'
    accounts_apps_ca:
      id: cloudflare.access.accounts_apps_ca
      name: accounts_apps_ca
      title: Accounts Apps Ca
      methods:
        short_lived_certificate_c_as_list_short_lived_certificate_c_as:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1ca/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _short_lived_certificate_c_as_list_short_lived_certificate_c_as:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1ca/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        short_lived_certificate_c_as_delete_a_short_lived_certificate_ca:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid}~1ca/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        short_lived_certificate_c_as_get_a_short_lived_certificate_ca:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid}~1ca/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _short_lived_certificate_c_as_get_a_short_lived_certificate_ca:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid}~1ca/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        short_lived_certificate_c_as_create_a_short_lived_certificate_ca:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1apps~1{uuid}~1ca/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_apps_ca/methods/short_lived_certificate_c_as_list_short_lived_certificate_c_as'
          - $ref: '#/components/x-stackQL-resources/accounts_apps_ca/methods/short_lived_certificate_c_as_get_a_short_lived_certificate_ca'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_apps_ca/methods/short_lived_certificate_c_as_create_a_short_lived_certificate_ca'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_apps_ca/methods/short_lived_certificate_c_as_delete_a_short_lived_certificate_ca'
    zones_apps:
      id: cloudflare.access.zones_apps
      name: zones_apps
      title: Zones Apps
      methods:
        zone_level_access_applications_list_access_applications:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_level_access_applications_list_access_applications:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_applications_add_a_bookmark_application:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_applications_delete_an_access_application:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{app_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_applications_get_an_access_application:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{app_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_level_access_applications_get_an_access_application:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{app_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_applications_update_a_bookmark_application:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{app_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_applications_revoke_service_tokens:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{app_id}~1revoke_tokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_applications_test_access_policies:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{app_id}~1user_policy_checks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_applications_test_access_policies:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{app_id}~1user_policy_checks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_apps/methods/zone_level_access_applications_list_access_applications'
          - $ref: '#/components/x-stackQL-resources/zones_apps/methods/zone_level_access_applications_get_an_access_application'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_apps/methods/zone_level_access_applications_delete_an_access_application'
    zones_groups:
      id: cloudflare.access.zones_groups
      name: zones_groups
      title: Zones Groups
      methods:
        zone_level_access_groups_list_access_groups:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_groups_list_access_groups:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_groups_create_an_access_group:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_groups_delete_an_access_group:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1groups~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_groups_get_an_access_group:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1groups~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_groups_get_an_access_group:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1groups~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_groups_update_an_access_group:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1groups~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_groups/methods/zone_level_access_groups_list_access_groups'
          - $ref: '#/components/x-stackQL-resources/zones_groups/methods/zone_level_access_groups_get_an_access_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_groups/methods/zone_level_access_groups_create_an_access_group'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_groups/methods/zone_level_access_groups_delete_an_access_group'
    zones_identity_providers:
      id: cloudflare.access.zones_identity_providers
      name: zones_identity_providers
      title: Zones Identity Providers
      methods:
        zone_level_access_identity_providers_list_access_identity_providers:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1identity_providers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_identity_providers_list_access_identity_providers:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1identity_providers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_identity_providers_add_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1identity_providers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_identity_providers_delete_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1identity_providers~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_identity_providers_get_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1identity_providers~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_identity_providers_get_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1identity_providers~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_identity_providers_update_an_access_identity_provider:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1identity_providers~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_identity_providers/methods/zone_level_access_identity_providers_list_access_identity_providers'
          - $ref: '#/components/x-stackQL-resources/zones_identity_providers/methods/zone_level_access_identity_providers_get_an_access_identity_provider'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_identity_providers/methods/zone_level_access_identity_providers_delete_an_access_identity_provider'
    zones_certificates:
      id: cloudflare.access.zones_certificates
      name: zones_certificates
      title: Zones Certificates
      methods:
        zone_level_access_m_tls_authentication_list_m_tls_certificates:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_m_tls_authentication_list_m_tls_certificates:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_m_tls_authentication_add_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1certificates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_m_tls_authentication_delete_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1certificates~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_m_tls_authentication_get_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1certificates~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_m_tls_authentication_get_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1certificates~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_m_tls_authentication_update_an_m_tls_certificate:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1certificates~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_certificates/methods/zone_level_access_m_tls_authentication_list_m_tls_certificates'
          - $ref: '#/components/x-stackQL-resources/zones_certificates/methods/zone_level_access_m_tls_authentication_get_an_m_tls_certificate'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_certificates/methods/zone_level_access_m_tls_authentication_delete_an_m_tls_certificate'
    zones_apps_policies:
      id: cloudflare.access.zones_apps_policies
      name: zones_apps_policies
      title: Zones Apps Policies
      methods:
        zone_level_access_policies_delete_an_access_policy:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid1}~1policies~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_policies_get_an_access_policy:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid1}~1policies~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_policies_get_an_access_policy:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid1}~1policies~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_policies_update_an_access_policy:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid1}~1policies~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_policies_list_access_policies:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid}~1policies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_policies_list_access_policies:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid}~1policies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_policies_create_an_access_policy:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid}~1policies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_apps_policies/methods/zone_level_access_policies_get_an_access_policy'
          - $ref: '#/components/x-stackQL-resources/zones_apps_policies/methods/zone_level_access_policies_list_access_policies'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_apps_policies/methods/zone_level_access_policies_create_an_access_policy'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_apps_policies/methods/zone_level_access_policies_delete_an_access_policy'
    zones_service_tokens:
      id: cloudflare.access.zones_service_tokens
      name: zones_service_tokens
      title: Zones Service Tokens
      methods:
        zone_level_access_service_tokens_list_service_tokens:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1service_tokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_service_tokens_list_service_tokens:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1service_tokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_service_tokens_create_a_service_token:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1service_tokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_service_tokens_delete_a_service_token:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1service_tokens~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_service_tokens_update_a_service_token:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1service_tokens~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_service_tokens/methods/zone_level_access_service_tokens_list_service_tokens'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_service_tokens/methods/zone_level_access_service_tokens_create_a_service_token'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_service_tokens/methods/zone_level_access_service_tokens_delete_a_service_token'
    zones_apps_ca:
      id: cloudflare.access.zones_apps_ca
      name: zones_apps_ca
      title: Zones Apps Ca
      methods:
        zone_level_access_short_lived_certificate_c_as_list_short_lived_certificate_c_as:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1ca/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_short_lived_certificate_c_as_list_short_lived_certificate_c_as:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1ca/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_short_lived_certificate_c_as_delete_a_short_lived_certificate_ca:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid}~1ca/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_short_lived_certificate_c_as_get_a_short_lived_certificate_ca:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid}~1ca/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_access_short_lived_certificate_c_as_get_a_short_lived_certificate_ca:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid}~1ca/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_access_short_lived_certificate_c_as_create_a_short_lived_certificate_ca:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1apps~1{uuid}~1ca/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_apps_ca/methods/zone_level_access_short_lived_certificate_c_as_list_short_lived_certificate_c_as'
          - $ref: '#/components/x-stackQL-resources/zones_apps_ca/methods/zone_level_access_short_lived_certificate_c_as_get_a_short_lived_certificate_ca'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_apps_ca/methods/zone_level_access_short_lived_certificate_c_as_create_a_short_lived_certificate_ca'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_apps_ca/methods/zone_level_access_short_lived_certificate_c_as_delete_a_short_lived_certificate_ca'
paths:
  '/accounts/{identifier}/access/bookmarks':
    get:
      deprecated: true
      description: Lists Bookmark applications.
      operationId: access-bookmark-applications-(-deprecated)-list-bookmark-applications
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/bookmarks_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookmarks_components-schemas-response_collection'
          description: List Bookmark applications response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bookmarks_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Bookmark applications response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Bookmark applications
      tags:
        - Access Bookmark applications (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/bookmarks/x-cfDeprecations/bookmarks_deprecation'
  '/accounts/{identifier}/access/bookmarks/{uuid}':
    delete:
      deprecated: true
      description: Deletes a Bookmark application.
      operationId: access-bookmark-applications-(-deprecated)-delete-a-bookmark-application
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/bookmarks_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookmarks_components-schemas-id_response'
          description: Delete a Bookmark application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bookmarks_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a Bookmark application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a Bookmark application
      tags:
        - Access Bookmark applications (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/bookmarks/x-cfDeprecations/bookmarks_deprecation'
    get:
      deprecated: true
      description: Fetches a single Bookmark application.
      operationId: access-bookmark-applications-(-deprecated)-get-a-bookmark-application
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/bookmarks_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookmarks_components-schemas-single_response'
          description: Get a Bookmark application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bookmarks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a Bookmark application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a Bookmark application
      tags:
        - Access Bookmark applications (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/bookmarks/x-cfDeprecations/bookmarks_deprecation'
    post:
      deprecated: true
      description: Create a new Bookmark application.
      operationId: access-bookmark-applications-(-deprecated)-create-a-bookmark-application
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/bookmarks_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookmarks_components-schemas-single_response'
          description: Create a Bookmark application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bookmarks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a Bookmark application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a Bookmark application
      tags:
        - Access Bookmark applications (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/bookmarks/x-cfDeprecations/bookmarks_deprecation'
    put:
      deprecated: true
      description: Updates a configured Bookmark application.
      operationId: access-bookmark-applications-(-deprecated)-update-a-bookmark-application
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/bookmarks_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookmarks_components-schemas-single_response'
          description: Update a Bookmark application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bookmarks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a Bookmark application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a Bookmark application
      tags:
        - Access Bookmark applications (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/bookmarks/x-cfDeprecations/bookmarks_deprecation'
  '/accounts/{identifier}/access/apps':
    get:
      description: Lists all Access applications in an account.
      operationId: access-applications-list-access-applications
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apps_components-schemas-response_collection'
          description: List Access applications response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Access applications response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Access applications
      tags:
        - Access applications
    post:
      description: Adds a custom link to the App Launcher. Bookmark applications are not protected by Access.
      operationId: access-applications-add-a-bookmark-application
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - type
                - domain
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-single_response'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/basic_app_response_props'
                          - $ref: '#/components/schemas/bookmark_props'
          description: Add a Bookmark application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/apps_components-schemas-single_response'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/basic_app_response_props'
                              - $ref: '#/components/schemas/bookmark_props'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add a Bookmark application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add a Bookmark application
      tags:
        - Access applications
  '/accounts/{identifier}/access/apps/{app_id}':
    delete:
      description: Deletes an application from Access.
      operationId: access-applications-delete-an-access-application
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apps_components-schemas-id_response'
          description: Delete an Access application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an Access application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an Access application
      tags:
        - Access applications
    get:
      description: Fetches information about an Access application.
      operationId: access-applications-get-an-access-application
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apps_components-schemas-single_response'
          description: Get an Access application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an Access application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an Access application
      tags:
        - Access applications
    put:
      description: Updates a Bookmark application.
      operationId: access-applications-update-a-bookmark-application
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - type
                - domain
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-single_response'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/basic_app_response_props'
                          - $ref: '#/components/schemas/bookmark_props'
          description: Update a Bookmark application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/apps_components-schemas-single_response'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/basic_app_response_props'
                              - $ref: '#/components/schemas/bookmark_props'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a Bookmark application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a Bookmark application
      tags:
        - Access applications
  '/accounts/{identifier}/access/apps/{app_id}/revoke_tokens':
    post:
      description: Revokes all service tokens used by an application.
      operationId: access-applications-revoke-service-tokens
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-empty_response'
          description: Revoke service tokens response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Revoke service tokens response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Revoke service tokens
      tags:
        - Access applications
  '/accounts/{identifier}/access/apps/{app_id}/user_policy_checks':
    get:
      description: Tests if a specific user has permission to access an application.
      operationId: access-applications-test-access-policies
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy_check_response'
          description: Test Access policies response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policy_check_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Test Access policies response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Test Access policies
      tags:
        - Access applications
  '/accounts/{identifier}/access/logs/access_requests':
    get:
      description: Gets a list of Access authentication audit logs for an account.
      operationId: access-authentication-logs-get-access-authentication-logs
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/access-requests_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access-requests_components-schemas-response_collection'
          description: Get Access authentication logs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/access-requests_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Access authentication logs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Access authentication logs
      tags:
        - Access authentication logs
  '/accounts/{identifier}/access/groups':
    get:
      description: Lists all Access groups.
      operationId: access-groups-list-access-groups
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-response_collection'
          description: List Access groups response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Access groups response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Access groups
      tags:
        - Access groups
    post:
      description: Creates a new Access group.
      operationId: access-groups-create-an-access-group
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                exclude:
                  $ref: '#/components/schemas/exclude'
                include:
                  $ref: '#/components/schemas/include'
                name:
                  $ref: '#/components/schemas/groups_components-schemas-name'
                require:
                  $ref: '#/components/schemas/require'
              required:
                - name
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-single_response'
          description: Create an Access group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an Access group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an Access group
      tags:
        - Access groups
  '/accounts/{identifier}/access/groups/{uuid}':
    delete:
      description: Deletes an Access group.
      operationId: access-groups-delete-an-access-group
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-id_response'
          description: Delete an Access group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an Access group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an Access group
      tags:
        - Access groups
    get:
      description: Fetches a single Access group.
      operationId: access-groups-get-an-access-group
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-single_response'
          description: Get an Access group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an Access group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an Access group
      tags:
        - Access groups
    put:
      description: Updates a configured Access group.
      operationId: access-groups-update-an-access-group
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                exclude:
                  $ref: '#/components/schemas/exclude'
                include:
                  $ref: '#/components/schemas/include'
                name:
                  $ref: '#/components/schemas/groups_components-schemas-name'
                require:
                  $ref: '#/components/schemas/require'
              required:
                - name
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-single_response'
          description: Update an Access group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an Access group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an Access group
      tags:
        - Access groups
  '/accounts/{identifier}/access/identity_providers':
    get:
      description: Lists all configured identity providers.
      operationId: access-identity-providers-list-access-identity-providers
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-response_collection'
          description: List Access identity providers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Access identity providers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Access identity providers
      tags:
        - Access identity providers
    post:
      description: Adds a new identity provider to Access.
      operationId: access-identity-providers-add-an-access-identity-provider
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                config:
                  $ref: '#/components/schemas/schemas-config'
                name:
                  $ref: '#/components/schemas/identity-providers_components-schemas-name'
                type:
                  $ref: '#/components/schemas/identity-providers_components-schemas-type'
              required:
                - name
                - type
                - config
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
          description: Add an Access identity provider response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add an Access identity provider response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add an Access identity provider
      tags:
        - Access identity providers
  '/accounts/{identifier}/access/identity_providers/{uuid}':
    delete:
      description: Deletes an identity provider from Access.
      operationId: access-identity-providers-delete-an-access-identity-provider
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
          description: Delete an Access identity provider response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an Access identity provider response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an Access identity provider
      tags:
        - Access identity providers
    get:
      description: Fetches a configured identity provider.
      operationId: access-identity-providers-get-an-access-identity-provider
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
          description: Get an Access identity provider response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an Access identity provider response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an Access identity provider
      tags:
        - Access identity providers
    put:
      description: Updates a configured identity provider.
      operationId: access-identity-providers-update-an-access-identity-provider
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                config:
                  $ref: '#/components/schemas/schemas-config'
                name:
                  $ref: '#/components/schemas/identity-providers_components-schemas-name'
                type:
                  $ref: '#/components/schemas/identity-providers_components-schemas-type'
              required:
                - name
                - type
                - config
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
          description: Update an Access identity provider response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an Access identity provider response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an Access identity provider
      tags:
        - Access identity providers
  '/accounts/{identifier}/access/keys':
    get:
      description: Gets the Access key rotation settings for an account.
      operationId: access-key-configuration-get-the-access-key-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/keys_components-schemas-identifier-2'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keys_components-schemas-single_response'
          description: Get the Access key configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/keys_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get the Access key configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get the Access key configuration
      tags:
        - Access key configuration
    put:
      description: Updates the Access key rotation settings for an account.
      operationId: access-key-configuration-update-the-access-key-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/keys_components-schemas-identifier-2'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key_rotation_interval_days:
                  $ref: '#/components/schemas/key_rotation_interval_days'
              required:
                - key_rotation_interval_days
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keys_components-schemas-single_response'
          description: Update the Access key configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/keys_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update the Access key configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update the Access key configuration
      tags:
        - Access key configuration
  '/accounts/{identifier}/access/keys/rotate':
    post:
      description: Perfoms a key rotation for an account.
      operationId: access-key-configuration-rotate-access-keys
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/keys_components-schemas-identifier-2'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keys_components-schemas-single_response'
          description: Rotate Access keys response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/keys_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Rotate Access keys response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Rotate Access keys
      tags:
        - Access key configuration
  '/accounts/{identifier}/access/certificates':
    get:
      description: Lists all mTLS certificates.
      operationId: access-m-tls-authentication-list-m-tls-certificates
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-response_collection'
          description: List mTLS certificates response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List mTLS certificates response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List mTLS certificates
      tags:
        - Access mTLS authentication
    post:
      description: Adds a new mTLS root certificate to Access.
      operationId: access-m-tls-authentication-add-an-m-tls-certificate
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                associated_hostnames:
                  $ref: '#/components/schemas/associated_hostnames'
                certificate:
                  description: The certificate content.
                  example: |-
                    -----BEGIN CERTIFICATE-----
                    MIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10
                    DrUtmu/B
                    -----END CERTIFICATE-----
                  type: string
                name:
                  $ref: '#/components/schemas/certificates_components-schemas-name'
              required:
                - name
                - certificate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-single_response'
          description: Add an mTLS certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add an mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add an mTLS certificate
      tags:
        - Access mTLS authentication
  '/accounts/{identifier}/access/certificates/{uuid}':
    delete:
      description: Deletes an mTLS certificate.
      operationId: access-m-tls-authentication-delete-an-m-tls-certificate
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-id_response'
          description: Delete an mTLS certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an mTLS certificate
      tags:
        - Access mTLS authentication
    get:
      description: Fetches a single mTLS certificate.
      operationId: access-m-tls-authentication-get-an-m-tls-certificate
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-single_response'
          description: Get an mTLS certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an mTLS certificate
      tags:
        - Access mTLS authentication
    put:
      description: Updates a configured mTLS certificate.
      operationId: access-m-tls-authentication-update-an-m-tls-certificate
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                associated_hostnames:
                  $ref: '#/components/schemas/associated_hostnames'
                name:
                  $ref: '#/components/schemas/certificates_components-schemas-name'
              required:
                - name
                - associated_hostnames
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-single_response'
          description: Update an mTLS certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an mTLS certificate
      tags:
        - Access mTLS authentication
  '/accounts/{identifier}/access/apps/{uuid1}/policies/{uuid}':
    delete:
      description: Delete an Access policy.
      operationId: access-policies-delete-an-access-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: uuid1
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-id_response'
          description: Delete an Access policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an Access policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an Access policy
      tags:
        - Access policies
    get:
      description: Fetches a single Access policy.
      operationId: access-policies-get-an-access-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: uuid1
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-single_response'
          description: Get an Access policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an Access policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an Access policy
      tags:
        - Access policies
    put:
      description: Update a configured Access policy.
      operationId: access-policies-update-an-access-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: uuid1
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approval_groups:
                  $ref: '#/components/schemas/approval_groups'
                approval_required:
                  $ref: '#/components/schemas/approval_required'
                decision:
                  $ref: '#/components/schemas/decision'
                exclude:
                  $ref: '#/components/schemas/schemas-exclude'
                include:
                  $ref: '#/components/schemas/include'
                name:
                  $ref: '#/components/schemas/policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/purpose_justification_prompt'
                purpose_justification_required:
                  $ref: '#/components/schemas/purpose_justification_required'
                require:
                  $ref: '#/components/schemas/schemas-require'
              required:
                - name
                - decision
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-single_response'
          description: Update an Access policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an Access policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an Access policy
      tags:
        - Access policies
  '/accounts/{identifier}/access/apps/{uuid}/policies':
    get:
      description: Lists Access policies configured for an application.
      operationId: access-policies-list-access-policies
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-response_collection'
          description: List Access policies response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Access policies response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Access policies
      tags:
        - Access policies
    post:
      description: Create a new Access policy for an application.
      operationId: access-policies-create-an-access-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approval_groups:
                  $ref: '#/components/schemas/approval_groups'
                approval_required:
                  $ref: '#/components/schemas/approval_required'
                decision:
                  $ref: '#/components/schemas/decision'
                exclude:
                  $ref: '#/components/schemas/schemas-exclude'
                include:
                  $ref: '#/components/schemas/include'
                name:
                  $ref: '#/components/schemas/policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/purpose_justification_prompt'
                purpose_justification_required:
                  $ref: '#/components/schemas/purpose_justification_required'
                require:
                  $ref: '#/components/schemas/schemas-require'
              required:
                - name
                - decision
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-single_response'
          description: Create an Access policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an Access policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an Access policy
      tags:
        - Access policies
  '/accounts/{identifier}/access/service_tokens':
    get:
      description: Lists all service tokens.
      operationId: access-service-tokens-list-service-tokens
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-tokens_components-schemas-response_collection'
          description: List service tokens response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/service-tokens_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List service tokens response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List service tokens
      tags:
        - Access service tokens
    post:
      description: 'Generates a new service token. **Note:** This is the only time you can get the Client Secret. If you lose the Client Secret, you will have to rotate the Client Secret or create a new service token.'
      operationId: access-service-tokens-create-a-service-token
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/service-tokens_components-schemas-name'
              required:
                - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_response'
          description: Create a service token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/create_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a service token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a service token
      tags:
        - Access service tokens
  '/accounts/{identifier}/access/service_tokens/{uuid}':
    delete:
      description: Deletes a service token.
      operationId: access-service-tokens-delete-a-service-token
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
          description: Delete a service token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a service token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a service token
      tags:
        - Access service tokens
    put:
      description: Updates a configured service token.
      operationId: access-service-tokens-update-a-service-token
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/service-tokens_components-schemas-name'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
          description: Update a service token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a service token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a service token
      tags:
        - Access service tokens
  '/accounts/{identifier}/access/service_tokens/{uuid}/refresh':
    post:
      description: Refreshes the expiration of a service token.
      operationId: access-service-tokens-refresh-a-service-token
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
          description: Refresh a service token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Refresh a service token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Refresh a service token
      tags:
        - Access service tokens
  '/accounts/{identifier}/access/service_tokens/{uuid}/rotate':
    post:
      description: Generates a new Client Secret for a service token and revokes the old one.
      operationId: access-service-tokens-rotate-a-service-token
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_response'
          description: Rotate a service token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/create_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Rotate a service token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Rotate a service token
      tags:
        - Access service tokens
  '/accounts/{identifier}/access/apps/ca':
    get:
      description: Lists short-lived certificate CAs and their public keys.
      operationId: access-short-lived-certificate-c-as-list-short-lived-certificate-c-as
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca_components-schemas-response_collection'
          description: List short-lived certificate CAs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ca_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List short-lived certificate CAs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List short-lived certificate CAs
      tags:
        - Access short-lived certificate CAs
  '/accounts/{identifier}/access/apps/{uuid}/ca':
    delete:
      description: Deletes a short-lived certificate CA.
      operationId: access-short-lived-certificate-c-as-delete-a-short-lived-certificate-ca
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca_components-schemas-id_response'
          description: Delete a short-lived certificate CA response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ca_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a short-lived certificate CA response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a short-lived certificate CA
      tags:
        - Access short-lived certificate CAs
    get:
      description: Fetches a short-lived certificate CA and its public key.
      operationId: access-short-lived-certificate-c-as-get-a-short-lived-certificate-ca
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca_components-schemas-single_response'
          description: Get a short-lived certificate CA response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ca_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a short-lived certificate CA response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a short-lived certificate CA
      tags:
        - Access short-lived certificate CAs
    post:
      description: Generates a new short-lived certificate CA and public key.
      operationId: access-short-lived-certificate-c-as-create-a-short-lived-certificate-ca
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca_components-schemas-single_response'
          description: Create a short-lived certificate CA response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ca_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a short-lived certificate CA response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a short-lived certificate CA
      tags:
        - Access short-lived certificate CAs
  '/zones/{identifier}/access/apps':
    get:
      description: List all Access Applications in a zone.
      operationId: zone-level-access-applications-list-access-applications
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apps_components-schemas-response_collection-2'
          description: List Access Applications response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-response_collection-2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Access Applications response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Access Applications
      tags:
        - Zone-Level Access applications
    post:
      description: Adds a custom link to the App Launcher. Bookmark applications are not protected by Access.
      operationId: zone-level-access-applications-add-a-bookmark-application
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - type
                - domain
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-single_response-2'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/basic_app_response_props'
                          - $ref: '#/components/schemas/schemas-bookmark_props'
          description: Add a Bookmark application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/apps_components-schemas-single_response-2'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/basic_app_response_props'
                              - $ref: '#/components/schemas/schemas-bookmark_props'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add a Bookmark application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add a Bookmark application
      tags:
        - Zone-Level Access applications
  '/zones/{identifier}/access/apps/{app_id}':
    delete:
      description: Deletes an application from Access.
      operationId: zone-level-access-applications-delete-an-access-application
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apps_components-schemas-id_response'
          description: Delete an Access application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an Access application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an Access application
      tags:
        - Zone-Level Access applications
    get:
      description: Fetches information about an Access application.
      operationId: zone-level-access-applications-get-an-access-application
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apps_components-schemas-single_response-2'
          description: Get an Access application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-single_response-2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an Access application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an Access application
      tags:
        - Zone-Level Access applications
    put:
      description: Updates a Bookmark application.
      operationId: zone-level-access-applications-update-a-bookmark-application
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - type
                - domain
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apps_components-schemas-single_response-2'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/basic_app_response_props'
                          - $ref: '#/components/schemas/schemas-bookmark_props'
          description: Update a Bookmark application response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/apps_components-schemas-single_response-2'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/basic_app_response_props'
                              - $ref: '#/components/schemas/schemas-bookmark_props'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a Bookmark application response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a Bookmark application
      tags:
        - Zone-Level Access applications
  '/zones/{identifier}/access/apps/{app_id}/revoke_tokens':
    post:
      description: Revokes all service tokens used by an application.
      operationId: zone-level-access-applications-revoke-service-tokens
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-empty_response'
          description: Revoke service tokens response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Revoke service tokens response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Revoke service tokens
      tags:
        - Zone-Level Access applications
  '/zones/{identifier}/access/apps/{app_id}/user_policy_checks':
    get:
      description: Tests if a specific user has permission to access an application.
      operationId: zone-level-access-applications-test-access-policies
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-app_id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/apps_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy_check_response'
          description: Test Access policies response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policy_check_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Test Access policies response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Test Access policies
      tags:
        - Zone-Level Access applications
  '/zones/{identifier}/access/groups':
    get:
      description: Lists all Access groups.
      operationId: zone-level-access-groups-list-access-groups
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-response_collection'
          description: List Access groups response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Access groups response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Access groups
      tags:
        - Zone-Level Access groups
    post:
      description: Creates a new Access group.
      operationId: zone-level-access-groups-create-an-access-group
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                exclude:
                  $ref: '#/components/schemas/exclude'
                include:
                  $ref: '#/components/schemas/include'
                name:
                  $ref: '#/components/schemas/groups_components-schemas-name'
                require:
                  $ref: '#/components/schemas/require'
              required:
                - name
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-single_response'
          description: Create an Access group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an Access group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an Access group
      tags:
        - Zone-Level Access groups
  '/zones/{identifier}/access/groups/{uuid}':
    delete:
      description: Deletes an Access group.
      operationId: zone-level-access-groups-delete-an-access-group
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-id_response'
          description: Delete an Access group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an Access group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an Access group
      tags:
        - Zone-Level Access groups
    get:
      description: Fetches a single Access group.
      operationId: zone-level-access-groups-get-an-access-group
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-single_response'
          description: Get an Access group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an Access group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an Access group
      tags:
        - Zone-Level Access groups
    put:
      description: Updates a configured Access group.
      operationId: zone-level-access-groups-update-an-access-group
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                exclude:
                  $ref: '#/components/schemas/exclude'
                include:
                  $ref: '#/components/schemas/include'
                name:
                  $ref: '#/components/schemas/groups_components-schemas-name'
                require:
                  $ref: '#/components/schemas/require'
              required:
                - name
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups_components-schemas-single_response'
          description: Update an Access group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/groups_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an Access group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an Access group
      tags:
        - Zone-Level Access groups
  '/zones/{identifier}/access/identity_providers':
    get:
      description: Lists all configured identity providers.
      operationId: zone-level-access-identity-providers-list-access-identity-providers
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-response_collection'
          description: List Access identity providers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Access identity providers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Access identity providers
      tags:
        - Zone-Level Access identity providers
    post:
      description: Adds a new identity provider to Access.
      operationId: zone-level-access-identity-providers-add-an-access-identity-provider
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                config:
                  $ref: '#/components/schemas/schemas-config'
                name:
                  $ref: '#/components/schemas/identity-providers_components-schemas-name'
                type:
                  $ref: '#/components/schemas/identity-providers_components-schemas-type'
              required:
                - name
                - type
                - config
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
          description: Add an Access identity provider response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add an Access identity provider response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add an Access identity provider
      tags:
        - Zone-Level Access identity providers
  '/zones/{identifier}/access/identity_providers/{uuid}':
    delete:
      description: Deletes an identity provider from Access.
      operationId: zone-level-access-identity-providers-delete-an-access-identity-provider
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
          description: Delete an Access identity provider response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an Access identity provider response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an Access identity provider
      tags:
        - Zone-Level Access identity providers
    get:
      description: Fetches a configured identity provider.
      operationId: zone-level-access-identity-providers-get-an-access-identity-provider
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
          description: Get an Access identity provider response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an Access identity provider response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an Access identity provider
      tags:
        - Zone-Level Access identity providers
    put:
      description: Updates a configured identity provider.
      operationId: zone-level-access-identity-providers-update-an-access-identity-provider
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/identity-providers_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                config:
                  $ref: '#/components/schemas/schemas-config'
                name:
                  $ref: '#/components/schemas/identity-providers_components-schemas-name'
                type:
                  $ref: '#/components/schemas/identity-providers_components-schemas-type'
              required:
                - name
                - type
                - config
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
          description: Update an Access identity provider response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/identity-providers_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an Access identity provider response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an Access identity provider
      tags:
        - Zone-Level Access identity providers
  '/zones/{identifier}/access/certificates':
    get:
      description: Lists all mTLS certificates.
      operationId: zone-level-access-m-tls-authentication-list-m-tls-certificates
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-response_collection'
          description: List mTLS certificates response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List mTLS certificates response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List mTLS certificates
      tags:
        - Zone-Level Access mTLS authentication
    post:
      description: Adds a new mTLS root certificate to Access.
      operationId: zone-level-access-m-tls-authentication-add-an-m-tls-certificate
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                associated_hostnames:
                  $ref: '#/components/schemas/associated_hostnames'
                certificate:
                  description: The certificate content.
                  example: |-
                    -----BEGIN CERTIFICATE-----
                    MIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10
                    DrUtmu/B
                    -----END CERTIFICATE-----
                  type: string
                name:
                  $ref: '#/components/schemas/certificates_components-schemas-name'
              required:
                - name
                - certificate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-single_response'
          description: Add an mTLS certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add an mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add an mTLS certificate
      tags:
        - Zone-Level Access mTLS authentication
  '/zones/{identifier}/access/certificates/{uuid}':
    delete:
      description: Deletes an mTLS certificate.
      operationId: zone-level-access-m-tls-authentication-delete-an-m-tls-certificate
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-id_response'
          description: Delete an mTLS certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an mTLS certificate
      tags:
        - Zone-Level Access mTLS authentication
    get:
      description: Fetches a single mTLS certificate.
      operationId: zone-level-access-m-tls-authentication-get-an-m-tls-certificate
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-single_response'
          description: Get an mTLS certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an mTLS certificate
      tags:
        - Zone-Level Access mTLS authentication
    put:
      description: Updates a configured mTLS certificate.
      operationId: zone-level-access-m-tls-authentication-update-an-m-tls-certificate
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                associated_hostnames:
                  $ref: '#/components/schemas/associated_hostnames'
                name:
                  $ref: '#/components/schemas/certificates_components-schemas-name'
              required:
                - name
                - associated_hostnames
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificates_components-schemas-single_response'
          description: Update an mTLS certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificates_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an mTLS certificate
      tags:
        - Zone-Level Access mTLS authentication
  '/zones/{identifier}/access/apps/{uuid1}/policies/{uuid}':
    delete:
      description: Delete an Access policy.
      operationId: zone-level-access-policies-delete-an-access-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: uuid1
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-id_response'
          description: Delete an Access policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an Access policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an Access policy
      tags:
        - Zone-Level Access policies
    get:
      description: Fetches a single Access policy.
      operationId: zone-level-access-policies-get-an-access-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: uuid1
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-single_response'
          description: Get an Access policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an Access policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an Access policy
      tags:
        - Zone-Level Access policies
    put:
      description: Update a configured Access policy.
      operationId: zone-level-access-policies-update-an-access-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: uuid1
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approval_groups:
                  $ref: '#/components/schemas/approval_groups'
                approval_required:
                  $ref: '#/components/schemas/approval_required'
                decision:
                  $ref: '#/components/schemas/decision'
                exclude:
                  $ref: '#/components/schemas/schemas-exclude'
                include:
                  $ref: '#/components/schemas/include'
                name:
                  $ref: '#/components/schemas/policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/purpose_justification_prompt'
                purpose_justification_required:
                  $ref: '#/components/schemas/purpose_justification_required'
                require:
                  $ref: '#/components/schemas/schemas-require'
              required:
                - name
                - decision
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-single_response'
          description: Update an Access policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an Access policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an Access policy
      tags:
        - Zone-Level Access policies
  '/zones/{identifier}/access/apps/{uuid}/policies':
    get:
      description: Lists Access policies configured for an application.
      operationId: zone-level-access-policies-list-access-policies
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-response_collection'
          description: List Access policies response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Access policies response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Access policies
      tags:
        - Zone-Level Access policies
    post:
      description: Create a new Access policy for an application.
      operationId: zone-level-access-policies-create-an-access-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/policies_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approval_groups:
                  $ref: '#/components/schemas/approval_groups'
                approval_required:
                  $ref: '#/components/schemas/approval_required'
                decision:
                  $ref: '#/components/schemas/decision'
                exclude:
                  $ref: '#/components/schemas/schemas-exclude'
                include:
                  $ref: '#/components/schemas/include'
                name:
                  $ref: '#/components/schemas/policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/purpose_justification_prompt'
                purpose_justification_required:
                  $ref: '#/components/schemas/purpose_justification_required'
                require:
                  $ref: '#/components/schemas/schemas-require'
              required:
                - name
                - decision
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-single_response'
          description: Create an Access policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an Access policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an Access policy
      tags:
        - Zone-Level Access policies
  '/zones/{identifier}/access/service_tokens':
    get:
      description: Lists all service tokens.
      operationId: zone-level-access-service-tokens-list-service-tokens
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-tokens_components-schemas-response_collection'
          description: List service tokens response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/service-tokens_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List service tokens response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List service tokens
      tags:
        - Zone-Level Access service tokens
    post:
      description: 'Generates a new service token. **Note:** This is the only time you can get the Client Secret. If you lose the Client Secret, you will have to create a new service token.'
      operationId: zone-level-access-service-tokens-create-a-service-token
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/service-tokens_components-schemas-name'
              required:
                - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_response'
          description: Create a service token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/create_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a service token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a service token
      tags:
        - Zone-Level Access service tokens
  '/zones/{identifier}/access/service_tokens/{uuid}':
    delete:
      description: Deletes a service token.
      operationId: zone-level-access-service-tokens-delete-a-service-token
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
          description: Delete a service token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a service token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a service token
      tags:
        - Zone-Level Access service tokens
    put:
      description: Updates a configured service token.
      operationId: zone-level-access-service-tokens-update-a-service-token
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/service-tokens_components-schemas-name'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
          description: Update a service token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/service-tokens_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a service token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a service token
      tags:
        - Zone-Level Access service tokens
  '/zones/{identifier}/access/apps/ca':
    get:
      description: Lists short-lived certificate CAs and their public keys.
      operationId: zone-level-access-short-lived-certificate-c-as-list-short-lived-certificate-c-as
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca_components-schemas-response_collection'
          description: List short-lived certificate CAs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ca_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List short-lived certificate CAs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List short-lived certificate CAs
      tags:
        - Zone-Level Access short-lived certificate CAs
  '/zones/{identifier}/access/apps/{uuid}/ca':
    delete:
      description: Deletes a short-lived certificate CA.
      operationId: zone-level-access-short-lived-certificate-c-as-delete-a-short-lived-certificate-ca
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca_components-schemas-id_response'
          description: Delete a short-lived certificate CA response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ca_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a short-lived certificate CA response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a short-lived certificate CA
      tags:
        - Zone-Level Access short-lived certificate CAs
    get:
      description: Fetches a short-lived certificate CA and its public key.
      operationId: zone-level-access-short-lived-certificate-c-as-get-a-short-lived-certificate-ca
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca_components-schemas-single_response'
          description: Get a short-lived certificate CA response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ca_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a short-lived certificate CA response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a short-lived certificate CA
      tags:
        - Zone-Level Access short-lived certificate CAs
    post:
      description: Generates a new short-lived certificate CA and public key.
      operationId: zone-level-access-short-lived-certificate-c-as-create-a-short-lived-certificate-ca
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca_components-schemas-single_response'
          description: Create a short-lived certificate CA response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ca_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a short-lived certificate CA response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a short-lived certificate CA
      tags:
        - Zone-Level Access short-lived certificate CAs
