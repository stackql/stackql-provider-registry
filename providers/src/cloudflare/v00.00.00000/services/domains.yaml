openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Registrar Domains
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - domains
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    domain_names:
      description: List of domain names.
      example:
        - cloudflare.com
        - cloudflare.net
      items:
        type: string
      type: array
    domain_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/domains'
              type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    domains:
      allOf:
        - $ref: '#/components/schemas/domain_properties'
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    domain_properties:
      properties:
        available:
          $ref: '#/components/schemas/schemas-available'
        can_register:
          $ref: '#/components/schemas/can_register'
        created_at:
          $ref: '#/components/schemas/components-schemas-created_at'
        current_registrar:
          $ref: '#/components/schemas/current_registrar'
        expires_at:
          $ref: '#/components/schemas/expires_at'
        id:
          $ref: '#/components/schemas/schemas-domain_identifier'
        locked:
          $ref: '#/components/schemas/locked'
        registrant_contact:
          $ref: '#/components/schemas/registrant_contact'
        registry_statuses:
          $ref: '#/components/schemas/registry_statuses'
        supported_tld:
          $ref: '#/components/schemas/supported_tld'
        transfer_in:
          $ref: '#/components/schemas/transfer_in'
        updated_at:
          $ref: '#/components/schemas/components-schemas-updated_at'
      type: object
    schemas-available:
      description: Shows if a domain is available for transferring into Cloudflare Registrar.
      example: false
      type: boolean
    can_register:
      description: Indicates if the domain can be registered as a new domain.
      example: false
      type: boolean
    components-schemas-created_at:
      description: Shows time of creation.
      example: '2018-08-28T17:26:26Z'
      format: date-time
      type: string
    current_registrar:
      description: Shows name of current registrar.
      example: Cloudflare
      type: string
    expires_at:
      description: Shows when domain name registration expires.
      example: '2019-08-28T23:59:59Z'
      format: date-time
      type: string
    schemas-domain_identifier:
      description: Domain identifier.
      example: ea95132c15732412d22c1476fa83f27a
      maxLength: 32
      readOnly: true
      type: string
    locked:
      description: Shows whether a registrar lock is in place for a domain.
      example: false
      type: boolean
    registrant_contact:
      allOf:
        - $ref: '#/components/schemas/contacts'
      description: Shows contact information for domain registrant.
    registry_statuses:
      description: 'A comma-separated list of registry status codes. A full list of status codes can be found at [EPP Status Codes](https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en).'
      example: 'ok,serverTransferProhibited'
      type: string
    supported_tld:
      description: 'Whether a particular TLD is currently supported by Cloudflare Registrar. Refer to [TLD Policies](https://www.cloudflare.com/tld-policies/) for a list of supported TLDs.'
      example: true
      type: boolean
    transfer_in:
      description: Statuses for domain transfers into Cloudflare Registrar.
      properties:
        accept_foa:
          description: Form of authorization has been accepted by the registrant.
          example: needed
        approve_transfer:
          description: Shows transfer status with the registry.
          example: unknown
        can_cancel_transfer:
          description: Indicates if cancellation is still possible.
          example: true
          type: boolean
        disable_privacy:
          description: Privacy guards are disabled at the foreign registrar.
        enter_auth_code:
          description: Auth code has been entered and verified.
          example: needed
        unlock_domain:
          description: Domain is unlocked at the foreign registrar.
    components-schemas-updated_at:
      description: Last updated.
      example: '2018-08-28T17:26:26Z'
      format: date-time
      type: string
    contacts:
      allOf:
        - $ref: '#/components/schemas/contact_properties'
    contact_properties:
      properties:
        address:
          $ref: '#/components/schemas/components-schemas-address'
        address2:
          $ref: '#/components/schemas/address2'
        city:
          $ref: '#/components/schemas/city'
        country:
          $ref: '#/components/schemas/country'
        email:
          $ref: '#/components/schemas/email'
        fax:
          $ref: '#/components/schemas/fax'
        first_name:
          $ref: '#/components/schemas/first_name'
        id:
          $ref: '#/components/schemas/contact_identifier'
        last_name:
          $ref: '#/components/schemas/last_name'
        organization:
          $ref: '#/components/schemas/schemas-organization'
        phone:
          $ref: '#/components/schemas/telephone'
        state:
          $ref: '#/components/schemas/contacts_components-schemas-state'
        zip:
          $ref: '#/components/schemas/zipcode'
      required:
        - first_name
        - last_name
        - address
        - city
        - state
        - zip
        - country
        - phone
        - organization
      type: object
    components-schemas-address:
      description: Address.
      example: 123 Sesame St.
      type: string
    address2:
      description: 'Optional address line for unit, floor, suite, etc.'
      example: Suite 430
      type: string
    city:
      description: City.
      example: Austin
      type: string
    country:
      description: The country in which the user lives.
      example: US
      maxLength: 30
      nullable: true
      type: string
    email:
      description: The contact email address of the user.
      example: user@example.com
      maxLength: 90
      type: string
    fax:
      description: Contact fax number.
      example: 123-867-5309
      type: string
    first_name:
      description: User's first name
      example: John
      maxLength: 60
      nullable: true
      type: string
    contact_identifier:
      description: Contact Identifier.
      example: ea95132c15732412d22c1476fa83f27a
      maxLength: 32
      readOnly: true
      type: string
    last_name:
      description: User's last name
      example: Appleseed
      maxLength: 60
      nullable: true
      type: string
    schemas-organization:
      description: Name of organization.
      example: 'Cloudflare, Inc.'
      type: string
    telephone:
      description: User's telephone number
      example: +1 123-123-1234
      maxLength: 20
      nullable: true
      type: string
    contacts_components-schemas-state:
      description: State.
      example: TX
      type: string
    zipcode:
      description: The zipcode or postal code where the user lives.
      example: '12345'
      maxLength: 20
      nullable: true
      type: string
    schemas-domain_name:
      description: Domain name.
      example: cloudflare.com
      type: string
    domain_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    domain_update_properties:
      properties:
        auto_renew:
          $ref: '#/components/schemas/auto_renew'
        locked:
          $ref: '#/components/schemas/locked'
        name_servers:
          $ref: '#/components/schemas/name_servers'
        privacy:
          $ref: '#/components/schemas/privacy'
      type: object
    auto_renew:
      description: Auto-renew controls whether subscription is automatically renewed upon domain expiration.
      example: true
      type: boolean
    name_servers:
      description: List of name servers.
      example:
        - preston.ns.cloudflare.com
        - oli.ns.cloudflare.com
      items:
        type: string
      type: array
    privacy:
      description: Privacy option controls redacting WHOIS information.
      example: true
      type: boolean
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_registrar:
      id: cloudflare.domains.accounts_registrar
      name: accounts_registrar
      title: Accounts Registrar
      methods:
        registrar_domains_list_domains:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1registrar~1domains/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        registrar_domains_get_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1registrar~1domains~1{domain_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _registrar_domains_get_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1registrar~1domains~1{domain_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        registrar_domains_update_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1registrar~1domains~1{domain_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_registrar/methods/registrar_domains_get_domain'
        insert: []
        update: []
        delete: []
paths:
  '/accounts/{account_identifier}/registrar/domains':
    post:
      description: List domains handled by Registrar.
      operationId: registrar-domains-list-domains
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  $ref: '#/components/schemas/domain_names'
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain_response_collection'
          description: List domains response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/domain_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List domains response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List domains
      tags:
        - Registrar Domains
  '/accounts/{account_identifier}/registrar/domains/{domain_name}':
    get:
      description: Show individual domain.
      operationId: registrar-domains-get-domain
      parameters:
        - in: path
          name: domain_name
          required: true
          schema:
            $ref: '#/components/schemas/schemas-domain_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain_response_single'
          description: Get domain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/domain_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get domain
      tags:
        - Registrar Domains
    put:
      description: Update individual domain.
      operationId: registrar-domains-update-domain
      parameters:
        - in: path
          name: domain_name
          required: true
          schema:
            $ref: '#/components/schemas/schemas-domain_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/domain_update_properties'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain_response_single'
          description: Update domain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/domain_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update domain
      tags:
        - Registrar Domains
