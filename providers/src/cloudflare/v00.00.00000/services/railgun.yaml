openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Account Railguns
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - railgun
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    railgun_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/railgun'
              type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    railgun:
      properties:
        activated_on:
          $ref: '#/components/schemas/activated_on'
        activation_key:
          $ref: '#/components/schemas/activation_key'
        build:
          $ref: '#/components/schemas/build'
        created_on:
          $ref: '#/components/schemas/railgun_components-schemas-created_on'
        enabled:
          $ref: '#/components/schemas/railgun_components-schemas-enabled'
        id:
          $ref: '#/components/schemas/railgun_components-schemas-identifier'
        modified_on:
          $ref: '#/components/schemas/railgun_components-schemas-modified_on'
        name:
          $ref: '#/components/schemas/railgun_components-schemas-name'
        revision:
          $ref: '#/components/schemas/revision'
        status:
          $ref: '#/components/schemas/railgun_components-schemas-status'
        upgrade_info:
          $ref: '#/components/schemas/upgrade_info'
        version:
          $ref: '#/components/schemas/railgun_components-schemas-version'
        zones_connected:
          $ref: '#/components/schemas/zones_connected'
      required:
        - id
        - name
        - status
        - enabled
        - zones_connected
        - build
        - version
        - revision
        - activation_key
        - activated_on
        - created_on
        - modified_on
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    activated_on:
      description: When the Railgun was activated.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    activation_key:
      example: e4edc00281cb56ebac22c81be9bac8f3
      maxLength: 32
      readOnly: true
      type: string
    build:
      description: The build identifier for the Railgun receiver.
      example: b1234
      readOnly: true
      type: string
    railgun_components-schemas-created_on:
      description: When the Railgun was created.
      example: '2014-01-01T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    railgun_components-schemas-enabled:
      default: false
      description: Flag to determine if the Railgun is accepting connections.
      example: true
      type: boolean
    railgun_components-schemas-identifier:
      description: Railgun identifier tag.
      example: e928d310693a83094309acf9ead50448
      maxLength: 32
      readOnly: true
      type: string
    railgun_components-schemas-modified_on:
      description: When the Railgun was last modified.
      example: '2014-01-01T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    railgun_components-schemas-name:
      description: Readable identifier of the Railgun.
      example: My Railgun.
      maxLength: 160
      type: string
    revision:
      description: The revision of the Railgun receiver.
      example: '123'
      readOnly: true
      type: string
    railgun_components-schemas-status:
      description: Status of the Railgun.
      enum:
        - initializing
        - active
      example: active
      readOnly: true
      type: string
    upgrade_info:
      description: Defined when the Railgun version is out of date from the latest release from Cloudflare.
      properties:
        download_link:
          description: An HTTP link to download the latest Railgun binary.
          example: 'https://www.cloudflare.com/downloads/railgun'
          type: string
        latest_version:
          description: Latest version of the Railgun receiver available to install.
          example: 1.0.0
          type: string
      type: object
    railgun_components-schemas-version:
      description: The version of the Railgun receiver.
      example: '2.1'
      readOnly: true
      type: string
    zones_connected:
      description: The number of zones using this Railgun.
      example: 2
      readOnly: true
      type: number
    railgun_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    railgun_response_single_id:
      allOf:
        - $ref: '#/components/schemas/railgun_response_single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/railgun_components-schemas-identifier'
    schemas-railgun:
      properties:
        activation:
          $ref: '#/components/schemas/activation'
        created_on:
          $ref: '#/components/schemas/railgun_components-schemas-created_on'
        enabled:
          $ref: '#/components/schemas/railgun_components-schemas-enabled'
        id:
          $ref: '#/components/schemas/railgun_components-schemas-identifier'
        modified_on:
          $ref: '#/components/schemas/railgun_components-schemas-modified_on'
        name:
          $ref: '#/components/schemas/railgun_components-schemas-name'
        status:
          $ref: '#/components/schemas/railgun_components-schemas-status'
        upgrade_info:
          $ref: '#/components/schemas/upgrade_info'
        zones_connected:
          $ref: '#/components/schemas/zones_connected'
      required:
        - id
        - name
        - status
        - enabled
        - zones_connected
        - activation
      type: object
    activation:
      properties:
        activated_on:
          $ref: '#/components/schemas/activated_on'
        key:
          $ref: '#/components/schemas/activation_key'
        version:
          properties:
            build:
              $ref: '#/components/schemas/build'
            number:
              $ref: '#/components/schemas/railgun_components-schemas-version'
            revision:
              $ref: '#/components/schemas/revision'
          required:
            - number
          type: object
      readOnly: true
      required:
        - key
      type: object
    components-schemas-zone:
      properties:
        activated_on:
          description: |-
            The last time proof of ownership was detected and the zone was made
            active
          example: '2014-01-02T00:01:00.12345Z'
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_on:
          description: When the zone was created
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        development_mode:
          description: |-
            The interval (in seconds) from when development mode expires
            (positive integer) or last expired (negative integer) for the
            domain. If development mode has never been enabled, this value is 0.
          example: 7200
          readOnly: true
          type: number
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        modified_on:
          description: When the zone was last modified
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        name:
          description: The domain name
          example: example.com
          maxLength: 253
          pattern: '^([a-zA-Z0-9][\-a-zA-Z0-9]*\.)+[\-a-zA-Z0-9]{2,20}$'
          readOnly: true
          type: string
        original_dnshost:
          description: DNS host at the time of switching to Cloudflare
          example: NameCheap
          maxLength: 50
          nullable: true
          readOnly: true
          type: string
        original_name_servers:
          description: |-
            Original name servers before moving to Cloudflare
            Notes: Is this only available for full zones?
          example:
            - ns1.originaldnshost.com
            - ns2.originaldnshost.com
          items:
            format: hostname
            type: string
          nullable: true
          readOnly: true
          type: array
        original_registrar:
          description: Registrar for the domain at the time of switching to Cloudflare
          example: GoDaddy
          nullable: true
          readOnly: true
          type: string
      required:
        - id
        - name
        - development_mode
        - owner
        - account
        - meta
        - original_name_servers
        - original_registrar
        - original_dnshost
        - created_on
        - modified_on
        - activated_on
      type: object
    connection_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-connection'
              type: array
    schemas-connection:
      properties:
        created_on:
          $ref: '#/components/schemas/connection_components-schemas-created_on'
        enabled:
          $ref: '#/components/schemas/connection_components-schemas-enabled'
        id:
          $ref: '#/components/schemas/connection_components-schemas-identifier'
        modified_on:
          $ref: '#/components/schemas/connection_components-schemas-modified_on'
        zone:
          $ref: '#/components/schemas/connection_components-schemas-zone'
      required:
        - id
        - zone
        - enabled
      type: object
    connection_components-schemas-created_on:
      description: When the connection was created.
      example: '2017-06-14T00:00:00Z'
      format: date-time
      readOnly: true
      type: string
    connection_components-schemas-enabled:
      default: false
      description: A value indicating whether the connection is enabled or not.
      example: true
      type: boolean
    connection_components-schemas-identifier:
      description: Connection identifier tag.
      example: c4a7362d577a6c3019a474fd6f485821
      maxLength: 32
      readOnly: true
      type: string
    connection_components-schemas-modified_on:
      description: When the connection was last modified.
      example: '2017-06-14T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    connection_components-schemas-zone:
      properties:
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/properties-name'
      type: object
    properties-name:
      description: The domain name
      example: example.com
      maxLength: 253
      pattern: '^([a-zA-Z0-9][\-a-zA-Z0-9]*\.)+[\-a-zA-Z0-9]{2,20}$'
      readOnly: true
      type: string
    connection_single_request:
      properties:
        enabled:
          $ref: '#/components/schemas/connection_components-schemas-enabled'
        zone:
          properties:
            id:
              $ref: '#/components/schemas/common_components-schemas-identifier'
      required:
        - zone
      type: object
    connection_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    connection_single_id_response:
      allOf:
        - $ref: '#/components/schemas/connection_single_response'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/connection_components-schemas-identifier'
    schemas-railgun_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                type: object
              type: array
    railgun_components-schemas-identifier-2:
      description: Railgun connection identifier tag.
      example: e928d310693a83094309acf9ead50448
      maxLength: 32
      readOnly: true
      type: string
    connected:
      default: false
      description: A flag indicating whether the given zone is connected to the Railgun.
      example: true
      type: boolean
    test_connection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/test_connection_properties'
    test_connection_properties:
      properties:
        body_hash:
          description: Hash version of body.
          example: be27f2429421e12f200cab1da43ba301bdc70e1d
          type: string
        body_size:
          description: Size of the body in bytes.
          example: 63910 bytes
          type: string
        cf-cache-status:
          description: Lists any `cf-cache-status` present.
          type: string
        cf-ray:
          description: Lists any `cf-ray` present.
          example: 1ddd7570575207d9-LAX
          type: string
        cf-wan-error:
          description: Lists any `cf-wan-error` present.
          type: string
        cloudflare:
          description: Whether Cloudflare is enabled on the host.
          example: 'on'
          type: string
        connection_close:
          default: true
          description: Connection closed or open.
          example: false
          type: boolean
        elapsed_time:
          description: Amount of seconds that the test lasted.
          example: 0.239013s
          type: string
        host_name:
          description: The hostname queried.
          example: www.example.com
          type: string
        http_status:
          description: The HTTP status response code.
          example: 200
          type: number
        method:
          description: HTTP Method used to test the connection.
          enum:
            - GET
            - POST
          example: GET
        missing_headers:
          description: What headers are missing.
          example: No Content-Length or Transfer-Encoding.
          type: string
        protocol:
          description: Protocol used to test the connection.
          example: HTTP/1.1
          type: string
        railgun:
          description: Indicates if Railgun is enabled on the queried hostname.
          example: 'on'
          type: string
        response_status:
          description: HTTP Status code.
          example: 200 OK
          type: string
        url:
          description: Url of the domain you can compare the connection to.
          example: 'https://www.cloudflare.com'
          type: string
      type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_railguns:
      id: cloudflare.railgun.accounts_railguns
      name: accounts_railguns
      title: Accounts Railguns
      methods:
        account_railguns_list_railguns:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_railguns_list_railguns:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_railguns_create_railgun:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_railguns_delete_a_railgun:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_railguns_railgun_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_railguns_railgun_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_railguns_update_railgun:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_railguns/methods/account_railguns_list_railguns'
          - $ref: '#/components/x-stackQL-resources/accounts_railguns/methods/account_railguns_railgun_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_railguns/methods/account_railguns_create_railgun'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_railguns/methods/account_railguns_delete_a_railgun'
    organizations_railguns:
      id: cloudflare.railgun.organizations_railguns
      name: organizations_railguns
      title: Organizations Railguns
      methods:
        organization_railgun_list_railguns:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _organization_railgun_list_railguns:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organization_railgun_create_railgun:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organization_railgun_delete_railgun:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organization_railgun_railgun_details:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _organization_railgun_railgun_details:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organization_railgun_enable_or_disable_a_railgun:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations_railguns/methods/organization_railgun_list_railguns'
          - $ref: '#/components/x-stackQL-resources/organizations_railguns/methods/organization_railgun_railgun_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/organizations_railguns/methods/organization_railgun_create_railgun'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/organizations_railguns/methods/organization_railgun_delete_railgun'
    organizations_railguns_zones:
      id: cloudflare.railgun.organizations_railguns_zones
      name: organizations_railguns_zones
      title: Organizations Railguns Zones
      methods:
        organization_railgun_get_railgun_zones:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns~1{identifier}~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _organization_railgun_get_railgun_zones:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1railguns~1{identifier}~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations_railguns_zones/methods/organization_railgun_get_railgun_zones'
        insert: []
        update: []
        delete: []
    railguns:
      id: cloudflare.railgun.railguns
      name: railguns
      title: Railguns
      methods:
        list_railguns:
          operation:
            $ref: '#/paths/~1railguns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _list_railguns:
          operation:
            $ref: '#/paths/~1railguns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_railgun:
          operation:
            $ref: '#/paths/~1railguns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_a_railgun:
          operation:
            $ref: '#/paths/~1railguns~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        railgun_details:
          operation:
            $ref: '#/paths/~1railguns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _railgun_details:
          operation:
            $ref: '#/paths/~1railguns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable_or_disable_a_railgun:
          operation:
            $ref: '#/paths/~1railguns~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/railguns/methods/list_railguns'
          - $ref: '#/components/x-stackQL-resources/railguns/methods/railgun_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/railguns/methods/create_railgun'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/railguns/methods/delete_a_railgun'
    railguns_zones:
      id: cloudflare.railgun.railguns_zones
      name: railguns_zones
      title: Railguns Zones
      methods:
        list_railgun_zones:
          operation:
            $ref: '#/paths/~1railguns~1{identifier}~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _list_railgun_zones:
          operation:
            $ref: '#/paths/~1railguns~1{identifier}~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/railguns_zones/methods/list_railgun_zones'
        insert: []
        update: []
        delete: []
    accounts_railguns_connections:
      id: cloudflare.railgun.accounts_railguns_connections
      name: accounts_railguns_connections
      title: Accounts Railguns Connections
      methods:
        connections_list_connections:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{railgun_identifier}~1connections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _connections_list_connections:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{railgun_identifier}~1connections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connections_create_connection:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{railgun_identifier}~1connections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connections_delete_connection:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{railgun_identifier}~1connections~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connections_connection_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{railgun_identifier}~1connections~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _connections_connection_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{railgun_identifier}~1connections~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connections_update_connection:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1railguns~1{railgun_identifier}~1connections~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_railguns_connections/methods/connections_list_connections'
          - $ref: '#/components/x-stackQL-resources/accounts_railguns_connections/methods/connections_connection_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_railguns_connections/methods/connections_create_connection'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_railguns_connections/methods/connections_delete_connection'
    zones_railguns:
      id: cloudflare.railgun.zones_railguns
      name: zones_railguns
      title: Zones Railguns
      methods:
        connections_for_a_zone_list_available_railguns:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1railguns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _connections_for_a_zone_list_available_railguns:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1railguns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connections_for_a_zone_railgun_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1railguns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _connections_for_a_zone_railgun_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1railguns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connections_for_a_zone_connect_or_disconnect_a_railgun:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1railguns~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connections_for_a_zone_test_railgun_connection:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1railguns~1{identifier}~1diagnose/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _connections_for_a_zone_test_railgun_connection:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1railguns~1{identifier}~1diagnose/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_railguns/methods/connections_for_a_zone_list_available_railguns'
          - $ref: '#/components/x-stackQL-resources/zones_railguns/methods/connections_for_a_zone_railgun_details'
        insert: []
        update: []
        delete: []
paths:
  '/accounts/{account_identifier}/railguns':
    get:
      description: 'List, search, sort and filter your Railguns.'
      operationId: account-railguns-list-railguns
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_collection'
          description: List Railguns response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Railguns response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Railguns
      tags:
        - Account Railguns
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    post:
      operationId: account-railguns-create-railgun
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/railgun_components-schemas-name'
              required:
                - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Create Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Railgun
      tags:
        - Account Railguns
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/railguns/{identifier}':
    delete:
      description: Disable and delete a Railgun. This will immediately disable the Railgun for any connected zones.
      operationId: account-railguns-delete-a-railgun
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single_id'
          description: Delete a Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single_id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a Railgun
      tags:
        - Account Railguns
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    get:
      operationId: account-railguns-railgun-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Railgun details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Railgun details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Railgun details
      tags:
        - Account Railguns
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    put:
      description: Update a Railgun.
      operationId: account-railguns-update-railgun
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-railgun'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Update Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Railgun
      tags:
        - Account Railguns
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/organizations/{organization_identifier}/railguns':
    get:
      deprecated: true
      description: 'List, search, sort and filter your Railguns.'
      operationId: organization-railgun-list-railguns
      parameters:
        - in: path
          name: organization_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_collection'
          description: List Railguns response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Railguns response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Railguns
      tags:
        - Organization Railgun
      x-cfDeprecation:
        $ref: ../organization.json#/components/schemas/organization/x-cfDeprecations/org_deprecation
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    post:
      deprecated: true
      operationId: organization-railgun-create-railgun
      parameters:
        - in: path
          name: organization_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/railgun_components-schemas-name'
              required:
                - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Create Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Railgun
      tags:
        - Organization Railgun
      x-cfDeprecation:
        $ref: ../organization.json#/components/schemas/organization/x-cfDeprecations/org_deprecation
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/organizations/{organization_identifier}/railguns/{identifier}':
    delete:
      deprecated: true
      description: Disable and delete a Railgun. This will immediately disable the Railgun for any connected zones.
      operationId: organization-railgun-delete-railgun
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: organization_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single_id'
          description: Delete Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single_id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Railgun
      tags:
        - Organization Railgun
      x-cfDeprecation:
        $ref: ../organization.json#/components/schemas/organization/x-cfDeprecations/org_deprecation
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    get:
      deprecated: true
      operationId: organization-railgun-railgun-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: organization_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Railgun details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Railgun details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Railgun details
      tags:
        - Organization Railgun
      x-cfDeprecation:
        $ref: ../organization.json#/components/schemas/organization/x-cfDeprecations/org_deprecation
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    patch:
      deprecated: true
      description: Enable or disable a Railgun for all zones connected to it.
      operationId: organization-railgun-enable-or-disable-a-railgun
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: organization_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enabled:
                  $ref: '#/components/schemas/railgun_components-schemas-enabled'
              required:
                - enabled
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Enable or disable a Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Enable or disable a Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Enable or disable a Railgun
      tags:
        - Organization Railgun
      x-cfDeprecation:
        $ref: ../organization.json#/components/schemas/organization/x-cfDeprecations/org_deprecation
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/organizations/{organization_identifier}/railguns/{identifier}/zones':
    get:
      deprecated: true
      description: Lists the zones that are currently using this Railgun.
      operationId: organization-railgun-get-railgun-zones
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: organization_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/components-schemas-zone'
                        type: array
          description: Get Railgun zones response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/components-schemas-zone'
                            type: array
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Railgun zones response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Railgun zones
      tags:
        - Organization Railgun
      x-cfDeprecation:
        $ref: ../organization.json#/components/schemas/organization/x-cfDeprecations/org_deprecation
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  /railguns:
    get:
      description: 'List, search, sort and filter your Railguns.'
      operationId: railgun-list-railguns
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_collection'
          description: List Railguns response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Railguns response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Railguns
      tags:
        - Railgun
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    post:
      operationId: railgun-create-railgun
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/railgun_components-schemas-name'
              required:
                - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Create Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Railgun
      tags:
        - Railgun
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/railguns/{identifier}':
    delete:
      description: Disable and delete a Railgun. This will immediately disable that Railgun for any connected zones.
      operationId: railgun-delete-a-railgun
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single_id'
          description: Delete a Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single_id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a Railgun
      tags:
        - Railgun
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    get:
      operationId: railgun-railgun-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Railgun details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Railgun details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Railgun details
      tags:
        - Railgun
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    patch:
      description: Enable or disable a Railgun for all zones connected to it.
      operationId: railgun-enable-or-disable-a-railgun
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enabled:
                  $ref: '#/components/schemas/railgun_components-schemas-enabled'
              required:
                - enabled
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Enable or disable a Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Enable or disable a Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Enable or disable a Railgun
      tags:
        - Railgun
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/railguns/{identifier}/zones':
    get:
      description: List the zones that are currently using this Railgun.
      operationId: railgun-list-railgun-zones
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/components-schemas-zone'
                        type: array
          description: List Railgun zones response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/components-schemas-zone'
                            type: array
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Railgun zones response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Railgun zones
      tags:
        - Railgun
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/railguns/{railgun_identifier}/connections':
    get:
      description: List connections associated with the Railgun.
      operationId: railgun-connections-list-connections
      parameters:
        - in: path
          name: railgun_identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection_collection_response'
          description: List Connections response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/connection_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Connections response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Connections
      tags:
        - Railgun Connections
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    post:
      description: Associates a zone to the Railgun.
      operationId: railgun-connections-create-connection
      parameters:
        - in: path
          name: railgun_identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connection_single_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection_single_response'
          description: Create connection response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/connection_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create connection response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create connection
      tags:
        - Railgun Connections
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/railguns/{railgun_identifier}/connections/{identifier}':
    delete:
      description: Disable and remove the connection to a zone.
      operationId: railgun-connections-delete-connection
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/connection_components-schemas-identifier'
        - in: path
          name: railgun_identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection_single_id_response'
          description: Delete connection response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/connection_single_id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete connection response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete connection
      tags:
        - Railgun Connections
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    get:
      description: Get a connection by ID.
      operationId: railgun-connections-connection-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/connection_components-schemas-identifier'
        - in: path
          name: railgun_identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection_single_response'
          description: Connection details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/connection_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Connection details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Connection details
      tags:
        - Railgun Connections
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    put:
      description: Enable or disable a connection.
      operationId: railgun-connections-update-connection
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/connection_components-schemas-identifier'
        - in: path
          name: railgun_identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-connection'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection_single_response'
          description: Update connection response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/connection_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update connection response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update connection
      tags:
        - Railgun Connections
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/railguns':
    get:
      description: A list of available Railguns the zone can use.
      operationId: railgun-connections-for-a-zone-list-available-railguns
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-railgun_response_collection'
          description: List available Railguns response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-railgun_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List available Railguns response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List available Railguns
      tags:
        - Railgun Connections for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/railguns/{identifier}':
    get:
      description: Lists details about a specific Railgun.
      operationId: railgun-connections-for-a-zone-railgun-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier-2'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Railgun details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Railgun details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Railgun details
      tags:
        - Railgun Connections for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    patch:
      description: Connect or disconnect a Railgun.
      operationId: railgun-connections-for-a-zone-connect-or-disconnect-a-railgun
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier-2'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                connected:
                  $ref: '#/components/schemas/connected'
              required:
                - connected
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/railgun_response_single'
          description: Connect or disconnect a Railgun response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/railgun_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Connect or disconnect a Railgun response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Connect or disconnect a Railgun
      tags:
        - Railgun Connections for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/railguns/{identifier}/diagnose':
    get:
      description: Tests the Railgun connection to the zone.
      operationId: railgun-connections-for-a-zone-test-railgun-connection
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/railgun_components-schemas-identifier-2'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/test_connection_response'
          description: Test Railgun connection response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/test_connection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Test Railgun connection response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Test Railgun connection
      tags:
        - Railgun Connections for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
