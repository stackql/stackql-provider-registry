openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Account Rulesets
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - rulesets
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    rulesets_response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              description: A list of rulesets. The returned information will not include the rules in each ruleset.
              items:
                $ref: '#/components/schemas/ruleset_without_rules'
              type: array
          type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    ruleset_without_rules:
      description: A ruleset object.
      properties:
        description:
          $ref: '#/components/schemas/rulesets_components-schemas-description'
        id:
          $ref: '#/components/schemas/rulesets_components-schemas-id'
        kind:
          $ref: '#/components/schemas/schemas-kind'
        last_updated:
          $ref: '#/components/schemas/last_updated'
        name:
          $ref: '#/components/schemas/rulesets_components-schemas-name'
        phase:
          $ref: '#/components/schemas/phase'
        version:
          $ref: '#/components/schemas/version'
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    rulesets_components-schemas-description:
      default: ''
      description: An informative description of the ruleset.
      example: My ruleset to execute managed rulesets
      type: string
    rulesets_components-schemas-id:
      description: The unique ID of the ruleset.
      example: 2f2feab2026849078ba485f918791bdc
      pattern: '^[0-9a-f]{32}$'
      type: string
    schemas-kind:
      description: The kind of the ruleset.
      enum:
        - custom
        - root
        - zone
      example: root
      type: string
    last_updated:
      description: The timestamp of when the ruleset was last modified.
      example: '2000-01-01T00:00:00.000000Z'
      type: string
    rulesets_components-schemas-name:
      description: The human-readable name of the ruleset.
      example: My ruleset
      type: string
    phase:
      description: The phase of the ruleset.
      example: http_request_firewall_managed
      pattern: '^[a-z_]+$'
      type: string
    version:
      description: The version of the ruleset.
      example: '1'
      pattern: '^[0-9]+$'
      type: string
    create_ruleset:
      description: A ruleset object.
      properties:
        description:
          $ref: '#/components/schemas/rulesets_components-schemas-description'
        kind:
          $ref: '#/components/schemas/schemas-kind'
        name:
          $ref: '#/components/schemas/rulesets_components-schemas-name'
        phase:
          $ref: '#/components/schemas/phase'
        rules:
          $ref: '#/components/schemas/create_update_rules'
      required:
        - name
        - kind
        - phase
        - rules
      type: object
    ruleset_response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/ruleset'
          type: object
    create_update_rules:
      description: The list of rules in the ruleset.
      items:
        anyOf:
          - $ref: '#/components/schemas/create_update_rule'
          - description: The unique ID of a rule.
      type: array
    ruleset:
      description: A ruleset object.
      properties:
        description:
          $ref: '#/components/schemas/rulesets_components-schemas-description'
        id:
          $ref: '#/components/schemas/rulesets_components-schemas-id'
        kind:
          $ref: '#/components/schemas/schemas-kind'
        last_updated:
          $ref: '#/components/schemas/last_updated'
        name:
          $ref: '#/components/schemas/rulesets_components-schemas-name'
        phase:
          $ref: '#/components/schemas/phase'
        rules:
          $ref: '#/components/schemas/components-schemas-rules'
        version:
          $ref: '#/components/schemas/version'
      type: object
    create_update_rule:
      description: A rule object.
      properties:
        action:
          $ref: '#/components/schemas/rules_components-schemas-action'
        action_parameters:
          $ref: '#/components/schemas/action_parameters'
        description:
          $ref: '#/components/schemas/rules_components-schemas-description'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled-2'
        expression:
          $ref: '#/components/schemas/schemas-expression'
        logging:
          $ref: '#/components/schemas/logging'
        ref:
          $ref: '#/components/schemas/components-schemas-ref'
      required:
        - expression
        - action
      type: object
    components-schemas-rules:
      description: The list of rules in the ruleset.
      items:
        $ref: '#/components/schemas/rules_components-schemas-rule'
      type: array
    rules_components-schemas-action:
      description: The action to perform when the rule matches.
      example: execute
      pattern: '^[a-z_]+$'
      type: string
    action_parameters:
      description: The parameters configuring the rule action.
      example:
        id: 4814384a9e5d4991b9815dcfc25d2f1f
      type: object
    rules_components-schemas-description:
      default: ''
      description: An informative description of the rule.
      example: Execute the OWASP ruleset when the IP address is not 1.1.1.1
      type: string
    rules_components-schemas-enabled-2:
      default: 'true'
      description: Whether the rule should be executed.
      example: true
      type: boolean
    schemas-expression:
      description: The expression defining which traffic will match the rule.
      example: ip.src ne 1.1.1.1
      type: string
    logging:
      description: An object configuring the rule's logging behavior.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether to generate a log when the rule matches.
          example: true
          type: boolean
      type: object
    components-schemas-ref:
      description: The reference of the rule (the rule ID by default).
      example: my_ref
      type: string
    rules_components-schemas-rule:
      description: A rule object.
      properties:
        action:
          $ref: '#/components/schemas/rules_components-schemas-action'
        action_parameters:
          $ref: '#/components/schemas/action_parameters'
        categories:
          $ref: '#/components/schemas/categories'
        description:
          $ref: '#/components/schemas/rules_components-schemas-description'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled-2'
        expression:
          $ref: '#/components/schemas/schemas-expression'
        id:
          $ref: '#/components/schemas/rules_components-schemas-id'
        last_updated:
          $ref: '#/components/schemas/schemas-last_updated'
        logging:
          $ref: '#/components/schemas/logging'
        ref:
          $ref: '#/components/schemas/components-schemas-ref'
        version:
          $ref: '#/components/schemas/schemas-version'
      type: object
    categories:
      description: The categories of the rule.
      example:
        - directory-traversal
        - header
      items:
        $ref: '#/components/schemas/category'
      type: array
    rules_components-schemas-id:
      description: The unique ID of the rule.
      example: 3a03d665bac047339bb530ecb439a90d
      type: string
    schemas-last_updated:
      description: The timestamp of when the rule was last modified.
      example: '2000-01-01T00:00:00.000000Z'
      type: string
    schemas-version:
      description: The version of the rule.
      example: '1'
      pattern: '^[0-9]+$'
      type: string
    category:
      description: A category of the rule.
      example: directory-traversal
      type: string
    update_ruleset:
      description: A ruleset object.
      properties:
        description:
          $ref: '#/components/schemas/rulesets_components-schemas-description'
        rules:
          $ref: '#/components/schemas/create_update_rules'
      required:
        - rules
      type: object
    components-schemas-ruleset:
      properties:
        description:
          example: ''
        id:
          example: 2f2feab2026849078ba485f918791bdc
        kind:
          example: zone
        name:
          example: default
        phase:
          example: http_custom_errors
        rules:
          description: The rules in the ruleset.
          items:
            $ref: '#/components/schemas/custom-error-responses_components-schemas-rule'
          type: array
    custom-error-responses_components-schemas-rule:
      properties:
        action:
          example: serve_error
        action_parameters:
          $ref: '#/components/schemas/action_parameters_serve_error'
        description:
          example: Change error response based on geolocation
        expression:
          example: ip.geoip.country eq "AL"
        id:
          example: 3a03d665bac047339bb530ecb439a90d
        version:
          example: '1'
    action_parameters_serve_error:
      description: The action parameters for the serve_error action.
      properties:
        content:
          description: The new content for the response error.
          example: some html error page
          type: string
        content_type:
          description: The content-type of the response error.
          example: text/html
          type: string
        status_code:
          description: The HTTP status code of the response error.
          example: 530
          type: number
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts:
      id: cloudflare.rulesets.accounts
      name: accounts
      title: Accounts
      methods:
        account_rulesets_list_account_rulesets:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_rulesets_list_account_rulesets:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_create_an_account_ruleset:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_delete_an_account_ruleset:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_get_an_account_ruleset:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_rulesets_get_an_account_ruleset:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_update_an_account_ruleset:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/account_rulesets_list_account_rulesets'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/account_rulesets_create_an_account_ruleset'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/account_rulesets_delete_an_account_ruleset'
    accounts_phases_entrypoint:
      id: cloudflare.rulesets.accounts_phases_entrypoint
      name: accounts_phases_entrypoint
      title: Accounts Phases Entrypoint
      methods:
        account_rulesets_get_an_account_entry_point_ruleset:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1phases~1{ruleset_phase}~1entrypoint/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_rulesets_get_an_account_entry_point_ruleset:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1phases~1{ruleset_phase}~1entrypoint/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_update_an_account_entry_point_ruleset:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1phases~1{ruleset_phase}~1entrypoint/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_phases_entrypoint/methods/account_rulesets_get_an_account_entry_point_ruleset'
        insert: []
        update: []
        delete: []
    accounts_phases_versions:
      id: cloudflare.rulesets.accounts_phases_versions
      name: accounts_phases_versions
      title: Accounts Phases Versions
      methods:
        account_rulesets_list_an_account_entry_point_rulesets_versions:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1phases~1{ruleset_phase}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_rulesets_list_an_account_entry_point_rulesets_versions:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1phases~1{ruleset_phase}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_get_an_account_entry_point_ruleset_version:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1phases~1{ruleset_phase}~1versions~1{ruleset_version}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_rulesets_get_an_account_entry_point_ruleset_version:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1phases~1{ruleset_phase}~1versions~1{ruleset_version}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    accounts_rules:
      id: cloudflare.rulesets.accounts_rules
      name: accounts_rules
      title: Accounts Rules
      methods:
        account_rulesets_create_an_account_ruleset_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_delete_an_account_ruleset_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1rules~1{rule_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_update_an_account_ruleset_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1rules~1{rule_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_rules/methods/account_rulesets_create_an_account_ruleset_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_rules/methods/account_rulesets_delete_an_account_ruleset_rule'
    accounts_versions:
      id: cloudflare.rulesets.accounts_versions
      name: accounts_versions
      title: Accounts Versions
      methods:
        account_rulesets_list_an_account_rulesets_versions:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_rulesets_list_an_account_rulesets_versions:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_delete_an_account_ruleset_version:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1versions~1{ruleset_version}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_rulesets_get_an_account_ruleset_version:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1versions~1{ruleset_version}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_rulesets_get_an_account_ruleset_version:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1versions~1{ruleset_version}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_versions/methods/account_rulesets_delete_an_account_ruleset_version'
    accounts_versions_by_tag:
      id: cloudflare.rulesets.accounts_versions_by_tag
      name: accounts_versions_by_tag
      title: Accounts Versions By Tag
      methods:
        account_rulesets_list_an_account_ruleset_versions_rules_by_tag:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1versions~1{ruleset_version}~1by_tag~1{rule_tag}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_rulesets_list_an_account_ruleset_versions_rules_by_tag:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1rulesets~1{ruleset_id}~1versions~1{ruleset_version}~1by_tag~1{rule_tag}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_versions_by_tag/methods/account_rulesets_list_an_account_ruleset_versions_rules_by_tag'
        insert: []
        update: []
        delete: []
    zones_phases_http_custom_errors_entrypoint:
      id: cloudflare.rulesets.zones_phases_http_custom_errors_entrypoint
      name: zones_phases_http_custom_errors_entrypoint
      title: Zones Phases Http Custom Errors Entrypoint
      methods:
        custom_error_responses_get_custom_error_responses:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1http_custom_errors~1entrypoint/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _custom_error_responses_get_custom_error_responses:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1http_custom_errors~1entrypoint/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_error_responses_update_custom_error_responses:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1http_custom_errors~1entrypoint/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones:
      id: cloudflare.rulesets.zones
      name: zones
      title: Zones
      methods:
        zone_rulesets_list_zone_rulesets:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_rulesets_list_zone_rulesets:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_create_a_zone_ruleset:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_delete_a_zone_ruleset:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_get_a_zone_ruleset:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_rulesets_get_a_zone_ruleset:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_update_a_zone_ruleset:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones/methods/zone_rulesets_list_zone_rulesets'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones/methods/zone_rulesets_create_a_zone_ruleset'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones/methods/zone_rulesets_delete_a_zone_ruleset'
    zones_phases_entrypoint:
      id: cloudflare.rulesets.zones_phases_entrypoint
      name: zones_phases_entrypoint
      title: Zones Phases Entrypoint
      methods:
        zone_rulesets_get_a_zone_entry_point_ruleset:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{ruleset_phase}~1entrypoint/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_rulesets_get_a_zone_entry_point_ruleset:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{ruleset_phase}~1entrypoint/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_update_a_zone_entry_point_ruleset:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{ruleset_phase}~1entrypoint/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_phases_entrypoint/methods/zone_rulesets_get_a_zone_entry_point_ruleset'
        insert: []
        update: []
        delete: []
    zones_phases_versions:
      id: cloudflare.rulesets.zones_phases_versions
      name: zones_phases_versions
      title: Zones Phases Versions
      methods:
        zone_rulesets_list_a_zone_entry_point_rulesets_versions:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{ruleset_phase}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_rulesets_list_a_zone_entry_point_rulesets_versions:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{ruleset_phase}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_get_a_zone_entry_point_ruleset_version:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{ruleset_phase}~1versions~1{ruleset_version}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_rulesets_get_a_zone_entry_point_ruleset_version:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{ruleset_phase}~1versions~1{ruleset_version}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_phases_versions/methods/zone_rulesets_list_a_zone_entry_point_rulesets_versions'
        insert: []
        update: []
        delete: []
    zones_rules:
      id: cloudflare.rulesets.zones_rules
      name: zones_rules
      title: Zones Rules
      methods:
        zone_rulesets_create_a_zone_ruleset_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_delete_a_zone_ruleset_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}~1rules~1{rule_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_update_a_zone_ruleset_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}~1rules~1{rule_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_rules/methods/zone_rulesets_create_a_zone_ruleset_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_rules/methods/zone_rulesets_delete_a_zone_ruleset_rule'
    zones_versions:
      id: cloudflare.rulesets.zones_versions
      name: zones_versions
      title: Zones Versions
      methods:
        zone_rulesets_list_a_zone_rulesets_versions:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_rulesets_list_a_zone_rulesets_versions:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_delete_a_zone_ruleset_version:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}~1versions~1{ruleset_version}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rulesets_get_a_zone_ruleset_version:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}~1versions~1{ruleset_version}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_rulesets_get_a_zone_ruleset_version:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1{ruleset_id}~1versions~1{ruleset_version}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_versions/methods/zone_rulesets_list_a_zone_rulesets_versions'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_versions/methods/zone_rulesets_delete_a_zone_ruleset_version'
paths:
  '/accounts/{account_id}/rulesets':
    get:
      description: Fetches all rulesets at the account level.
      operationId: account-rulesets-list-account-rulesets
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_response'
          description: List account rulesets response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List account rulesets response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List account rulesets
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates a ruleset at the account level.
      operationId: account-rulesets-create-an-account-ruleset
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_ruleset'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Create an account ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an account ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an account ruleset
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/phases/{ruleset_phase}/entrypoint':
    get:
      description: Fetches the latest version of the account entry point ruleset for a given phase.
      operationId: account-rulesets-get-an-account-entry-point-ruleset
      parameters:
        - in: path
          name: ruleset_phase
          required: true
          schema:
            $ref: '#/components/schemas/phase'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Get an account entry point ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an account entry point ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an account entry point ruleset
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: 'Updates an account entry point ruleset, creating a new version.'
      operationId: account-rulesets-update-an-account-entry-point-ruleset
      parameters:
        - in: path
          name: ruleset_phase
          required: true
          schema:
            $ref: '#/components/schemas/phase'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ruleset'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Update an account entry point ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an account entry point ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an account entry point ruleset
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/phases/{ruleset_phase}/versions':
    get:
      description: Fetches the versions of an account entry point ruleset.
      operationId: account-rulesets-list-an-account-entry-point-ruleset'-s-versions
      parameters:
        - in: path
          name: ruleset_phase
          required: true
          schema:
            $ref: '#/components/schemas/phase'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_response'
          description: List an account entry point ruleset's versions response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List an account entry point ruleset's versions response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List an account entry point ruleset's versions
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/phases/{ruleset_phase}/versions/{ruleset_version}':
    get:
      description: Fetches a specific version of an account entry point ruleset.
      operationId: account-rulesets-get-an-account-entry-point-ruleset-version
      parameters:
        - in: path
          name: ruleset_version
          required: true
          schema:
            $ref: '#/components/schemas/version'
        - in: path
          name: ruleset_phase
          required: true
          schema:
            $ref: '#/components/schemas/phase'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Get an account entry point ruleset version response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an account entry point ruleset version response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an account entry point ruleset version
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/{ruleset_id}':
    delete:
      description: Deletes all versions of an existing account ruleset.
      operationId: account-rulesets-delete-an-account-ruleset
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete an account ruleset response
        4xx:
          content:
            application/json: {}
          description: Delete an account ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an account ruleset
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the latest version of an account ruleset.
      operationId: account-rulesets-get-an-account-ruleset
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Get an account ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an account ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an account ruleset
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: 'Updates an account ruleset, creating a new version.'
      operationId: account-rulesets-update-an-account-ruleset
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ruleset'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Update an account ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an account ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an account ruleset
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/{ruleset_id}/rules':
    post:
      description: Adds a new rule to an account ruleset. The rule will be added to the end of the existing list of rules in the ruleset.
      operationId: account-rulesets-create-an-account-ruleset-rule
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_update_rule'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Create an account ruleset rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an account ruleset rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an account ruleset rule
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/{ruleset_id}/rules/{rule_id}':
    delete:
      description: Deletes an existing rule from an account ruleset.
      operationId: account-rulesets-delete-an-account-ruleset-rule
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-id'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Delete an account ruleset rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an account ruleset rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an account ruleset rule
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates an existing rule in an account ruleset.
      operationId: account-rulesets-update-an-account-ruleset-rule
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-id'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_update_rule'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Update an account ruleset rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an account ruleset rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an account ruleset rule
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/{ruleset_id}/versions':
    get:
      description: Fetches the versions of an account ruleset.
      operationId: account-rulesets-list-an-account-ruleset'-s-versions
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_response'
          description: List an account ruleset's versions response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List an account ruleset's versions response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List an account ruleset's versions
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/{ruleset_id}/versions/{ruleset_version}':
    delete:
      description: Deletes an existing version of an account ruleset.
      operationId: account-rulesets-delete-an-account-ruleset-version
      parameters:
        - in: path
          name: ruleset_version
          required: true
          schema:
            $ref: '#/components/schemas/version'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete an account ruleset version response
        4xx:
          content:
            application/json: {}
          description: Delete an account ruleset version response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an account ruleset version
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches a specific version of an account ruleset.
      operationId: account-rulesets-get-an-account-ruleset-version
      parameters:
        - in: path
          name: ruleset_version
          required: true
          schema:
            $ref: '#/components/schemas/version'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Get an account ruleset version response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an account ruleset version response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an account ruleset version
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_id}/rulesets/{ruleset_id}/versions/{ruleset_version}/by_tag/{rule_tag}':
    get:
      description: Fetches the rules of a managed account ruleset version for a given tag.
      operationId: account-rulesets-list-an-account-ruleset-version'-s-rules-by-tag
      parameters:
        - in: path
          name: rule_tag
          required: true
          schema:
            $ref: '#/components/schemas/category'
        - in: path
          name: ruleset_version
          required: true
          schema:
            $ref: '#/components/schemas/version'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: List an account ruleset version's rules by tag response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List an account ruleset version's rules by tag response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List an account ruleset version's rules by tag
      tags:
        - Account Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/phases/http_custom_errors/entrypoint':
    get:
      description: Fetches all Custom Error Responses in a zone.
      operationId: custom-error-responses-get-custom-error-responses
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-ruleset'
          description: Get Custom Error Responses response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-ruleset'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Custom Error Responses response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Custom Error Responses
      tags:
        - Custom Error Responses
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates the Custom Error Responses of a zone.
      operationId: custom-error-responses-update-custom-error-responses
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ruleset'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Update Custom Error Responses response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Custom Error Responses response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Custom Error Responses
      tags:
        - Custom Error Responses
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets':
    get:
      description: Fetches all rulesets at the zone level.
      operationId: zone-rulesets-list-zone-rulesets
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_response'
          description: List zone rulesets response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List zone rulesets response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List zone rulesets
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates a ruleset at the zone level.
      operationId: zone-rulesets-create-a-zone-ruleset
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_ruleset'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Create a zone ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a zone ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a zone ruleset
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint':
    get:
      description: Fetches the latest version of the zone entry point ruleset for a given phase.
      operationId: zone-rulesets-get-a-zone-entry-point-ruleset
      parameters:
        - in: path
          name: ruleset_phase
          required: true
          schema:
            $ref: '#/components/schemas/phase'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Get a zone entry point ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a zone entry point ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a zone entry point ruleset
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: 'Updates a zone entry point ruleset, creating a new version.'
      operationId: zone-rulesets-update-a-zone-entry-point-ruleset
      parameters:
        - in: path
          name: ruleset_phase
          required: true
          schema:
            $ref: '#/components/schemas/phase'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ruleset'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Update a zone entry point ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a zone entry point ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a zone entry point ruleset
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/phases/{ruleset_phase}/versions':
    get:
      description: Fetches the versions of a zone entry point ruleset.
      operationId: zone-rulesets-list-a-zone-entry-point-ruleset'-s-versions
      parameters:
        - in: path
          name: ruleset_phase
          required: true
          schema:
            $ref: '#/components/schemas/phase'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_response'
          description: List a zone entry point ruleset's versions response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List a zone entry point ruleset's versions response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List a zone entry point ruleset's versions
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/phases/{ruleset_phase}/versions/{ruleset_version}':
    get:
      description: Fetches a specific version of a zone entry point ruleset.
      operationId: zone-rulesets-get-a-zone-entry-point-ruleset-version
      parameters:
        - in: path
          name: ruleset_version
          required: true
          schema:
            $ref: '#/components/schemas/version'
        - in: path
          name: ruleset_phase
          required: true
          schema:
            $ref: '#/components/schemas/phase'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Get a zone entry point ruleset version response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a zone entry point ruleset version response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a zone entry point ruleset version
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/{ruleset_id}':
    delete:
      description: Deletes all versions of an existing zone ruleset.
      operationId: zone-rulesets-delete-a-zone-ruleset
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete a zone ruleset response
        4xx:
          content:
            application/json: {}
          description: Delete a zone ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a zone ruleset
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the latest version of a zone ruleset.
      operationId: zone-rulesets-get-a-zone-ruleset
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Get a zone ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a zone ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a zone ruleset
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: 'Updates a zone ruleset, creating a new version.'
      operationId: zone-rulesets-update-a-zone-ruleset
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ruleset'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Update a zone ruleset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a zone ruleset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a zone ruleset
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/{ruleset_id}/rules':
    post:
      description: Adds a new rule to a zone ruleset. The rule will be added to the end of the existing list of rules in the ruleset.
      operationId: zone-rulesets-create-a-zone-ruleset-rule
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_update_rule'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Create a zone ruleset rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a zone ruleset rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a zone ruleset rule
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}':
    delete:
      description: Deletes an existing rule from a zone ruleset.
      operationId: zone-rulesets-delete-a-zone-ruleset-rule
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-id'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Delete a zone ruleset rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a zone ruleset rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a zone ruleset rule
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates an existing rule in a zone ruleset.
      operationId: zone-rulesets-update-a-zone-ruleset-rule
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-id'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_update_rule'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Update a zone ruleset rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a zone ruleset rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a zone ruleset rule
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/{ruleset_id}/versions':
    get:
      description: Fetches the versions of a zone ruleset.
      operationId: zone-rulesets-list-a-zone-ruleset'-s-versions
      parameters:
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_response'
          description: List a zone ruleset's versions response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List a zone ruleset's versions response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List a zone ruleset's versions
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/{ruleset_id}/versions/{ruleset_version}':
    delete:
      description: Deletes an existing version of a zone ruleset.
      operationId: zone-rulesets-delete-a-zone-ruleset-version
      parameters:
        - in: path
          name: ruleset_version
          required: true
          schema:
            $ref: '#/components/schemas/version'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete a zone ruleset version response
        4xx:
          content:
            application/json: {}
          description: Delete a zone ruleset version response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a zone ruleset version
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches a specific version of a zone ruleset.
      operationId: zone-rulesets-get-a-zone-ruleset-version
      parameters:
        - in: path
          name: ruleset_version
          required: true
          schema:
            $ref: '#/components/schemas/version'
        - in: path
          name: ruleset_id
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset_response'
          description: Get a zone ruleset version response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ruleset_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a zone ruleset version response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a zone ruleset version
      tags:
        - Zone Rulesets
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
