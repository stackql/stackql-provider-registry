openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Zero Trust Gateway Application and Application Type mappings
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - zero_trust
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    app-types_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/app-types'
              type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    app-types:
      oneOf:
        - $ref: '#/components/schemas/application'
        - $ref: '#/components/schemas/application_type'
      readOnly: true
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    application:
      properties:
        application_type_id:
          $ref: '#/components/schemas/app_type_id'
        created_at:
          $ref: '#/components/schemas/timestamp'
        id:
          $ref: '#/components/schemas/components-schemas-app_id'
        name:
          $ref: '#/components/schemas/app-types_components-schemas-name'
      type: object
    application_type:
      properties:
        created_at:
          $ref: '#/components/schemas/timestamp'
        description:
          description: A short summary of applications with this type.
          example: Applications used to communicate or collaborate in a business setting.
          type: string
        id:
          $ref: '#/components/schemas/app_type_id'
        name:
          $ref: '#/components/schemas/app-types_components-schemas-name'
      type: object
    app_type_id:
      description: The identifier for the type of this application. There can be many applications with the same type. This refers to the `id` of an Application Type that has been returned.
      type: integer
    timestamp:
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    components-schemas-app_id:
      description: The identifier for this application. There is only one application per id.
      type: integer
    app-types_components-schemas-name:
      description: The name of the application or application type.
      example: Facebook
      type: string
    categories_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-categories'
              type: array
    schemas-categories:
      properties:
        beta:
          $ref: '#/components/schemas/beta'
        class:
          $ref: '#/components/schemas/class'
        description:
          $ref: '#/components/schemas/categories_components-schemas-description'
        id:
          $ref: '#/components/schemas/categories_components-schemas-id'
        name:
          $ref: '#/components/schemas/categories_components-schemas-name'
        subcategories:
          description: All subcategories for this category.
          items:
            $ref: '#/components/schemas/subcategory'
          type: array
      readOnly: true
      type: object
    beta:
      description: Whether the category is in beta and subject to change.
      example: false
      type: boolean
    class:
      description: Which account types are allowed to create policies based on this categories. `blocked` categories are blocked unconditionally for all accounts. `removalPending` categories can be removed from policies but not added. `noBlock` categories cannot be blocked.
      enum:
        - free
        - premium
        - blocked
        - removalPending
        - noBlock
      example: premium
      type: string
    categories_components-schemas-description:
      description: A short summary of domains in the category.
      example: 'Sites related to educational content that are not included in other categories like Science, Technology or Educational institutions.'
      type: string
    categories_components-schemas-id:
      description: The identifier for this category. There is only one category per id.
      type: integer
    categories_components-schemas-name:
      description: The name of the category.
      example: Education
      type: string
    subcategory:
      properties:
        beta:
          $ref: '#/components/schemas/beta'
        class:
          $ref: '#/components/schemas/class'
        description:
          $ref: '#/components/schemas/categories_components-schemas-description'
        id:
          $ref: '#/components/schemas/categories_components-schemas-id'
        name:
          $ref: '#/components/schemas/categories_components-schemas-name'
      type: object
    locations_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    locations_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/locations'
              type: array
    locations:
      properties:
        client_default:
          $ref: '#/components/schemas/client-default'
        created_at:
          $ref: '#/components/schemas/timestamp'
        doh_subdomain:
          $ref: '#/components/schemas/subdomain'
        ecs_support:
          $ref: '#/components/schemas/ecs-support'
        id:
          $ref: '#/components/schemas/locations_components-schemas-uuid'
        ip:
          $ref: '#/components/schemas/locations_components-schemas-ip'
        name:
          $ref: '#/components/schemas/locations_components-schemas-name'
        networks:
          $ref: '#/components/schemas/network'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    client-default:
      description: Set if the location is the default one.
      example: false
      type: boolean
    subdomain:
      description: The DNS Over HTTPS domain to send DNS requests to. (auto-generated).
      example: oli3n9zkz5
      type: string
    ecs-support:
      description: Set if the location needs to resolve EDNS queries.
      example: false
      type: boolean
    locations_components-schemas-uuid:
      example: ed35569b41ce4d1facfe683550f54086
    locations_components-schemas-ip:
      description: IPV6 destination ip assigned to this location. DNS requests sent to this IP will counted as the request under this location. (auto-generated).
      example: '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
      type: string
    locations_components-schemas-name:
      description: The name of the Location.
      example: Austin Office Location
      type: string
    network:
      description: A list of network ranges that requests from this location would originate from.
      items:
        description: The IPv4 address or IPv4 CIDR. IPv4 CIDRs are limited to a maximum of /24.
        example: 192.0.2.1/32
        type: string
      type: array
    locations_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/locations'
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    locations_components-schemas-empty_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    proxy-endpoints_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    proxy-endpoints_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/proxy-endpoints'
              type: array
    proxy-endpoints:
      properties:
        created_at:
          $ref: '#/components/schemas/timestamp'
        id:
          $ref: '#/components/schemas/proxy-endpoints_components-schemas-uuid'
        ips:
          $ref: '#/components/schemas/components-schemas-ips'
        name:
          $ref: '#/components/schemas/proxy-endpoints_components-schemas-name'
        subdomain:
          $ref: '#/components/schemas/schemas-subdomain'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    proxy-endpoints_components-schemas-uuid:
      example: ed35569b41ce4d1facfe683550f54086
    components-schemas-ips:
      description: A list of CIDRs to restrict ingress connections.
      items:
        description: The IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /109. IPv4 CIDRs are limited to a maximum of /25.
        example: 192.0.2.1/32
        type: string
      type: array
    proxy-endpoints_components-schemas-name:
      description: The name of the Proxy Endpoint.
      example: Devops team
      type: string
    schemas-subdomain:
      description: The subdomain to be used as the destination in the proxy client.
      example: oli3n9zkz5.proxy.cloudflare-gateway.com
      type: string
    proxy-endpoints_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/proxy-endpoints'
    proxy-endpoints_components-schemas-empty_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    rules_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    rules_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/rules_components-schemas-rules'
              type: array
    rules_components-schemas-rules:
      properties:
        action:
          $ref: '#/components/schemas/rules_components-schemas-action-2'
        created_at:
          $ref: '#/components/schemas/timestamp'
        deleted_at:
          $ref: '#/components/schemas/deleted_at'
        description:
          $ref: '#/components/schemas/rules_components-schemas-description-2'
        device_posture:
          $ref: '#/components/schemas/device_posture'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled-3'
        filters:
          $ref: '#/components/schemas/schemas-filters'
        id:
          $ref: '#/components/schemas/rules_components-schemas-uuid'
        identity:
          $ref: '#/components/schemas/identity'
        name:
          $ref: '#/components/schemas/rules_components-schemas-name-2'
        precedence:
          $ref: '#/components/schemas/schemas-precedence'
        rule_settings:
          $ref: '#/components/schemas/rule-settings'
        traffic:
          $ref: '#/components/schemas/traffic'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    rules_components-schemas-action-2:
      description: 'The action to preform when the associated traffic, identity, and device posture expressions are either absent or evaluate to ''true''.'
      enum:
        - 'on'
        - 'off'
        - allow
        - block
        - scan
        - noscan
        - safesearch
        - ytrestricted
        - isolate
        - noisolate
        - override
        - l4_override
      example: allow
      type: string
    deleted_at:
      description: 'Date of deletion, if any.'
      format: date-time
      nullable: true
      readOnly: true
      type: string
    rules_components-schemas-description-2:
      description: The description of the Rule.
      example: Block the bad websites based on host name
      type: string
    device_posture:
      description: The wirefilter expression to be used for device posture check matching.
      example: 'any(device_posture.checks.passed[*] in {"1308749e-fcfb-4ebc-b051-fe022b632644"})'
      type: string
    rules_components-schemas-enabled-3:
      description: Set if the rule is enabled.
      example: true
      type: boolean
    schemas-filters:
      description: 'The protocol or layer to evaluate the traffic, identity, and device posture expressions.'
      example:
        - http
      items:
        description: The protocol or layer to use.
        enum:
          - http
          - dns
          - l4
        example: http
        type: string
      type: array
    rules_components-schemas-uuid:
      description: API Resource UUID tag.
      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      type: string
    identity:
      description: The wirefilter expression to be used for identity matching.
      example: 'any(identity.groups.name[*] in {"finance"})'
      type: string
    rules_components-schemas-name-2:
      description: The name of the Rule.
      example: block bad websites
      type: string
    schemas-precedence:
      description: 'Precedence sets the ordering of the rules. Lower values indicate higher precedence. At each processing phase, applicable rules are evaluated in ascending order of this value.'
      type: integer
    rule-settings:
      description: Additional settings that modify the rule's action.
      properties:
        add_headers:
          description: 'Add custom headers to allowed requests, in the form of key-value pairs. Keys are header names, pointing to an array with its header value(s).'
          example:
            My-Next-Header:
              - foo
              - bar
            X-Custom-Header-Name:
              - somecustomvalue
          type: object
        biso_admin_controls:
          description: Configure how browser isolation behaves.
          properties:
            dcp:
              description: Disable copy-paste.
              example: false
              type: boolean
            dd:
              description: Disable download.
              example: false
              type: boolean
            dk:
              description: Disable keyboard usage.
              example: false
              type: boolean
            dp:
              description: Disable printing.
              example: false
              type: boolean
            du:
              description: Disable upload.
              example: false
              type: boolean
          type: object
        block_page_enabled:
          description: Enable the custom block page.
          example: true
          type: boolean
        block_reason:
          description: The text describing why this block occurred that will be displayed on the custom block page (if enabled).
          example: This website is a security risk
          type: string
        check_session:
          description: Configure how session check behaves.
          properties:
            duration:
              description: Configure how fresh the session needs to be to be considered valid.
              example: 300s
              type: string
            enforce:
              description: Enable session enforcement for this fule.
              example: true
              type: boolean
          type: object
        insecure_disable_dnssec_validation:
          description: INSECURE - disable DNSSEC validation (for allow actions).
          example: false
          type: boolean
        ip_categories:
          description: Include IPs in DNS resolver category blocks. By default categories only block on domain names.
          example: true
          type: boolean
        l4override:
          description: Send matching traffic to the supplied destination IP address and port.
          properties:
            ip:
              description: IPv4 or IPv6 address.
              example: 1.1.1.1
              type: string
            port:
              description: A port number to use for TCP/UDP overrides.
              type: integer
          type: object
        override_host:
          description: Override matching DNS queries with this.
          example: example.com
          type: string
        override_ips:
          description: Override matching DNS queries with this.
          example:
            - 1.1.1.1
            - 2.2.2.2
          items:
            description: IPv4 or IPv6 address.
            example: 1.1.1.1
            type: string
          type: array
      type: object
    traffic:
      description: The wirefilter expression to be used for traffic matching.
      example: http.request.uri matches ".*a/partial/uri.*" and http.request.host in $01302951-49f9-47c9-a400-0297e60b6a10
      type: string
    rules_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/rules_components-schemas-rules'
    rules_components-schemas-empty_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    lists_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    lists_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/lists'
              type: array
    lists:
      properties:
        count:
          $ref: '#/components/schemas/count'
        created_at:
          $ref: '#/components/schemas/timestamp'
        description:
          $ref: '#/components/schemas/lists_components-schemas-description-2'
        id:
          $ref: '#/components/schemas/lists_components-schemas-uuid'
        name:
          $ref: '#/components/schemas/lists_components-schemas-name-2'
        type:
          $ref: '#/components/schemas/lists_components-schemas-type'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    count:
      description: The number of items in the List.
      example: 20
      readOnly: true
      type: number
    lists_components-schemas-description-2:
      description: The description of the List.
      example: The serial numbers for administrators
      type: string
    lists_components-schemas-uuid:
      description: API Resource UUID tag.
      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      type: string
    lists_components-schemas-name-2:
      description: The name of the List.
      example: Admin Serial Numbers
      type: string
    lists_components-schemas-type:
      description: The type of List.
      enum:
        - SERIAL
        - URL
        - DOMAIN
        - EMAIL
        - IP
      example: SERIAL
      type: string
    schemas-items:
      description: The items in the List.
      items:
        properties:
          created_at:
            $ref: '#/components/schemas/timestamp'
          value:
            $ref: '#/components/schemas/lists_components-schemas-value'
        type: object
      type: array
    single_response_with_list_items:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                created_at:
                  $ref: '#/components/schemas/timestamp'
                description:
                  $ref: '#/components/schemas/lists_components-schemas-description-2'
                id:
                  $ref: '#/components/schemas/lists_components-schemas-uuid'
                items:
                  $ref: '#/components/schemas/schemas-items'
                name:
                  $ref: '#/components/schemas/lists_components-schemas-name-2'
                type:
                  $ref: '#/components/schemas/lists_components-schemas-type'
                updated_at:
                  $ref: '#/components/schemas/timestamp'
    lists_components-schemas-value:
      description: The value of the item in a List.
      example: 8GE8721REF
      type: string
    lists_components-schemas-empty_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    lists_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/lists'
    list_item_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-items'
              type: array
        - properties:
            result_info:
              properties:
                count:
                  description: Total results returned based on your search parameters.
                  example: 1
                  type: number
                page:
                  description: Current page within paginated list of results.
                  example: 1
                  type: number
                per_page:
                  description: Number of results per page of results.
                  example: 20
                  type: number
                total_count:
                  description: Total results available without any search parameters.
                  example: 2000
                  type: number
              type: object
    accounts_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    gateway-account-device-settings-response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/gateway-account-device-settings'
    gateway-account-device-settings:
      properties:
        gateway_proxy_enabled:
          description: Enable gateway proxy filtering on TCP.
          example: true
          type: boolean
        gateway_udp_proxy_enabled:
          description: Enable gateway proxy filtering on UDP.
          example: true
          type: boolean
      type: object
    gateway_account:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                gateway_tag:
                  $ref: '#/components/schemas/gateway_tag'
                id:
                  $ref: '#/components/schemas/cf_account_id'
                provider_name:
                  $ref: '#/components/schemas/provider_name'
              type: object
    gateway_tag:
      description: Gateway internal id.
      example: f174e90afafe4643bbbc4a0ed4fc8415
      maxLength: 32
      type: string
    cf_account_id:
      description: Cloudflare account tag.
      example: 699d98642c564d2e855e9661899b7252
      maxLength: 32
      type: string
    provider_name:
      description: The name of provider. Usually cloudflare.
      example: Cloudflare
      type: string
    gateway_account_config:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/gateway-account-settings'
                - properties:
                    created_at:
                      $ref: '#/components/schemas/timestamp'
                    updated_at:
                      $ref: '#/components/schemas/timestamp'
              type: object
    gateway-account-settings:
      description: account settings.
      properties:
        settings:
          description: account settings.
          properties:
            activity_log:
              $ref: '#/components/schemas/activity-log-settings'
            antivirus:
              $ref: '#/components/schemas/anti-virus-settings'
            block_page:
              $ref: '#/components/schemas/block-page-settings'
            browser_isolation:
              $ref: '#/components/schemas/browser-isolation-settings'
            fips:
              $ref: '#/components/schemas/fips-settings'
            tls_decrypt:
              $ref: '#/components/schemas/tls-settings'
          type: object
      type: object
    activity-log-settings:
      description: Activity log settings.
      properties:
        enabled:
          description: Enable activity logging.
          example: true
          type: boolean
      type: object
    anti-virus-settings:
      description: Anti virus settings.
      properties:
        enabled_download_phase:
          $ref: '#/components/schemas/enabled_download_phase'
        enabled_upload_phase:
          $ref: '#/components/schemas/enabled_upload_phase'
        fail_closed:
          $ref: '#/components/schemas/fail_closed'
      type: object
    block-page-settings:
      description: Block page layout settings.
      properties:
        background_color:
          description: 'Block page background color in #rrggbb format.'
          type: string
        enabled:
          description: Enable only cipher suites and TLS versions compliant with FIPS 140-2.
          example: true
          type: boolean
        footer_text:
          description: Block page footer text.
          example: '--footer--'
          type: string
        header_text:
          description: Block page header text.
          example: '--header--'
          type: string
        logo_path:
          description: Full URL to the logo file.
          example: 'https://logos.com/a.png'
          type: string
        mailto_address:
          description: Admin email for users to contact.
          example: admin@example.com
          type: string
        mailto_subject:
          description: Subject line for emails created from block page.
          example: Blocked User Inquiry
          type: string
        name:
          description: Block page title.
          example: Cloudflare
          type: string
        suppress_footer:
          description: Suppress detailed info at the bottom of the block page.
          example: false
          type: boolean
      type: object
    browser-isolation-settings:
      description: Browser isolation settings.
      properties:
        url_browser_isolation_enabled:
          description: Enable Browser Isolation.
          example: true
          type: boolean
      type: object
    fips-settings:
      description: FIPS settings.
      properties:
        tls:
          description: Enable only cipher suites and TLS versions compliant with FIPS 140-2.
          example: true
          type: boolean
      type: object
    tls-settings:
      description: TLS interception settings.
      properties:
        enabled:
          description: Enable inspecting encrypted HTTP traffic.
          example: true
          type: boolean
      type: object
    enabled_download_phase:
      description: Set to enable antivirus scan on downloads.
      example: false
      type: boolean
    enabled_upload_phase:
      description: Set to enable antivirus scan on uploads.
      example: false
      type: boolean
    fail_closed:
      description: Block requests for files that cannot be scanned.
      example: false
      type: boolean
    gateway-account-logging-settings-response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/gateway-account-logging-settings'
    gateway-account-logging-settings:
      properties:
        redact_pii:
          description: 'Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).'
          example: true
          type: boolean
        settings_by_rule_type:
          description: Logging settings by rule type.
          properties:
            dns:
              description: Logging settings for DNS firewall.
              type: object
            http:
              description: Logging settings for HTTP/HTTPS firewall.
              type: object
            l4:
              description: Logging settings for Network firewall.
              type: object
          type: object
      type: object
    organizations_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    organizations_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/organizations'
    organizations:
      properties:
        auth_domain:
          $ref: '#/components/schemas/auth_domain'
        created_at:
          $ref: '#/components/schemas/timestamp'
        is_ui_read_only:
          $ref: '#/components/schemas/is_ui_read_only'
        login_design:
          $ref: '#/components/schemas/login_design'
        name:
          $ref: '#/components/schemas/organizations_components-schemas-name'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    auth_domain:
      description: The unique subdomain assigned to your Zero Trust organization.
      example: test.cloudflareaccess.com
      type: string
    is_ui_read_only:
      description: 'Lock all settings as Read-Only in the Dashboard, regardless of user permission. Updates may only be made via the API or Terraform for this account when enabled.'
      example: 'false'
      type: boolean
    login_design:
      properties:
        background_color:
          description: The background color on your login page.
          example: '#c5ed1b'
          type: string
        footer_text:
          description: The text at the bottom of your login page.
          example: This is an example description.
          type: string
        header_text:
          description: The text at the top of your login page.
          example: This is an example description.
          type: string
        logo_path:
          description: The URL of the logo on your login page.
          example: 'https://example.com/logo.png'
          type: string
        text_color:
          description: The text color on your login page.
          example: '#c5ed1b'
          type: string
    organizations_components-schemas-name:
      description: The name of your Zero Trust organization.
      example: Widget Corps Internal Applications
      type: string
    schemas-empty_response:
      allOf:
        - properties:
            result:
              enum:
                - true
                - false
              example: true
              type: boolean
            success:
              enum:
                - true
                - false
              example: true
              type: boolean
    seats_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    seats_definition:
      items:
        $ref: '#/components/schemas/seat'
      required:
        - seat_uid
        - gateway_seat
        - access_seat
      type: array
    seats_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/seats'
              type: array
    seat:
      properties:
        access_seat:
          $ref: '#/components/schemas/access_seat'
        gateway_seat:
          $ref: '#/components/schemas/gateway_seat'
        seat_uid:
          $ref: '#/components/schemas/seat_uid'
      required:
        - seat_uid
        - gateway_seat
        - access_seat
      type: object
    seats:
      properties:
        access_seat:
          $ref: '#/components/schemas/access_seat'
        created_at:
          $ref: '#/components/schemas/timestamp'
        gateway_seat:
          $ref: '#/components/schemas/gateway_seat'
        seat_uid:
          $ref: '#/components/schemas/seat_uid'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    access_seat:
      description: True if the seat is part of Access.
      example: false
      type: boolean
    gateway_seat:
      description: True if the seat is part of Gateway.
      example: false
      type: boolean
    seat_uid:
      description: The unique API identifier for the Zero Trust seat.
    users_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    users_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result_info:
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 100
                total_count:
                  example: 1
              type: object
        - properties:
            result:
              items:
                $ref: '#/components/schemas/users'
              type: array
    users:
      properties:
        access_seat:
          $ref: '#/components/schemas/schemas-access_seat'
        active_device_count:
          $ref: '#/components/schemas/active_device_count'
        created_at:
          $ref: '#/components/schemas/timestamp'
        email:
          $ref: '#/components/schemas/components-schemas-email'
        gateway_seat:
          $ref: '#/components/schemas/schemas-gateway_seat'
        id:
          $ref: '#/components/schemas/users_components-schemas-id'
        last_successful_login:
          $ref: '#/components/schemas/last_successful_login'
        name:
          $ref: '#/components/schemas/users_components-schemas-name'
        seat_uid:
          $ref: '#/components/schemas/seat_uid'
        uid:
          $ref: '#/components/schemas/uid'
        updated_at:
          $ref: '#/components/schemas/timestamp'
      type: object
    schemas-access_seat:
      description: True if the user has authenticated with Cloudflare Access.
      example: false
      type: boolean
    active_device_count:
      description: The number of active devices registered to the user.
      example: 2
      type: number
    components-schemas-email:
      description: The email of the user.
      example: jdoe@example.com
      format: email
      type: string
    schemas-gateway_seat:
      description: True if the user has logged into the WARP client.
      example: false
      type: boolean
    users_components-schemas-id:
      description: The ID of the user.
      example: f3b12456-80dd-4e89-9f5f-ba3dfff12365
    last_successful_login:
      description: The time at which the user last successfully logged in.
      example: '2020-07-01T05:20:00Z'
      format: date-time
      type: string
    users_components-schemas-name:
      description: The name of the user.
      example: Jane Doe
      type: string
    uid:
      description: The unique API identifier for the user.
    failed_login_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                properties:
                  expiration:
                    type: integer
                  metadata:
                    example:
                      app_name: Test App
                      aud: 39691c1480a2352a18ece567debc2b32552686cbd38eec0887aa18d5d3f00c04
                      datetime: '2022-02-02T21:54:34.914Z'
                      ray_id: 6d76a8a42ead4133
                      user_email: test@cloudflare.com
                      user_uuid: 57171132-e453-4ee8-b2a5-8cbaad333207
                    type: object
                type: object
              type: array
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_gateway_app_types:
      id: cloudflare.zero_trust.accounts_gateway_app_types
      name: accounts_gateway_app_types
      title: Accounts Gateway App Types
      methods:
        gateway_application_and_application_type_mappings_list_application_and_application_type_mappings:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1app_types/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _gateway_application_and_application_type_mappings_list_application_and_application_type_mappings:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1app_types/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_app_types/methods/gateway_application_and_application_type_mappings_list_application_and_application_type_mappings'
        insert: []
        update: []
        delete: []
    accounts_gateway_categories:
      id: cloudflare.zero_trust.accounts_gateway_categories
      name: accounts_gateway_categories
      title: Accounts Gateway Categories
      methods:
        gateway_categories_list_categories:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1gateway~1categories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _gateway_categories_list_categories:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1gateway~1categories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_categories/methods/gateway_categories_list_categories'
        insert: []
        update: []
        delete: []
    accounts_gateway_locations:
      id: cloudflare.zero_trust.accounts_gateway_locations
      name: accounts_gateway_locations
      title: Accounts Gateway Locations
      methods:
        gateway_locations_list_zero_trust_gateway_locations:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _gateway_locations_list_zero_trust_gateway_locations:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_locations_create_zero_trust_gateway_location:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1locations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_locations_delete_zero_trust_gateway_location:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1locations~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_locations_zero_trust_gateway_location_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1locations~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _gateway_locations_zero_trust_gateway_location_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1locations~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_locations_update_zero_trust_gateway_location:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1locations~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_locations/methods/gateway_locations_list_zero_trust_gateway_locations'
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_locations/methods/gateway_locations_zero_trust_gateway_location_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_locations/methods/gateway_locations_create_zero_trust_gateway_location'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_locations/methods/gateway_locations_delete_zero_trust_gateway_location'
    accounts_gateway_proxy_endpoints:
      id: cloudflare.zero_trust.accounts_gateway_proxy_endpoints
      name: accounts_gateway_proxy_endpoints
      title: Accounts Gateway Proxy Endpoints
      methods:
        gateway_proxy_endpoints_list_proxy_endpoints:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1proxy_endpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _gateway_proxy_endpoints_list_proxy_endpoints:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1proxy_endpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_proxy_endpoints_create_proxy_endpoint:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1proxy_endpoints/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_proxy_endpoints_delete_proxy_endpoint:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1proxy_endpoints~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_proxy_endpoints_proxy_endpoint_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1proxy_endpoints~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _gateway_proxy_endpoints_proxy_endpoint_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1proxy_endpoints~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_proxy_endpoints_update_proxy_endpoint:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1proxy_endpoints~1{uuid}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_proxy_endpoints/methods/gateway_proxy_endpoints_list_proxy_endpoints'
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_proxy_endpoints/methods/gateway_proxy_endpoints_proxy_endpoint_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_proxy_endpoints/methods/gateway_proxy_endpoints_create_proxy_endpoint'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_proxy_endpoints/methods/gateway_proxy_endpoints_delete_proxy_endpoint'
    accounts_gateway_rules:
      id: cloudflare.zero_trust.accounts_gateway_rules
      name: accounts_gateway_rules
      title: Accounts Gateway Rules
      methods:
        gateway_rules_list_zero_trust_gateway_rules:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _gateway_rules_list_zero_trust_gateway_rules:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_rules_create_zero_trust_gateway_rule:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_rules_delete_zero_trust_gateway_rule:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1rules~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_rules_zero_trust_gateway_rule_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1rules~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _gateway_rules_zero_trust_gateway_rule_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1rules~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gateway_rules_update_zero_trust_gateway_rule:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1rules~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_rules/methods/gateway_rules_list_zero_trust_gateway_rules'
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_rules/methods/gateway_rules_zero_trust_gateway_rule_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_rules/methods/gateway_rules_create_zero_trust_gateway_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_rules/methods/gateway_rules_delete_zero_trust_gateway_rule'
    accounts_gateway_lists:
      id: cloudflare.zero_trust.accounts_gateway_lists
      name: accounts_gateway_lists
      title: Accounts Gateway Lists
      methods:
        lists_list_zero_trust_lists:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _lists_list_zero_trust_lists:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lists_create_zero_trust_list:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lists_delete_zero_trust_list:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lists_zero_trust_list_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _lists_zero_trust_list_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lists_patch_zero_trust_list:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists~1{uuid}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lists_update_zero_trust_list:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_lists/methods/lists_list_zero_trust_lists'
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_lists/methods/lists_zero_trust_list_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_lists/methods/lists_create_zero_trust_list'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_lists/methods/lists_delete_zero_trust_list'
    accounts_gateway_lists_items:
      id: cloudflare.zero_trust.accounts_gateway_lists_items
      name: accounts_gateway_lists_items
      title: Accounts Gateway Lists Items
      methods:
        lists_zero_trust_list_items:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists~1{uuid}~1items/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _lists_zero_trust_list_items:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1lists~1{uuid}~1items/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_lists_items/methods/lists_zero_trust_list_items'
        insert: []
        update: []
        delete: []
    accounts_devices_settings:
      id: cloudflare.zero_trust.accounts_devices_settings
      name: accounts_devices_settings
      title: Accounts Devices Settings
      methods:
        accounts_get_device_settings_for_zero_trust_account:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1devices~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _accounts_get_device_settings_for_zero_trust_account:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1devices~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_update_device_settings_for_the_zero_trust_account:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1devices~1settings/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_devices_settings/methods/accounts_get_device_settings_for_zero_trust_account'
        insert: []
        update: []
        delete: []
    accounts_gateway:
      id: cloudflare.zero_trust.accounts_gateway
      name: accounts_gateway
      title: Accounts Gateway
      methods:
        accounts_get_zero_trust_account_information:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _accounts_get_zero_trust_account_information:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_create_zero_trust_account:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway/methods/accounts_get_zero_trust_account_information'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway/methods/accounts_create_zero_trust_account'
        update: []
        delete: []
    accounts_gateway_configuration:
      id: cloudflare.zero_trust.accounts_gateway_configuration
      name: accounts_gateway_configuration
      title: Accounts Gateway Configuration
      methods:
        accounts_get_zero_trust_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1configuration/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _accounts_get_zero_trust_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1configuration/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_update_zero_trust_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1configuration/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_configuration/methods/accounts_get_zero_trust_account_configuration'
        insert: []
        update: []
        delete: []
    accounts_gateway_logging:
      id: cloudflare.zero_trust.accounts_gateway_logging
      name: accounts_gateway_logging
      title: Accounts Gateway Logging
      methods:
        accounts_get_logging_settings_for_the_zero_trust_account:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1logging/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _accounts_get_logging_settings_for_the_zero_trust_account:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1logging/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_update_logging_settings_for_the_zero_trust_account:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1gateway~1logging/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gateway_logging/methods/accounts_get_logging_settings_for_the_zero_trust_account'
        insert: []
        update: []
        delete: []
    accounts_access_organizations:
      id: cloudflare.zero_trust.accounts_access_organizations
      name: accounts_access_organizations
      title: Accounts Access Organizations
      methods:
        organization_get_your_zero_trust_organization:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1organizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _organization_get_your_zero_trust_organization:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1organizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organization_create_your_zero_trust_organization:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1organizations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organization_update_your_zero_trust_organization:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1organizations/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organization_revoke_all_access_tokens_for_a_user:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1organizations~1revoke_user/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_access_organizations/methods/organization_get_your_zero_trust_organization'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_access_organizations/methods/organization_create_your_zero_trust_organization'
        update: []
        delete: []
    accounts_access_seats:
      id: cloudflare.zero_trust.accounts_access_seats
      name: accounts_access_seats
      title: Accounts Access Seats
      methods:
        seats_update_a_user_seat:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1seats/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    accounts_access_users:
      id: cloudflare.zero_trust.accounts_access_users
      name: accounts_access_users
      title: Accounts Access Users
      methods:
        users_get_users:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _users_get_users:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_access_users/methods/users_get_users'
        insert: []
        update: []
        delete: []
    accounts_access_users_failed_logins:
      id: cloudflare.zero_trust.accounts_access_users_failed_logins
      name: accounts_access_users_failed_logins
      title: Accounts Access Users Failed Logins
      methods:
        users_get_failed_logins:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1users~1{id}~1failed_logins/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _users_get_failed_logins:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1access~1users~1{id}~1failed_logins/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_access_users_failed_logins/methods/users_get_failed_logins'
        insert: []
        update: []
        delete: []
    zones_access_organizations:
      id: cloudflare.zero_trust.zones_access_organizations
      name: zones_access_organizations
      title: Zones Access Organizations
      methods:
        zone_level_zero_trust_organization_get_your_zero_trust_organization:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1organizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_level_zero_trust_organization_get_your_zero_trust_organization:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1organizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_zero_trust_organization_create_your_zero_trust_organization:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1organizations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_zero_trust_organization_update_your_zero_trust_organization:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1organizations/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_level_zero_trust_organization_revoke_all_access_tokens_for_a_user:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1access~1organizations~1revoke_user/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_access_organizations/methods/zone_level_zero_trust_organization_get_your_zero_trust_organization'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_access_organizations/methods/zone_level_zero_trust_organization_create_your_zero_trust_organization'
        update: []
        delete: []
paths:
  '/accounts/{identifier}/gateway/app_types':
    get:
      description: List all Application and Application Type mappings.
      operationId: zero-trust-gateway-application-and-application-type-mappings-list-application-and-application-type-mappings
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app-types_components-schemas-response_collection'
          description: List Application and Application Type mappings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/app-types_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Application and Application Type mappings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Application and Application Type mappings
      tags:
        - Zero Trust Gateway Application and Application Type mappings
  '/accounts/{account_id}/gateway/categories':
    get:
      description: List all Categories.
      operationId: zero-trust-gateway-categories-list-categories
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categories_components-schemas-response_collection'
          description: List Categories response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/categories_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Categories response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Categories
      tags:
        - Zero Trust Gateway Categories
  '/accounts/{identifier}/gateway/locations':
    get:
      description: List Zero Trust Gateway Locations for an account.
      operationId: zero-trust-gateway-locations-list-zero-trust-gateway-locations
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/locations_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locations_components-schemas-response_collection'
          description: List Zero Trust Gateway Locations response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/locations_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Zero Trust Gateway Locations response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Zero Trust Gateway Locations
      tags:
        - Zero Trust Gateway Locations
    post:
      description: Create a new Zero Trust Gateway Location.
      operationId: zero-trust-gateway-locations-create-zero-trust-gateway-location
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/locations_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_default:
                  $ref: '#/components/schemas/client-default'
                ecs_support:
                  $ref: '#/components/schemas/ecs-support'
                name:
                  $ref: '#/components/schemas/locations_components-schemas-name'
                networks:
                  $ref: '#/components/schemas/network'
              required:
                - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locations_components-schemas-single_response'
          description: Create Zero Trust Gateway Location response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/locations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Zero Trust Gateway Location response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Zero Trust Gateway Location
      tags:
        - Zero Trust Gateway Locations
  '/accounts/{identifier}/gateway/locations/{uuid}':
    delete:
      description: Delete a Zero Trust Gateway Location.
      operationId: zero-trust-gateway-locations-delete-zero-trust-gateway-location
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/locations_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/locations_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locations_components-schemas-empty_response'
          description: Delete Zero Trust Gateway Location response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/locations_components-schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Zero Trust Gateway Location response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Zero Trust Gateway Location
      tags:
        - Zero Trust Gateway Locations
    get:
      description: Fetch a single Zero Trust Gateway Location.
      operationId: zero-trust-gateway-locations-zero-trust-gateway-location-details
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/locations_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/locations_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locations_components-schemas-single_response'
          description: Zero Trust Gateway Location Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/locations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Zero Trust Gateway Location Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Zero Trust Gateway Location Details
      tags:
        - Zero Trust Gateway Locations
    put:
      description: Update a configured Zero Trust Gateway Location.
      operationId: zero-trust-gateway-locations-update-zero-trust-gateway-location
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/locations_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/locations_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_default:
                  $ref: '#/components/schemas/client-default'
                ecs_support:
                  $ref: '#/components/schemas/ecs-support'
                name:
                  $ref: '#/components/schemas/locations_components-schemas-name'
                networks:
                  $ref: '#/components/schemas/network'
              required:
                - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locations_components-schemas-single_response'
          description: Update Zero Trust Gateway Location response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/locations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Zero Trust Gateway Location response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Zero Trust Gateway Location
      tags:
        - Zero Trust Gateway Locations
  '/accounts/{identifier}/gateway/proxy_endpoints':
    get:
      description: Fetch a single Zero Trust Gateway Proxy Endpoint.
      operationId: zero-trust-gateway-proxy-endpoints-list-proxy-endpoints
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/proxy-endpoints_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proxy-endpoints_components-schemas-response_collection'
          description: List Proxy Endpoints response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/proxy-endpoints_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Proxy Endpoints response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Proxy Endpoints
      tags:
        - Zero Trust Gateway Proxy Endpoints
    post:
      description: Create a new Zero Trust Gateway Proxy Endpoint.
      operationId: zero-trust-gateway-proxy-endpoints-create-proxy-endpoint
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/proxy-endpoints_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ips:
                  $ref: '#/components/schemas/components-schemas-ips'
                name:
                  $ref: '#/components/schemas/proxy-endpoints_components-schemas-name'
                subdomain:
                  $ref: '#/components/schemas/schemas-subdomain'
              required:
                - name
                - ips
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proxy-endpoints_components-schemas-single_response'
          description: Create Proxy Endpoint response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/proxy-endpoints_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Proxy Endpoint response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Proxy Endpoint
      tags:
        - Zero Trust Gateway Proxy Endpoints
  '/accounts/{identifier}/gateway/proxy_endpoints/{uuid}':
    delete:
      description: Delete a Zero Trust Gateway Proxy Endpoint.
      operationId: zero-trust-gateway-proxy-endpoints-delete-proxy-endpoint
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/proxy-endpoints_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/proxy-endpoints_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proxy-endpoints_components-schemas-empty_response'
          description: Delete Proxy Endpoint response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/proxy-endpoints_components-schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Proxy Endpoint response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Proxy Endpoint
      tags:
        - Zero Trust Gateway Proxy Endpoints
    get:
      description: List Zero Trust Gateway Proxy Endpoints for an account.
      operationId: zero-trust-gateway-proxy-endpoints-proxy-endpoint-details
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/proxy-endpoints_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/proxy-endpoints_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proxy-endpoints_components-schemas-single_response'
          description: Proxy Endpoint Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/proxy-endpoints_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Proxy Endpoint Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Proxy Endpoint Details
      tags:
        - Zero Trust Gateway Proxy Endpoints
    patch:
      description: Update a new Zero Trust Gateway Proxy Endpoint.
      operationId: zero-trust-gateway-proxy-endpoints-update-proxy-endpoint
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/proxy-endpoints_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/proxy-endpoints_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ips:
                  $ref: '#/components/schemas/components-schemas-ips'
                name:
                  $ref: '#/components/schemas/proxy-endpoints_components-schemas-name'
                subdomain:
                  $ref: '#/components/schemas/schemas-subdomain'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proxy-endpoints_components-schemas-single_response'
          description: Update Proxy Endpoint response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/proxy-endpoints_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Proxy Endpoint response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Proxy Endpoint
      tags:
        - Zero Trust Gateway Proxy Endpoints
  '/accounts/{identifier}/gateway/rules':
    get:
      description: List Zero Trust Gateway Rules for an account.
      operationId: zero-trust-gateway-rules-list-zero-trust-gateway-rules
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rules_components-schemas-response_collection'
          description: List Zero Trust Gateway Rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rules_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Zero Trust Gateway Rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Zero Trust Gateway Rules
      tags:
        - Zero Trust Gateway Rules
    post:
      description: Create a new Zero Trust Gateway Rule.
      operationId: zero-trust-gateway-rules-create-zero-trust-gateway-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  $ref: '#/components/schemas/rules_components-schemas-action-2'
                description:
                  $ref: '#/components/schemas/rules_components-schemas-description-2'
                device_posture:
                  $ref: '#/components/schemas/device_posture'
                enabled:
                  $ref: '#/components/schemas/rules_components-schemas-enabled-3'
                filters:
                  $ref: '#/components/schemas/schemas-filters'
                identity:
                  $ref: '#/components/schemas/identity'
                name:
                  $ref: '#/components/schemas/rules_components-schemas-name-2'
                precedence:
                  $ref: '#/components/schemas/schemas-precedence'
                rule_settings:
                  $ref: '#/components/schemas/rule-settings'
                traffic:
                  $ref: '#/components/schemas/traffic'
              required:
                - name
                - action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rules_components-schemas-single_response'
          description: Create Zero Trust Gateway Rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rules_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Zero Trust Gateway Rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Zero Trust Gateway Rule
      tags:
        - Zero Trust Gateway Rules
  '/accounts/{identifier}/gateway/rules/{uuid}':
    delete:
      description: Delete a Zero Trust Gateway Rule.
      operationId: zero-trust-gateway-rules-delete-zero-trust-gateway-rule
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rules_components-schemas-empty_response'
          description: Delete Zero Trust Gateway Rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rules_components-schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Zero Trust Gateway Rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Zero Trust Gateway Rule
      tags:
        - Zero Trust Gateway Rules
    get:
      description: Fetch a single Zero Trust Gateway Rule.
      operationId: zero-trust-gateway-rules-zero-trust-gateway-rule-details
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rules_components-schemas-single_response'
          description: Zero Trust Gateway Rule Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rules_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Zero Trust Gateway Rule Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Zero Trust Gateway Rule Details
      tags:
        - Zero Trust Gateway Rules
    put:
      description: Update a configured Zero Trust Gateway Rule.
      operationId: zero-trust-gateway-rules-update-zero-trust-gateway-rule
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  $ref: '#/components/schemas/rules_components-schemas-action-2'
                description:
                  $ref: '#/components/schemas/rules_components-schemas-description-2'
                device_posture:
                  $ref: '#/components/schemas/device_posture'
                enabled:
                  $ref: '#/components/schemas/rules_components-schemas-enabled-3'
                filters:
                  $ref: '#/components/schemas/schemas-filters'
                identity:
                  $ref: '#/components/schemas/identity'
                name:
                  $ref: '#/components/schemas/rules_components-schemas-name-2'
                precedence:
                  $ref: '#/components/schemas/schemas-precedence'
                rule_settings:
                  $ref: '#/components/schemas/rule-settings'
                traffic:
                  $ref: '#/components/schemas/traffic'
              required:
                - name
                - action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rules_components-schemas-single_response'
          description: Update Zero Trust Gateway Rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rules_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Zero Trust Gateway Rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Zero Trust Gateway Rule
      tags:
        - Zero Trust Gateway Rules
  '/accounts/{identifier}/gateway/lists':
    get:
      description: List Zero Trust Lists for an account.
      operationId: zero-trust-lists-list-zero-trust-lists
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_components-schemas-response_collection'
          description: List Zero Trust Lists response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Zero Trust Lists response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Zero Trust Lists
      tags:
        - Zero Trust Lists
    post:
      description: Create a new Zero Trust List.
      operationId: zero-trust-lists-create-zero-trust-list
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  $ref: '#/components/schemas/lists_components-schemas-description-2'
                items:
                  $ref: '#/components/schemas/schemas-items'
                name:
                  $ref: '#/components/schemas/lists_components-schemas-name-2'
                type:
                  $ref: '#/components/schemas/lists_components-schemas-type'
              required:
                - name
                - type
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response_with_list_items'
          description: Create Zero Trust List response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_response_with_list_items'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Zero Trust List response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Zero Trust List
      tags:
        - Zero Trust Lists
  '/accounts/{identifier}/gateway/lists/{uuid}':
    delete:
      description: Delete a Zero Trust List.
      operationId: zero-trust-lists-delete-zero-trust-list
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_components-schemas-empty_response'
          description: Delete Zero Trust List response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_components-schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Zero Trust List response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Zero Trust List
      tags:
        - Zero Trust Lists
    get:
      description: Fetch a single Zero Trust List.
      operationId: zero-trust-lists-zero-trust-list-details
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_components-schemas-single_response'
          description: Zero Trust List Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Zero Trust List Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Zero Trust List Details
      tags:
        - Zero Trust Lists
    patch:
      description: Append or remove an item from a configured Zero Trust List.
      operationId: zero-trust-lists-patch-zero-trust-list
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                append:
                  $ref: '#/components/schemas/schemas-items'
                remove:
                  description: A list of the item values you want to remove.
                  items:
                    $ref: '#/components/schemas/lists_components-schemas-value'
                  type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_components-schemas-single_response'
          description: Patch Zero Trust List response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Patch Zero Trust List response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Patch Zero Trust List
      tags:
        - Zero Trust Lists
    put:
      description: Update a configured Zero Trust List.
      operationId: zero-trust-lists-update-zero-trust-list
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  $ref: '#/components/schemas/lists_components-schemas-description-2'
                name:
                  $ref: '#/components/schemas/lists_components-schemas-name-2'
              required:
                - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_components-schemas-single_response'
          description: Update Zero Trust List response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Zero Trust List response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Zero Trust List
      tags:
        - Zero Trust Lists
  '/accounts/{identifier}/gateway/lists/{uuid}/items':
    get:
      description: Fetch all items of a single Zero Trust List.
      operationId: zero-trust-lists-zero-trust-list-items
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/lists_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_item_response_collection'
          description: Zero Trust List Items response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/list_item_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Zero Trust List Items response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Zero Trust List Items
      tags:
        - Zero Trust Lists
  '/accounts/{identifier}/devices/settings':
    get:
      description: Describes the current device settings Zero Trust account.
      operationId: zero-trust-accounts-get-device-settings-for-zero-trust-account
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/accounts_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway-account-device-settings-response'
          description: Get device settings for Zero Trust account response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/gateway-account-device-settings-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get device settings for Zero Trust account response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get device settings for Zero Trust account
      tags:
        - Zero Trust accounts
    put:
      description: Updates the current device settings for Zero Trust account.
      operationId: zero-trust-accounts-update-device-settings-for-the-zero-trust-account
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/accounts_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway-account-device-settings'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway-account-device-settings-response'
          description: Update device settings for the Zero Trust account response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/gateway-account-device-settings-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update device settings for the Zero Trust account response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update device settings for the Zero Trust account
      tags:
        - Zero Trust accounts
  '/accounts/{identifier}/gateway':
    get:
      description: Get Zero Trust account information.
      operationId: zero-trust-accounts-get-zero-trust-account-information
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/accounts_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_account'
          description: Get Zero Trust account information response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/gateway_account'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Zero Trust account information response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Zero Trust account information
      tags:
        - Zero Trust accounts
    post:
      description: Create Zero Trust account with existing cloudflare account.
      operationId: zero-trust-accounts-create-zero-trust-account
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/accounts_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account_id:
                  $ref: '#/components/schemas/cf_account_id'
              required:
                - account_id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_account'
          description: Create Zero Trust account response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/gateway_account'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Zero Trust account response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Zero Trust account
      tags:
        - Zero Trust accounts
  '/accounts/{identifier}/gateway/configuration':
    get:
      description: Describes current Zero Trust account configuration.
      operationId: zero-trust-accounts-get-zero-trust-account-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/accounts_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_account_config'
          description: Get Zero Trust account configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/gateway_account_config'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Zero Trust account configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Zero Trust account configuration
      tags:
        - Zero Trust accounts
    put:
      description: Updates the current Zero Trust account configuration.
      operationId: zero-trust-accounts-update-zero-trust-account-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/accounts_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway-account-settings'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_account_config'
          description: Update Zero Trust account configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/gateway_account_config'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Zero Trust account configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Zero Trust account configuration
      tags:
        - Zero Trust accounts
  '/accounts/{identifier}/gateway/logging':
    get:
      description: Describes the current logging settings for Zero Trust account.
      operationId: zero-trust-accounts-get-logging-settings-for-the-zero-trust-account
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/accounts_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway-account-logging-settings-response'
          description: Get logging settings for the Zero Trust account response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/gateway-account-logging-settings-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get logging settings for the Zero Trust account response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get logging settings for the Zero Trust account
      tags:
        - Zero Trust accounts
    put:
      description: Updates the current logging settings for the Zero Trust accounty.
      operationId: zero-trust-accounts-update-logging-settings-for-the-zero-trust-account
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/accounts_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway-account-logging-settings'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway-account-logging-settings-response'
          description: Update logging settings for the Zero Trust account response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/gateway-account-logging-settings-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update logging settings for the Zero Trust account response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update logging settings for the Zero Trust account
      tags:
        - Zero Trust accounts
  '/accounts/{identifier}/access/organizations':
    get:
      description: Returns the configuration for your Zero Trust organization.
      operationId: zero-trust-organization-get-your-zero-trust-organization
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/organizations_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizations_components-schemas-single_response'
          description: Get your Zero Trust organization response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/organizations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get your Zero Trust organization response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get your Zero Trust organization
      tags:
        - Zero Trust organization
    post:
      description: Sets up a Zero Trust organization for your account.
      operationId: zero-trust-organization-create-your-zero-trust-organization
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/organizations_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auth_domain:
                  $ref: '#/components/schemas/auth_domain'
                is_ui_read_only:
                  $ref: '#/components/schemas/is_ui_read_only'
                login_design:
                  $ref: '#/components/schemas/login_design'
                name:
                  $ref: '#/components/schemas/organizations_components-schemas-name'
              required:
                - name
                - auth_domain
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizations_components-schemas-single_response'
          description: Create your Zero Trust organization response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/organizations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create your Zero Trust organization response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create your Zero Trust organization
      tags:
        - Zero Trust organization
    put:
      description: Updates the configuration for your Zero Trust organization.
      operationId: zero-trust-organization-update-your-zero-trust-organization
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/organizations_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auth_domain:
                  $ref: '#/components/schemas/auth_domain'
                is_ui_read_only:
                  $ref: '#/components/schemas/is_ui_read_only'
                login_design:
                  $ref: '#/components/schemas/login_design'
                name:
                  $ref: '#/components/schemas/organizations_components-schemas-name'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizations_components-schemas-single_response'
          description: Update your Zero Trust organization response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/organizations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update your Zero Trust organization response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update your Zero Trust organization
      tags:
        - Zero Trust organization
  '/accounts/{identifier}/access/organizations/revoke_user':
    post:
      description: Revokes a user's access across all applications.
      operationId: zero-trust-organization-revoke-all-access-tokens-for-a-user
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/organizations_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: The email of the user to revoke.
                  example: test@example.com
                  type: string
              required:
                - email
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-empty_response'
          description: Revoke all Access tokens for a user response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Revoke all Access tokens for a user response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Revoke all Access tokens for a user
      tags:
        - Zero Trust organization
  '/accounts/{identifier}/access/seats':
    patch:
      description: Removes a user from a Zero Trust seat when both `access_seat` and `gateway_seat` are set to false.
      operationId: zero-trust-seats-update-a-user-seat
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/seats_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/seats_definition'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/seats_components-schemas-response_collection'
          description: Update a user seat response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/seats_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a user seat response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a user seat
      tags:
        - Zero Trust seats
  '/accounts/{identifier}/access/users':
    get:
      description: Gets a list of users for an account.
      operationId: zero-trust-users-get-users
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/users_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_components-schemas-response_collection'
          description: Get users response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/users_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get users response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get users
      tags:
        - Zero Trust users
  '/accounts/{identifier}/access/users/{id}/failed_logins':
    get:
      description: Get all failed login attempts for a single user.
      operationId: zero-trust-users-get-failed-logins
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/users_components-schemas-id'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/users_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failed_login_response'
          description: Get failed logins response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/failed_login_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get failed logins response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get failed logins
      tags:
        - Zero Trust users
  '/zones/{identifier}/access/organizations':
    get:
      description: Returns the configuration for your Zero Trust organization.
      operationId: zone-level-zero-trust-organization-get-your-zero-trust-organization
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/organizations_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizations_components-schemas-single_response'
          description: Get your Zero Trust organization response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/organizations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get your Zero Trust organization response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get your Zero Trust organization
      tags:
        - Zone-Level Zero Trust organization
    post:
      description: Sets up a Zero Trust organization for your account.
      operationId: zone-level-zero-trust-organization-create-your-zero-trust-organization
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/organizations_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auth_domain:
                  $ref: '#/components/schemas/auth_domain'
                is_ui_read_only:
                  $ref: '#/components/schemas/is_ui_read_only'
                login_design:
                  $ref: '#/components/schemas/login_design'
                name:
                  $ref: '#/components/schemas/organizations_components-schemas-name'
              required:
                - name
                - auth_domain
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizations_components-schemas-single_response'
          description: Create your Zero Trust organization response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/organizations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create your Zero Trust organization response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create your Zero Trust organization
      tags:
        - Zone-Level Zero Trust organization
    put:
      description: Updates the configuration for your Zero Trust organization.
      operationId: zone-level-zero-trust-organization-update-your-zero-trust-organization
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/organizations_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auth_domain:
                  $ref: '#/components/schemas/auth_domain'
                is_ui_read_only:
                  $ref: '#/components/schemas/is_ui_read_only'
                login_design:
                  $ref: '#/components/schemas/login_design'
                name:
                  $ref: '#/components/schemas/organizations_components-schemas-name'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizations_components-schemas-single_response'
          description: Update your Zero Trust organization response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/organizations_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update your Zero Trust organization response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update your Zero Trust organization
      tags:
        - Zone-Level Zero Trust organization
  '/zones/{identifier}/access/organizations/revoke_user':
    post:
      description: Revokes a user's access across all applications.
      operationId: zone-level-zero-trust-organization-revoke-all-access-tokens-for-a-user
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/organizations_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: The email of the user to revoke.
                  example: test@example.com
                  type: string
              required:
                - email
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-empty_response'
          description: Revoke all Access tokens for a user response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Revoke all Access tokens for a user response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Revoke all Access tokens for a user
      tags:
        - Zone-Level Zero Trust organization
