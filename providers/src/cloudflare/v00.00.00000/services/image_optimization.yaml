openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Cloudflare Images
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - image_optimization
  version: 4.0.0
components:
  schemas:
    images_components-schemas-account_identifier:
      description: Account identifier tag.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    image_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/images'
              type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    images:
      properties:
        filename:
          $ref: '#/components/schemas/filename'
        id:
          $ref: '#/components/schemas/images_components-schemas-identifier'
        metadata:
          $ref: '#/components/schemas/metadata'
        requireSignedURLs:
          $ref: '#/components/schemas/schemas-requireSignedURLs'
        uploaded:
          $ref: '#/components/schemas/schemas-uploaded'
        variants:
          $ref: '#/components/schemas/schemas-variants'
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    filename:
      description: Image file name.
      example: logo.png
      maxLength: 32
      readOnly: true
      type: string
    images_components-schemas-identifier:
      description: Image unique identifier.
      example: 107b9558-dd06-4bbd-5fef-9c2c16bb7900
      maxLength: 32
      readOnly: true
      type: string
    metadata:
      description: User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.
      example:
        key: value
      type: object
    schemas-requireSignedURLs:
      default: false
      description: 'Indicates whether the image can be a accessed only using it''s UID. If set to true, a signed token needs to be generated with a signing key to view the image.'
      example: true
      type: boolean
    schemas-uploaded:
      description: When the media item was uploaded.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    schemas-variants:
      description: Object specifying available variants for an image.
      example:
        - 'https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail'
        - 'https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero'
        - 'https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original'
      items:
        anyOf:
          - $ref: '#/components/schemas/schemas-thumbnail_url'
          - $ref: '#/components/schemas/hero_url'
          - $ref: '#/components/schemas/original_url'
      readOnly: true
      type: array
    schemas-thumbnail_url:
      description: URI to thumbnail variant for an image.
      example: 'https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail'
      format: uri
      readOnly: true
      type: string
    hero_url:
      description: URI to hero variant for an image.
      example: 'https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero'
      format: uri
      readOnly: true
      type: string
    original_url:
      description: URI to original variant for an image.
      example: 'https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original'
      format: uri
      readOnly: true
      type: string
    image_basic_upload_via_url:
      properties:
        metadata:
          description: User modifiable key-value store. Can use used for keeping references to another system of record for managing images.
          type: object
        requireSignedURLs:
          default: false
          description: Indicates whether the image requires a signature token for the access.
          example: true
          type: boolean
        url:
          description: A URL to fetch an image from origin.
          example: 'https://example.com/path/to/logo.png'
          type: string
      required:
        - url
      type: object
    image_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    schemas-direct_upload_request:
      properties:
        expiry:
          default: Now + 30 minutes
          description: 'The date after which the upload will not be accepted. Minimum: Now + 2 minutes. Maximum: Now + 6 hours.'
          example: '2021-01-02T02:20:00Z'
          format: date-time
          type: string
      type: object
    schemas-direct_upload_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/images_components-schemas-identifier'
                uploadURL:
                  description: The URL the unauthenticated upload can be performed to using a single HTTP POST (multipart/form-data) request.
                  example: 'https://upload.imagedelivery.net/e22e9e6b-c02b-42fd-c405-6c32af5fe623'
                  type: string
    images_stats:
      properties:
        count:
          $ref: '#/components/schemas/images_count'
      type: object
    images_count:
      properties:
        allowed:
          $ref: '#/components/schemas/allowed'
        current:
          $ref: '#/components/schemas/current'
      type: object
    allowed:
      description: Cloudflare Images allowed usage.
      example: 100000
      readOnly: true
      type: number
    current:
      description: Cloudflare Images current usage.
      example: 1000
      readOnly: true
      type: number
    schemas-deleted_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              example: {}
              type: object
    image_patch_request:
      properties:
        metadata:
          description: User modifiable key-value store. Can be used for keeping references to another system of record for managing images. No change if not specified.
          type: object
        requireSignedURLs:
          description: 'Indicates whether the image can be accessed using only its UID. If set to `true`, a signed token needs to be generated with a signing key to view the image. Returns a new UID on a change. No change if not specified.'
          example: true
          type: boolean
      type: object
    image_response_blob:
      anyOf:
        - type: string
        - type: object
      example: <image blob data>
    direct_upload_request_v2:
      properties:
        expiry:
          default: Now + 30 minutes
          description: 'The date after which the upload will not be accepted. Minimum: Now + 2 minutes. Maximum: Now + 6 hours.'
          example: '2021-01-02T02:20:00Z'
          format: date-time
          type: string
        metadata:
          description: 'User modifiable key-value store. Can be used for keeping references to another system of record, for managing images.'
          type: object
        requireSignedURLs:
          default: false
          description: Indicates whether the image requires a signature token to be accessed.
          example: true
          type: boolean
      type: object
    direct_upload_response_v2:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  description: Image unique identifier.
                  example: e22e9e6b-c02b-42fd-c405-6c32af5fe600
                  maxLength: 32
                  readOnly: true
                  type: string
                uploadURL:
                  description: The URL the unauthenticated upload can be performed to using a single HTTP POST (multipart/form-data) request.
                  example: 'https://upload.imagedelivery.net/FxUufywByo0m2v3xhKSiU8/e22e9e6b-c02b-42fd-c405-6c32af5fe600'
                  type: string
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    schemas-key_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/keys_response'
    keys_response:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/schemas-keys'
          type: array
      type: object
    schemas-keys:
      properties:
        name:
          $ref: '#/components/schemas/keys_components-schemas-name'
        value:
          $ref: '#/components/schemas/keys_components-schemas-value'
      type: object
    keys_components-schemas-name:
      description: Key name.
      example: default
      readOnly: true
      type: string
    keys_components-schemas-value:
      description: Key value.
      example: Oix0bbNaT8Rge9PuyxUBrjI6zrgnsyJ5=
      readOnly: true
      type: string
    variant_list_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/variants_response'
    variants_response:
      properties:
        variants:
          $ref: '#/components/schemas/variant_public_request'
      type: object
    variant_public_request:
      properties:
        hero:
          type: object
      type: object
    variant_generation_request:
      properties:
        id:
          $ref: '#/components/schemas/variants_components-schemas-identifier'
        neverRequireSignedURLs:
          $ref: '#/components/schemas/neverRequireSignedURLs'
        options:
          $ref: '#/components/schemas/options'
      required:
        - id
        - options
      type: object
    variant_simple_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/variant_response'
    variants_components-schemas-identifier:
      example: hero
      maxLength: 99
      pattern: '^[a-zA-Z0-9]$'
    neverRequireSignedURLs:
      default: false
      description: 'Indicates whether the variant can access an image without a signature, regardless of image access control.'
      example: true
      type: boolean
    options:
      description: Allows you to define image resizing sizes for different use cases.
      properties:
        fit:
          $ref: '#/components/schemas/fit'
        height:
          $ref: '#/components/schemas/schemas-height'
        metadata:
          $ref: '#/components/schemas/schemas-metadata'
        width:
          $ref: '#/components/schemas/schemas-width'
      required:
        - fit
        - metadata
        - width
        - height
      type: object
    variant_response:
      properties:
        variant:
          type: object
      type: object
    fit:
      description: The fit property describes how the width and height dimensions should be interpreted.
      enum:
        - scale-down
        - contain
        - cover
        - crop
        - pad
      example: scale-down
      type: string
    schemas-height:
      description: Maximum height in image pixels.
      example: 768
      minimum: 1
      type: number
    schemas-metadata:
      description: What EXIF data should be preserved in the output image.
      enum:
        - keep
        - copyright
        - none
      example: none
      type: string
    schemas-width:
      description: Maximum width in image pixels.
      example: 1366
      minimum: 1
      type: number
    variant_patch_request:
      properties:
        neverRequireSignedURLs:
          $ref: '#/components/schemas/neverRequireSignedURLs'
        options:
          $ref: '#/components/schemas/options'
      required:
        - options
      type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_images:
      id: cloudflare.image_optimization.accounts_images
      name: accounts_images
      title: Accounts Images
      methods:
        cloudflare_images_list_images:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _cloudflare_images_list_images:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_upload_an_image_via_url:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_delete_image:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_image_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _cloudflare_images_image_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_update_image:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_images_usage_statistics:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1stats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _cloudflare_images_images_usage_statistics:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1stats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_base_image:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1{identifier}~1blob/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _cloudflare_images_base_image:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1{identifier}~1blob/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_images/methods/cloudflare_images_list_images'
          - $ref: '#/components/x-stackQL-resources/accounts_images/methods/cloudflare_images_image_details'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_images/methods/cloudflare_images_delete_image'
    accounts_images_direct_upload:
      id: cloudflare.image_optimization.accounts_images_direct_upload
      name: accounts_images_direct_upload
      title: Accounts Images Direct Upload
      methods:
        cloudflare_images_create_authenticated_direct_upload_url:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1direct_upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_images_direct_upload/methods/cloudflare_images_create_authenticated_direct_upload_url'
        update: []
        delete: []
    accounts_images_direct_upload_v2:
      id: cloudflare.image_optimization.accounts_images_direct_upload_v2
      name: accounts_images_direct_upload_v2
      title: Accounts Images Direct Upload V2
      methods:
        cloudflare_images_create_authenticated_direct_upload_url_v2:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v2~1direct_upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_images_direct_upload_v2/methods/cloudflare_images_create_authenticated_direct_upload_url_v2'
        update: []
        delete: []
    accounts_images_keys:
      id: cloudflare.image_optimization.accounts_images_keys
      name: accounts_images_keys
      title: Accounts Images Keys
      methods:
        cloudflare_images_keys_list_signing_keys:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.keys
        _cloudflare_images_keys_list_signing_keys:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_images_keys/methods/cloudflare_images_keys_list_signing_keys'
        insert: []
        update: []
        delete: []
    accounts_images_variants:
      id: cloudflare.image_optimization.accounts_images_variants
      name: accounts_images_variants
      title: Accounts Images Variants
      methods:
        cloudflare_images_variants_list_variants:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1variants/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _cloudflare_images_variants_list_variants:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1variants/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_variants_create_a_variant:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1variants/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_variants_delete_a_variant:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1variants~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_variants_variant_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1variants~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _cloudflare_images_variants_variant_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1variants~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudflare_images_variants_update_a_variant:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1images~1v1~1variants~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_images_variants/methods/cloudflare_images_variants_create_a_variant'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_images_variants/methods/cloudflare_images_variants_delete_a_variant'
paths:
  '/accounts/{account_identifier}/images/v1':
    get:
      description: List up to 100 images with one request. Use the optional parameters below to get a specific range of images.
      operationId: cloudflare-images-list-images
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image_response_collection'
          description: List images response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/image_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List images response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List images
      tags:
        - Cloudflare Images
    post:
      description: Upload an image via URL with up to 10 Megabytes using a single HTTP POST (multipart/form-data) request.
      operationId: cloudflare-images-upload-an-image-via-url
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/image_basic_upload_via_url'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image_response_single'
          description: Upload an image via URL response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/image_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Upload an image via URL response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Upload an image via URL
      tags:
        - Cloudflare Images
  '/accounts/{account_identifier}/images/v1/direct_upload':
    post:
      deprecated: true
      description: 'Direct uploads allow users to upload images without API keys. A common use case are web apps, client-side applications, or mobile devices where users upload content directly to Cloudflare Images.'
      operationId: cloudflare-images-create-authenticated-direct-upload-url
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-direct_upload_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-direct_upload_response'
          description: Create authenticated direct upload URL response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-direct_upload_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create authenticated direct upload URL response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create authenticated direct upload URL
      tags:
        - Cloudflare Images
      x-cfDeprecation:
        $ref: '#/components/schemas/images/x-cfDeprecations/direct_upload_v1_deprecation'
  '/accounts/{account_identifier}/images/v1/stats':
    get:
      description: Fetch usage statistics details for Cloudflare Images.
      operationId: cloudflare-images-images-usage-statistics
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_stats'
          description: Images usage statistics response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_stats'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Images usage statistics response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Images usage statistics
      tags:
        - Cloudflare Images
  '/accounts/{account_identifier}/images/v1/{identifier}':
    delete:
      description: 'Delete an image on Cloudflare Images. On success, all copies of the image are deleted and purged from cache.'
      operationId: cloudflare-images-delete-image
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-deleted_response'
          description: Delete image response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-deleted_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete image response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete image
      tags:
        - Cloudflare Images
    get:
      description: Fetch details for a single image.
      operationId: cloudflare-images-image-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image_response_single'
          description: Image details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/image_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Image details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Image details
      tags:
        - Cloudflare Images
    patch:
      description: 'Update image access control. On access control change, all copies of the image are purged from cache.'
      operationId: cloudflare-images-update-image
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image_patch_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image_response_single'
          description: Update image response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/image_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update image response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update image
      tags:
        - Cloudflare Images
  '/accounts/{account_identifier}/images/v1/{identifier}/blob':
    get:
      description: Fetch base image. For most images this will be the originally uploaded file. For larger images it can be a near-lossless version of the original.
      operationId: cloudflare-images-base-image
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image_response_blob'
          description: Base image response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/image_response_blob'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Base image response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Base image
      tags:
        - Cloudflare Images
  '/accounts/{account_identifier}/images/v2/direct_upload':
    post:
      description: 'Direct uploads allow users to upload images without API keys. A common use case are web apps, client-side applications, or mobile devices where users upload content directly to Cloudflare Images. This method creates a draft record for a future image. It returns an upload URL and an image identifier. To verify if the image itself has been uploaded, send an image details request (accounts/:account_identifier/images/v1/:identifier), and check that the `draft: true` property is not present.'
      operationId: cloudflare-images-create-authenticated-direct-upload-url-v-2
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/images_components-schemas-account_identifier'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/direct_upload_request_v2'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_upload_response_v2'
          description: Create authenticated direct upload URL V2 response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/direct_upload_response_v2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create authenticated direct upload URL V2 response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create authenticated direct upload URL V2
      tags:
        - Cloudflare Images
  '/accounts/{account_identifier}/images/v1/keys':
    get:
      description: Lists your signing keys. These can be found on your Cloudflare Images dashboard.
      operationId: cloudflare-images-keys-list-signing-keys
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-key_response_collection'
          description: List Signing Keys response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-key_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Signing Keys response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Signing Keys
      tags:
        - Cloudflare Images Keys
  '/accounts/{account_identifier}/images/v1/variants':
    get:
      description: Lists existing variants.
      operationId: cloudflare-images-variants-list-variants
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variant_list_response'
          description: List variants response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/variant_list_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List variants response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List variants
      tags:
        - Cloudflare Images Variants
    post:
      description: Specify variants that allow you to resize images for different use cases.
      operationId: cloudflare-images-variants-create-a-variant
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variant_generation_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variant_simple_response'
          description: Create a variant response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/variant_simple_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a variant response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a variant
      tags:
        - Cloudflare Images Variants
  '/accounts/{account_identifier}/images/v1/variants/{identifier}':
    delete:
      description: Deleting a variant purges the cache for all images associated with the variant.
      operationId: cloudflare-images-variants-delete-a-variant
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/variants_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-deleted_response'
          description: Delete a variant response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-deleted_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a variant response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a variant
      tags:
        - Cloudflare Images Variants
    get:
      description: Fetch details for a single variant.
      operationId: cloudflare-images-variants-variant-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/variants_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variant_simple_response'
          description: Variant details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/variant_simple_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Variant details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Variant details
      tags:
        - Cloudflare Images Variants
    patch:
      description: Updating a variant purges the cache for all images associated with the variant.
      operationId: cloudflare-images-variants-update-a-variant
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/variants_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variant_patch_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variant_simple_response'
          description: Update a variant response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/variant_simple_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a variant response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a variant
      tags:
        - Cloudflare Images Variants
