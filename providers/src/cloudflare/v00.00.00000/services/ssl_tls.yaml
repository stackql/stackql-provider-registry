openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Custom SSL for a Zone
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - ssl_tls
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    certificate_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/custom-certificate'
              type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    custom-certificate:
      properties:
        bundle_method:
          $ref: '#/components/schemas/bundle_method'
        expires_on:
          $ref: '#/components/schemas/components-schemas-expires_on'
        geo_restrictions:
          $ref: '#/components/schemas/geo_restrictions'
        hosts:
          $ref: '#/components/schemas/hosts'
        id:
          $ref: '#/components/schemas/custom-certificate_components-schemas-identifier'
        issuer:
          $ref: '#/components/schemas/issuer'
        keyless_server:
          $ref: '#/components/schemas/keyless-certificate'
        modified_on:
          $ref: '#/components/schemas/components-schemas-modified_on'
        policy:
          $ref: '#/components/schemas/policy'
        priority:
          $ref: '#/components/schemas/schemas-priority'
        signature:
          $ref: '#/components/schemas/signature'
        status:
          $ref: '#/components/schemas/custom-certificate_components-schemas-status'
        uploaded_on:
          $ref: '#/components/schemas/uploaded_on'
        zone_id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
      required:
        - id
        - hosts
        - issuer
        - signature
        - status
        - bundle_method
        - zone_id
        - uploaded_on
        - modified_on
        - expires_on
        - priority
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    bundle_method:
      default: ubiquitous
      description: 'A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.'
      enum:
        - ubiquitous
        - optimal
        - force
      example: ubiquitous
      type: string
    components-schemas-expires_on:
      description: When the certificate from the authority expires.
      example: '2016-01-01T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    geo_restrictions:
      description: 'Specify the region where your private key can be held locally for optimal TLS performance. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Options allow distribution to only to U.S. data centers, only to E.U. data centers, or only to highest security data centers. Default distribution is to all Cloudflare datacenters, for optimal performance.'
      properties:
        label:
          enum:
            - us
            - eu
            - highest_security
          example: us
      type: object
    hosts:
      items:
        description: The valid hosts for the certificates.
        example: example.com
        maxLength: 253
        readOnly: true
        type: string
      type: array
    custom-certificate_components-schemas-identifier:
      description: Custom certificate identifier tag.
      example: 2458ce5a-0c35-4c7f-82c7-8e9487d3ff60
      maxLength: 36
      readOnly: true
      type: string
    issuer:
      description: The certificate authority that issued the certificate.
      example: GlobalSign
      readOnly: true
      type: string
    keyless-certificate:
      allOf:
        - $ref: '#/components/schemas/keyless-certificate_components-schemas-base'
    components-schemas-modified_on:
      description: When the certificate was last modified.
      example: '2014-01-01T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    policy:
      description: 'Specify the policy that determines the region where your private key will be held locally. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Any combination of countries, specified by their two letter country code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) can be chosen, such as ''country: IN'', as well as ''region: EU'' which refers to the EU region. If there are too few data centers satisfying the policy, it will be rejected.'
      example: '(country: US) or (region: EU)'
      type: string
    schemas-priority:
      default: 20
      description: 'The order/priority in which the certificate will be used in a request. The higher priority will break ties across overlapping ''legacy_custom'' certificates, but ''legacy_custom'' certificates will always supercede ''sni_custom'' certificates.'
      example: 1
      type: number
    signature:
      description: The type of hash used for the certificate.
      example: SHA256WithRSA
      readOnly: true
      type: string
    custom-certificate_components-schemas-status:
      description: Status of the zone's custom SSL.
      enum:
        - active
        - expired
        - deleted
        - pending
        - initializing
      example: active
      readOnly: true
    uploaded_on:
      description: When the certificate was uploaded to Cloudflare.
      example: '2014-01-01T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    keyless-certificate_components-schemas-base:
      properties:
        created_on:
          description: When the Keyless SSL was created.
          example: '2014-01-01T05:20:00Z'
          format: date-time
          readOnly: true
          type: string
        enabled:
          $ref: '#/components/schemas/schemas-enabled'
        host:
          $ref: '#/components/schemas/schemas-host'
        id:
          $ref: '#/components/schemas/keyless-certificate_components-schemas-identifier'
        modified_on:
          description: When the Keyless SSL was last modified.
          example: '2014-01-01T05:20:00Z'
          format: date-time
          readOnly: true
          type: string
        name:
          $ref: '#/components/schemas/keyless-certificate_components-schemas-name'
        permissions:
          description: Available permissions for the Keyless SSL for the current user requesting the item.
          example:
            - '#ssl:read'
            - '#ssl:edit'
          items: {}
          readOnly: true
          type: array
        port:
          $ref: '#/components/schemas/schemas-port'
        status:
          $ref: '#/components/schemas/keyless-certificate_components-schemas-status'
      required:
        - id
        - name
        - host
        - port
        - status
        - enabled
        - permissions
        - created_on
        - modified_on
      type: object
    schemas-enabled:
      description: Whether or not the Keyless SSL is on or off.
      example: false
      readOnly: true
      type: boolean
    schemas-host:
      description: The keyless SSL name.
      example: example.com
      format: hostname
      maxLength: 253
      type: string
    keyless-certificate_components-schemas-identifier:
      description: Keyless certificate identifier tag.
      example: 4d2844d2ce78891c34d0b6c0535a291e
      maxLength: 32
      readOnly: true
      type: string
    keyless-certificate_components-schemas-name:
      description: The keyless SSL name.
      example: example.com Keyless SSL
      maxLength: 180
      readOnly: true
      type: string
    schemas-port:
      default: 24008
      description: The keyless SSL port used to commmunicate between Cloudflare and the client's Keyless SSL server.
      example: 24008
      maxLength: 65535
      type: number
    keyless-certificate_components-schemas-status:
      description: Status of the Keyless SSL.
      enum:
        - active
        - deleted
      example: active
      readOnly: true
      type: string
    certificate:
      description: The zone's SSL certificate or certificate and the intermediate(s).
      example: |
        -----BEGIN CERTIFICATE-----
        MIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
        BAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX
        aWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF
        MQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50
        ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
        CgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1
        CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB
        KwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5
        0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI
        dZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2
        izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4
        9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI
        GKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV
        BAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF
        MAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2
        2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP
        Mlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG
        SvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq
        2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw
        YbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=
        -----END CERTIFICATE-----
      type: string
    private_key:
      description: The zone's private key.
      example: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG
        dtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn
        abIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid
        tnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py
        FxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE
        ewooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb
        HBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/
        axiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb
        +ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g
        +j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv
        KLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7
        9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo
        /WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu
        iacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9
        N2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe
        VAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB
        vULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U
        lySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR
        9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7
        mEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX
        dFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe
        PG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS
        fhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W
        qu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T
        lv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi
        -----END RSA PRIVATE KEY-----
      type: string
    custom-certificate_components-schemas-type:
      default: legacy_custom
      description: The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.
      enum:
        - legacy_custom
        - sni_custom
      example: sni_custom
      type: string
    certificate_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    certificate_response_id_only:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/custom-certificate_components-schemas-identifier'
              type: object
    keyless_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/keyless-certificate'
              type: array
    schemas-certificate:
      description: The zone's SSL certificate or SSL certificate and intermediate(s).
      example: '-----BEGIN CERTIFICATE----- MIIDtTCCAp2gAwIBAgIJAM15n7fdxhRtMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV BAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX aWRnaXRzIFB0eSBMdGQwHhcNMTQwMzExMTkyMTU5WhcNMTQwNDEwMTkyMTU5WjBF MQswCQYDVQQGEwJVUzETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50 ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB CgKCAQEAvq3sKsHpeduJHimOK+fvQdKsI8z8A05MZyyLp2/R/GE8FjNv+hkVY1WQ LIyTNNQH7CJecE1nbTfo8Y56S7x/rhxC6/DJ8MIulapFPnorq46KU6yRxiM0MQ3N nTJHlHA2ozZta6YBBfVfhHWl1F0IfNbXCLKvGwWWMbCx43OfW6KTkbRnE6gFWKuO fSO5h2u5TaWVuSIzBvYs7Vza6m+gtYAvKAJV2nSZ+eSEFPDo29corOy8+huEOUL8 5FAw4BFPsr1TlrlGPFitduQUHGrSL7skk1ESGza0to3bOtrodKei2s9bk5MXm7lZ qI+WZJX4Zu9+mzZhc9pCVi8r/qlXuQIDAQABo4GnMIGkMB0GA1UdDgQWBBRvavf+ sWM4IwKiH9X9w1vl6nUVRDB1BgNVHSMEbjBsgBRvavf+sWM4IwKiH9X9w1vl6nUV RKFJpEcwRTELMAkGA1UEBhMCVVMxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV BAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAM15n7fdxhRtMAwGA1UdEwQF MAMBAf8wDQYJKoZIhvcNAQEFBQADggEBABY2ZzBaW0dMsAAT7tPJzrVWVzQx6KU4 UEBLudIlWPlkAwTnINCWR/8eNjCCmGA4heUdHmazdpPa8RzwOmc0NT1NQqzSyktt vTqb4iHD7+8f9MqJ9/FssCfTtqr/Qst/hGH4Wmdf1EJ/6FqYAAb5iRlPgshFZxU8 uXtA8hWn6fK6eISD9HBdcAFToUvKNZ1BIDPvh9f95Ine8ar6yGd56TUNrHR8eHBs ESxz5ddVR/oWRysNJ+aGAyYqHS8S/ttmC7r4XCAHqXptkHPCGRqkAhsterYhd4I8 /cBzejUobNCjjHFbtkAL/SjxZOLW+pNkZwfeYdM8iPkD54Uua1v2tdw= -----END CERTIFICATE-----'
      type: string
    keyless_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    keyless_response_single_id:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/keyless-certificate_components-schemas-identifier'
              type: object
    ssl_verification_response_collection:
      allOf:
        - properties:
            result:
              items:
                $ref: '#/components/schemas/verification'
              type: array
    verification:
      properties:
        brand_check:
          $ref: '#/components/schemas/brand_check'
        cert_pack_uuid:
          $ref: '#/components/schemas/cert_pack_uuid'
        certificate_status:
          $ref: '#/components/schemas/certificate_status'
        signature:
          $ref: '#/components/schemas/schemas-signature'
        validation_method:
          $ref: '#/components/schemas/schemas-validation_method'
        verification_info:
          $ref: '#/components/schemas/verification_info'
        verification_status:
          $ref: '#/components/schemas/verification_status'
        verification_type:
          $ref: '#/components/schemas/verification_type'
      required:
        - certificate_status
      type: object
    brand_check:
      description: Certificate Authority is manually reviewing the order.
      example: false
      type: boolean
    cert_pack_uuid:
      description: Certificate Pack UUID.
      example: a77f8bd7-3b47-46b4-a6f1-75cf98109948
      type: string
    certificate_status:
      description: Current status of certificate.
      enum:
        - initializing
        - authorizing
        - active
        - expired
        - issuing
        - timing_out
        - pending_deployment
      example: active
      type: string
    schemas-signature:
      description: Certificate's signature algorithm.
      enum:
        - ECDSAWithSHA256
        - SHA1WithRSA
        - SHA256WithRSA
      type: string
    schemas-validation_method:
      description: Validation method in use for a certificate pack order.
      enum:
        - http
        - cname
        - txt
      example: txt
      type: string
    verification_info:
      description: Certificate's required verification information.
      enum:
        - record_name
        - record_value
        - http_url
        - http_body
        - cname
        - cname_target
        - txt_name
        - txt_value
      properties:
        record_name:
          description: Name of CNAME record.
          example: b3b90cfedd89a3e487d3e383c56c4267.example.com
          format: hostname
          type: string
        record_target:
          description: Target of CNAME record.
          example: 6979be7e4cfc9e5c603e31df7efac9cc60fee82d.comodoca.com
          format: hostname
          type: string
      type: object
    verification_status:
      description: 'Status of the required verification information, omitted if verification status is unknown.'
      example: true
      type: boolean
    verification_type:
      description: Method of verification.
      enum:
        - cname
        - meta tag
      example: cname
      type: string
    components-schemas-validation_method:
      properties:
        validation_method:
          $ref: '#/components/schemas/validation_method_definition'
      required:
        - validation_method
      type: object
    ssl_validation_method_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                status:
                  $ref: '#/components/schemas/validation_method_components-schemas-status'
                validation_method:
                  $ref: '#/components/schemas/validation_method_definition'
    validation_method_definition:
      description: Desired validation method.
      enum:
        - http
        - cname
        - txt
        - email
      example: txt
      type: string
    validation_method_components-schemas-status:
      description: Result status.
      example: pending_validation
      type: string
    schemas-id:
      description: Identifier of a recommedation result.
      example: ssl_recommendation
      type: string
    timestamp:
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    components-schemas-value:
      enum:
        - flexible
        - full
        - strict
      example: strict
      type: string
    total_tls_settings_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                certificate_authority:
                  $ref: '#/components/schemas/schemas-certificate_authority'
                enabled:
                  $ref: '#/components/schemas/total-tls_components-schemas-enabled'
                validity_days:
                  $ref: '#/components/schemas/schemas-validity_days'
    schemas-certificate_authority:
      description: The Certificate Authority that Total TLS certificates will be issued through.
      enum:
        - google
        - lets_encrypt
      example: google
      type: string
    total-tls_components-schemas-enabled:
      description: 'If enabled, Total TLS will order a hostname specific TLS certificate for any proxied A, AAAA, or CNAME record in your zone.'
      example: true
      type: boolean
    schemas-validity_days:
      description: The validity period in days for the certificates ordered via Total TLS.
      enum:
        - 90
      type: integer
    ssl_universal_settings_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/universal'
    universal:
      properties:
        enabled:
          $ref: '#/components/schemas/components-schemas-enabled'
      type: object
    components-schemas-enabled:
      description: |-
        Disabling Universal SSL removes any currently active Universal SSL certificates for your zone from the edge and prevents any future Universal SSL certificates from being ordered. If there are no dedicated certificates or custom certificates uploaded for the domain, visitors will be unable to access the domain over HTTPS.

        By disabling Universal SSL, you understand that the following Cloudflare settings and preferences will result in visitors being unable to visit your domain unless you have uploaded a custom certificate or purchased a dedicated certificate.

        * HSTS
        * Always Use HTTPS
        * Opportunistic Encryption
        * Onion Routing
        * Any Page Rules redirecting traffic to HTTPS

        Similarly, any HTTP redirect to HTTPS at the origin while the Cloudflare proxy is enabled will result in users being unable to visit your site without a valid certificate at Cloudflare's edge.

        If you do not have a valid custom or dedicated certificate at Cloudflare's edge and are unsure if any of the above Cloudflare settings are enabled, or if any HTTP redirects exist at your origin, we advise leaving Universal SSL enabled for your domain.
      example: true
      type: boolean
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    zones_custom_certificates:
      id: cloudflare.ssl_tls.zones_custom_certificates
      name: zones_custom_certificates
      title: Zones Custom Certificates
      methods:
        custom_ssl_for_a_zone_list_ssl_configurations:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _custom_ssl_for_a_zone_list_ssl_configurations:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_ssl_for_a_zone_create_ssl_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_certificates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_ssl_for_a_zone_delete_ssl_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_certificates~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_ssl_for_a_zone_ssl_configuration_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_certificates~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _custom_ssl_for_a_zone_ssl_configuration_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_certificates~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_ssl_for_a_zone_edit_ssl_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_certificates~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_ssl_for_a_zone_re_prioritize_ssl_certificates:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_certificates~1prioritize/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_custom_certificates/methods/custom_ssl_for_a_zone_list_ssl_configurations'
          - $ref: '#/components/x-stackQL-resources/zones_custom_certificates/methods/custom_ssl_for_a_zone_ssl_configuration_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_custom_certificates/methods/custom_ssl_for_a_zone_create_ssl_configuration'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_custom_certificates/methods/custom_ssl_for_a_zone_delete_ssl_configuration'
    zones_keyless_certificates:
      id: cloudflare.ssl_tls.zones_keyless_certificates
      name: zones_keyless_certificates
      title: Zones Keyless Certificates
      methods:
        keyless_ssl_for_a_zone_list_keyless_ssl_configurations:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1keyless_certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _keyless_ssl_for_a_zone_list_keyless_ssl_configurations:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1keyless_certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        keyless_ssl_for_a_zone_create_keyless_ssl_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1keyless_certificates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        keyless_ssl_for_a_zone_delete_keyless_ssl_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1keyless_certificates~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        keyless_ssl_for_a_zone_get_keyless_ssl_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1keyless_certificates~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _keyless_ssl_for_a_zone_get_keyless_ssl_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1keyless_certificates~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        keyless_ssl_for_a_zone_edit_keyless_ssl_configuration:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1keyless_certificates~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_keyless_certificates/methods/keyless_ssl_for_a_zone_list_keyless_ssl_configurations'
          - $ref: '#/components/x-stackQL-resources/zones_keyless_certificates/methods/keyless_ssl_for_a_zone_get_keyless_ssl_configuration'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_keyless_certificates/methods/keyless_ssl_for_a_zone_create_keyless_ssl_configuration'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_keyless_certificates/methods/keyless_ssl_for_a_zone_delete_keyless_ssl_configuration'
    zones_ssl_verification:
      id: cloudflare.ssl_tls.zones_ssl_verification
      name: zones_ssl_verification
      title: Zones Ssl Verification
      methods:
        ssl_verification_ssl_verification_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1verification/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _ssl_verification_ssl_verification_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1verification/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ssl_verification_edit_ssl_certificate_pack_validation_method:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1verification~1{cert_pack_uuid}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_ssl_verification/methods/ssl_verification_ssl_verification_details'
        insert: []
        update: []
        delete: []
    zones_ssl_recommendation:
      id: cloudflare.ssl_tls.zones_ssl_recommendation
      name: zones_ssl_recommendation
      title: Zones Ssl Recommendation
      methods:
        ssl__tls_mode_recommendation_ssl__tls_recommendation:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1recommendation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _ssl__tls_mode_recommendation_ssl__tls_recommendation:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1recommendation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_acm_total_tls:
      id: cloudflare.ssl_tls.zones_acm_total_tls
      name: zones_acm_total_tls
      title: Zones Acm Total Tls
      methods:
        total_tls_total_tls_settings_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1acm~1total_tls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _total_tls_total_tls_settings_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1acm~1total_tls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        total_tls_enable_or_disable_total_tls:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1acm~1total_tls/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_acm_total_tls/methods/total_tls_total_tls_settings_details'
        insert: []
        update: []
        delete: []
    zones_ssl_universal_settings:
      id: cloudflare.ssl_tls.zones_ssl_universal_settings
      name: zones_ssl_universal_settings
      title: Zones Ssl Universal Settings
      methods:
        universal_ssl_settings_for_a_zone_universal_ssl_settings_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1universal~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _universal_ssl_settings_for_a_zone_universal_ssl_settings_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1universal~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        universal_ssl_settings_for_a_zone_edit_universal_ssl_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1universal~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_ssl_universal_settings/methods/universal_ssl_settings_for_a_zone_universal_ssl_settings_details'
        insert: []
        update: []
        delete: []
paths:
  '/zones/{zone_identifier}/custom_certificates':
    get:
      description: 'List, search, and filter all of your custom SSL certificates. The higher priority will break ties across overlapping ''legacy_custom'' certificates, but ''legacy_custom'' certificates will always supercede ''sni_custom'' certificates.'
      operationId: custom-ssl-for-a-zone-list-ssl-configurations
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_response_collection'
          description: List SSL Configurations response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List SSL Configurations response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List SSL Configurations
      tags:
        - Custom SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    post:
      description: Upload a new SSL certificate for a zone.
      operationId: custom-ssl-for-a-zone-create-ssl-configuration
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bundle_method:
                  $ref: '#/components/schemas/bundle_method'
                certificate:
                  $ref: '#/components/schemas/certificate'
                geo_restrictions:
                  $ref: '#/components/schemas/geo_restrictions'
                policy:
                  $ref: '#/components/schemas/policy'
                private_key:
                  $ref: '#/components/schemas/private_key'
                type:
                  $ref: '#/components/schemas/custom-certificate_components-schemas-type'
              required:
                - certificate
                - private_key
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_response_single'
          description: Create SSL Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create SSL Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create SSL Configuration
      tags:
        - Custom SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/custom_certificates/prioritize':
    put:
      description: 'If a zone has multiple SSL certificates, you can set the order in which they should be used during a request. The higher priority will break ties across overlapping ''legacy_custom'' certificates.'
      operationId: custom-ssl-for-a-zone-re-prioritize-ssl-certificates
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                certificates:
                  description: Array of ordered certificates.
                  example:
                    - id: 5a7805061c76ada191ed06f989cc3dac
                      priority: 2
                    - id: 9a7806061c88ada191ed06f989cc3dac
                      priority: 1
                  items:
                    properties:
                      id:
                        $ref: '#/components/schemas/custom-certificate_components-schemas-identifier'
                      priority:
                        $ref: '#/components/schemas/schemas-priority'
                    type: object
                  type: array
              required:
                - certificates
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_response_collection'
          description: Re-prioritize SSL Certificates response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Re-prioritize SSL Certificates response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Re-prioritize SSL Certificates
      tags:
        - Custom SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/custom_certificates/{identifier}':
    delete:
      description: Remove a SSL certificate from a zone.
      operationId: custom-ssl-for-a-zone-delete-ssl-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/custom-certificate_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_response_id_only'
          description: Delete SSL Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_response_id_only'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete SSL Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete SSL Configuration
      tags:
        - Custom SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    get:
      operationId: custom-ssl-for-a-zone-ssl-configuration-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/custom-certificate_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_response_single'
          description: SSL Configuration Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: SSL Configuration Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: SSL Configuration Details
      tags:
        - Custom SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    patch:
      description: 'Upload a new private key and/or PEM/CRT for the SSL certificate. Note: PATCHing a configuration for sni_custom certificates will result in a new resource id being returned, and the previous one being deleted.'
      operationId: custom-ssl-for-a-zone-edit-ssl-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/custom-certificate_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bundle_method:
                  $ref: '#/components/schemas/bundle_method'
                certificate:
                  $ref: '#/components/schemas/certificate'
                geo_restrictions:
                  $ref: '#/components/schemas/geo_restrictions'
                policy:
                  $ref: '#/components/schemas/policy'
                private_key:
                  $ref: '#/components/schemas/private_key'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_response_single'
          description: Edit SSL Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit SSL Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit SSL Configuration
      tags:
        - Custom SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/keyless_certificates':
    get:
      description: List all Keyless SSL configurations for a given zone.
      operationId: keyless-ssl-for-a-zone-list-keyless-ssl-configurations
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keyless_response_collection'
          description: List Keyless SSL Configurations response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/keyless_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Keyless SSL Configurations response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Keyless SSL Configurations
      tags:
        - Keyless SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      operationId: keyless-ssl-for-a-zone-create-keyless-ssl-configuration
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bundle_method:
                  $ref: '#/components/schemas/bundle_method'
                certificate:
                  $ref: '#/components/schemas/schemas-certificate'
                host:
                  $ref: '#/components/schemas/schemas-host'
                name:
                  $ref: '#/components/schemas/keyless-certificate_components-schemas-name'
                port:
                  $ref: '#/components/schemas/schemas-port'
              required:
                - host
                - port
                - certificate
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keyless_response_single'
          description: Create Keyless SSL Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/keyless_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Keyless SSL Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Keyless SSL Configuration
      tags:
        - Keyless SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/keyless_certificates/{identifier}':
    delete:
      operationId: keyless-ssl-for-a-zone-delete-keyless-ssl-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/keyless-certificate_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keyless_response_single_id'
          description: Delete Keyless SSL Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/keyless_response_single_id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Keyless SSL Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Keyless SSL Configuration
      tags:
        - Keyless SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Get details for one Keyless SSL configuration.
      operationId: keyless-ssl-for-a-zone-get-keyless-ssl-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/keyless-certificate_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keyless_response_single'
          description: Get Keyless SSL Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/keyless_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Keyless SSL Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Keyless SSL Configuration
      tags:
        - Keyless SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: 'This will update attributes of a Keyless SSL. Consists of one or more of the following:  host,name,port,certificate,enabled.'
      operationId: keyless-ssl-for-a-zone-edit-keyless-ssl-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/keyless-certificate_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enabled:
                  $ref: '#/components/schemas/schemas-enabled'
                host:
                  $ref: '#/components/schemas/schemas-host'
                name:
                  $ref: '#/components/schemas/keyless-certificate_components-schemas-name'
                port:
                  $ref: '#/components/schemas/schemas-port'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keyless_response_single'
          description: Edit Keyless SSL Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/keyless_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit Keyless SSL Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit Keyless SSL Configuration
      tags:
        - Keyless SSL for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/ssl/verification':
    get:
      description: Get SSL Verification Info for a Zone.
      operationId: ssl-verification-ssl-verification-details
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssl_verification_response_collection'
          description: SSL Verification Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ssl_verification_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: SSL Verification Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: SSL Verification Details
      tags:
        - SSL Verification
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/ssl/verification/{cert_pack_uuid}':
    patch:
      description: 'Edit SSL validation method for a certificate pack. A PATCH request will request an immediate validation check on any certificate, and return the updated status. If a validation method is provided, the validation will be immediately attempted using that method.'
      operationId: ssl-verification-edit-ssl-certificate-pack-validation-method
      parameters:
        - in: path
          name: cert_pack_uuid
          required: true
          schema:
            $ref: '#/components/schemas/cert_pack_uuid'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/components-schemas-validation_method'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssl_validation_method_response_collection'
          description: Edit SSL Certificate Pack Validation Method response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ssl_validation_method_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit SSL Certificate Pack Validation Method response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit SSL Certificate Pack Validation Method
      tags:
        - SSL Verification
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/ssl/recommendation':
    get:
      description: Retrieve the SSL/TLS Recommender's recommendation for a zone.
      operationId: ssl/-tls-mode-recommendation-ssl/-tls-recommendation
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/schemas-id'
                          modified_on:
                            $ref: '#/components/schemas/timestamp'
                          value:
                            $ref: '#/components/schemas/components-schemas-value'
          description: SSL/TLS Recommendation response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/schemas-id'
                              modified_on:
                                $ref: '#/components/schemas/timestamp'
                              value:
                                $ref: '#/components/schemas/components-schemas-value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: SSL/TLS Recommendation response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: SSL/TLS Recommendation
      tags:
        - SSL/TLS Mode Recommendation
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/acm/total_tls':
    get:
      description: Get Total TLS Settings for a Zone.
      operationId: total-tls-total-tls-settings-details
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/total_tls_settings_response'
          description: Total TLS Settings Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/total_tls_settings_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Total TLS Settings Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Total TLS Settings Details
      tags:
        - Total TLS
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Set Total TLS Settings or disable the feature for a Zone.
      operationId: total-tls-enable-or-disable-total-tls
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                certificate_authority:
                  $ref: '#/components/schemas/schemas-certificate_authority'
                enabled:
                  $ref: '#/components/schemas/total-tls_components-schemas-enabled'
              required:
                - enabled
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/total_tls_settings_response'
          description: Enable or Disable Total TLS response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/total_tls_settings_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Enable or Disable Total TLS response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Enable or Disable Total TLS
      tags:
        - Total TLS
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/ssl/universal/settings':
    get:
      description: Get Universal SSL Settings for a Zone.
      operationId: universal-ssl-settings-for-a-zone-universal-ssl-settings-details
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssl_universal_settings_response'
          description: Universal SSL Settings Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ssl_universal_settings_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Universal SSL Settings Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Universal SSL Settings Details
      tags:
        - Universal SSL Settings for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Patch Universal SSL Settings for a Zone.
      operationId: universal-ssl-settings-for-a-zone-edit-universal-ssl-settings
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/universal'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssl_universal_settings_response'
          description: Edit Universal SSL Settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ssl_universal_settings_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit Universal SSL Settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit Universal SSL Settings
      tags:
        - Universal SSL Settings for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
