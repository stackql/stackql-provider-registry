openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: API Shield Endpoint Management
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - api_shield
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    schema_response_discovery:
      allOf:
        - $ref: '#/components/schemas/default_response'
        - properties:
            result:
              properties:
                schemas:
                  items:
                    $ref: '#/components/schemas/openapi'
                  type: array
                timestamp:
                  type: string
              type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    default_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            errors:
              items: {}
              type: array
            messages:
              items: {}
              type: array
    openapi:
      description: A OpenAPI 3.0.0 compliant schema.
      example:
        info:
          title: OpenAPI JSON schema for www.example.com
          version: '1.0'
        openapi: 3.0.0
        paths:
          ... Further paths ...: {}
          '/api/v1/users/{var1}':
            get:
              parameters:
                - in: path
                  name: var1
                  required: true
                  schema:
                    type: string
        servers:
          - url: www.example.com
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    collection_response_paginated:
      anyOf:
        - allOf:
            - $ref: '#/components/schemas/collection_response'
            - properties:
                result_info:
                  properties:
                    count:
                      description: Total results returned based on your search parameters.
                      example: 1
                      type: number
                    page:
                      description: Current page within paginated list of results.
                      example: 1
                      type: number
                    per_page:
                      description: Number of results per page of results.
                      example: 20
                      type: number
                    total_count:
                      description: Total results available without any search parameters.
                      example: 500
                      type: number
                  type: object
            - properties:
                result:
                  items:
                    $ref: '#/components/schemas/api-shield'
                  type: array
        - $ref: '#/components/schemas/collection_response'
    collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            errors:
              items: {}
              type: array
            messages:
              items: {}
              type: array
            result:
              items:
                allOf:
                  - $ref: '#/components/schemas/api-shield'
                  - properties:
                      features: {}
              type: array
    api-shield:
      allOf:
        - $ref: '#/components/schemas/operation'
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    operation:
      properties:
        endpoint:
          $ref: '#/components/schemas/endpoint'
        features:
          $ref: '#/components/schemas/features'
        host:
          $ref: '#/components/schemas/host'
        last_updated:
          $ref: '#/components/schemas/timestamp'
        method:
          $ref: '#/components/schemas/method'
        operation_id:
          $ref: '#/components/schemas/operation_id'
      required:
        - operation_id
        - method
        - host
        - endpoint
        - last_updated
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    endpoint:
      description: 'The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.'
      example: '/api/v1/users/{var1}'
      format: uri-template
      maxLength: 4096
      pattern: ^/.*$
      type: string
    features:
      anyOf:
        - $ref: '#/components/schemas/thresholds'
      readOnly: true
      type: object
    host:
      description: RFC3986-compliant host.
      example: www.example.com
      format: hostname
      maxLength: 255
      type: string
    timestamp:
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    method:
      description: The HTTP method used to access the endpoint.
      enum:
        - GET
        - POST
        - HEAD
        - OPTIONS
        - PUT
        - DELETE
        - CONNECT
        - PATCH
        - TRACE
      example: GET
      type: string
    operation_id:
      description: The ID that identifies the API operation.
    thresholds:
      properties:
        thresholds:
          properties:
            auth_id_tokens:
              $ref: '#/components/schemas/auth_id_tokens'
            data_points:
              $ref: '#/components/schemas/data_points'
            last_updated:
              $ref: '#/components/schemas/timestamp'
            p50:
              $ref: '#/components/schemas/p50'
            p90:
              $ref: '#/components/schemas/p90'
            p99:
              $ref: '#/components/schemas/p99'
            period_seconds:
              $ref: '#/components/schemas/period_seconds'
            requests:
              $ref: '#/components/schemas/requests'
            suggested_threshold:
              $ref: '#/components/schemas/suggested_threshold'
          type: object
      readOnly: true
      required:
        - period_seconds
        - suggested_threshold
        - p50
        - p90
        - p99
        - requests
        - auth_id_tokens
        - data_points
        - last_updated
      type: object
    auth_id_tokens:
      description: The total number of auth-ids seen across this calculation.
      readOnly: true
      type: integer
    data_points:
      description: The number of data points used for the threshold suggestion calculation.
      readOnly: true
      type: integer
    p50:
      description: The p50 quantile of requests (in period_seconds).
      readOnly: true
      type: integer
    p90:
      description: The p90 quantile of requests (in period_seconds).
      readOnly: true
      type: integer
    p99:
      description: The p99 quantile of requests (in period_seconds).
      readOnly: true
      type: integer
    period_seconds:
      description: The period over which this threshold is suggested.
      readOnly: true
      type: integer
    requests:
      description: The estimated number of requests covered by these calculations.
      readOnly: true
      type: integer
    suggested_threshold:
      description: The suggested threshold in requests done by the same auth_id or period_seconds.
      readOnly: true
      type: integer
    schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            errors:
              items: {}
              type: array
            messages:
              items: {}
              type: array
            result:
              $ref: '#/components/schemas/api-shield'
    schema_response_with_thresholds:
      allOf:
        - $ref: '#/components/schemas/default_response'
        - properties:
            result:
              properties:
                schemas:
                  items:
                    $ref: '#/components/schemas/openapiwiththresholds'
                  type: array
                timestamp:
                  type: string
              type: object
    openapiwiththresholds:
      description: A OpenAPI 3.0.0 compliant schema.
      example:
        info:
          title: OpenAPI JSON schema for www.example.com
          version: '1.0'
        openapi: 3.0.0
        paths:
          ... Further paths ...: {}
          '/api/v1/users/{var1}':
            get:
              parameters:
                - in: path
                  name: var1
                  required: true
                  schema:
                    type: string
        servers:
          - url: www.example.com
      type: object
    single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            errors:
              items: {}
              type: array
            messages:
              items: {}
              type: array
            result:
              $ref: '#/components/schemas/configuration'
    configuration:
      properties:
        auth_id_characteristics:
          $ref: '#/components/schemas/characteristics'
      type: object
    characteristics:
      items:
        properties:
          name:
            $ref: '#/components/schemas/characteristics_components-schemas-name'
          type:
            $ref: '#/components/schemas/schemas-type'
        required:
          - type
          - name
        type: object
      maxItems: 10
      type: array
      uniqueItems: true
    characteristics_components-schemas-name:
      description: 'The name of the characteristic field, i.e., the header or cookie name.'
      example: authorization
      maxLength: 128
      type: string
    schemas-type:
      description: The type of characteristic.
      enum:
        - header
        - cookie
      example: header
      type: string
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    zones_api_gateway_discovery:
      id: cloudflare.api_shield.zones_api_gateway_discovery
      name: zones_api_gateway_discovery
      title: Zones Api Gateway Discovery
      methods:
        endpoint_management_retrieve_api_discovery_results_for_a_zone:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1discovery/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _endpoint_management_retrieve_api_discovery_results_for_a_zone:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1discovery/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_api_gateway_operations:
      id: cloudflare.api_shield.zones_api_gateway_operations
      name: zones_api_gateway_operations
      title: Zones Api Gateway Operations
      methods:
        endpoint_management_retrieve_information_about_all_operations_on_a_zone:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _endpoint_management_retrieve_information_about_all_operations_on_a_zone:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        endpoint_management_add_operations_to_a_zone:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1operations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        endpoint_management_delete_an_operation:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1operations~1{operation_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        endpoint_management_retrieve_information_about_an_operation:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1operations~1{operation_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _endpoint_management_retrieve_information_about_an_operation:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1operations~1{operation_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_api_gateway_operations/methods/endpoint_management_delete_an_operation'
    zones_api_gateway_schemas:
      id: cloudflare.api_shield.zones_api_gateway_schemas
      name: zones_api_gateway_schemas
      title: Zones Api Gateway Schemas
      methods:
        endpoint_management_retrieve_operations_and_features_as_open_api_schemas:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _endpoint_management_retrieve_operations_and_features_as_open_api_schemas:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_api_gateway_configuration:
      id: cloudflare.api_shield.zones_api_gateway_configuration
      name: zones_api_gateway_configuration
      title: Zones Api Gateway Configuration
      methods:
        settings_retrieve_information_about_specific_configuration_properties:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1configuration/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _settings_retrieve_information_about_specific_configuration_properties:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1configuration/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        settings_set_configuration_properties:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1api_gateway~1configuration/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/zones/{zone_id}/api_gateway/discovery':
    get:
      description: Retrieve the most up to date view of API Discovery on a zone.
      operationId: api-shield-endpoint-management-retrieve-api-discovery-results-for-a-zone
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schema_response_discovery'
          description: Retrieve API Discovery results for a zone response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schema_response_discovery'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retrieve API Discovery results for a zone response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retrieve API Discovery results for a zone
      tags:
        - API Shield Endpoint Management
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.api-gateway.read
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_id}/api_gateway/operations':
    get:
      operationId: api-shield-endpoint-management-retrieve-information-about-all-operations-on-a-zone
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection_response_paginated'
          description: Retrieve information about all operations on a zone response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_response_paginated'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retrieve information about all operations on a zone response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retrieve information about all operations on a zone
      tags:
        - API Shield Endpoint Management
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.api-gateway.read
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: 'Add one or more operations to a zone. Endpoints can contain path variables. Host, method, endpoint will be normalized to a canoncial form when creating an operation and must be unique on the zone. Inserting an operation that matches an existing one will return the record of the already existing operation and update its last_updated date.'
      operationId: api-shield-endpoint-management-add-operations-to-a-zone
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              items:
                properties:
                  endpoint:
                    $ref: '#/components/schemas/endpoint'
                  host:
                    $ref: '#/components/schemas/host'
                  method:
                    $ref: '#/components/schemas/method'
                type: object
              required:
                - host
                - method
                - endpoint
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection_response'
          description: Add operations to a zone response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add operations to a zone response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add operations to a zone
      tags:
        - API Shield Endpoint Management
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.api-gateway.create
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_id}/api_gateway/operations/{operation_id}':
    delete:
      operationId: api-shield-endpoint-management-delete-an-operation
      parameters:
        - in: path
          name: operation_id
          required: true
          schema:
            $ref: '#/components/schemas/operation_id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_response'
          description: Delete an operation response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/default_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an operation response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an operation
      tags:
        - API Shield Endpoint Management
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.api-gateway.delete
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      operationId: api-shield-endpoint-management-retrieve-information-about-an-operation
      parameters:
        - in: path
          name: operation_id
          required: true
          schema:
            $ref: '#/components/schemas/operation_id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-single_response'
          description: Retrieve information about an operation response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retrieve information about an operation response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retrieve information about an operation
      tags:
        - API Shield Endpoint Management
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.api-gateway.read
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_id}/api_gateway/schemas':
    get:
      operationId: api-shield-endpoint-management-retrieve-operations-and-features-as-open-api-schemas
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schema_response_with_thresholds'
          description: Retrieve operations and features as OpenAPI schemas response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schema_response_with_thresholds'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retrieve operations and features as OpenAPI schemas response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retrieve operations and features as OpenAPI schemas
      tags:
        - API Shield Endpoint Management
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.api-gateway.read
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_id}/api_gateway/configuration':
    get:
      operationId: api-shield-settings-retrieve-information-about-specific-configuration-properties
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response'
          description: Retrieve information about specific configuration properties response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retrieve information about specific configuration properties response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retrieve information about specific configuration properties
      tags:
        - API Shield Settings
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.api-gateway.read
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      operationId: api-shield-settings-set-configuration-properties
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configuration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/default_response'
          description: Set configuration properties response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/default_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Set configuration properties response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Set configuration properties
      tags:
        - API Shield Settings
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.api-gateway.update
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
