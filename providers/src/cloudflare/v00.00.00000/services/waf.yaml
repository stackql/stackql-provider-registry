openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: WAF overrides
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - waf
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    override_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                allOf:
                  - $ref: '#/components/schemas/override'
                  - required:
                      - id
                      - paused
                      - urls
                      - priority
                    type: object
              type: array
          required:
            - result
          type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    override:
      properties:
        description:
          $ref: '#/components/schemas/overrides_components-schemas-description'
        groups:
          $ref: '#/components/schemas/groups'
        id:
          $ref: '#/components/schemas/overrides_components-schemas-id'
        paused:
          $ref: '#/components/schemas/schemas-paused'
        priority:
          $ref: '#/components/schemas/overrides_components-schemas-priority'
        rewrite_action:
          $ref: '#/components/schemas/rewrite_action'
        rules:
          $ref: '#/components/schemas/schemas-rules'
        urls:
          $ref: '#/components/schemas/urls'
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    overrides_components-schemas-description:
      description: An informative summary of the current URI-based WAF override.
      example: Enable Cloudflare Magento ruleset for shop.example.com
      maxLength: 1024
      nullable: true
      type: string
    groups:
      additionalProperties: true
      description: 'An object that allows you to enable or disable WAF rule groups for the current WAF override. Each key of this object must be the ID of a WAF rule group, and each value must be a valid WAF action (usually `default` or `disable`). When creating a new URI-based WAF override, you must provide a `groups` object or a `rules` object.'
      example:
        ea8687e59929c1fd05ba97574ad43f77: default
      type: object
    overrides_components-schemas-id:
      description: The unique identifier of the WAF override.
      example: de677e5818985db1285d0e80225f06e5
      maxLength: 32
      readOnly: true
      type: string
    schemas-paused:
      description: 'When true, indicates that the WAF package is currently paused.'
      type: boolean
    overrides_components-schemas-priority:
      description: The relative priority of the current URI-based WAF override when multiple overrides match a single URL. A lower number indicates higher priority. Higher priority overrides may overwrite values set by lower priority overrides.
      example: 1
      maximum: 1000000000
      minimum: -1000000000
      type: number
    rewrite_action:
      description: 'Specifies that, when a WAF rule matches, its configured action will be replaced by the action configured in this object.'
      properties:
        block:
          $ref: '#/components/schemas/waf_rewrite_action'
        challenge:
          example: block
        default:
          example: block
        disable:
          $ref: '#/components/schemas/waf_rewrite_action'
        simulate:
          example: disable
      type: object
    schemas-rules:
      additionalProperties:
        allOf:
          - $ref: '#/components/schemas/waf_action'
        example: default
      description: 'An object that allows you to override the action of specific WAF rules. Each key of this object must be the ID of a WAF rule, and each value must be a valid WAF action. Unless you are disabling a rule, ensure that you also enable the rule group that this WAF rule belongs to. When creating a new URI-based WAF override, you must provide a `groups` object or a `rules` object.'
      example:
        '100015': disable
      type: object
    urls:
      description: 'The URLs to include in the current WAF override. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.'
      items:
        example: shop.example.com/*
        type: string
      type: array
    waf_rewrite_action:
      description: The WAF rule action to apply.
      enum:
        - challenge
        - block
        - simulate
        - disable
        - default
    waf_action:
      description: The WAF rule action to apply.
      enum:
        - challenge
        - block
        - simulate
        - disable
        - default
    override_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/override'
          required:
            - result
          type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    package_response_collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/package'
              type: array
    package:
      oneOf:
        - $ref: '#/components/schemas/package_definition'
        - $ref: '#/components/schemas/anomaly_package'
      type: object
    package_definition:
      properties:
        description:
          $ref: '#/components/schemas/package_components-schemas-description'
        detection_mode:
          $ref: '#/components/schemas/detection_mode'
        id:
          $ref: '#/components/schemas/package_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/package_components-schemas-name'
        status:
          $ref: '#/components/schemas/package_components-schemas-status'
        zone_id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
      required:
        - id
        - name
        - description
        - detection_mode
        - zone_id
      title: Traditional WAF package
    anomaly_package:
      allOf:
        - $ref: '#/components/schemas/package_definition'
        - properties:
            action_mode:
              $ref: '#/components/schemas/action_mode'
            description:
              $ref: '#/components/schemas/anomaly_description'
            detection_mode:
              $ref: '#/components/schemas/anomaly_detection_mode'
            name:
              $ref: '#/components/schemas/anomaly_name'
            sensitivity:
              $ref: '#/components/schemas/sensitivity'
      required:
        - id
        - name
        - description
        - zone_id
        - detection_mode
        - sensitivity
        - action_mode
      title: Anomaly detection WAF package (OWASP)
    package_components-schemas-description:
      description: A summary of the purpose/function of the WAF package.
      example: 'null'
      readOnly: true
      type: string
    detection_mode:
      description: 'The mode that defines how rules within the package are evaluated during the course of a request. When a package uses anomaly detection mode (`anomaly` value), each rule is given a score when triggered. If the total score of all triggered rules exceeds the sensitivity defined in the WAF package, the action configured in the package will be performed. Traditional detection mode (`traditional` value) will decide the action to take when it is triggered by the request. If multiple rules are triggered, the action providing the highest protection will be applied (for example, a ''block'' action will win over a ''challenge'' action).'
      enum:
        - anomaly
        - traditional
      example: traditional
      readOnly: true
      type: string
    package_components-schemas-identifier:
      description: The unique identifier of a WAF package.
      example: a25a9a7e9c00afc1fb2e0245519d725b
      maxLength: 32
      readOnly: true
      type: string
    package_components-schemas-name:
      description: The name of the WAF package.
      example: USER
      readOnly: true
      type: string
    package_components-schemas-status:
      default: active
      description: 'When set to `active`, indicates that the WAF package will be applied to the zone.'
      enum:
        - active
      readOnly: true
      type: string
    action_mode:
      default: challenge
      description: The default action performed by the rules in the WAF package.
      enum:
        - simulate
        - block
        - challenge
      type: string
    anomaly_description:
      description: A summary of the purpose/function of the WAF package.
      example: Covers OWASP Top 10 vulnerabilities and more.
      readOnly: true
      type: string
    anomaly_detection_mode:
      description: 'When a WAF package uses anomaly detection, each rule is given a score when triggered. If the total score of all triggered rules exceeds the sensitivity defined on the WAF package, the action defined on the package will be taken.'
      example: anomaly
      readOnly: true
      type: string
    anomaly_name:
      description: The name of the WAF package.
      example: OWASP ModSecurity Core Rule Set
      readOnly: true
      type: string
    sensitivity:
      default: high
      description: The sensitivity of the WAF package.
      enum:
        - high
        - medium
        - low
        - 'off'
      type: string
    package_response_single:
      oneOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    rule_group_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-group'
              type: array
    schemas-group:
      allOf:
        - $ref: '#/components/schemas/group'
        - properties:
            allowed_modes:
              $ref: '#/components/schemas/allowed_modes'
            mode:
              $ref: '#/components/schemas/components-schemas-mode'
      required:
        - id
        - name
        - description
        - mode
        - rules_count
    group:
      properties:
        description:
          $ref: '#/components/schemas/group_components-schemas-description'
        id:
          $ref: '#/components/schemas/group_components-schemas-identifier'
        modified_rules_count:
          $ref: '#/components/schemas/modified_rules_count'
        name:
          $ref: '#/components/schemas/group_components-schemas-name'
        package_id:
          $ref: '#/components/schemas/package_components-schemas-identifier'
        rules_count:
          $ref: '#/components/schemas/rules_count'
      type: object
    allowed_modes:
      description: The available states for the rule group.
      example:
        - 'on'
        - 'off'
      items:
        $ref: '#/components/schemas/components-schemas-mode'
      readOnly: true
      type: array
    components-schemas-mode:
      default: 'on'
      description: 'The state of the rules contained in the rule group. When `on`, the rules in the group are configurable/usable.'
      enum:
        - 'on'
        - 'off'
      type: string
    group_components-schemas-description:
      description: An informative summary of what the rule group does.
      example: Group designed to protect against IP addresses that are a threat and typically used to launch DDoS attacks
      nullable: true
      readOnly: true
      type: string
    group_components-schemas-identifier:
      description: The unique identifier of the rule group.
      example: de677e5818985db1285d0e80225f06e5
      maxLength: 32
      readOnly: true
      type: string
    modified_rules_count:
      default: 0
      description: The number of rules within the group that have been modified from their default configuration.
      example: 2
      readOnly: true
      type: number
    group_components-schemas-name:
      description: The name of the rule group.
      example: Project Honey Pot
      readOnly: true
      type: string
    rules_count:
      default: 0
      description: The number of rules in the current rule group.
      example: 10
      readOnly: true
      type: number
    rule_group_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    rule_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/components-schemas-rule'
              type: array
    components-schemas-rule:
      oneOf:
        - $ref: '#/components/schemas/anomaly_rule'
        - $ref: '#/components/schemas/traditional_deny_rule'
        - $ref: '#/components/schemas/traditional_allow_rule'
      type: object
    anomaly_rule:
      allOf:
        - $ref: '#/components/schemas/rule_components-schemas-base-2'
        - properties:
            allowed_modes:
              $ref: '#/components/schemas/allowed_modes_anomaly'
            mode:
              $ref: '#/components/schemas/mode_anomaly'
      description: 'When triggered, anomaly detection WAF rules contribute to an overall threat score that will determine if a request is considered malicious. You can configure the total scoring threshold through the ''sensitivity'' property of the WAF package.'
      required:
        - id
        - description
        - priority
        - allowed_modes
        - mode
        - group
        - package_id
      title: Anomaly detection WAF rule
    traditional_deny_rule:
      allOf:
        - $ref: '#/components/schemas/rule_components-schemas-base-2'
        - properties:
            allowed_modes:
              $ref: '#/components/schemas/allowed_modes_deny_traditional'
            default_mode:
              $ref: '#/components/schemas/default_mode'
            mode:
              $ref: '#/components/schemas/mode_deny_traditional'
      description: 'When triggered, traditional WAF rules cause the firewall to immediately act upon the request based on the configuration of the rule. A ''deny'' rule will immediately respond to the request based on the configured rule action/mode (for example, ''block'') and no other rules will be processed.'
      required:
        - id
        - description
        - priority
        - allowed_modes
        - default_mode
        - mode
        - group
        - package_id
      title: Traditional (deny) WAF rule
    traditional_allow_rule:
      allOf:
        - $ref: '#/components/schemas/rule_components-schemas-base-2'
        - properties:
            allowed_modes:
              $ref: '#/components/schemas/allowed_modes_allow_traditional'
            mode:
              $ref: '#/components/schemas/mode_allow_traditional'
      description: 'When triggered, traditional WAF rules cause the firewall to immediately act on the request based on the rule configuration. An ''allow'' rule will immediately allow the request and no other rules will be processed.'
      required:
        - id
        - description
        - priority
        - allowed_modes
        - default_mode
        - mode
        - group
        - package_id
      title: Traditional (allow) WAF rule
    rule_components-schemas-base-2:
      allOf:
        - $ref: '#/components/schemas/rule_components-schemas-base'
    allowed_modes_anomaly:
      description: Defines the available modes for the current WAF rule. Applies to anomaly detection WAF rules.
      example:
        - 'on'
        - 'off'
      items:
        $ref: '#/components/schemas/mode_anomaly'
      readOnly: true
      type: array
    mode_anomaly:
      description: 'When set to `on`, the current WAF rule will be used when evaluating the request. Applies to anomaly detection WAF rules.'
      enum:
        - 'on'
        - 'off'
      example: 'on'
      type: string
    allowed_modes_deny_traditional:
      description: The list of possible actions of the WAF rule when it is triggered.
      example:
        - default
        - disable
        - simulate
        - block
        - challenge
      items:
        $ref: '#/components/schemas/mode_deny_traditional'
      readOnly: true
      type: array
    default_mode:
      description: The default action/mode of a rule.
      enum:
        - disable
        - simulate
        - block
        - challenge
      example: block
      readOnly: true
    mode_deny_traditional:
      description: The action that the current WAF rule will perform when triggered. Applies to traditional (deny) WAF rules.
      enum:
        - default
        - disable
        - simulate
        - block
        - challenge
      example: block
      type: string
    allowed_modes_allow_traditional:
      description: Defines the available modes for the current WAF rule.
      example:
        - 'on'
        - 'off'
      items:
        $ref: '#/components/schemas/mode_allow_traditional'
      readOnly: true
      type: array
    mode_allow_traditional:
      description: 'When set to `on`, the current rule will be used when evaluating the request. Applies to traditional (allow) WAF rules.'
      enum:
        - 'on'
        - 'off'
      example: 'on'
      type: string
    rule_components-schemas-base:
      properties:
        description:
          $ref: '#/components/schemas/rule_components-schemas-description'
        group:
          description: The rule group to which the current WAF rule belongs.
          properties:
            id:
              $ref: '#/components/schemas/group_components-schemas-identifier'
            name:
              $ref: '#/components/schemas/group_components-schemas-name'
          readOnly: true
          type: object
        id:
          $ref: '#/components/schemas/rule_components-schemas-identifier-2'
        package_id:
          $ref: '#/components/schemas/package_components-schemas-identifier'
        priority:
          $ref: '#/components/schemas/rule_components-schemas-priority'
    rule_components-schemas-description:
      description: The public description of the WAF rule.
      example: SQL injection prevention for SELECT statements
      readOnly: true
      type: string
    rule_components-schemas-identifier-2:
      description: The unique identifier of the WAF rule.
      example: f939de3be84e66e757adcdcb87908023
      maxLength: 32
      readOnly: true
      type: string
    rule_components-schemas-priority:
      description: The order in which the individual WAF rule is executed within its rule group.
      readOnly: true
      type: string
    rule_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    zones_firewall_overrides:
      id: cloudflare.waf.zones_firewall_overrides
      name: zones_firewall_overrides
      title: Zones Firewall Overrides
      methods:
        overrides_list_waf_overrides:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1overrides/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _overrides_list_waf_overrides:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1overrides/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        overrides_create_a_waf_override:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1overrides/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        overrides_delete_a_waf_override:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1overrides~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        overrides_get_a_waf_override:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1overrides~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _overrides_get_a_waf_override:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1overrides~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        overrides_update_waf_override:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1overrides~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_overrides/methods/overrides_list_waf_overrides'
          - $ref: '#/components/x-stackQL-resources/zones_firewall_overrides/methods/overrides_get_a_waf_override'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_overrides/methods/overrides_create_a_waf_override'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_overrides/methods/overrides_delete_a_waf_override'
    zones_firewall_packages:
      id: cloudflare.waf.zones_firewall_packages
      name: zones_firewall_packages
      title: Zones Firewall Packages
      methods:
        packages_list_waf_packages:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _packages_list_waf_packages:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        packages_get_a_waf_package:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _packages_get_a_waf_package:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        packages_update_a_waf_package:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_packages/methods/packages_list_waf_packages'
          - $ref: '#/components/x-stackQL-resources/zones_firewall_packages/methods/packages_get_a_waf_package'
        insert: []
        update: []
        delete: []
    zones_firewall_packages_groups:
      id: cloudflare.waf.zones_firewall_packages_groups
      name: zones_firewall_packages_groups
      title: Zones Firewall Packages Groups
      methods:
        rule_groups_list_waf_rule_groups:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages~1{package_identifier}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _rule_groups_list_waf_rule_groups:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages~1{package_identifier}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rule_groups_get_a_waf_rule_group:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages~1{package_identifier}~1groups~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _rule_groups_get_a_waf_rule_group:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages~1{package_identifier}~1groups~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rule_groups_update_a_waf_rule_group:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1waf~1packages~1{package_identifier}~1groups~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_packages_groups/methods/rule_groups_list_waf_rule_groups'
          - $ref: '#/components/x-stackQL-resources/zones_firewall_packages_groups/methods/rule_groups_get_a_waf_rule_group'
        insert: []
        update: []
        delete: []
    zones_firewall_packages_rules:
      id: cloudflare.waf.zones_firewall_packages_rules
      name: zones_firewall_packages_rules
      title: Zones Firewall Packages Rules
      methods:
        rules_list_waf_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1waf~1packages~1{package_id}~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _rules_list_waf_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1waf~1packages~1{package_id}~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rules_get_a_waf_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1waf~1packages~1{package_id}~1rules~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _rules_get_a_waf_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1waf~1packages~1{package_id}~1rules~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rules_update_a_waf_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1waf~1packages~1{package_id}~1rules~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_packages_rules/methods/rules_list_waf_rules'
          - $ref: '#/components/x-stackQL-resources/zones_firewall_packages_rules/methods/rules_get_a_waf_rule'
        insert: []
        update: []
        delete: []
paths:
  '/zones/{zone_identifier}/firewall/waf/overrides':
    get:
      description: Fetches the URI-based WAF overrides in a zone.
      operationId: waf-overrides-list-waf-overrides
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/override_response_collection'
          description: List WAF overrides response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/override_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List WAF overrides response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List WAF overrides
      tags:
        - WAF overrides
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Creates a URI-based WAF override for a zone.
      operationId: waf-overrides-create-a-waf-override
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - urls
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/override_response_single'
          description: Create a WAF override response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/override_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a WAF override response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a WAF override
      tags:
        - WAF overrides
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/firewall/waf/overrides/{id}':
    delete:
      description: Deletes an existing URI-based WAF override.
      operationId: waf-overrides-delete-a-waf-override
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/overrides_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        $ref: '#/components/schemas/overrides_components-schemas-id'
                    type: object
                type: object
          description: Delete a WAF override response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/overrides_components-schemas-id'
                    type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a WAF override response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a WAF override
      tags:
        - WAF overrides
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Fetches the details of a URI-based WAF override.
      operationId: waf-overrides-get-a-waf-override
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/overrides_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/override_response_single'
          description: Get a WAF override response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/override_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a WAF override response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a WAF override
      tags:
        - WAF overrides
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Updates an existing URI-based WAF override.
      operationId: waf-overrides-update-waf-override
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/overrides_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
                - urls
                - rules
                - rewrite_action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/override_response_single'
          description: Update WAF override response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/override_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update WAF override response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update WAF override
      tags:
        - WAF overrides
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/firewall/waf/packages':
    get:
      description: Fetches WAF packages for a zone.
      operationId: waf-packages-list-waf-packages
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package_response_collection'
          description: List WAF packages response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/package_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List WAF packages response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List WAF packages
      tags:
        - WAF packages
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/firewall/waf/packages/{identifier}':
    get:
      description: Fetches the details of a WAF package.
      operationId: waf-packages-get-a-waf-package
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/package_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package_response_single'
          description: Get a WAF package response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/package_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a WAF package response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a WAF package
      tags:
        - WAF packages
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: Updates a WAF package. You can update the sensitivity and the action of an anomaly detection WAF package.
      operationId: waf-packages-update-a-waf-package
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/package_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action_mode:
                  $ref: '#/components/schemas/action_mode'
                sensitivity:
                  $ref: '#/components/schemas/sensitivity'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/package_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/anomaly_package'
          description: Update a WAF package response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/package_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/anomaly_package'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a WAF package response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a WAF package
      tags:
        - WAF packages
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/firewall/waf/packages/{package_identifier}/groups':
    get:
      description: Fetches the WAF rule groups in a WAF package.
      operationId: waf-rule-groups-list-waf-rule-groups
      parameters:
        - in: path
          name: package_identifier
          required: true
          schema:
            $ref: '#/components/schemas/package_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_group_response_collection'
          description: List WAF rule groups response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_group_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List WAF rule groups response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List WAF rule groups
      tags:
        - WAF rule groups
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/firewall/waf/packages/{package_identifier}/groups/{identifier}':
    get:
      description: Fetches the details of a WAF rule group.
      operationId: waf-rule-groups-get-a-waf-rule-group
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/group_components-schemas-identifier'
        - in: path
          name: package_identifier
          required: true
          schema:
            $ref: '#/components/schemas/package_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_group_response_single'
          description: Get a WAF rule group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_group_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a WAF rule group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a WAF rule group
      tags:
        - WAF rule groups
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: Updates a WAF rule group. You can update the state (`mode` parameter) of a rule group.
      operationId: waf-rule-groups-update-a-waf-rule-group
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/group_components-schemas-identifier'
        - in: path
          name: package_identifier
          required: true
          schema:
            $ref: '#/components/schemas/package_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mode:
                  $ref: '#/components/schemas/components-schemas-mode'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_group_response_single'
          description: Update a WAF rule group response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_group_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a WAF rule group response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a WAF rule group
      tags:
        - WAF rule groups
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_id}/firewall/waf/packages/{package_id}/rules':
    get:
      description: Fetches WAF rules in a WAF package.
      operationId: waf-rules-list-waf-rules
      parameters:
        - in: path
          name: package_id
          required: true
          schema:
            $ref: '#/components/schemas/package_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_collection'
          description: List WAF rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List WAF rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List WAF rules
      tags:
        - WAF rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_id}/firewall/waf/packages/{package_id}/rules/{identifier}':
    get:
      description: Fetches the details of a WAF rule in a WAF package.
      operationId: waf-rules-get-a-waf-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_components-schemas-identifier-2'
        - in: path
          name: package_id
          required: true
          schema:
            $ref: '#/components/schemas/package_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_single'
          description: Get a WAF rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a WAF rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a WAF rule
      tags:
        - WAF rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: Updates a WAF rule. You can only update the mode/action of the rule.
      operationId: waf-rules-update-a-waf-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_components-schemas-identifier-2'
        - in: path
          name: package_id
          required: true
          schema:
            $ref: '#/components/schemas/package_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mode:
                  description: The mode/action of the rule when triggered. You must use a value from the `allowed_modes` array of the current rule.
                  enum:
                    - default
                    - disable
                    - simulate
                    - block
                    - challenge
                    - 'on'
                    - 'off'
                  example: 'on'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_response_single'
                  - properties:
                      result:
                        oneOf:
                          - $ref: '#/components/schemas/anomaly_rule'
                          - $ref: '#/components/schemas/traditional_deny_rule'
                          - $ref: '#/components/schemas/traditional_allow_rule'
          description: Update a WAF rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/rule_response_single'
                      - properties:
                          result:
                            oneOf:
                              - $ref: '#/components/schemas/anomaly_rule'
                              - $ref: '#/components/schemas/traditional_deny_rule'
                              - $ref: '#/components/schemas/traditional_allow_rule'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a WAF rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a WAF rule
      tags:
        - WAF rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
