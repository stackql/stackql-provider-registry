openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Stream Live Inputs
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - cloudflare_stream
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    live_input_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              properties:
                liveInputs:
                  items:
                    $ref: '#/components/schemas/live_input_object_without_url'
                  type: array
                range:
                  description: The total number of remaining live inputs based on cursor position.
                  example: 1000
                  readOnly: true
                  type: integer
                total:
                  description: The total number of live inputs that match the provided filters.
                  example: 35586
                  readOnly: true
                  type: integer
              type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    live_input_object_without_url:
      properties:
        created:
          $ref: '#/components/schemas/connect_components-schemas-created'
        meta:
          $ref: '#/components/schemas/live_input_metadata'
        modified:
          $ref: '#/components/schemas/components-schemas-modified'
        uid:
          $ref: '#/components/schemas/live_input_identifier'
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    connect_components-schemas-created:
      description: The date and time the live input was created.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    live_input_metadata:
      description: A user modifiable key-value store used to reference other systems of record for managing live inputs.
      example:
        name: test stream 1
      type: object
    components-schemas-modified:
      description: The date and time the live input was last modified.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    live_input_identifier:
      description: A unique identifier for a live input.
      example: 66be4bf738797e01e1fca35a7bdecdcd
      maxLength: 32
      readOnly: true
      type: string
    create_input_request:
      properties:
        defaultCreator:
          $ref: '#/components/schemas/live_input_default_creator'
        meta:
          $ref: '#/components/schemas/live_input_metadata'
        recording:
          $ref: '#/components/schemas/live_input_recording_settings'
    live_input_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    live_input_default_creator:
      description: Sets the creator ID asssociated with this live input.
      type: string
    live_input_recording_settings:
      description: 'Records the input to a Cloudflare Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied.'
      example:
        mode: 'off'
        requireSignedURLs: false
        timeoutSeconds: 0
      properties:
        allowedOrigins:
          $ref: '#/components/schemas/live_input_recording_allowedOrigins'
        mode:
          $ref: '#/components/schemas/live_input_recording_mode'
        requireSignedURLs:
          $ref: '#/components/schemas/live_input_recording_requireSignedURLs'
        timeoutSeconds:
          $ref: '#/components/schemas/live_input_recording_timeoutSeconds'
      type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    live_input_recording_allowedOrigins:
      description: Lists the origins allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. An empty array allows videos to be viewed on any origin.
      example:
        - example.com
      items:
        type: string
      type: array
    live_input_recording_mode:
      default: 'off'
      description: Specifies the recording behavior for the live input. Set this value to `off` to prevent a recording. Set the value to `automatic` to begin a recording and transition to on-demand after Stream Live stops receiving input.
      enum:
        - 'off'
        - automatic
      example: automatic
      type: string
    live_input_recording_requireSignedURLs:
      default: false
      description: Indicates if a video using the live input has the `requireSignedURLs` property set. Also enforces access controls on any video recording of the livestream with the live input.
      example: true
      type: boolean
    live_input_recording_timeoutSeconds:
      default: 0
      description: Determines the amount of time a live input configured in `automatic` mode should wait before a recording transitions from live to on-demand. `0` is recommended for most use cases and indicates the platform default should be used.
      type: integer
    update_input_request:
      properties:
        defaultCreator:
          $ref: '#/components/schemas/live_input_default_creator'
        meta:
          $ref: '#/components/schemas/live_input_metadata'
        recording:
          $ref: '#/components/schemas/live_input_recording_settings'
    output_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/output'
              type: array
    output:
      properties:
        enabled:
          $ref: '#/components/schemas/output_enabled'
        streamKey:
          $ref: '#/components/schemas/output_streamKey'
        uid:
          $ref: '#/components/schemas/output_identifier'
        url:
          $ref: '#/components/schemas/output_url'
    output_enabled:
      default: true
      description: 'When enabled, live video streamed to the associated live input will be sent to the output URL. When disabled, live video will not be sent to the output URL, even when streaming to the associated live input. Use this to control precisely when you start and stop simulcasting to specific destinations like YouTube and Twitch.'
      example: true
      type: boolean
    output_streamKey:
      description: The streamKey used to authenticate against an output's target.
      example: uzya-f19y-g2g9-a2ee-51j2
      readOnly: true
      type: string
    output_identifier:
      description: A unique identifier for the output.
      example: baea4d9c515887b80289d5c33cf01145
      maxLength: 32
      readOnly: true
      type: string
    output_url:
      description: The URL an output uses to restream.
      example: 'rtmp://a.rtmp.youtube.com/live2'
      readOnly: true
      type: string
    create_output_request:
      properties:
        enabled:
          $ref: '#/components/schemas/output_enabled'
        streamKey:
          $ref: '#/components/schemas/output_streamKey'
        url:
          $ref: '#/components/schemas/output_url'
      required:
        - url
        - streamKey
    output_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/output'
    update_output_request:
      properties:
        enabled:
          $ref: '#/components/schemas/output_enabled'
      required:
        - enabled
    video_identifier:
      description: A unique identifier for the MP4 file.
      example: ea95132c15732412d22c1476fa83f27a
      maxLength: 32
      readOnly: true
      type: string
    downloads_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    key_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                properties:
                  created:
                    $ref: '#/components/schemas/keys_components-schemas-created'
                  id:
                    $ref: '#/components/schemas/keys_components-schemas-identifier'
                type: object
              type: array
    keys_components-schemas-created:
      description: The date and time a signing key was created.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    keys_components-schemas-identifier:
      example: 5213cfa121f70b8c1380686ffc371ba3
    key_generation_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/keys'
    keys:
      properties:
        created:
          $ref: '#/components/schemas/keys_components-schemas-created'
        id:
          $ref: '#/components/schemas/keys_components-schemas-identifier'
        jwk:
          $ref: '#/components/schemas/jwk'
        pem:
          $ref: '#/components/schemas/pem'
      type: object
    jwk:
      description: The signing key in JWK format.
      example: eyJ1c2UiOiJzaWciLCJrdHkiOiJSU0EiLCJraWQiOiI1MjEzY2ZhMTIxZjcwYjhjMTM4MDY4NmZmYzM3MWJhMyIsImFsZyI6IlJTMjU2IiwibiI6IjBUandqT2laV21KNDN2ZjNUbzREb1htWFd0SkdOR3lYZmh5dHRMYUJnRjEtRVFXUURLaG9LYm9hS21xakNBc21za3V0YkxVN1BVOGRrUU5ER1p3S3VWczA4elNaNGt4aTR0RWdQUFp5dDdkWEMtbFlSWW95ckFHRjRBWGh5MzI5YkhDUDFJbHJCQl9Ba0dnbmRMQWd1bnhZMHJSZ2N2T3ppYXc2S0p4Rm5jMlVLMFdVOGIwcDRLS0hHcDFLTDlkazBXVDhkVllxYmVSaUpqQ2xVRW1oOHl2OUNsT1ZhUzRLeGlYNnhUUTREWnc2RGFKZklWM1F0Tmd2cG1ieWxOSmFQSG5zc3JodDJHS1A5NjJlS2poUVJsaWd2SFhKTE9uSm9KZkxlSUVIWi1peFdmY1RETUg5MnNHdm93MURPanhMaUNOMXpISy1oN2JMb1hUaUxnYzRrdyIsImUiOiJBUUFCIiwiZCI6IndpQWEwaU5mWnNYSGNOcVMxSWhnUmdzVHJHay1TcFlYV2lReDZHTU9kWlJKekhGazN0bkRERFJvNHNKZTBxX0dEOWkzNlEyZkVadS15elpEcEJkc3U5OHNtaHhNU19Ta0s5X3VFYUo1Zm96V2IyN3JRRnFoLVliUU9MUThkUnNPRHZmQl9Hb2txWWJzblJDR3kzWkFaOGZJZ25ocXBUNEpiOHdsaWxpMUgxeFpzM3RnTWtkTEluTm1yMFAtcTYxZEtNd3JYZVRoSWNEc0kyb2Z1LTFtRm1MWndQb2ZGbmxaTW9QN1pfRU5pUGNfWGtWNzFhaHBOZE9pcW5ablZtMHBCNE5QS1UweDRWTjQyYlAzWEhMUmpkV2hJOGt3SC1BdXhqb3BLaHJ0R2tvcG1jZFRkM1ZRdElaOGRpZHByMXpBaEpvQi16ZVlIaTFUel9ZSFFld0FRUSIsInAiOiIyVTZFVUJka3U3TndDYXoyNzZuWGMxRXgwVHpNZjU4U0UtU2M2eUNaYWk2TkwzVURpWi1mNHlIdkRLYnFGUXdLWDNwZ0l2aVE3Y05QYUpkbE9NeS1mU21GTXU3V3hlbVZYamFlTjJCMkRDazhQY0NEOVgxU2hhR3E1ZUdSSHNObVUtSDNxTG1FRGpjLWliazRHZ0RNb2lVYjQ2OGxFZHAwU2pIOXdsOUdsYTgiLCJxIjoiOW5ucXg5ZnNNY2dIZ29DemhfVjJmaDhoRUxUSUM5aFlIOVBCTG9aQjZIaE1TWG1ja1BSazVnUlpPWlFEN002TzlMaWZjNmFDVXdEbjBlQzU2YkFDNUNrcWxjODJsVDhzTWlMeWJyTjh3bWotcjNjSTBGQTlfSGQySEY1ZkgycnJmenVqd0NWM3czb09Ud3p4d1g3c2xKbklRanphel91SzEyWEtucVZZcUYwIiwiZHAiOiJxQklTUTlfVUNWaV9Ucng0UU9VYnZoVU9jc2FUWkNHajJiNzNudU9YeElnOHFuZldSSnN4RG5zd2FKaXdjNWJjYnZ3M1h0VGhRd1BNWnhpeE1UMHFGNlFGWVY5WXZibnJ6UEp4YkdNdTZqajZYc2lIUjFlbWU3U09lVDM4Xzg0aFZyOXV6UkN2RWstb0R0MHlodW9YVzFGWVFNRTE2cGtMV0ZkUjdRUERsQUUiLCJkcSI6Im5zQUp3eXZFbW8tdW5wU01qYjVBMHB6MExCRjBZNFMxeGRJYXNfLVBSYzd0dThsVFdWMl8teExEOFR6dmhqX0lmY0RJR3JJZGNKNjlzVVZnR1M3ZnZkcng3Y21uNjFyai1XcmU0UVJFRC1lV1dxZDlpc2FVRmg5UGVKZ2tCbFZVVnYtdnladVlWdFF2a1NUU05ZR3RtVXl2V2xKZDBPWEFHRm9jdGlfak9aVSIsInFpIjoib0dYaWxLQ2NKRXNFdEE1eG54WUdGQW5UUjNwdkZLUXR5S0F0UGhHaHkybm5ya2VzN1RRaEFxMGhLRWZtU1RzaE1hNFhfd05aMEstX1F0dkdoNDhpeHdTTDVLTEwxZnFsY0k2TF9XUnF0cFQxS21LRERlUHR2bDVCUzFGbjgwSGFwR215cmZRWUU4S09QR2UwUl82S1BOZE1vc3dYQ3Nfd0RYMF92ZzNoNUxRIn0=
      readOnly: true
      type: string
    pem:
      description: The signing key in PEM format.
      example: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMFRqd2pPaVpXbUo0M3ZmM1RvNERvWG1YV3RKR05HeVhmaHl0dExhQmdGMStFUVdRCkRLaG9LYm9hS21xakNBc21za3V0YkxVN1BVOGRrUU5ER1p3S3VWczA4elNaNGt4aTR0RWdQUFp5dDdkWEMrbFkKUllveXJBR0Y0QVhoeTMyOWJIQ1AxSWxyQkIvQWtHZ25kTEFndW54WTByUmdjdk96aWF3NktKeEZuYzJVSzBXVQo4YjBwNEtLSEdwMUtMOWRrMFdUOGRWWXFiZVJpSmpDbFVFbWg4eXY5Q2xPVmFTNEt4aVg2eFRRNERadzZEYUpmCklWM1F0Tmd2cG1ieWxOSmFQSG5zc3JodDJHS1A5NjJlS2poUVJsaWd2SFhKTE9uSm9KZkxlSUVIWitpeFdmY1QKRE1IOTJzR3ZvdzFET2p4TGlDTjF6SEsraDdiTG9YVGlMZ2M0a3dJREFRQUJBb0lCQVFEQ0lCclNJMTlteGNkdwoycExVaUdCR0N4T3NhVDVLbGhkYUpESG9ZdzUxbEVuTWNXVGUyY01NTkdqaXdsN1NyOFlQMkxmcERaOFJtNzdMCk5rT2tGMnk3M3l5YUhFeEw5S1FyMys0Um9ubCtqTlp2YnV0QVdxSDVodEE0dER4MUd3NE85OEg4YWlTcGh1eWQKRUliTGRrQm54OGlDZUdxbFBnbHZ6Q1dLV0xVZlhGbXplMkF5UjBzaWMyYXZRLzZyclYwb3pDdGQ1T0Vod093agphaCs3N1dZV1l0bkEraDhXZVZreWcvdG44UTJJOXo5ZVJYdlZxR2sxMDZLcWRtZFdiU2tIZzA4cFRUSGhVM2paCnMvZGNjdEdOMWFFanlUQWY0QzdHT2lrcUd1MGFTaW1aeDFOM2RWQzBobngySjJtdlhNQ0VtZ0g3TjVnZUxWUFAKOWdkQjdBQkJBb0dCQU5sT2hGQVhaTHV6Y0Ftczl1K3AxM05STWRFOHpIK2ZFaFBrbk9zZ21Xb3VqUzkxQTRtZgpuK01oN3d5bTZoVU1DbDk2WUNMNGtPM0RUMmlYWlRqTXZuMHBoVEx1MXNYcGxWNDJuamRnZGd3cFBEM0FnL1Y5ClVvV2hxdVhoa1I3RFpsUGg5Nmk1aEE0M1BvbTVPQm9BektJbEcrT3ZKUkhhZEVveC9jSmZScFd2QW9HQkFQWjUKNnNmWDdESElCNEtBczRmMWRuNGZJUkMweUF2WVdCL1R3UzZHUWVoNFRFbDVuSkQwWk9ZRVdUbVVBK3pPanZTNApuM09tZ2xNQTU5SGd1ZW13QXVRcEtwWFBOcFUvTERJaThtNnpmTUpvL3E5M0NOQlFQZngzZGh4ZVh4OXE2Mzg3Cm84QWxkOE42RGs4TThjRis3SlNaeUVJODJzLzdpdGRseXA2bFdLaGRBb0dCQUtnU0VrUGYxQWxZdjA2OGVFRGwKRzc0VkRuTEdrMlFobzltKzk1N2psOFNJUEtwMzFrU2JNUTU3TUdpWXNIT1czRzc4TjE3VTRVTUR6R2NZc1RFOQpLaGVrQldGZldMMjU2OHp5Y1d4akx1bzQrbDdJaDBkWHBudTBqbms5L1AvT0lWYS9iczBRcnhKUHFBN2RNb2JxCkYxdFJXRURCTmVxWkMxaFhVZTBEdzVRQkFvR0JBSjdBQ2NNcnhKcVBycDZVakkyK1FOS2M5Q3dSZEdPRXRjWFMKR3JQL2owWE83YnZKVTFsZHYvc1N3L0U4NzRZL3lIM0F5QnF5SFhDZXZiRkZZQmt1MzczYThlM0pwK3RhNC9scQozdUVFUkEvbmxscW5mWXJHbEJZZlQzaVlKQVpWVkZiL3I4bWJtRmJVTDVFazBqV0JyWmxNcjFwU1hkRGx3QmhhCkhMWXY0em1WQW9HQkFLQmw0cFNnbkNSTEJMUU9jWjhXQmhRSjAwZDZieFNrTGNpZ0xUNFJvY3RwNTY1SHJPMDAKSVFLdElTaEg1a2s3SVRHdUYvOERXZEN2djBMYnhvZVBJc2NFaStTaXk5WDZwWENPaS8xa2FyYVU5U3BpZ3czago3YjVlUVV0UlovTkIycVJwc3EzMEdCUENqanhudEVmK2lqelhUS0xNRndyUDhBMTlQNzRONGVTMAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
      readOnly: true
      type: string
    deleted_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              example: ''
              type: string
    schemas-video_identifier:
      description: A unique identifier for the media file.
      example: ea95132c15732412d22c1476fa83f27a
      maxLength: 32
      readOnly: true
      type: string
    language_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/captions'
              type: array
    captions:
      properties:
        label:
          $ref: '#/components/schemas/label'
        language:
          $ref: '#/components/schemas/language'
      type: object
    label:
      description: The language label displayed in the native language to users.
      example: Türkçe
      readOnly: true
      type: string
    language:
      description: The language tag in BCP 47 format.
      example: tr
      readOnly: true
      type: string
    caption_basic_upload:
      properties:
        file:
          description: The WebVTT file containing the caption or subtitle content.
          example: '@/Users/kyle/Desktop/tr.vtt'
          type: string
      required:
        - file
      type: object
    language_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    components-schemas-account_identifier:
      description: The account identifier tag.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    videoClipStandard:
      properties:
        allowedOrigins:
          $ref: '#/components/schemas/allowedOrigins'
        clippedFromVideoUID:
          $ref: '#/components/schemas/clipped_from_video_uid'
        creator:
          $ref: '#/components/schemas/creator'
        endTimeSeconds:
          $ref: '#/components/schemas/end_time_seconds'
        maxDurationSeconds:
          $ref: '#/components/schemas/schemas-maxDurationSeconds'
        requireSignedURLs:
          $ref: '#/components/schemas/requireSignedURLs'
        startTimeSeconds:
          $ref: '#/components/schemas/start_time_seconds'
        thumbnailTimestampPct:
          $ref: '#/components/schemas/thumbnailTimestampPct'
        watermark:
          $ref: '#/components/schemas/watermarkAtUpload'
      required:
        - clippedFromVideoUID
        - startTimeSeconds
        - endTimeSeconds
      type: object
    clipResponseSingle:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/schemas-output'
    allowedOrigins:
      description: Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.
      example:
        - example.com
      items:
        type: string
      type: array
    clipped_from_video_uid:
      description: The unique video identifier (UID).
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    creator:
      description: A user-defined identifier for the media creator.
      example: creator-id_abcde12345
      maxLength: 64
      type: string
    end_time_seconds:
      description: Specifies the end time for the video clip in seconds.
      readOnly: true
      type: integer
    schemas-maxDurationSeconds:
      description: 'Calculates the amount of time a video occupies before the video is uploaded. Direct uploads occupy minutes of videos on your Stream account until they are expired. After upload, the upload duration is used instead. If a video longer than the value is uploaded, the video results in an error.'
      maximum: 21600
      minimum: 1
      type: integer
    requireSignedURLs:
      default: false
      description: 'Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.'
      example: true
      readOnly: true
      type: boolean
    start_time_seconds:
      description: Specifies the start time for the video clip in seconds.
      readOnly: true
      type: integer
    thumbnailTimestampPct:
      default: 0
      description: 'The timestamp for a thumbnail image calculated as a percentage value of the video''s duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.'
      example: 0.529241
      maximum: 1
      minimum: 0
      type: number
    watermarkAtUpload:
      properties:
        uid:
          description: The unique identifier for the watermark profile.
          example: ea95132c15732412d22c1476fa83f27a
          maxLength: 32
          type: string
      type: object
    schemas-output:
      properties:
        allowedOrigins:
          $ref: '#/components/schemas/allowedOrigins'
        clippedFromVideoUID:
          $ref: '#/components/schemas/clipped_from_video_uid'
        created:
          $ref: '#/components/schemas/clipping_components-schemas-created'
        creator:
          $ref: '#/components/schemas/creator'
        endTimeSeconds:
          $ref: '#/components/schemas/end_time_seconds'
        maxDurationSeconds:
          $ref: '#/components/schemas/schemas-maxDurationSeconds'
        meta:
          $ref: '#/components/schemas/schemas-media_metadata'
        modified:
          $ref: '#/components/schemas/components-schemas-modified'
        playback:
          $ref: '#/components/schemas/playback'
        preview:
          $ref: '#/components/schemas/preview'
        requireSignedURLs:
          $ref: '#/components/schemas/requireSignedURLs'
        startTimeSeconds:
          $ref: '#/components/schemas/start_time_seconds'
        status:
          $ref: '#/components/schemas/media_state'
        thumbnailTimestampPct:
          $ref: '#/components/schemas/thumbnailTimestampPct'
        watermark:
          $ref: '#/components/schemas/watermarkAtUpload'
    clipping_components-schemas-created:
      description: The date and time the live input was created.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    schemas-media_metadata:
      description: A user modifiable key-value store used to reference other systems of record for managing videos.
      example:
        name: example_filename.mp4
      type: object
    playback:
      properties:
        dash:
          description: DASH Media Presentation Description for the video.
          example: 'https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd'
          readOnly: true
          type: string
        hls:
          description: The HLS manifest for the video.
          example: 'https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8'
          readOnly: true
          type: string
      readOnly: true
      type: object
    preview:
      description: The video's preview page URI. This field is omitted until encoding is complete.
      example: 'https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/watch'
      format: uri
      readOnly: true
      type: string
    media_state:
      description: Specifies the processing status of the video.
      enum:
        - pendingupload
        - downloading
        - queued
        - inprogress
        - ready
        - error
      example: inprogress
      readOnly: true
      type: string
    video_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/videos'
              type: array
        - properties:
            range:
              description: The total number of remaining videos based on cursor position.
              example: 1000
              readOnly: true
              type: integer
            total:
              description: The total number of videos that match the provided filters.
              example: 35586
              readOnly: true
              type: integer
    videos:
      properties:
        allowedOrigins:
          $ref: '#/components/schemas/allowedOrigins'
        created:
          $ref: '#/components/schemas/schemas-created'
        creator:
          $ref: '#/components/schemas/creator'
        duration:
          $ref: '#/components/schemas/schemas-duration'
        input:
          $ref: '#/components/schemas/input'
        liveInput:
          $ref: '#/components/schemas/liveInput'
        maxDurationSeconds:
          $ref: '#/components/schemas/maxDurationSeconds'
        meta:
          $ref: '#/components/schemas/media_metadata'
        modified:
          $ref: '#/components/schemas/schemas-modified'
        nft:
          $ref: '#/components/schemas/nft'
        playback:
          $ref: '#/components/schemas/playback'
        preview:
          $ref: '#/components/schemas/preview'
        readyToStream:
          $ref: '#/components/schemas/readyToStream'
        requireSignedURLs:
          $ref: '#/components/schemas/requireSignedURLs'
        size:
          $ref: '#/components/schemas/size'
        status:
          $ref: '#/components/schemas/media_status'
        thumbnail:
          $ref: '#/components/schemas/thumbnail_url'
        thumbnailTimestampPct:
          $ref: '#/components/schemas/thumbnailTimestampPct'
        uid:
          $ref: '#/components/schemas/videos_components-schemas-identifier'
        uploadExpiry:
          $ref: '#/components/schemas/oneTimeUploadExpiry'
        uploaded:
          $ref: '#/components/schemas/uploaded'
        watermark:
          $ref: '#/components/schemas/watermarks'
      type: object
    schemas-created:
      description: The date and time the media item was created.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    schemas-duration:
      description: The duration of the video in seconds. A value of `-1` means the duration is unknown. The duration becomes available after the upload and before the video is ready.
      readOnly: true
      type: integer
    input:
      properties:
        height:
          description: The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.
          readOnly: true
          type: integer
        width:
          description: The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.
          readOnly: true
          type: integer
      readOnly: true
      type: object
    liveInput:
      description: The live input ID used to upload a video with Stream Live.
      example: fc0a8dc887b16759bfd9ad922230a014
      maxLength: 32
      readOnly: true
      type: string
    maxDurationSeconds:
      description: The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of `-1` means the value is unknown.
      type: integer
    media_metadata:
      description: A user modifiable key-value store used to reference other systems of record for managing videos.
      example: {}
      type: object
    schemas-modified:
      description: The date and time the media item was last modified.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    nft:
      properties:
        contract:
          description: The ERC-721 compatible contract address.
          example: '0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85'
          maxLength: 42
          minLength: 42
          readOnly: true
          type: string
        token:
          description: The token ID for the NFT.
          readOnly: true
          type: integer
      readOnly: true
      type: object
    readyToStream:
      description: Indicates whether the video is ready for viewing.
      example: true
      readOnly: true
      type: boolean
    size:
      description: The size of the media item in bytes.
      example: 4190963
      readOnly: true
      type: number
    media_status:
      description: 'Specifies a detailed status for a video. If the `state` is `inprogress` or `error`, the `step` field returns `encoding` or `manifest`. If the `state` is `inprogress`, `pctComplete` returns a number between 0 and 100 to indicate the approximate percent of completion. If the `state` is `error`, `errorReasonCode` and `errorReasonText` provide additional details.'
      properties:
        errorReasonCode:
          $ref: '#/components/schemas/errorReasonCode'
        errorReasonText:
          $ref: '#/components/schemas/errorReasonText'
        pctComplete:
          $ref: '#/components/schemas/pctComplete'
        state:
          $ref: '#/components/schemas/media_state'
      readOnly: true
    thumbnail_url:
      description: The media item's thumbnail URI. This field is omitted until encoding is complete.
      example: 'https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg'
      format: uri
      readOnly: true
      type: string
    videos_components-schemas-identifier:
      description: A Cloudflare-generated unique identifier for a media item.
      example: ea95132c15732412d22c1476fa83f27a
      maxLength: 32
      readOnly: true
      type: string
    oneTimeUploadExpiry:
      description: The date and time when the video upload URL is no longer valid for direct user uploads.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      type: string
    uploaded:
      description: The date and time the media item was uploaded.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    watermarks:
      properties:
        created:
          $ref: '#/components/schemas/components-schemas-created'
        downloadedFrom:
          $ref: '#/components/schemas/downloadedFrom'
        height:
          $ref: '#/components/schemas/height'
        name:
          $ref: '#/components/schemas/watermarks_components-schemas-name'
        opacity:
          $ref: '#/components/schemas/opacity'
        padding:
          $ref: '#/components/schemas/padding'
        position:
          $ref: '#/components/schemas/position'
        scale:
          $ref: '#/components/schemas/scale'
        size:
          $ref: '#/components/schemas/schemas-size'
        uid:
          $ref: '#/components/schemas/watermarks_components-schemas-identifier'
        width:
          $ref: '#/components/schemas/width'
      type: object
    errorReasonCode:
      description: Specifies why the video failed to encode. This field is empty if the video is not in an `error` state. Preferred for programmatic use.
      example: ERR_NON_VIDEO
      readOnly: true
      type: string
    errorReasonText:
      description: Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an `error` state.
      example: The file was not recognized as a valid video file.
      readOnly: true
      type: string
    pctComplete:
      description: Indicates the size of the entire upload in bytes. The value must be a non-negative integer.
      maximum: 100
      minimum: 0
      readOnly: true
      type: string
    components-schemas-created:
      description: The date and a time a watermark profile was created.
      example: '2014-01-02T02:20:00Z'
      format: date-time
      readOnly: true
      type: string
    downloadedFrom:
      description: 'The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.'
      example: 'https://company.com/logo.png'
      readOnly: true
      type: string
    height:
      description: The height of the image in pixels.
      readOnly: true
      type: integer
    watermarks_components-schemas-name:
      default: ''
      description: A short description of the watermark profile.
      example: Marketing Videos
      readOnly: true
      type: string
    opacity:
      default: 1
      description: 'The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.'
      example: 0.75
      maximum: 1
      minimum: 0
      readOnly: true
      type: number
    padding:
      default: 0.05
      description: 'The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.'
      example: 0.1
      maximum: 1
      minimum: 0
      readOnly: true
      type: number
    position:
      default: upperRight
      description: 'The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter.'
      example: center
      readOnly: true
      type: string
    scale:
      default: 0.15
      description: 'The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.'
      example: 0.1
      maximum: 1
      minimum: 0
      readOnly: true
      type: number
    schemas-size:
      description: The size of the image in bytes.
      example: 29472
      readOnly: true
      type: number
    watermarks_components-schemas-identifier:
      description: The unique identifier for a watermark profile.
      example: ea95132c15732412d22c1476fa83f27a
      maxLength: 32
      readOnly: true
      type: string
    width:
      description: The width of the image in pixels.
      readOnly: true
      type: integer
    tus_resumable:
      description: |-
        Specifies the TUS protocol version. This value must be included in every upload request.
        Notes: The only supported version of TUS protocol is 1.0.0.
      enum:
        - 1.0.0
      example: 1.0.0
      type: string
    upload_length:
      description: Indicates the size of the entire upload in bytes. The value must be a non-negative integer.
      minimum: 0
      type: integer
    video_copy_request:
      properties:
        allowedOrigins:
          $ref: '#/components/schemas/allowedOrigins'
        creator:
          $ref: '#/components/schemas/creator'
        requireSignedURLs:
          $ref: '#/components/schemas/requireSignedURLs'
        thumbnailTimestampPct:
          $ref: '#/components/schemas/thumbnailTimestampPct'
        url:
          description: A video's URL. The server must be publicly routable and support `HTTP HEAD` requests and `HTTP GET` range requests. The server should respond to `HTTP HEAD` requests with a `content-range` header that includes the size of the file.
          example: 'https://example.com/myvideo.mp4'
          format: uri
          type: string
        watermark:
          $ref: '#/components/schemas/watermark_at_upload'
      required:
        - url
    video_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    watermark_at_upload:
      properties:
        uid:
          description: The unique identifier for the watermark profile.
          example: ea95132c15732412d22c1476fa83f27a
          maxLength: 32
          type: string
      type: object
    direct_upload_request:
      properties:
        allowedOrigins:
          $ref: '#/components/schemas/allowedOrigins'
        creator:
          $ref: '#/components/schemas/creator'
        expiry:
          default: Now + 30 minutes
          description: The date and time after upload when videos will not be accepted.
          example: '2021-01-02T02:20:00Z'
          format: date-time
          type: string
        maxDurationSeconds:
          description: 'Calculates the amount of time a video occupies before the video is uploaded. Direct uploads occupy minutes of videos on your Stream account until they are expired. After upload, the upload duration is used instead. If a video longer than the value is uploaded, the video results in an error.'
          maximum: 21600
          minimum: 1
          type: integer
        requireSignedURLs:
          $ref: '#/components/schemas/requireSignedURLs'
        thumbnailTimestampPct:
          $ref: '#/components/schemas/thumbnailTimestampPct'
        watermark:
          $ref: '#/components/schemas/watermark_at_upload'
      required:
        - maxDurationSeconds
      type: object
    direct_upload_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                uid:
                  $ref: '#/components/schemas/videos_components-schemas-identifier'
                uploadURL:
                  description: The URL an unauthenticated upload can use for a single `HTTP POST multipart/form-data` request.
                  example: www.example.com/samplepath
                  type: string
                watermark:
                  $ref: '#/components/schemas/watermarks'
    signed_token_request:
      properties:
        accessRules:
          description: 'The optional list of access rule constraints on the token. Access can be blocked or allowed based on an IP, IP range, or by country. Access rules are evaluated from first to last. If a rule matches, the associated action is applied and no further rules are evaluated.'
          example:
            - action: block
              country:
                - US
                - MX
              type: ip.geoip.country
            - action: allow
              ip:
                - 93.184.216.0/24
                - '2400:cb00::/32'
              type: ip.src
            - action: block
              type: any
          items:
            $ref: '#/components/schemas/accessRules'
          readOnly: true
          type: array
        downloadable:
          default: false
          description: The optional boolean value that enables using signed tokens to access MP4 download links for a video.
          readOnly: true
          type: boolean
        exp:
          description: 'The optional unix epoch timestamp that specficies the time after a token is not accepted. The maximum time specification is 24 hours from issuing time. If this field is not set, the default is one hour after issuing.'
          readOnly: true
          type: integer
        id:
          description: 'The optional ID of a Stream signing key. If present, the `pem` field is also required.'
          example: ab0d4ef71g4425f8dcba9041231813000
          readOnly: true
          type: string
        nbf:
          description: 'The optional unix epoch timestamp that specifies the time before a the token is not accepted. If this field is not set, the default is one hour before issuing.'
          readOnly: true
          type: integer
        pem:
          description: 'The optional base64 encoded private key in PEM format associated with a Stream signing key. If present, the `id` field is also required.'
          example: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc284dnBvOFpEWXRkOUgzbWlPaW1qYXAzVXlVM0oyZ3kwTUYvN1R4blJuRnkwRHpDCkxqUk9naFZsQ0hPQmxsd3NVaE9GU0lyYnN4K05tUTdBeS90TFpXSGxuVGF3UWJ5WGZGOStJeDhVSnNlSHBGV1oKNVF5Z1JYd2liSjh1MVVsZ2xlcmZHMkpueldjVXpZTzEySktZN3doSkw1ajROMWgxZFJNUXQ5Q1pkZFlCQWRzOQpCdk02cjRFMDcxQkhQekhWeDMrUTI1VWtubGdUNXIwS3FiM1E1Y0dlTlBXY1JreW1ybkJEWWR0OXR4eFFMb1dPCllzNXdsMnVYWFVYL0VGcDMwajU0Nmp6czllWExLYlNDbjJjTDZFVE96Y2x3aG9DRGx2a2VQT05rUE9LMDVKNUMKTm1TdFdhMG9hV1VGRzM0MFl3cVVrWGt4OU9tNndXd1JldU1uU1FJREFRQUJBb0lCQUFJOHo1ck5kOEdtOGJBMgo1S3pxQjI1R2lOVENwbUNJeW53NXRJWHZTQmNHcEdydUcvdlN2WG9kVlFVSVY0TWdHQkVXUEFrVzdsNWVBcHI4CnA1ZFd5SkRXYTNkdklFSE9vSEpYU3dBYksxZzZEMTNVa2NkZ1EyRGpoNVhuWDhHZCtBY2c2SmRTQWgxOWtYSHEKMk54RUtBVDB6Ri83a1g2MkRkREFBcWxmQkpGSXJodVIvZUdEVWh4L2piTTRhQ2JCcFdiM0pnRE9OYm5tS1ZoMwpxS2ZwZmRZZENZU1lzWUxrNTlxRDF2VFNwUVFUQ0VadW9VKzNzRVNhdkJzaUs1bU0vTzY5ZkRMRXNURG1MeTVQCmhEK3BMQXI0SlhNNjFwRGVBS0l3cUVqWWJybXlDRHRXTUdJNnZzZ0E1eXQzUUJaME9vV2w5QUkwdWxoZ3p4dXQKZ2ZFNTRRRUNnWUVBN0F3a0lhVEEzYmQ4Nk9jSVZnNFlrWGk1cm5aNDdsM1k4V24zcjIzUmVISXhLdkllRUtSbgp5bUlFNDFtRVBBSmlGWFpLK1VPTXdkeS9EcnFJUithT1JiT2NiV01jWUg2QzgvbG1wdVJFaXE3SW1Ub3VWcnA4CnlnUkprMWprVDA4cTIvNmg4eTBEdjJqMitsaHFXNzRNOUt0cmwxcTRlWmZRUFREL01tR1NnTWtDZ1lFQXdhY04KaSttN1p6dnJtL3NuekF2VlZ5SEtwZHVUUjNERk1naC9maC9tZ0ZHZ1RwZWtUOVV5b3FleGNYQXdwMVlhL01iQQoyNTVJVDZRbXZZTm5yNXp6Wmxic2tMV0hsYllvbWhmWnVXTHhXR3hRaEFORWdaMFVVdUVTRGMvbWx2UXZHbEtSCkZoaGhBUWlVSmdDamhPaHk1SlBiNGFldGRKd0UxK09lVWRFaE1vRUNnWUVBNG8yZ25CM1o4ck5xa3NzemlBek4KYmNuMlJVbDJOaW9pejBwS3JMaDFaT29NNE5BekpQdjJsaHRQMzdtS0htS1hLMHczRjFqTEgwSTBxZmxFVmVZbQpSU1huakdHazJjUnpBYUVzOGgrQzNheDE0Z01pZUtGU3BqNUpNOEFNbVVZOXQ1cUVhN2FYc3o0V1ZoOUlMYmVTCkRiNzlhKzVwd21LQVBrcnBsTHhyZFdrQ2dZQlNNSHVBWVdBbmJYZ1BDS2FZWklGVWJNUWNacmY0ZnpWQ2lmYksKYWZHampvRlNPZXdEOGdGK3BWdWJRTGwxbkFieU44ek1xVDRaaHhybUhpcFlqMjJDaHV2NmN3RXJtbGRiSnpwQwpBMnRaVXdkTk1ESFlMUG5lUHlZeGRJWnlsUXFVeW14SGkydElUQUxNcWtLOGV3ZWdXZHpkeGhQSlJScU5JazhrCmZIVHhnUUtCZ1FEUFc2UXIxY3F3QjNUdnVWdWR4WGRqUTdIcDFodXhrNEVWaEFJZllKNFhSTW1NUE5YS28wdHUKdUt6LzE0QW14R0dvSWJxYVc1bDMzeFNteUxhem84clNUN0tSTjVKME9JSHcrZkR5SFgxdHpVSjZCTldDcEFTcwpjbWdNK0htSzVON0w2bkNaZFJQY2IwU1hGaVRQUGhCUG1PVWFDUnpER0ZMK2JYM1VwajJKbWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
          readOnly: true
          type: string
      readOnly: true
      type: object
    signed_token_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                token:
                  description: The signed token used with the signed URLs feature.
                  example: eyJhbGciOiJSUzI1NiIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIn0.eyJzdWIiOiJlYTk1MTMyYzE1NzMyNDEyZDIyYzE0NzZmYTgzZjI3YSIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIiwiZXhwIjoiMTUzNzQ2MDM2NSIsIm5iZiI6IjE1Mzc0NTMxNjUifQ.OZhqOARADn1iubK6GKcn25hN3nU-hCFF5q9w2C4yup0C4diG7aMIowiRpP-eDod8dbAJubsiFuTKrqPcmyCKWYsiv0TQueukqbQlF7HCO1TV-oF6El5-7ldJ46eD-ZQ0XgcIYEKrQOYFF8iDQbqPm3REWd6BnjKZdeVrLzuRaiSnZ9qqFpGu5dfxIY9-nZKDubJHqCr3Imtb211VIG_b9MdtO92JjvkDS-rxT_pkEfTZSafl1OU-98A7KBGtPSJHz2dHORIrUiTA6on4eIXTj9aFhGiir4rSn-rn0OjPRTtJMWIDMoQyE_fwrSYzB7MPuzL2t82BWaEbHZTfixBm5A
                  type: string
    accessRules:
      description: Defines rules for fine-grained control over content than signed URL tokens alone. Access rules primarily make tokens conditionally valid based on user information. Access Rules are specified on token payloads as the `accessRules` property containing an array of Rule objects.
      properties:
        action:
          description: 'The action to take when a request matches a rule. If the action is `block`, the signed token blocks views for viewers matching the rule.'
          enum:
            - allow
            - block
          example: allow
          readOnly: true
          type: string
        country:
          description: An array of 2-letter country codes in ISO 3166-1 Alpha-2 format used to match requests.
          items:
            type: string
          readOnly: true
          type: array
        ip:
          description: An array of IPv4 or IPV6 addresses or CIDRs used to match requests.
          items:
            type: string
          readOnly: true
          type: array
        type:
          description: Lists available rule types to match for requests. An `any` type matches all requests and can be used as a wildcard to apply default actions after other rules.
          enum:
            - any
            - ip.src
            - ip.geoip.country
          example: ip.src
          readOnly: true
          type: string
      readOnly: true
      type: object
    watermark_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/watermarks'
              type: array
    watermark_basic_upload:
      properties:
        file:
          description: The image file to upload.
          example: '@/Users/rchen/Downloads/watermark.png'
          type: string
        name:
          $ref: '#/components/schemas/watermarks_components-schemas-name'
        opacity:
          $ref: '#/components/schemas/opacity'
        padding:
          $ref: '#/components/schemas/padding'
        position:
          $ref: '#/components/schemas/position'
        scale:
          $ref: '#/components/schemas/scale'
      required:
        - file
      type: object
    watermark_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    webhook_components-schemas-account_identifier:
      description: Account identifier tag.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    webhook_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    webhook_request:
      properties:
        notificationUrl:
          $ref: '#/components/schemas/notificationUrl'
      required:
        - notificationUrl
    notificationUrl:
      description: The URL where webhooks will be sent.
      example: 'https://example.com'
      format: uri
      type: string
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_stream_live_inputs:
      id: cloudflare.cloudflare_stream.accounts_stream_live_inputs
      name: accounts_stream_live_inputs
      title: Accounts Stream Live Inputs
      methods:
        stream_live_inputs_list_live_inputs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_live_inputs_list_live_inputs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_live_inputs_create_a_live_input:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_live_inputs_delete_a_live_input:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_live_inputs_retrieve_a_live_input:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_live_inputs_retrieve_a_live_input:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_live_inputs_update_a_live_input:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_live_inputs/methods/stream_live_inputs_list_live_inputs'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_live_inputs/methods/stream_live_inputs_create_a_live_input'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_live_inputs/methods/stream_live_inputs_delete_a_live_input'
    accounts_stream_live_inputs_outputs:
      id: cloudflare.cloudflare_stream.accounts_stream_live_inputs_outputs
      name: accounts_stream_live_inputs_outputs
      title: Accounts Stream Live Inputs Outputs
      methods:
        stream_live_inputs_list_all_outputs_associated_with_a_specified_live_input:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}~1outputs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _stream_live_inputs_list_all_outputs_associated_with_a_specified_live_input:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}~1outputs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        'stream_live_inputs_create_a_new_output,_connected_to_a_live_input':
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}~1outputs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_live_inputs_delete_an_output:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}~1outputs~1{output_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_live_inputs_update_an_output:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1live_inputs~1{live_input_identifier}~1outputs~1{output_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_live_inputs_outputs/methods/stream_live_inputs_list_all_outputs_associated_with_a_specified_live_input'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_live_inputs_outputs/methods/stream_live_inputs_create_a_new_output,_connected_to_a_live_input'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_live_inputs_outputs/methods/stream_live_inputs_delete_an_output'
    accounts_stream_downloads:
      id: cloudflare.cloudflare_stream.accounts_stream_downloads
      name: accounts_stream_downloads
      title: Accounts Stream Downloads
      methods:
        stream_m_p_4_downloads_list_downloads:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{video_identifier}~1downloads/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _stream_m_p_4_downloads_list_downloads:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{video_identifier}~1downloads/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_m_p_4_downloads_create_downloads:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{video_identifier}~1downloads/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_downloads/methods/stream_m_p_4_downloads_list_downloads'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_downloads/methods/stream_m_p_4_downloads_create_downloads'
        update: []
        delete: []
    accounts_stream_keys:
      id: cloudflare.cloudflare_stream.accounts_stream_keys
      name: accounts_stream_keys
      title: Accounts Stream Keys
      methods:
        stream_signing_keys_list_signing_keys:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_signing_keys_list_signing_keys:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_signing_keys_create_signing_keys:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_signing_keys_delete_signing_keys:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1keys~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_keys/methods/stream_signing_keys_list_signing_keys'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_keys/methods/stream_signing_keys_create_signing_keys'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_keys/methods/stream_signing_keys_delete_signing_keys'
    accounts_stream_captions:
      id: cloudflare.cloudflare_stream.accounts_stream_captions
      name: accounts_stream_captions
      title: Accounts Stream Captions
      methods:
        stream_subtitles__captions_list_captions_or_subtitles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{video_identifier}~1captions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_subtitles__captions_list_captions_or_subtitles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{video_identifier}~1captions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_subtitles__captions_delete_captions_or_subtitles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{video_identifier}~1captions~1{language}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_subtitles__captions_upload_captions_or_subtitles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{video_identifier}~1captions~1{language}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_captions/methods/stream_subtitles__captions_list_captions_or_subtitles'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_captions/methods/stream_subtitles__captions_delete_captions_or_subtitles'
    accounts_stream:
      id: cloudflare.cloudflare_stream.accounts_stream
      name: accounts_stream
      title: Accounts Stream
      methods:
        stream_videos_list_videos:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_videos_list_videos:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_videos_initiate_video_uploads_using_tus:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_videos_delete_video:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_videos_retrieve_video_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_videos_retrieve_video_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_videos_associate_videos_to_nf_ts:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{identifier}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_video_clipping_clip_videos_given_a_start_and_end_time:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1clip/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_videos_upload_videos_from_a_url:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1copy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_videos_upload_videos_via_direct_upload_ur_ls:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1direct_upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_videos_retreieve_embed_code_html:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{identifier}~1embed/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_videos_retreieve_embed_code_html:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{identifier}~1embed/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_stream/methods/stream_videos_list_videos'
          - $ref: '#/components/x-stackQL-resources/accounts_stream/methods/stream_videos_retrieve_video_details'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_stream/methods/stream_videos_delete_video'
    accounts_stream_token:
      id: cloudflare.cloudflare_stream.accounts_stream_token
      name: accounts_stream_token
      title: Accounts Stream Token
      methods:
        stream_videos_create_signed_url_tokens_for_videso:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1{identifier}~1token/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_token/methods/stream_videos_create_signed_url_tokens_for_videso'
        update: []
        delete: []
    accounts_stream_watermarks:
      id: cloudflare.cloudflare_stream.accounts_stream_watermarks
      name: accounts_stream_watermarks
      title: Accounts Stream Watermarks
      methods:
        stream_watermark_profile_list_watermark_profiles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1watermarks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_watermark_profile_list_watermark_profiles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1watermarks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_watermark_profile_create_watermark_profiles_via_basic_upload:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1watermarks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_watermark_profile_delete_watermark_profiles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1watermarks~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_watermark_profile_watermark_profile_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1watermarks~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_watermark_profile_watermark_profile_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1watermarks~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_watermarks/methods/stream_watermark_profile_list_watermark_profiles'
          - $ref: '#/components/x-stackQL-resources/accounts_stream_watermarks/methods/stream_watermark_profile_watermark_profile_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_watermarks/methods/stream_watermark_profile_create_watermark_profiles_via_basic_upload'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_watermarks/methods/stream_watermark_profile_delete_watermark_profiles'
    accounts_stream_webhook:
      id: cloudflare.cloudflare_stream.accounts_stream_webhook
      name: accounts_stream_webhook
      title: Accounts Stream Webhook
      methods:
        stream_webhook_delete_webhooks:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1webhook/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_webhook_view_webhooks:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1webhook/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _stream_webhook_view_webhooks:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1webhook/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_webhook_create_webhooks:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1stream~1webhook/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_stream_webhook/methods/stream_webhook_delete_webhooks'
paths:
  '/accounts/{account_identifier}/stream/live_inputs':
    get:
      description: 'Lists the live inputs created for an account. To get the credentials needed to stream to a specific live input, request a single live input.'
      operationId: stream-live-inputs-list-live-inputs
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_input_response_collection'
          description: List live inputs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/live_input_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List live inputs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List live inputs
      tags:
        - Stream Live Inputs
    post:
      description: 'Creates a live input, and returns credentials that you or your users can use to stream live video to Cloudflare Stream.'
      operationId: stream-live-inputs-create-a-live-input
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_input_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_input_response_single'
          description: Create a live input response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/live_input_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a live input response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a live input
      tags:
        - Stream Live Inputs
  '/accounts/{account_identifier}/stream/live_inputs/{live_input_identifier}':
    delete:
      description: Prevents a live input from being streamed to and makes the live input inaccessible to any future API calls.
      operationId: stream-live-inputs-delete-a-live-input
      parameters:
        - in: path
          name: live_input_identifier
          required: true
          schema:
            $ref: '#/components/schemas/live_input_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete a live input response
        4xx:
          content:
            application/json: {}
          description: Delete a live input response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a live input
      tags:
        - Stream Live Inputs
    get:
      description: Retrieves details of an existing live input.
      operationId: stream-live-inputs-retrieve-a-live-input
      parameters:
        - in: path
          name: live_input_identifier
          required: true
          schema:
            $ref: '#/components/schemas/live_input_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_input_response_single'
          description: Retrieve a live input response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/live_input_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retrieve a live input response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retrieve a live input
      tags:
        - Stream Live Inputs
    put:
      description: Updates a specified live input.
      operationId: stream-live-inputs-update-a-live-input
      parameters:
        - in: path
          name: live_input_identifier
          required: true
          schema:
            $ref: '#/components/schemas/live_input_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_input_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_input_response_single'
          description: Update a live input response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/live_input_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a live input response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a live input
      tags:
        - Stream Live Inputs
  '/accounts/{account_identifier}/stream/live_inputs/{live_input_identifier}/outputs':
    get:
      description: Retrieves all outputs associated with a specified live input.
      operationId: stream-live-inputs-list-all-outputs-associated-with-a-specified-live-input
      parameters:
        - in: path
          name: live_input_identifier
          required: true
          schema:
            $ref: '#/components/schemas/live_input_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/output_response_collection'
          description: List all outputs associated with a specified live input response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/output_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List all outputs associated with a specified live input response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List all outputs associated with a specified live input
      tags:
        - Stream Live Inputs
    post:
      description: "Creates a new output that can be used to simulcast or restream live video to other RTMP or SRT destinations. Outputs are always linked to a specific live input —\_one live input can have many outputs."
      operationId: 'stream-live-inputs-create-a-new-output,-connected-to-a-live-input'
      parameters:
        - in: path
          name: live_input_identifier
          required: true
          schema:
            $ref: '#/components/schemas/live_input_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_output_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/output_response_single'
          description: 'Create a new output, connected to a live input response'
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/output_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: 'Create a new output, connected to a live input response failure'
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: 'Create a new output, connected to a live input'
      tags:
        - Stream Live Inputs
  '/accounts/{account_identifier}/stream/live_inputs/{live_input_identifier}/outputs/{output_identifier}':
    delete:
      description: Deletes an output and removes it from the associated live input.
      operationId: stream-live-inputs-delete-an-output
      parameters:
        - in: path
          name: output_identifier
          required: true
          schema:
            $ref: '#/components/schemas/output_identifier'
        - in: path
          name: live_input_identifier
          required: true
          schema:
            $ref: '#/components/schemas/live_input_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete an output response
        4xx:
          content:
            application/json: {}
          description: Delete an output response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an output
      tags:
        - Stream Live Inputs
    put:
      description: Updates the state of an output.
      operationId: stream-live-inputs-update-an-output
      parameters:
        - in: path
          name: output_identifier
          required: true
          schema:
            $ref: '#/components/schemas/output_identifier'
        - in: path
          name: live_input_identifier
          required: true
          schema:
            $ref: '#/components/schemas/live_input_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_output_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/output_response_single'
          description: Update an output response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/output_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an output response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an output
      tags:
        - Stream Live Inputs
  '/accounts/{account_identifier}/stream/{video_identifier}/downloads':
    get:
      description: Lists the downloads created for a video.
      operationId: stream-m-p-4-downloads-list-downloads
      parameters:
        - in: path
          name: video_identifier
          required: true
          schema:
            $ref: '#/components/schemas/video_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloads_response'
          description: List downloads response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/downloads_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List downloads response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List downloads
      tags:
        - Stream MP4 Downloads
    post:
      description: Creates a download for a video when a video is ready to view.
      operationId: stream-m-p-4-downloads-create-downloads
      parameters:
        - in: path
          name: video_identifier
          required: true
          schema:
            $ref: '#/components/schemas/video_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloads_response'
          description: Create downloads response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/downloads_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create downloads response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create downloads
      tags:
        - Stream MP4 Downloads
  '/accounts/{account_identifier}/stream/keys':
    get:
      description: Lists the video ID and creation date and time when a signing key was created.
      operationId: stream-signing-keys-list-signing-keys
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key_response_collection'
          description: List signing keys response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/key_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List signing keys response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List signing keys
      tags:
        - Stream Signing Keys
    post:
      description: 'Creates an RSA private key in PEM and JWK formats. Key files are only displayed once after creation. Keys are created, used, and deleted independently of videos, and every key can sign any video.'
      operationId: stream-signing-keys-create-signing-keys
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key_generation_response'
          description: Create signing keys response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/key_generation_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create signing keys response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create signing keys
      tags:
        - Stream Signing Keys
  '/accounts/{account_identifier}/stream/keys/{identifier}':
    delete:
      description: Deletes signing keys and revokes all signed URLs generated with the key.
      operationId: stream-signing-keys-delete-signing-keys
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/keys_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted_response'
          description: Delete signing keys response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deleted_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete signing keys response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete signing keys
      tags:
        - Stream Signing Keys
  '/accounts/{account_identifier}/stream/{video_identifier}/captions':
    get:
      description: Lists the available captions or subtitles for a specific video.
      operationId: stream-subtitles/-captions-list-captions-or-subtitles
      parameters:
        - in: path
          name: video_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-video_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/language_response_collection'
          description: List captions or subtitles response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/language_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List captions or subtitles response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List captions or subtitles
      tags:
        - Stream Subtitles/Captions
  '/accounts/{account_identifier}/stream/{video_identifier}/captions/{language}':
    delete:
      description: Removes the captions or subtitles from a video.
      operationId: stream-subtitles/-captions-delete-captions-or-subtitles
      parameters:
        - in: path
          name: language
          required: true
          schema:
            $ref: '#/components/schemas/language'
        - in: path
          name: video_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-video_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        example: ''
                        type: string
          description: Delete captions or subtitles response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            example: ''
                            type: string
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete captions or subtitles response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete captions or subtitles
      tags:
        - Stream Subtitles/Captions
    put:
      description: Uploads the caption or subtitle file to the endpoint for a specific BCP47 language. One caption or subtitle file per language is allowed.
      operationId: stream-subtitles/-captions-upload-captions-or-subtitles
      parameters:
        - in: path
          name: language
          required: true
          schema:
            $ref: '#/components/schemas/language'
        - in: path
          name: video_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-video_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/caption_basic_upload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/language_response_single'
          description: Upload captions or subtitles response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/language_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Upload captions or subtitles response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Upload captions or subtitles
      tags:
        - Stream Subtitles/Captions
  '/accounts/{account_identifier}/stream/clip':
    post:
      description: Clips a video based on the specified start and end times provided in seconds.
      operationId: stream-video-clipping-clip-videos-given-a-start-and-end-time
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/videoClipStandard'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clipResponseSingle'
          description: Clip videos given a start and end time response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/clipResponseSingle'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Clip videos given a start and end time response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Clip videos given a start and end time
      tags:
        - Stream Video Clipping
  '/accounts/{account_identifier}/stream':
    get:
      description: 'Lists up to 1000 videos from a single request. For a specific range, refer to the optional parameters.'
      operationId: stream-videos-list-videos
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/video_response_collection'
          description: List videos response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/video_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List videos response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List videos
      tags:
        - Stream Videos
    post:
      description: 'Initiates a video upload using the TUS protocol. On success, the server responds with a status code 201 (created) and includes a `location` header to indicate where the content should be uploaded. Refer to https://tus.io for protocol details.'
      operationId: stream-videos-initiate-video-uploads-using-tus
      parameters:
        - in: header
          name: Tus-Resumable
          required: true
          schema:
            $ref: '#/components/schemas/tus_resumable'
        - in: header
          name: Upload-Creator
          required: true
          schema:
            $ref: '#/components/schemas/creator'
        - in: header
          name: Upload-Length
          required: true
          schema:
            $ref: '#/components/schemas/upload_length'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Initiate video uploads using TUS response
        4xx:
          content:
            application/json: {}
          description: Initiate video uploads using TUS response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Initiate video uploads using TUS
      tags:
        - Stream Videos
  '/accounts/{account_identifier}/stream/copy':
    post:
      description: Uploads a video to Stream from a provided URL.
      operationId: stream-videos-upload-videos-from-a-url
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/video_copy_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/video_response_single'
          description: Upload videos from a URL response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/video_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Upload videos from a URL response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Upload videos from a URL
      tags:
        - Stream Videos
  '/accounts/{account_identifier}/stream/direct_upload':
    post:
      description: Creates a direct upload that allows video uploads without an API key.
      operationId: stream-videos-upload-videos-via-direct-upload-ur-ls
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/direct_upload_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_upload_response'
          description: Upload videos via direct upload URLs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/direct_upload_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Upload videos via direct upload URLs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Upload videos via direct upload URLs
      tags:
        - Stream Videos
  '/accounts/{account_identifier}/stream/{identifier}':
    delete:
      description: Deletes a video and its copies from Cloudflare Stream.
      operationId: stream-videos-delete-video
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/videos_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete video response
        4xx:
          content:
            application/json: {}
          description: Delete video response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete video
      tags:
        - Stream Videos
    get:
      description: Fetches details for a single video.
      operationId: stream-videos-retrieve-video-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/videos_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/video_response_single'
          description: Retrieve video details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/video_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retrieve video details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retrieve video details
      tags:
        - Stream Videos
    post:
      description: 'Asssociates videos with a token ID and contract address to transfer admin rights on a video. If a change in ownership of the ERC-721 token happens on the Ethereum blockchain, the new token owner can claim control of the video.'
      operationId: stream-videos-associate-videos-to-nf-ts
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/videos_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nft'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/video_response_collection'
          description: Associate videos to NFTs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/video_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Associate videos to NFTs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Associate videos to NFTs
      tags:
        - Stream Videos
  '/accounts/{account_identifier}/stream/{identifier}/embed':
    get:
      description: 'Fetches an HTML code snippet to embed a video in a web page delivered through Cloudflare. On success, returns an HTML fragment for use on web pages to display a video. On failure, returns a JSON response body.'
      operationId: stream-videos-retreieve-embed-code-html
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/videos_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                example: '<stream id="ea95132c15732412d22c1476fa83f27a"></stream><script data-cfasync="false" defer type="text/javascript" src="https://embed.cloudflarestream.com/embed/we4g.fla9.latest.js"></script>'
          description: Retreieve embed Code HTML response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - example: '<stream id="ea95132c15732412d22c1476fa83f27a"></stream><script data-cfasync="false" defer type="text/javascript" src="https://embed.cloudflarestream.com/embed/we4g.fla9.latest.js"></script>'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retreieve embed Code HTML response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retreieve embed Code HTML
      tags:
        - Stream Videos
  '/accounts/{account_identifier}/stream/{identifier}/token':
    post:
      description: 'Creates a signed URL token for a video. If a body is not provided in the request, a token is created with default values.'
      operationId: stream-videos-create-signed-url-tokens-for-videso
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/videos_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signed_token_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signed_token_response'
          description: Create signed URL tokens for videso response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/signed_token_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create signed URL tokens for videso response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create signed URL tokens for videso
      tags:
        - Stream Videos
  '/accounts/{account_identifier}/stream/watermarks':
    get:
      description: Lists all watermark profiles for an account.
      operationId: stream-watermark-profile-list-watermark-profiles
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/watermark_response_collection'
          description: List watermark profiles response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/watermark_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List watermark profiles response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List watermark profiles
      tags:
        - Stream Watermark Profile
    post:
      description: Creates watermark profiles using a single `HTTP POST multipart/form-data` request.
      operationId: stream-watermark-profile-create-watermark-profiles-via-basic-upload
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/watermark_basic_upload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/watermark_response_single'
          description: Create watermark profiles via basic upload response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/watermark_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create watermark profiles via basic upload response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create watermark profiles via basic upload
      tags:
        - Stream Watermark Profile
  '/accounts/{account_identifier}/stream/watermarks/{identifier}':
    delete:
      description: Deletes a watermark profile.
      operationId: stream-watermark-profile-delete-watermark-profiles
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/watermarks_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        example: ''
                        type: string
          description: Delete watermark profiles response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            example: ''
                            type: string
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete watermark profiles response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete watermark profiles
      tags:
        - Stream Watermark Profile
    get:
      description: Retrieves details for a single watermark profile.
      operationId: stream-watermark-profile-watermark-profile-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/watermarks_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/watermark_response_single'
          description: Watermark profile details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/watermark_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Watermark profile details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Watermark profile details
      tags:
        - Stream Watermark Profile
  '/accounts/{account_identifier}/stream/webhook':
    delete:
      description: Deletes a webhook.
      operationId: stream-webhook-delete-webhooks
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/webhook_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted_response'
          description: Delete webhooks response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deleted_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete webhooks response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete webhooks
      tags:
        - Stream Webhook
    get:
      description: Retrieves a list of webhooks.
      operationId: stream-webhook-view-webhooks
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/webhook_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_single'
          description: View webhooks response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/webhook_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: View webhooks response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: View webhooks
      tags:
        - Stream Webhook
    put:
      description: Creates a webhook notification.
      operationId: stream-webhook-create-webhooks
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/webhook_components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_single'
          description: Create webhooks response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/webhook_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create webhooks response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create webhooks
      tags:
        - Stream Webhook
