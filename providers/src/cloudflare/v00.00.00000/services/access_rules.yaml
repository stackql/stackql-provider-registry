openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: IP Access rules for a user
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - access_rules
  version: 4.0.0
components:
  schemas:
    rule_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/rule'
              type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    rule:
      properties:
        allowed_modes:
          description: The available actions that a rule can apply to a matched request.
          example:
            - whitelist
            - block
            - challenge
            - js_challenge
            - managed_challenge
          items:
            $ref: '#/components/schemas/schemas-mode'
          readOnly: true
          type: array
        configuration:
          $ref: '#/components/schemas/schemas-configuration'
        created_on:
          description: The timestamp of when the rule was created.
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/rule_components-schemas-identifier'
        mode:
          $ref: '#/components/schemas/schemas-mode'
        modified_on:
          description: The timestamp of when the rule was last modified.
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        notes:
          $ref: '#/components/schemas/notes'
      required:
        - id
        - mode
        - allowed_modes
        - configuration
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    schemas-mode:
      description: The action to apply to a matched request.
      enum:
        - block
        - challenge
        - whitelist
        - js_challenge
        - managed_challenge
      example: challenge
      type: string
    schemas-configuration:
      description: The rule configuration.
      oneOf:
        - $ref: '#/components/schemas/ip_configuration'
        - $ref: '#/components/schemas/ipv6_configuration'
        - $ref: '#/components/schemas/cidr_configuration'
        - $ref: '#/components/schemas/asn_configuration'
        - $ref: '#/components/schemas/country_configuration'
      type: object
    rule_components-schemas-identifier:
      description: The unique identifier of the IP Access rule.
      example: 92f17202ed8bd63d69a66b86a49a8f6b
      maxLength: 32
      readOnly: true
      type: string
    notes:
      description: 'An informative summary of the rule, typically used as a reminder or explanation.'
      example: This rule is enabled because of an event that occurred on date X.
      type: string
    ip_configuration:
      properties:
        target:
          description: The configuration target. You must set the target to `ip` when specifying an IP address in the rule.
          enum:
            - ip
          example: ip
        value:
          description: The IP address to match. This address will be compared to the IP address of incoming requests.
          example: 198.51.100.4
          type: string
      title: An IP address configuration.
    ipv6_configuration:
      properties:
        target:
          description: The configuration target. You must set the target to `ip6` when specifying an IPv6 address in the rule.
          enum:
            - ip6
          example: ip6
        value:
          description: The IPv6 address to match.
          example: '2001:DB8:100::CF'
          type: string
      title: An IPv6 address configuration.
    cidr_configuration:
      properties:
        target:
          description: The configuration target. You must set the target to `ip_range` when specifying an IP address range in the rule.
          enum:
            - ip_range
          example: ip_range
        value:
          description: 'The IP address range to match. You can only use prefix lengths `/16` and `/24` for IPv4 ranges, and prefix lengths `/32`, `/48`, and `/64` for IPv6 ranges.'
          example: 198.51.100.4/16
          type: string
      title: An IP address range configuration.
    asn_configuration:
      properties:
        target:
          description: The configuration target. You must set the target to `asn` when specifying an Autonomous System Number (ASN) in the rule.
          enum:
            - asn
          example: asn
        value:
          description: The AS number to match.
          example: AS12345
          type: string
      title: An ASN configuration.
    country_configuration:
      properties:
        target:
          description: The configuration target. You must set the target to `country` when specifying a country code in the rule.
          enum:
            - country
          example: country
        value:
          description: 'The two-letter ISO-3166-1 alpha-2 code to match. For more information, refer to [IP Access rules: Parameters](https://developers.cloudflare.com/waf/tools/ip-access-rules/parameters/#country).'
          example: US
          type: string
      title: A country configuration.
    rule_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/rule'
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    rule_single_id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/rule_components-schemas-identifier'
              type: object
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    account_identifier: {}
    response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                type: object
              type: array
          type: object
    response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    schemas-identifier: {}
    api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                id:
                  $ref: '#/components/schemas/common_components-schemas-identifier'
              required:
                - id
              type: object
    schemas-rule:
      allOf:
        - $ref: '#/components/schemas/rule'
        - properties:
            scope:
              description: All zones owned by the user will have the rule applied.
              properties:
                email:
                  $ref: '#/components/schemas/email'
                id:
                  $ref: '#/components/schemas/common_components-schemas-identifier'
                type:
                  description: The scope of the rule.
                  enum:
                    - user
                    - organization
                  example: user
                  readOnly: true
              readOnly: true
              type: object
      required:
        - id
        - mode
        - allowed_modes
        - configuration
        - scope
    email:
      description: The contact email address of the user.
      example: user@example.com
      maxLength: 90
      type: string
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    user_firewall_rules:
      id: cloudflare.access_rules.user_firewall_rules
      name: user_firewall_rules
      title: User Firewall Rules
      methods:
        ip_access_rules_for_a_user_list_ip_access_rules:
          operation:
            $ref: '#/paths/~1user~1firewall~1access_rules~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _ip_access_rules_for_a_user_list_ip_access_rules:
          operation:
            $ref: '#/paths/~1user~1firewall~1access_rules~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_a_user_create_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1user~1firewall~1access_rules~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_a_user_delete_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1user~1firewall~1access_rules~1rules~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_a_user_update_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1user~1firewall~1access_rules~1rules~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_firewall_rules/methods/ip_access_rules_for_a_user_list_ip_access_rules'
        insert:
          - $ref: '#/components/x-stackQL-resources/user_firewall_rules/methods/ip_access_rules_for_a_user_create_an_ip_access_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_firewall_rules/methods/ip_access_rules_for_a_user_delete_an_ip_access_rule'
    zones_firewall_rules:
      id: cloudflare.access_rules.zones_firewall_rules
      name: zones_firewall_rules
      title: Zones Firewall Rules
      methods:
        ip_access_rules_for_a_zone_list_ip_access_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1access_rules~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _ip_access_rules_for_a_zone_list_ip_access_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1access_rules~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_a_zone_create_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1access_rules~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_a_zone_delete_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1access_rules~1rules~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_a_zone_update_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1firewall~1access_rules~1rules~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_rules/methods/ip_access_rules_for_a_zone_list_ip_access_rules'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_rules/methods/ip_access_rules_for_a_zone_create_an_ip_access_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_firewall_rules/methods/ip_access_rules_for_a_zone_delete_an_ip_access_rule'
    accounts_firewall_rules:
      id: cloudflare.access_rules.accounts_firewall_rules
      name: accounts_firewall_rules
      title: Accounts Firewall Rules
      methods:
        ip_access_rules_for_an_account_list_ip_access_rules:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1firewall~1access_rules~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _ip_access_rules_for_an_account_list_ip_access_rules:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1firewall~1access_rules~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_an_account_create_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1firewall~1access_rules~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_an_account_delete_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1firewall~1access_rules~1rules~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_an_account_get_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1firewall~1access_rules~1rules~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _ip_access_rules_for_an_account_get_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1firewall~1access_rules~1rules~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ip_access_rules_for_an_account_update_an_ip_access_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1firewall~1access_rules~1rules~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_firewall_rules/methods/ip_access_rules_for_an_account_list_ip_access_rules'
          - $ref: '#/components/x-stackQL-resources/accounts_firewall_rules/methods/ip_access_rules_for_an_account_get_an_ip_access_rule'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_firewall_rules/methods/ip_access_rules_for_an_account_create_an_ip_access_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_firewall_rules/methods/ip_access_rules_for_an_account_delete_an_ip_access_rule'
paths:
  /user/firewall/access_rules/rules:
    get:
      description: Fetches IP Access rules of the user. You can filter the results using several optional parameters.
      operationId: ip-access-rules-for-a-user-list-ip-access-rules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_collection_response'
          description: List IP Access rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List IP Access rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List IP Access rules
      tags:
        - IP Access rules for a user
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: |-
        Creates a new IP Access rule for all zones owned by the current user.

        Note: To create an IP Access rule that applies to a specific zone, refer to the [IP Access rules for a zone](#ip-access-rules-for-a-zone) endpoints.
      operationId: ip-access-rules-for-a-user-create-an-ip-access-rule
      requestBody:
        content:
          application/json:
            schema:
              properties:
                configuration:
                  $ref: '#/components/schemas/schemas-configuration'
                mode:
                  $ref: '#/components/schemas/schemas-mode'
                notes:
                  $ref: '#/components/schemas/notes'
              required:
                - mode
                - configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_single_response'
          description: Create an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an IP Access rule
      tags:
        - IP Access rules for a user
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/user/firewall/access_rules/rules/{identifier}':
    delete:
      description: |-
        Deletes an IP Access rule at the user level.

        Note: Deleting a user-level rule will affect all zones owned by the user.
      operationId: ip-access-rules-for-a-user-delete-an-ip-access-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_single_id_response'
          description: Delete an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_single_id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an IP Access rule
      tags:
        - IP Access rules for a user
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates an IP Access rule defined at the user level. You can only update the rule action (`mode` parameter) and notes.
      operationId: ip-access-rules-for-a-user-update-an-ip-access-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mode:
                  $ref: '#/components/schemas/schemas-mode'
                notes:
                  $ref: '#/components/schemas/notes'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_single_response'
          description: Update an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an IP Access rule
      tags:
        - IP Access rules for a user
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/firewall/access_rules/rules':
    get:
      description: Fetches IP Access rules of a zone. You can filter the results using several optional parameters.
      operationId: ip-access-rules-for-a-zone-list-ip-access-rules
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_collection_response'
          description: List IP Access rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List IP Access rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List IP Access rules
      tags:
        - IP Access rules for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: |-
        Creates a new IP Access rule for a zone.

        Note: To create an IP Access rule that applies to multiple zones, refer to [IP Access rules for a user](#ip-access-rules-for-a-user) or [IP Access rules for an account](#ip-access-rules-for-an-account) as appropriate.
      operationId: ip-access-rules-for-a-zone-create-an-ip-access-rule
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                configuration:
                  $ref: '#/components/schemas/schemas-configuration'
                mode:
                  $ref: '#/components/schemas/schemas-mode'
                notes:
                  $ref: '#/components/schemas/notes'
              required:
                - mode
                - configuration
                - notes
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_single_response'
          description: Create an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an IP Access rule
      tags:
        - IP Access rules for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/firewall/access_rules/rules/{identifier}':
    delete:
      description: |-
        Deletes an IP Access rule defined at the zone level.

        Optionally, you can use the `cascade` property to specify that you wish to delete similar rules in other zones managed by the same zone owner.
      operationId: ip-access-rules-for-a-zone-delete-an-ip-access-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cascade:
                  default: none
                  description: 'The level to attempt to delete similar rules defined for other zones with the same owner. The default value is `none`, which will only delete the current rule. Using `basic` will delete rules that match the same action (mode) and configuration, while using `aggressive` will delete rules that match the same configuration.'
                  enum:
                    - none
                    - basic
                    - aggressive
                  type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_single_id_response'
          description: Delete an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_single_id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an IP Access rule
      tags:
        - IP Access rules for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates an IP Access rule defined at the zone level. You can only update the rule action (`mode` parameter) and notes.
      operationId: ip-access-rules-for-a-zone-update-an-ip-access-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/rule_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mode:
                  $ref: '#/components/schemas/schemas-mode'
                notes:
                  $ref: '#/components/schemas/notes'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_single_response'
          description: Update an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rule_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an IP Access rule
      tags:
        - IP Access rules for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/firewall/access_rules/rules':
    get:
      description: Fetches IP Access rules of an account. These rules apply to all the zones in the account. You can filter the results using several optional parameters.
      operationId: ip-access-rules-for-an-account-list-ip-access-rules
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_collection'
          description: List IP Access rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List IP Access rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List IP Access rules
      tags:
        - IP Access rules for an account
      x-cfPermissionsRequired:
        enum:
          - '#waf:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: |-
        Creates a new IP Access rule for an account. The rule will apply to all zones in the account.

        Note: To create an IP Access rule that applies to a single zone, refer to the [IP Access rules for a zone](#ip-access-rules-for-a-zone) endpoints.
      operationId: ip-access-rules-for-an-account-create-an-ip-access-rule
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                configuration:
                  $ref: '#/components/schemas/schemas-configuration'
                mode:
                  $ref: '#/components/schemas/schemas-mode'
                notes:
                  $ref: '#/components/schemas/notes'
              required:
                - mode
                - configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Create an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create an IP Access rule
      tags:
        - IP Access rules for an account
      x-cfPermissionsRequired:
        enum:
          - '#waf:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/firewall/access_rules/rules/{identifier}':
    delete:
      description: |-
        Deletes an existing IP Access rule defined at the account level.

        Note: This operation will affect all zones in the account.
      operationId: ip-access-rules-for-an-account-delete-an-ip-access-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Delete an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete an IP Access rule
      tags:
        - IP Access rules for an account
      x-cfPermissionsRequired:
        enum:
          - '#waf:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the details of an IP Access rule defined at the account level.
      operationId: ip-access-rules-for-an-account-get-an-ip-access-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Get an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get an IP Access rule
      tags:
        - IP Access rules for an account
      x-cfPermissionsRequired:
        enum:
          - '#waf:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: |-
        Updates an IP Access rule defined at the account level.

        Note: This operation will affect all zones in the account.
      operationId: ip-access-rules-for-an-account-update-an-ip-access-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-rule'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Update an IP Access rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an IP Access rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an IP Access rule
      tags:
        - IP Access rules for an account
      x-cfPermissionsRequired:
        enum:
          - '#waf:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
