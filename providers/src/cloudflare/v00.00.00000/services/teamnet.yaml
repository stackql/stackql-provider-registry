openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Tunnel Route
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - teamnet
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    route_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/teamnet'
              type: array
          type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    teamnet:
      properties:
        comment:
          $ref: '#/components/schemas/comment'
        created_at:
          description: 'Timestamps when the route was created, formatted in RFC 3339.'
        deleted_at:
          description: 'If present, indicates route was deleted at the given date (formatted in RFC 3339). If absent, route has not been deleted.'
          example: '2021-01-25T18:22:34.317854Z'
          format: date-time
          nullable: true
          readOnly: true
          type: string
        network:
          description: CIDR notation of the IPv4 or IPv6 range of the network the route connects to.
        tunnel_id:
          description: UUID of the Tunnel the route belongs to.
        tunnel_name:
          description: User-friendly name of the Tunnel the route belongs to.
        virtual_network_id:
          description: UUID of the virtual network this route belongs to.
      required:
        - network
        - tunnel_id
        - comment
        - created_at
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    comment:
      description: Optional remark describing the route. Empty if none.
      example: Example comment for this route
      type: string
    teamnet_components-schemas-ip:
      example: 10.1.0.137
      type: string
    route_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    ip_network_encoded:
      example: 172.16.0.0%2F16
      type: string
    vnet_id:
      description: UUID of the virtual network.
      example: f70ff985-a4ef-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      readOnly: true
      type: string
    vnet_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/virtual-network'
              type: array
          type: object
    virtual-network:
      properties:
        comment:
          $ref: '#/components/schemas/schemas-comment'
        created_at:
          description: 'Timestamp of when the virtual network was created, formatted in RFC 3339.'
        deleted_at:
          description: 'If present, indicates that the virtual network was deleted at the given date (formatted in RFC 3339). If absent, the virtual network has not been deleted.'
          example: '2021-01-25T18:22:34.317854Z'
          format: date-time
          nullable: true
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/vnet_id'
        is_default_network:
          $ref: '#/components/schemas/is_default_network'
        name:
          $ref: '#/components/schemas/vnet_name'
      required:
        - id
        - name
        - is_default_network
        - comment
        - created_at
      type: object
    schemas-comment:
      description: Optional remark describing the virtual network. Empty if none.
      example: Staging VPC for data science
      type: string
    is_default_network:
      description: 'Whether this virtual network is the default one for the account. This means IP Routes belong to this virtual network and Teams Clients in the account route through this virtual network, unless specified otherwise for each case.'
      example: true
      type: boolean
    vnet_name:
      description: A user-friendly name chosen when the virtual network is created. Cannot be empty.
      example: us-east-1-vpc
      type: string
    vnet_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_routes:
      id: cloudflare.teamnet.accounts_routes
      name: accounts_routes
      title: Accounts Routes
      methods:
        tunnel_route_list_tunnel_routes:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1routes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _tunnel_route_list_tunnel_routes:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1routes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_routes/methods/tunnel_route_list_tunnel_routes'
        insert: []
        update: []
        delete: []
    accounts_routes_ip:
      id: cloudflare.teamnet.accounts_routes_ip
      name: accounts_routes_ip
      title: Accounts Routes Ip
      methods:
        tunnel_route_get_tunnel_route_by_ip:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1routes~1ip~1{ip}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _tunnel_route_get_tunnel_route_by_ip:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1routes~1ip~1{ip}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_routes_ip/methods/tunnel_route_get_tunnel_route_by_ip'
        insert: []
        update: []
        delete: []
    accounts_routes_network:
      id: cloudflare.teamnet.accounts_routes_network
      name: accounts_routes_network
      title: Accounts Routes Network
      methods:
        tunnel_route_delete_route:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1routes~1network~1{ip_network_encoded}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tunnel_route_update_route:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1routes~1network~1{ip_network_encoded}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tunnel_route_create_route:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1routes~1network~1{ip_network_encoded}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_routes_network/methods/tunnel_route_create_route'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_routes_network/methods/tunnel_route_delete_route'
    accounts_virtual_networks:
      id: cloudflare.teamnet.accounts_virtual_networks
      name: accounts_virtual_networks
      title: Accounts Virtual Networks
      methods:
        tunnel_virtual_network_list_virtual_networks:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1virtual_networks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _tunnel_virtual_network_list_virtual_networks:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1virtual_networks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tunnel_virtual_network_create_virtual_network:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1virtual_networks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tunnel_virtual_network_delete_virtual_network:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1virtual_networks~1{vnet_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tunnel_virtual_network_update_virtual_network:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1teamnet~1virtual_networks~1{vnet_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_virtual_networks/methods/tunnel_virtual_network_list_virtual_networks'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_virtual_networks/methods/tunnel_virtual_network_create_virtual_network'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_virtual_networks/methods/tunnel_virtual_network_delete_virtual_network'
paths:
  '/accounts/{account_identifier}/teamnet/routes':
    get:
      description: 'List, search and filter an account''s tunnel routes.'
      operationId: tunnel-route-list-tunnel-routes
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route_response_collection'
          description: List Tunnel Routes response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Tunnel Routes response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Tunnel Routes
      tags:
        - Tunnel Route
  '/accounts/{account_identifier}/teamnet/routes/ip/{ip}':
    get:
      description: Find the Tunnel Route that encompasses the given IP.
      operationId: tunnel-route-get-tunnel-route-by-ip
      parameters:
        - in: path
          name: ip
          required: true
          schema:
            $ref: '#/components/schemas/teamnet_components-schemas-ip'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route_response_single'
          description: Get Tunnel Route by IP response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Tunnel Route by IP response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Tunnel Route by IP
      tags:
        - Tunnel Route
  '/accounts/{account_identifier}/teamnet/routes/network/{ip_network_encoded}':
    delete:
      description: Delete an existing route from the account's routing table.
      operationId: tunnel-route-delete-route
      parameters:
        - in: path
          name: ip_network_encoded
          required: true
          schema:
            $ref: '#/components/schemas/ip_network_encoded'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                virtual_network_id:
                  $ref: '#/components/schemas/vnet_id'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route_response_single'
          description: Delete Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Route
      tags:
        - Tunnel Route
    patch:
      description: Update an existing route in the account's routing table for the given tunnel.
      operationId: tunnel-route-update-route
      parameters:
        - in: path
          name: ip_network_encoded
          required: true
          schema:
            $ref: '#/components/schemas/ip_network_encoded'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  $ref: '#/components/schemas/comment'
                network:
                  description: New CIDR of this route.
                tunnel_id:
                  description: UUID of the tunnel this route should belong to.
                virtual_network_id:
                  description: UUID of the virtual network to which this route belongs to.
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route_response_single'
          description: Update Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Route
      tags:
        - Tunnel Route
    post:
      description: Add a new route to the account's routing table for the given tunnel.
      operationId: tunnel-route-create-route
      parameters:
        - in: path
          name: ip_network_encoded
          required: true
          schema:
            $ref: '#/components/schemas/ip_network_encoded'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  $ref: '#/components/schemas/comment'
                tunnel_id:
                  description: UUID of the tunnel for which this route is being added.
                virtual_network_id:
                  description: optional UUID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided.
              required:
                - tunnel_id
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route_response_single'
          description: Create Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Route
      tags:
        - Tunnel Route
  '/accounts/{account_identifier}/teamnet/virtual_networks':
    get:
      description: 'List, search and filter an account''s virtual networks.'
      operationId: tunnel-virtual-network-list-virtual-networks
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vnet_response_collection'
          description: List Virtual Networks response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vnet_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Virtual Networks response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Virtual Networks
      tags:
        - Tunnel Virtual Network
    post:
      description: Add a new virtual network to the account.
      operationId: tunnel-virtual-network-create-virtual-network
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  $ref: '#/components/schemas/schemas-comment'
                is_default:
                  $ref: '#/components/schemas/is_default_network'
                name:
                  $ref: '#/components/schemas/vnet_name'
              required:
                - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vnet_response_single'
          description: Create Virtual Network response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vnet_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Virtual Network response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Virtual Network
      tags:
        - Tunnel Virtual Network
  '/accounts/{account_identifier}/teamnet/virtual_networks/{vnet_id}':
    delete:
      description: Delete an existing virtual network from the account.
      operationId: tunnel-virtual-network-delete-virtual-network
      parameters:
        - in: path
          name: vnet_id
          required: true
          schema:
            $ref: '#/components/schemas/vnet_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vnet_response_single'
          description: Delete Virtual Network response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vnet_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Virtual Network response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Virtual Network
      tags:
        - Tunnel Virtual Network
    patch:
      description: Update an existing virtual network in the account.
      operationId: tunnel-virtual-network-update-virtual-network
      parameters:
        - in: path
          name: vnet_id
          required: true
          schema:
            $ref: '#/components/schemas/vnet_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  $ref: '#/components/schemas/schemas-comment'
                is_default_network:
                  $ref: '#/components/schemas/is_default_network'
                name:
                  $ref: '#/components/schemas/vnet_name'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vnet_response_single'
          description: Update Virtual Network response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vnet_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Virtual Network response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Virtual Network
      tags:
        - Tunnel Virtual Network
