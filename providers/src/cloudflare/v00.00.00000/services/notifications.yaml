openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Notification Alert Types
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - notifications
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    alert-types_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              additionalProperties:
                items:
                  $ref: '#/components/schemas/alert-types'
                type: array
              example:
                Origin Monitoring:
                  - description: High levels of 5xx HTTP errors at your origin.
                    display_name: Origin Error Rate Alert
                    filter_options:
                      - ComparisonOperator: '=='
                        Key: zones
                        Optional: false
                      - ComparisonOperator: '>='
                        Key: slo
                        Optional: true
                    type: http_alert_origin_error
              type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    alert-types:
      properties:
        description:
          $ref: '#/components/schemas/alert-types_components-schemas-description'
        display_name:
          $ref: '#/components/schemas/display_name'
        filter_options:
          $ref: '#/components/schemas/schemas-filter_options'
        type:
          $ref: '#/components/schemas/alert-types_components-schemas-type'
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    alert-types_components-schemas-description:
      description: Describes the alert type.
      example: High levels of 5xx HTTP errors at your origin
      type: string
    display_name:
      description: Alert type name.
      example: Origin Error Rate Alert
      type: string
    schemas-filter_options:
      description: 'Format of additional configuration options (filters) for the alert type. Data type of filters during policy creation: Array of strings.'
      example:
        - ComparisonOperator: '=='
          Key: zones
          Optional: false
        - ComparisonOperator: '>='
          Key: slo
          Optional: true
      items: {}
      type: array
    alert-types_components-schemas-type:
      description: Use this value when creating and updating a notification policy.
      example: http_alert_origin_error
      type: string
    history_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              example:
                - alert_body: SSL certificate has expired
                  alert_type: universal_ssl_event_type
                  description: 'Universal Certificate validation status, issuance, renewal, and expiration notices.'
                  id: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
                  mechanism: test@example.com
                  mechanism_type: email
                  name: SSL Notification Event Policy
                  sent: '2021-10-08T17:52:17.571336Z'
              items:
                $ref: '#/components/schemas/history'
              type: array
            result_info:
              example:
                count: 1
                page: 1
                per_page: 20
              type: object
    history:
      properties:
        alert_body:
          $ref: '#/components/schemas/alert_body'
        alert_type:
          $ref: '#/components/schemas/schemas-alert_type'
        description:
          $ref: '#/components/schemas/history_components-schemas-description'
        id:
          $ref: '#/components/schemas/uuid'
        mechanism:
          $ref: '#/components/schemas/mechanism'
        mechanism_type:
          $ref: '#/components/schemas/mechanism_type'
        name:
          $ref: '#/components/schemas/history_components-schemas-name'
        sent:
          $ref: '#/components/schemas/sent'
      type: object
    alert_body:
      description: Message body included in the notification sent.
      example: SSL certificate has expired
      type: string
    schemas-alert_type:
      description: Type of notification that has been dispatched.
      example: universal_ssl_event_type
      type: string
    history_components-schemas-description:
      description: Description of the notification policy (if present).
      example: 'Universal Certificate validation status, issuance, renewal, and expiration notices'
      type: string
    uuid:
      description: UUID
      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      readOnly: true
      type: string
    mechanism:
      description: The mechanism to which the notification has been dispatched.
      example: test@example.com
      type: string
    mechanism_type:
      description: The type of mechanism to which the notification has been dispatched. This can be email/pagerduty/webhook based on the mechanism configured.
      enum:
        - email
        - pagerduty
        - webhook
      example: email
      type: string
    history_components-schemas-name:
      description: Name of the policy.
      example: SSL Notification Event Policy
      type: string
    sent:
      description: Timestamp of when the notification was dispatched in ISO 8601 format.
      example: '2021-10-08T17:52:17.571336Z'
      format: date-time
      type: string
    eligibility_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              additionalProperties:
                items:
                  $ref: '#/components/schemas/eligibility'
                type: array
              example:
                email:
                  eligible: true
                  ready: true
                  type: email
              type: object
    eligibility:
      properties:
        eligible:
          $ref: '#/components/schemas/eligible'
        ready:
          $ref: '#/components/schemas/ready'
        type:
          $ref: '#/components/schemas/eligibility_components-schemas-type'
      type: object
    eligible:
      description: Determines whether or not the account is eligible for the delivery mechanism.
      example: true
      type: boolean
    ready:
      description: 'Beta flag. Users can create a policy with a mechanism that is not ready, but we cannot guarantee successful delivery of notifications.'
      example: true
      type: boolean
    eligibility_components-schemas-type:
      description: Determines type of delivery mechanism.
      enum:
        - email
        - pagerduty
        - webhook
      example: email
      type: string
    pagerduty_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/pagerduty'
              type: array
    pagerduty:
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        name:
          $ref: '#/components/schemas/pagerduty_components-schemas-name'
      type: object
    pagerduty_components-schemas-name:
      description: The name of the pagerduty service.
      example: My PagerDuty Service
      type: string
    policies_components-schemas-response_collection-2:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/components-schemas-policies'
              type: array
    components-schemas-policies:
      properties:
        alert_type:
          $ref: '#/components/schemas/alert_type'
        created:
          $ref: '#/components/schemas/timestamp'
        description:
          $ref: '#/components/schemas/policies_components-schemas-description'
        enabled:
          $ref: '#/components/schemas/policies_components-schemas-enabled'
        filters:
          $ref: '#/components/schemas/components-schemas-filters'
        id:
          $ref: '#/components/schemas/uuid'
        mechanisms:
          $ref: '#/components/schemas/mechanisms'
        modified:
          $ref: '#/components/schemas/timestamp'
        name:
          $ref: '#/components/schemas/policies_components-schemas-name-2'
      type: object
    alert_type:
      description: Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
      example: universal_ssl_event_type
      type: string
    timestamp:
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    policies_components-schemas-description:
      description: Optional description for the Notification policy.
      example: Something describing the policy.
      type: string
    policies_components-schemas-enabled:
      default: true
      description: Whether or not the Notification policy is enabled.
      example: true
      type: boolean
    components-schemas-filters:
      additionalProperties:
        description: Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details.
        items: {}
        type: array
      example:
        slo:
          - '99.9'
      type: object
    mechanisms:
      additionalProperties:
        items:
          properties:
            id:
              $ref: '#/components/schemas/uuid'
          type: object
        type: array
      description: List of IDs that will be used when dispatching a notification. IDs for email type will be the email address.
      example:
        email:
          - id: test@example.com
        pagerduty:
          - id: e8133a15-00a4-4d69-aec1-32f70c51f6e5
        webhooks:
          - id: 14cc1190-5d2b-4b98-a696-c424cb2ad05f
      type: object
    policies_components-schemas-name-2:
      description: Name of the policy.
      example: SSL Notification Event Policy
      type: string
    policies_components-schemas-id_response-2:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/uuid'
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    policies_components-schemas-single_response-2:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/components-schemas-policies'
    webhooks_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/webhooks'
              type: array
    webhooks:
      properties:
        created_at:
          $ref: '#/components/schemas/webhooks_components-schemas-created_at'
        id:
          $ref: '#/components/schemas/uuid'
        last_failure:
          $ref: '#/components/schemas/last_failure'
        last_success:
          $ref: '#/components/schemas/last_success'
        name:
          $ref: '#/components/schemas/webhooks_components-schemas-name'
        secret:
          $ref: '#/components/schemas/schemas-secret'
        type:
          $ref: '#/components/schemas/webhooks_components-schemas-type'
        url:
          $ref: '#/components/schemas/components-schemas-url'
      type: object
    webhooks_components-schemas-created_at:
      description: Timestamp of when the webhook destination was created.
      example: '2020-10-26T18:25:04.532316Z'
      format: date-time
      readOnly: true
      type: string
    last_failure:
      description: Timestamp of the last time an attempt to dispatch a notification to this webhook failed.
      example: '2020-10-26T18:25:04.532316Z'
      format: date-time
      readOnly: true
      type: string
    last_success:
      description: Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.
      example: '2020-10-26T18:25:04.532316Z'
      format: date-time
      readOnly: true
      type: string
    webhooks_components-schemas-name:
      description: The name of the webhook destination. This will be included in the request body when you receive a webhook notification.
      example: Slack Webhook
      type: string
    schemas-secret:
      description: Optional secret that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body.
      type: string
    webhooks_components-schemas-type:
      description: Type of webhook endpoint.
      enum:
        - slack
        - generic
        - gchat
      example: slack
      type: string
    components-schemas-url:
      description: The POST endpoint to call when dispatching a notification.
      example: 'https://hooks.slack.com/services/Ds3fdBFbV/456464Gdd'
      type: string
    webhooks_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/uuid'
              type: object
    webhooks_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/webhooks'
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_alerting_available_alerts:
      id: cloudflare.notifications.accounts_alerting_available_alerts
      name: accounts_alerting_available_alerts
      title: Accounts Alerting Available Alerts
      methods:
        notification_alert_types_get_alert_types:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1available_alerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _notification_alert_types_get_alert_types:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1available_alerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_available_alerts/methods/notification_alert_types_get_alert_types'
        insert: []
        update: []
        delete: []
    accounts_alerting_history:
      id: cloudflare.notifications.accounts_alerting_history
      name: accounts_alerting_history
      title: Accounts Alerting History
      methods:
        notification_history_list_history:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1history/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _notification_history_list_history:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1history/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_history/methods/notification_history_list_history'
        insert: []
        update: []
        delete: []
    accounts_alerting_destinations_eligible:
      id: cloudflare.notifications.accounts_alerting_destinations_eligible
      name: accounts_alerting_destinations_eligible
      title: Accounts Alerting Destinations Eligible
      methods:
        notification_mechanism_eligibility_get_delivery_mechanism_eligibility:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1eligible/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _notification_mechanism_eligibility_get_delivery_mechanism_eligibility:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1eligible/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_destinations_eligible/methods/notification_mechanism_eligibility_get_delivery_mechanism_eligibility'
        insert: []
        update: []
        delete: []
    accounts_alerting_destinations_pagerduty:
      id: cloudflare.notifications.accounts_alerting_destinations_pagerduty
      name: accounts_alerting_destinations_pagerduty
      title: Accounts Alerting Destinations Pagerduty
      methods:
        notification_destinations_with_pager_duty_list_pager_duty_services:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1pagerduty/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _notification_destinations_with_pager_duty_list_pager_duty_services:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1pagerduty/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_destinations_pagerduty/methods/notification_destinations_with_pager_duty_list_pager_duty_services'
        insert: []
        update: []
        delete: []
    accounts_alerting_policies:
      id: cloudflare.notifications.accounts_alerting_policies
      name: accounts_alerting_policies
      title: Accounts Alerting Policies
      methods:
        notification_policies_list_notification_policies:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1policies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _notification_policies_list_notification_policies:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1policies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notification_policies_create_a_notification_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1policies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notification_policies_delete_a_notification_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1policies~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notification_policies_get_a_notification_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1policies~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _notification_policies_get_a_notification_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1policies~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notification_policies_update_a_notification_policy:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1policies~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_policies/methods/notification_policies_list_notification_policies'
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_policies/methods/notification_policies_get_a_notification_policy'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_policies/methods/notification_policies_create_a_notification_policy'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_policies/methods/notification_policies_delete_a_notification_policy'
    accounts_alerting_destinations_webhooks:
      id: cloudflare.notifications.accounts_alerting_destinations_webhooks
      name: accounts_alerting_destinations_webhooks
      title: Accounts Alerting Destinations Webhooks
      methods:
        notification_webhooks_list_webhooks:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1webhooks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _notification_webhooks_list_webhooks:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1webhooks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notification_webhooks_create_a_webhook:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1webhooks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notification_webhooks_delete_a_webhook:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1webhooks~1{uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notification_webhooks_get_a_webhook:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1webhooks~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _notification_webhooks_get_a_webhook:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1webhooks~1{uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notification_webhooks_update_a_webhook:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}~1alerting~1v3~1destinations~1webhooks~1{uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_destinations_webhooks/methods/notification_webhooks_list_webhooks'
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_destinations_webhooks/methods/notification_webhooks_get_a_webhook'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_destinations_webhooks/methods/notification_webhooks_create_a_webhook'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_alerting_destinations_webhooks/methods/notification_webhooks_delete_a_webhook'
paths:
  '/accounts/{identifier}/alerting/v3/available_alerts':
    get:
      description: Gets a list of all alert types for which an account is eligible.
      operationId: notification-alert-types-get-alert-types
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert-types_components-schemas-response_collection'
          description: Get Alert Types response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/alert-types_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Alert Types response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Alert Types
      tags:
        - Notification Alert Types
  '/accounts/{identifier}/alerting/v3/history':
    get:
      description: 'Gets a list of history records for notifications sent to an account. The records are displayed for last `x` number of days based on the zone plan (free = 30, pro = 30, biz = 30, ent = 90).'
      operationId: notification-history-list-history
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/history_components-schemas-response_collection'
          description: List History response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/history_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List History response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List History
      tags:
        - Notification History
  '/accounts/{identifier}/alerting/v3/destinations/eligible':
    get:
      description: Get a list of all delivery mechanism types for which an account is eligible.
      operationId: notification-mechanism-eligibility-get-delivery-mechanism-eligibility
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eligibility_components-schemas-response_collection'
          description: Get delivery mechanism eligibility response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/eligibility_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get delivery mechanism eligibility response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get delivery mechanism eligibility
      tags:
        - Notification Mechanism Eligibility
  '/accounts/{identifier}/alerting/v3/destinations/pagerduty':
    get:
      description: Get a list of all configured PagerDuty services.
      operationId: notification-destinations-with-pager-duty-list-pager-duty-services
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pagerduty_components-schemas-response_collection'
          description: List PagerDuty services response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pagerduty_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List PagerDuty services response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List PagerDuty services
      tags:
        - Notification destinations with PagerDuty
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/accounts/{identifier}/alerting/v3/policies':
    get:
      description: Get a list of all Notification policies.
      operationId: notification-policies-list-notification-policies
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-response_collection-2'
          description: List Notification policies response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-response_collection-2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Notification policies response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Notification policies
      tags:
        - Notification policies
    post:
      description: Creates a new Notification policy.
      operationId: notification-policies-create-a-notification-policy
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                alert_type:
                  $ref: '#/components/schemas/alert_type'
                description:
                  $ref: '#/components/schemas/policies_components-schemas-description'
                enabled:
                  $ref: '#/components/schemas/policies_components-schemas-enabled'
                filters:
                  $ref: '#/components/schemas/components-schemas-filters'
                mechanisms:
                  $ref: '#/components/schemas/mechanisms'
                name:
                  $ref: '#/components/schemas/policies_components-schemas-name-2'
              required:
                - name
                - alert_type
                - enabled
                - mechanisms
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-id_response-2'
          description: Create a Notification policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-id_response-2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a Notification policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a Notification policy
      tags:
        - Notification policies
  '/accounts/{identifier}/alerting/v3/policies/{uuid}':
    delete:
      description: Delete a Notification policy.
      operationId: notification-policies-delete-a-notification-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-collection'
          description: Delete a Notification policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a Notification policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a Notification policy
      tags:
        - Notification policies
    get:
      description: Get details for a single policy.
      operationId: notification-policies-get-a-notification-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-single_response-2'
          description: Get a Notification policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-single_response-2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a Notification policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a Notification policy
      tags:
        - Notification policies
    put:
      description: Update a Notification policy.
      operationId: notification-policies-update-a-notification-policy
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                alert_type:
                  $ref: '#/components/schemas/alert_type'
                description:
                  $ref: '#/components/schemas/policies_components-schemas-description'
                enabled:
                  $ref: '#/components/schemas/policies_components-schemas-enabled'
                filters:
                  $ref: '#/components/schemas/components-schemas-filters'
                mechanisms:
                  $ref: '#/components/schemas/mechanisms'
                name:
                  $ref: '#/components/schemas/policies_components-schemas-name-2'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policies_components-schemas-id_response-2'
          description: Update a Notification policy response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/policies_components-schemas-id_response-2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a Notification policy response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a Notification policy
      tags:
        - Notification policies
  '/accounts/{identifier}/alerting/v3/destinations/webhooks':
    get:
      description: Gets a list of all configured webhook destinations.
      operationId: notification-webhooks-list-webhooks
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhooks_components-schemas-response_collection'
          description: List webhooks response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/webhooks_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List webhooks response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List webhooks
      tags:
        - Notification webhooks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    post:
      description: Creates a new webhook destination.
      operationId: notification-webhooks-create-a-webhook
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/webhooks_components-schemas-name'
                secret:
                  $ref: '#/components/schemas/schemas-secret'
                url:
                  $ref: '#/components/schemas/components-schemas-url'
              required:
                - name
                - url
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhooks_components-schemas-id_response'
          description: Create a webhook response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/webhooks_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a webhook response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a webhook
      tags:
        - Notification webhooks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/accounts/{identifier}/alerting/v3/destinations/webhooks/{uuid}':
    delete:
      description: Delete a configured webhook destination.
      operationId: notification-webhooks-delete-a-webhook
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-collection'
          description: Delete a webhook response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a webhook response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a webhook
      tags:
        - Notification webhooks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    get:
      description: Get details for a single webhooks destination.
      operationId: notification-webhooks-get-a-webhook
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhooks_components-schemas-single_response'
          description: Get a webhook response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/webhooks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a webhook response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a webhook
      tags:
        - Notification webhooks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    put:
      description: Update a webhook destination.
      operationId: notification-webhooks-update-a-webhook
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/webhooks_components-schemas-name'
                secret:
                  $ref: '#/components/schemas/schemas-secret'
                url:
                  $ref: '#/components/schemas/components-schemas-url'
              required:
                - name
                - url
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhooks_components-schemas-id_response'
          description: Update a webhook response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/webhooks_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a webhook response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a webhook
      tags:
        - Notification webhooks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
