openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Durable Objects Namespace
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - workers
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    schemas-namespace:
      properties:
        class:
          readOnly: true
        id:
          readOnly: true
        name:
          readOnly: true
        script:
          readOnly: true
      type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    namespaces_components-schemas-id:
      description: ID of the namespace.
      example: 5fd1cafff895419c8bcc647fc64ab8f0
      type: string
    object:
      properties:
        hasStoredData:
          description: Whether the Durable Object has stored data.
          example: true
          readOnly: true
          type: boolean
        id:
          description: ID of the Durable Object.
          example: fe7803fc55b964e09d94666545aab688d360c6bda69ba349ced1e5f28d2fc2c8
          readOnly: true
          type: string
      type: object
    schemas-cursor:
      description: Opaque token indicating the position from which to continue when requesting the next set of records. A valid value for the cursor can be obtained from the cursors object in the result_info structure.
      example: AAAAANuhDN7SjacTnSVsDu3WW1Lvst6dxJGTjRY5BhxPXdf6L6uTcpd_NVtjhn11OUYRsVEykxoUwF-JQU4dn6QylZSKTOJuG0indrdn_MlHpMRtsxgXjs-RPdHYIVm3odE_uvEQ_dTQGFm8oikZMohns34DLBgrQpc
      type: string
    queue:
      properties:
        consumers:
          readOnly: true
        consumers_total_count:
          readOnly: true
        created_on:
          readOnly: true
        modified_on:
          readOnly: true
        producers:
          readOnly: true
        producers_total_count:
          readOnly: true
        queue_id:
          readOnly: true
        queue_name:
          $ref: '#/components/schemas/queues_components-schemas-name'
      type: object
    queues_components-schemas-name:
      example: example-queue
      type: string
    queue_created:
      properties:
        created_on:
          readOnly: true
        modified_on:
          readOnly: true
        queue_id:
          readOnly: true
        queue_name:
          $ref: '#/components/schemas/queues_components-schemas-name'
      type: object
    queue_updated:
      properties:
        created_on:
          readOnly: true
        modified_on:
          readOnly: true
        queue_id:
          readOnly: true
        queue_name:
          $ref: '#/components/schemas/renamed_name'
      type: object
    renamed_name:
      example: renamed-example-queue
      type: string
    consumer:
      properties:
        created_on:
          readOnly: true
        environment:
          readOnly: true
        queue_name:
          readOnly: true
        service:
          readOnly: true
        settings:
          properties:
            batch_size:
              $ref: '#/components/schemas/batch_size'
            max_retries:
              $ref: '#/components/schemas/max_retries'
            max_wait_time_ms:
              $ref: '#/components/schemas/max_wait_time_ms'
          type: object
      type: object
    batch_size:
      example: 10
      type: number
    max_retries:
      example: 3
      type: number
    max_wait_time_ms:
      example: 5000
      type: number
    consumer_created:
      properties:
        created_on:
          readOnly: true
        dead_letter_queue:
          $ref: '#/components/schemas/dlq_name'
        environment:
          readOnly: true
        queue_name:
          readOnly: true
        script_name:
          readOnly: true
        settings:
          properties:
            batch_size:
              $ref: '#/components/schemas/batch_size'
            max_retries:
              $ref: '#/components/schemas/max_retries'
            max_wait_time_ms:
              $ref: '#/components/schemas/max_wait_time_ms'
          type: object
      type: object
    dlq_name:
      example: example-dlq
      type: string
    consumer_name:
      example: example-consumer
      type: string
    consumer_updated:
      properties:
        created_on:
          readOnly: true
        dead_letter_queue:
          example: updated-example-dlq
        environment:
          readOnly: true
        queue_name:
          readOnly: true
        script_name:
          readOnly: true
        settings:
          properties:
            batch_size:
              example: 100
              type: number
            max_retries:
              $ref: '#/components/schemas/max_retries'
            max_wait_time_ms:
              $ref: '#/components/schemas/max_wait_time_ms'
          type: object
      type: object
    account-settings-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              properties:
                default_usage_model:
                  readOnly: true
                green_compute:
                  readOnly: true
              type: object
    binding:
      oneOf:
        - $ref: '#/components/schemas/kv_namespace_binding'
        - $ref: '#/components/schemas/wasm_module_binding'
    kv_namespace_binding:
      properties:
        name:
          $ref: '#/components/schemas/binding_name'
        namespace_id:
          $ref: '#/components/schemas/namespace_identifier'
        type:
          description: The class of resource that the binding provides.
          enum:
            - kv_namespace
          example: kv_namespace
          type: string
      required:
        - name
        - type
        - namespace_id
      type: object
    wasm_module_binding:
      properties:
        name:
          $ref: '#/components/schemas/binding_name'
        type:
          description: The class of resource that the binding provides.
          enum:
            - wasm_module
          example: wasm_module
          type: string
      required:
        - name
        - type
      type: object
    binding_name:
      description: A JavaScript variable name for the binding.
      example: myBinding
      readOnly: true
      type: string
    namespace_identifier:
      description: Namespace identifier tag.
      example: 0f2ac74b498b48028cb68387c421e279
      maxLength: 32
      readOnly: true
      type: string
    script_name:
      description: 'Name of the script, used in URLs and route configuration.'
      example: this-is_my_script-01
      pattern: '^[a-z0-9_][a-z0-9-_]*$'
      type: string
    cron-trigger-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              properties:
                schedules:
                  items:
                    properties:
                      created_on:
                        readOnly: true
                      cron:
                        readOnly: true
                      modified_on:
                        readOnly: true
                  type: array
              type: object
    domains_components-schemas-account_identifier:
      example: 9a7806061c88ada191ed06f989cc3dac
    schemas-domain-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/domain'
              type: array
          type: object
    domain:
      properties:
        environment:
          $ref: '#/components/schemas/environment'
        hostname:
          $ref: '#/components/schemas/components-schemas-hostname'
        id:
          $ref: '#/components/schemas/domain_identifier'
        service:
          $ref: '#/components/schemas/service'
        zone_id:
          $ref: '#/components/schemas/zone_identifier'
        zone_name:
          $ref: '#/components/schemas/zone_name'
      type: object
    environment:
      description: Worker environment associated with the zone and hostname.
      example: production
      type: string
    components-schemas-hostname:
      description: Hostname of the Worker Domain.
      example: foo.example.com
      type: string
    domain_identifier:
      description: Identifer of the Worker Domain.
      example: dbe10b4bc17c295377eabd600e1787fd
    service:
      description: Worker service associated with the zone and hostname.
      example: foo
      type: string
    zone_identifier:
      description: Identifier of the zone.
      example: 593c9c94de529bbbfaac7c53ced0447d
    zone_name:
      description: Name of the zone.
      example: example.com
      type: string
    schemas-domain-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/domain'
          type: object
    filter-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/filters'
              type: array
    filters:
      properties:
        enabled:
          $ref: '#/components/schemas/filters_components-schemas-enabled'
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        pattern:
          $ref: '#/components/schemas/schemas-pattern'
      required:
        - id
        - pattern
        - enabled
      type: object
    filters_components-schemas-enabled:
      example: true
      title: Whether or not this filter will run a script
      type: boolean
    schemas-pattern:
      example: example.net/*
      title: Filter pattern
      type: string
    filter-no-id:
      properties:
        enabled:
          $ref: '#/components/schemas/filters_components-schemas-enabled'
        pattern:
          $ref: '#/components/schemas/schemas-pattern'
      required:
        - pattern
        - enabled
    api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                id:
                  $ref: '#/components/schemas/common_components-schemas-identifier'
              required:
                - id
              type: object
    filter-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/filters'
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    route-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/routes'
              type: array
    routes:
      properties:
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        pattern:
          $ref: '#/components/schemas/pattern'
        script:
          $ref: '#/components/schemas/schemas-script_name'
      required:
        - id
        - pattern
        - script
      type: object
    pattern:
      example: example.net/*
      title: Route pattern
      type: string
    schemas-script_name:
      description: Name of the script to apply when the route is matched. The route is skipped when this is blank/missing.
      example: this-is_my_script-01
      pattern: '^[a-z0-9_][a-z0-9-_]*$'
      type: string
    route-no-id:
      properties:
        pattern:
          $ref: '#/components/schemas/pattern'
        script:
          $ref: '#/components/schemas/schemas-script_name'
      required:
        - pattern
    route-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/routes'
    script-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items:
                properties:
                  created_on:
                    readOnly: true
                  etag:
                    readOnly: true
                  id:
                    readOnly: true
                  modified_on:
                    readOnly: true
                  usage_model:
                    readOnly: true
              type: array
    usage-model-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              properties:
                usage_model:
                  readOnly: true
              type: object
    script-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    subdomain-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              properties:
                name:
                  readOnly: true
              type: object
    namespace:
      properties:
        id:
          $ref: '#/components/schemas/namespace_identifier'
        supports_url_encoding:
          description: 'True if keys written on the URL will be URL-decoded before storing. For example, if set to "true", a key written on the URL as "%3F" will be stored as "?".'
          example: true
          readOnly: true
          type: boolean
        title:
          $ref: '#/components/schemas/namespace_title'
      required:
        - id
        - title
      type: object
    namespace_title:
      description: A human-readable string name for a Namespace.
      example: My Own Namespace
      type: string
    create_rename_namespace_body:
      properties:
        title:
          $ref: '#/components/schemas/namespace_title'
      required:
        - title
      type: object
    bulk_delete:
      items:
        $ref: '#/components/schemas/key_name_bulk'
      type: array
    key_name_bulk:
      description: 'A key''s name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid.'
      example: My-Key
      maxLength: 512
      type: string
    bulk_write:
      items:
        properties:
          base64:
            default: false
            description: 'Whether or not the server should base64 decode the value before storing it. Useful for writing values that wouldn''t otherwise be valid JSON strings, such as images.'
            type: boolean
          expiration:
            $ref: '#/components/schemas/expiration'
          expiration_ttl:
            $ref: '#/components/schemas/expiration_ttl'
          key:
            $ref: '#/components/schemas/key_name_bulk'
          metadata:
            $ref: '#/components/schemas/list_metadata'
          value:
            description: 'A UTF-8 encoded string to be stored, up to 10 MB in length.'
            example: Some string
            maxLength: 10485760
            type: string
        type: object
      required:
        - key
        - value
      type: array
    expiration:
      description: 'The time, measured in number of seconds since the UNIX epoch, at which the key should expire.'
      example: 1578435000
      type: number
    expiration_ttl:
      description: The number of seconds for which the key should be visible before it expires. At least 60.
      example: 300
      type: number
    list_metadata:
      description: Arbitrary JSON that is associated with a key.
      example:
        someMetadataKey: someMetadataValue
      type: object
    key:
      description: A name for a value. A value stored under a given key may be retrieved via the same key.
      properties:
        expiration:
          description: 'The time, measured in number of seconds since the UNIX epoch, at which the key will expire. This property is omitted for keys that will not expire.'
          example: 1577836800
          type: number
        metadata:
          $ref: '#/components/schemas/list_metadata'
        name:
          $ref: '#/components/schemas/key_name'
      required:
        - name
      type: object
    cursor:
      description: Opaque token indicating the position from which to continue when requesting the next set of records if the amount of list results was limited by the limit parameter. A valid value for the cursor can be obtained from the cursors object in the result_info structure.
      example: 6Ck1la0VxJ0djhidm1MdX2FyDGxLKVeeHZZmORS_8XeSuhz9SjIJRaSa2lnsF01tQOHrfTGAP3R5X1Kv5iVUuMbNKhWNAXHOl6ePB0TUL8nw
      type: string
    key_name:
      description: 'A key''s name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.'
      example: My-Key
      maxLength: 512
      type: string
    kv_components-schemas-value:
      description: 'A byte sequence to be stored, up to 10 MB in length.'
      example: Some Value
      type: string
    components-schemas-metadata:
      description: Arbitrary JSON to be associated with a key/value pair.
      example: '{"someMetadataKey": "someMetadataValue"}'
      type: string
    components-schemas-result:
      allOf:
        - $ref: '#/components/schemas/schemas-result'
        - properties:
            data:
              example:
                - metrics:
                    - - 2
                      - 4
                    - - 16
                      - 32
            max:
              example:
                readKiB: 32
                requests: 4
            min:
              example:
                readKiB: 16
                requests: 2
            query:
              $ref: '#/components/schemas/schemas-query'
            totals:
              example:
                readKiB: 48
                requests: 6
    schemas-result:
      description: Metrics on Workers KV requests.
      properties:
        data:
          items:
            properties:
              metrics:
                description: List of metrics returned by the query.
                items: {}
                type: array
            required:
              - metrics
            type: object
          nullable: true
          type: array
        data_lag:
          description: 'Number of seconds between current time and last processed event, i.e. how many seconds of data could be missing.'
          example: 0
          minimum: 0
          type: number
        max:
          description: Maximum results for each metric.
        min:
          description: Minimum results for each metric.
        query:
          $ref: '#/components/schemas/query'
        rows:
          description: Total number of rows in the result.
          example: 2
          minimum: 0
          type: number
        totals:
          description: Total results for metrics across all data.
      required:
        - rows
        - data
        - data_lag
        - min
        - max
        - totals
        - query
      type: object
    schemas-query:
      allOf:
        - $ref: '#/components/schemas/query'
        - properties:
            dimensions:
              example:
                - accountId
                - responseCode
              items:
                enum:
                  - accountId
                  - responseCode
                  - requestType
            filters:
              example: requestType==read AND responseCode!=200
            metrics:
              default: '["requests"]'
              example:
                - requests
                - readKiB
              items:
                enum:
                  - requests
                  - writeKiB
                  - readKiB
            sort:
              example:
                - +requests
                - '-responseCode'
    query:
      description: For specifying result metrics.
      properties:
        dimensions:
          default: '[]'
          description: Can be used to break down the data by given attributes.
          items:
            description: For drilling down on metrics.
            type: string
          type: array
        filters:
          default: '""'
          description: |-
            Used to filter rows by one or more dimensions. Filters can be combined using OR and AND boolean logic. AND takes precedence over OR in all the expressions. The OR operator is defined using a comma (,) or OR keyword surrounded by whitespace. The AND operator is defined using a semicolon (;) or AND keyword surrounded by whitespace. Note that the semicolon is a reserved character in URLs (rfc1738) and needs to be percent-encoded as %3B. Comparison options are: 

            Operator                  | Name                            | URL Encoded
            --------------------------|---------------------------------|--------------------------
            ==                        | Equals                          | %3D%3D
            !=                        | Does not equals                 | !%3D
            >                        | Greater Than                    | %3E
            <                         | Less Than                       | %3C
            >=                       | Greater than or equal to        | %3E%3D
            <=                        | Less than or equal to           | %3C%3D     .
          type: string
        limit:
          default: 10000
          description: Limit number of returned metrics.
          type: integer
        metrics:
          description: One or more metrics to compute.
          items:
            description: A quantitative measurement of KV usage.
            type: string
          type: array
        since:
          default: <6 hours ago>
          description: 'Start of time interval to query, defaults to 6 hours before request received.'
          example: '2019-01-02T02:20:00Z'
          format: date-time
          type: string
        sort:
          default: '[]'
          description: 'Array of dimensions or metrics to sort by, each dimension/metric may be prefixed by - (descending) or + (ascending).'
          items: {}
          type: array
        until:
          default: <now>
          description: 'End of time interval to query, defaults to current time.'
          example: '2019-01-02T03:20:00Z'
          format: date-time
          type: string
      type: object
    stored_components-schemas-result:
      allOf:
        - $ref: '#/components/schemas/schemas-result'
        - properties:
            data:
              example:
                - metrics:
                    - - 2
                      - 4
                    - - 16
                      - 32
            max:
              example:
                storedBytes: 32
                storedKeys: 4
            min:
              example:
                storedBytes: 16
                storedKeys: 2
            query:
              $ref: '#/components/schemas/components-schemas-query'
            totals:
              example:
                storedBytes: 48
                storedKeys: 6
    components-schemas-query:
      allOf:
        - $ref: '#/components/schemas/query'
        - properties:
            dimensions:
              example:
                - namespaceId
              items:
                enum:
                  - namespaceId
            filters:
              example: namespaceId==a4e8cbb7-1b58-4990-925e-e026d40c4c64
            metrics:
              default: '["storedBytes"]'
              example:
                - storedBytes
                - storedKeys
              items:
                enum:
                  - storedBytes
                  - storedKeys
            sort:
              example:
                - +storedBytes
                - '-namespaceId'
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_durable_objects_namespaces:
      id: cloudflare.workers.accounts_durable_objects_namespaces
      name: accounts_durable_objects_namespaces
      title: Accounts Durable Objects Namespaces
      methods:
        durable_objects_namespace_list_namespaces:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1durable_objects~1namespaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _durable_objects_namespace_list_namespaces:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1durable_objects~1namespaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_durable_objects_namespaces/methods/durable_objects_namespace_list_namespaces'
        insert: []
        update: []
        delete: []
    accounts_durable_objects_namespaces_objects:
      id: cloudflare.workers.accounts_durable_objects_namespaces_objects
      name: accounts_durable_objects_namespaces_objects
      title: Accounts Durable Objects Namespaces Objects
      methods:
        durable_objects_namespace_list_objects:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1durable_objects~1namespaces~1{id}~1objects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _durable_objects_namespace_list_objects:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1durable_objects~1namespaces~1{id}~1objects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_durable_objects_namespaces_objects/methods/durable_objects_namespace_list_objects'
        insert: []
        update: []
        delete: []
    accounts_queues:
      id: cloudflare.workers.accounts_queues
      name: accounts_queues
      title: Accounts Queues
      methods:
        queue_list_queues:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _queue_list_queues:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        queue_create_queue:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        queue_delete_queue:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        queue_queue_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _queue_queue_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        queue_update_queue:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_queues/methods/queue_list_queues'
          - $ref: '#/components/x-stackQL-resources/accounts_queues/methods/queue_queue_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_queues/methods/queue_create_queue'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_queues/methods/queue_delete_queue'
    accounts_queues_consumers:
      id: cloudflare.workers.accounts_queues_consumers
      name: accounts_queues_consumers
      title: Accounts Queues Consumers
      methods:
        queue_list_queue_consumers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}~1consumers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _queue_list_queue_consumers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}~1consumers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        queue_create_queue_consumer:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}~1consumers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        queue_delete_queue_consumer:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}~1consumers~1{consumer_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        queue_update_queue_consumer:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1queues~1{name}~1consumers~1{consumer_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_queues_consumers/methods/queue_list_queue_consumers'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_queues_consumers/methods/queue_create_queue_consumer'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_queues_consumers/methods/queue_delete_queue_consumer'
    accounts_account_settings:
      id: cloudflare.workers.accounts_account_settings
      name: accounts_account_settings
      title: Accounts Account Settings
      methods:
        worker_account_settings_fetch_worker_account_settings:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1account-settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _worker_account_settings_fetch_worker_account_settings:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1account-settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_account_settings_create_worker_account_settings:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1account-settings/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_script_bindings:
      id: cloudflare.workers.zones_script_bindings
      name: zones_script_bindings
      title: Zones Script Bindings
      methods:
        worker_binding___deprecated__list_bindings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1workers~1script~1bindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_binding___deprecated__list_bindings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1workers~1script~1bindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_script_bindings/methods/worker_binding___deprecated__list_bindings'
        insert: []
        update: []
        delete: []
    accounts_scripts_schedules:
      id: cloudflare.workers.accounts_scripts_schedules
      name: accounts_scripts_schedules
      title: Accounts Scripts Schedules
      methods:
        worker_cron_trigger_get_cron_triggers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1schedules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_cron_trigger_get_cron_triggers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1schedules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_cron_trigger_update_cron_triggers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1schedules/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_scripts_schedules/methods/worker_cron_trigger_get_cron_triggers'
        insert: []
        update: []
        delete: []
    accounts_domains:
      id: cloudflare.workers.accounts_domains
      name: accounts_domains
      title: Accounts Domains
      methods:
        worker_domain_list_domains:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_domain_list_domains:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_domain_attach_to_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1domains/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_domain_detach_from_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1domains~1{domain_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_domain_get_a_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1domains~1{domain_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_domain_get_a_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1domains~1{domain_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_domains/methods/worker_domain_list_domains'
          - $ref: '#/components/x-stackQL-resources/accounts_domains/methods/worker_domain_get_a_domain'
        insert: []
        update: []
        delete: []
    zones_filters:
      id: cloudflare.workers.zones_filters
      name: zones_filters
      title: Zones Filters
      methods:
        worker_filters___deprecated__list_filters:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_filters___deprecated__list_filters:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_filters___deprecated__create_filter:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1filters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_filters___deprecated__delete_filter:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1filters~1{filter_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_filters___deprecated__update_filter:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1filters~1{filter_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_filters/methods/worker_filters___deprecated__list_filters'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_filters/methods/worker_filters___deprecated__create_filter'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_filters/methods/worker_filters___deprecated__delete_filter'
    zones_routes:
      id: cloudflare.workers.zones_routes
      name: zones_routes
      title: Zones Routes
      methods:
        worker_routes_list_routes:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1routes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_routes_list_routes:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1routes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_routes_create_route:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1routes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_routes_delete_route:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1routes~1{route_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_routes_get_route:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1routes~1{route_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_routes_get_route:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1routes~1{route_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_routes_update_route:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1workers~1routes~1{route_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_routes/methods/worker_routes_list_routes'
          - $ref: '#/components/x-stackQL-resources/zones_routes/methods/worker_routes_get_route'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_routes/methods/worker_routes_create_route'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_routes/methods/worker_routes_delete_route'
    accounts_scripts:
      id: cloudflare.workers.accounts_scripts
      name: accounts_scripts
      title: Accounts Scripts
      methods:
        worker_script_list_workers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_script_list_workers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_script_delete_worker:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_script_download_worker:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _worker_script_download_worker:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_script_upload_worker_module:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_script_fetch_usage_model:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1usage-model/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _worker_script_fetch_usage_model:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1usage-model/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_script_update_usage_model:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1usage-model/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_scripts/methods/worker_script_list_workers'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_scripts/methods/worker_script_delete_worker'
    zones_script:
      id: cloudflare.workers.zones_script
      name: zones_script
      title: Zones Script
      methods:
        worker_script___deprecated__delete_worker:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1workers~1script/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_script___deprecated__download_worker:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1workers~1script/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _worker_script___deprecated__download_worker:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1workers~1script/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_script___deprecated__upload_worker:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1workers~1script/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_script/methods/worker_script___deprecated__delete_worker'
    accounts_subdomain:
      id: cloudflare.workers.accounts_subdomain
      name: accounts_subdomain
      title: Accounts Subdomain
      methods:
        worker_subdomain_get_subdomain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1subdomain/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_subdomain_get_subdomain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1subdomain/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_subdomain_create_subdomain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1subdomain/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_subdomain/methods/worker_subdomain_get_subdomain'
        insert: []
        update: []
        delete: []
    accounts_storage_kv_namespaces:
      id: cloudflare.workers.accounts_storage_kv_namespaces
      name: accounts_storage_kv_namespaces
      title: Accounts Storage Kv Namespaces
      methods:
        kv_namespace_list_namespaces:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _kv_namespace_list_namespaces:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        kv_namespace_create_a_namespace:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        kv_namespace_remove_a_namespace:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        kv_namespace_rename_a_namespace:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        kv_namespace_read_the_metadata_for_a_key:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1metadata~1{key_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _kv_namespace_read_the_metadata_for_a_key:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1metadata~1{key_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_storage_kv_namespaces/methods/kv_namespace_list_namespaces'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_storage_kv_namespaces/methods/kv_namespace_create_a_namespace'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_storage_kv_namespaces/methods/kv_namespace_remove_a_namespace'
    accounts_storage_kv_namespaces_bulk:
      id: cloudflare.workers.accounts_storage_kv_namespaces_bulk
      name: accounts_storage_kv_namespaces_bulk
      title: Accounts Storage Kv Namespaces Bulk
      methods:
        kv_namespace_delete_multiple_key_value_pairs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1bulk/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        kv_namespace_write_multiple_key_value_pairs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1bulk/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_storage_kv_namespaces_bulk/methods/kv_namespace_delete_multiple_key_value_pairs'
    accounts_storage_kv_namespaces_keys:
      id: cloudflare.workers.accounts_storage_kv_namespaces_keys
      name: accounts_storage_kv_namespaces_keys
      title: Accounts Storage Kv Namespaces Keys
      methods:
        kv_namespace_list_a_namespaces_keys:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _kv_namespace_list_a_namespaces_keys:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_storage_kv_namespaces_keys/methods/kv_namespace_list_a_namespaces_keys'
        insert: []
        update: []
        delete: []
    accounts_storage_kv_namespaces_values:
      id: cloudflare.workers.accounts_storage_kv_namespaces_values
      name: accounts_storage_kv_namespaces_values
      title: Accounts Storage Kv Namespaces Values
      methods:
        kv_namespace_delete_key_value_pair:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1values~1{key_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        kv_namespace_read_key_value_pair:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1values~1{key_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _kv_namespace_read_key_value_pair:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1values~1{key_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        kv_namespace_write_key_value_pair_with_metadata:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1kv~1namespaces~1{namespace_identifier}~1values~1{key_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_storage_kv_namespaces_values/methods/kv_namespace_delete_key_value_pair'
    accounts_storage_analytics:
      id: cloudflare.workers.accounts_storage_analytics
      name: accounts_storage_analytics
      title: Accounts Storage Analytics
      methods:
        kv_request_analytics_query_request_analytics:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1analytics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _kv_request_analytics_query_request_analytics:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1analytics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        kv_stored_data_analytics_query_stored_data_analytics:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1analytics~1stored/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _kv_stored_data_analytics_query_stored_data_analytics:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1storage~1analytics~1stored/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/accounts/{account_identifier}/workers/durable_objects/namespaces':
    get:
      description: Returns the namespaces owned by an account.
      operationId: durable-objects-namespace-list-namespaces
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/schemas-namespace'
                        type: array
                    type: object
          description: List Namespaces response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/schemas-namespace'
                            type: array
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Namespaces response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Namespaces
      tags:
        - Durable Objects Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.durable-object.class.list
  '/accounts/{account_identifier}/workers/durable_objects/namespaces/{id}/objects':
    get:
      description: Returns the Durable Objects in a given namespace.
      operationId: durable-objects-namespace-list-objects
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/namespaces_components-schemas-id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/object'
                        type: array
                      result_info:
                        properties:
                          count:
                            description: Total results returned based on your list parameters.
                            example: 1
                            type: number
                          cursor:
                            $ref: '#/components/schemas/schemas-cursor'
                    type: object
          description: List Objects response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/object'
                            type: array
                          result_info:
                            properties:
                              count:
                                description: Total results returned based on your list parameters.
                                example: 1
                                type: number
                              cursor:
                                $ref: '#/components/schemas/schemas-cursor'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Objects response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Objects
      tags:
        - Durable Objects Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.durable-object.class.read
  '/accounts/{account_identifier}/workers/queues':
    get:
      description: Returns the queues owned by an account.
      operationId: queue-list-queues
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      errors:
                        nullable: true
                  - properties:
                      messages:
                        nullable: true
                  - properties:
                      result_info:
                        properties:
                          count:
                            example: 1
                          page:
                            example: 1
                          per_page:
                            example: 100
                          total_count:
                            example: 1
                          total_pages:
                            example: 1
                        type: object
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/queue'
                        type: array
                    required:
                      - queue_id
                      - queue_name
                      - created_on
                      - modified_on
                      - producers_total_count
                      - producers
                      - consumers_total_count
                      - consumers
                    type: object
          description: List Queues response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          errors:
                            nullable: true
                      - properties:
                          messages:
                            nullable: true
                      - properties:
                          result_info:
                            properties:
                              count:
                                example: 1
                              page:
                                example: 1
                              per_page:
                                example: 100
                              total_count:
                                example: 1
                              total_pages:
                                example: 1
                            type: object
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/queue'
                            type: array
                        required:
                          - queue_id
                          - queue_name
                          - created_on
                          - modified_on
                          - producers_total_count
                          - producers
                          - consumers_total_count
                          - consumers
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Queues response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Queues
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.list
    post:
      description: Creates a new queue.
      operationId: queue-create-queue
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example:
                queue_name: example-queue
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/queue_created'
                        type: object
                    required:
                      - queue_id
                      - queue_name
                      - created_on
                      - modified_on
                    type: object
          description: Create Queue response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/queue_created'
                            type: object
                        required:
                          - queue_id
                          - queue_name
                          - created_on
                          - modified_on
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Queue response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Queue
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.create
  '/accounts/{account_identifier}/workers/queues/{name}':
    delete:
      description: Deletes a queue.
      operationId: queue-delete-queue
      parameters:
        - in: path
          name: name
          required: true
          schema:
            $ref: '#/components/schemas/queues_components-schemas-name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - nullable: true
                    properties:
                      result:
                        nullable: true
          description: Delete Queue response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - nullable: true
                        properties:
                          result:
                            nullable: true
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Queue response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Queue
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.delete
    get:
      description: Get information about a specific queue.
      operationId: queue-queue-details
      parameters:
        - in: path
          name: name
          required: true
          schema:
            $ref: '#/components/schemas/queues_components-schemas-name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/queue'
                        type: object
                    required:
                      - queue_id
                      - queue_name
                      - created_on
                      - modified_on
                    type: object
          description: Queue Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/queue'
                            type: object
                        required:
                          - queue_id
                          - queue_name
                          - created_on
                          - modified_on
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Queue Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Queue Details
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.read
    put:
      description: Updates a queue.
      operationId: queue-update-queue
      parameters:
        - in: path
          name: name
          required: true
          schema:
            $ref: '#/components/schemas/queues_components-schemas-name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example:
                queue_name: renamed-example-queue
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/queue_updated'
                        type: object
                    required:
                      - queue_id
                      - queue_name
                      - created_on
                      - modified_on
                    type: object
          description: Update Queue response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/queue_updated'
                            type: object
                        required:
                          - queue_id
                          - queue_name
                          - created_on
                          - modified_on
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Queue response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Queue
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
  '/accounts/{account_identifier}/workers/queues/{name}/consumers':
    get:
      description: Returns the consumers for a queue.
      operationId: queue-list-queue-consumers
      parameters:
        - in: path
          name: name
          required: true
          schema:
            $ref: '#/components/schemas/queues_components-schemas-name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      errors:
                        nullable: true
                  - properties:
                      messages:
                        nullable: true
                  - properties:
                      result_info:
                        properties:
                          count:
                            example: 1
                          page:
                            example: 1
                          per_page:
                            example: 100
                          total_count:
                            example: 1
                          total_pages:
                            example: 1
                        type: object
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/consumer'
                        type: array
                    required:
                      - queue_name
                      - created_on
                      - settings
                    type: object
          description: List Queue Consumers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          errors:
                            nullable: true
                      - properties:
                          messages:
                            nullable: true
                      - properties:
                          result_info:
                            properties:
                              count:
                                example: 1
                              page:
                                example: 1
                              per_page:
                                example: 100
                              total_count:
                                example: 1
                              total_pages:
                                example: 1
                            type: object
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/consumer'
                            type: array
                        required:
                          - queue_name
                          - created_on
                          - settings
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Queue Consumers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Queue Consumers
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.list
    post:
      description: Creates a new consumer for a queue.
      operationId: queue-create-queue-consumer
      parameters:
        - in: path
          name: name
          required: true
          schema:
            $ref: '#/components/schemas/queues_components-schemas-name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example:
                dead_letter_queue: example-dlq
                environment: production
                script_name: example-consumer
                settings:
                  batch_size: 10
                  max_retries: 3
                  max_wait_time_ms: 5000
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/consumer_created'
                        type: object
                    required:
                      - queue_name
                      - script_name
                      - settings
                      - dead_letter_queue
                      - created_on
                    type: object
          description: Create Queue Consumer response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/consumer_created'
                            type: object
                        required:
                          - queue_name
                          - script_name
                          - settings
                          - dead_letter_queue
                          - created_on
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Queue Consumer response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Queue Consumer
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.create
  '/accounts/{account_identifier}/workers/queues/{name}/consumers/{consumer_name}':
    delete:
      description: Deletes the consumer for a queue.
      operationId: queue-delete-queue-consumer
      parameters:
        - in: path
          name: consumer_name
          required: true
          schema:
            $ref: '#/components/schemas/consumer_name'
        - in: path
          name: name
          required: true
          schema:
            $ref: '#/components/schemas/queues_components-schemas-name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - nullable: true
                    properties:
                      result:
                        nullable: true
          description: Delete Queue Consumer response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - nullable: true
                        properties:
                          result:
                            nullable: true
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Queue Consumer response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Queue Consumer
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.delete
    put:
      description: 'Updates the consumer for a queue, or creates one if it does not exist.'
      operationId: queue-update-queue-consumer
      parameters:
        - in: path
          name: consumer_name
          required: true
          schema:
            $ref: '#/components/schemas/consumer_name'
        - in: path
          name: name
          required: true
          schema:
            $ref: '#/components/schemas/queues_components-schemas-name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example:
                dead_letter_queue: updated-example-dlq
                environment: production
                script_name: example-consumer
                settings:
                  batch_size: 100
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/consumer_updated'
                        type: object
                    required:
                      - queue_name
                      - script_name
                      - settings
                      - dead_letter_queue
                      - created_on
                    type: object
          description: Update Queue Consumer response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/consumer_updated'
                            type: object
                        required:
                          - queue_name
                          - script_name
                          - settings
                          - dead_letter_queue
                          - created_on
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Queue Consumer response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Queue Consumer
      tags:
        - Queue
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
  '/accounts/{account_identifier}/workers/account-settings':
    get:
      description: Fetches Worker Account Settings for an account.
      operationId: worker-account-settings-fetch-worker-account-settings
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account-settings-response'
          description: Fetch Worker Account Settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/account-settings-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Fetch Worker Account Settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Fetch Worker Account Settings
      tags:
        - Worker Account Settings
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.read
    put:
      description: Creates Worker Account Settings for an account.
      operationId: worker-account-settings-create-worker-account-settings
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example: '{''default_usage_model'': ''unbound''}'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account-settings-response'
          description: Create Worker Account Settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/account-settings-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Worker Account Settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Worker Account Settings
      tags:
        - Worker Account Settings
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.update
  '/zones/{zone_identifier}/workers/script/bindings':
    get:
      deprecated: true
      description: List the bindings for a Workers script.
      operationId: worker-binding-(-deprecated)-list-bindings
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-common'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/binding'
                        type: array
                    type: object
          description: List Bindings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-common'
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/binding'
                            type: array
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Bindings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Bindings
      tags:
        - Worker Binding (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/bindings/x-cfDeprecations/worker_binding_deprecation'
  '/accounts/{account_identifier}/workers/scripts/{script_name}/schedules':
    get:
      description: Fetches Cron Triggers for a Worker.
      operationId: worker-cron-trigger-get-cron-triggers
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cron-trigger-response-collection'
          description: Get Cron Triggers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cron-trigger-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Cron Triggers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Cron Triggers
      tags:
        - Worker Cron Trigger
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.cron.trigger.read
    put:
      description: Updates Cron Triggers for a Worker.
      operationId: worker-cron-trigger-update-cron-triggers
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example: '[{''cron'': ''*/30 * * * *''}]'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cron-trigger-response-collection'
          description: Update Cron Triggers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cron-trigger-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Cron Triggers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Cron Triggers
      tags:
        - Worker Cron Trigger
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.cron.trigger.update
  '/accounts/{account_identifier}/workers/domains':
    get:
      description: Lists all Worker Domains.
      operationId: worker-domain-list-domains
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/domains_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-domain-response-collection'
          description: List Domains response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-domain-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Domains response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Domains
      tags:
        - Worker Domain
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.domain.list
    put:
      description: Attaches a worker to a zone and hostname.
      operationId: worker-domain-attach-to-domain
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/domains_components-schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                environment:
                  $ref: '#/components/schemas/environment'
                hostname:
                  $ref: '#/components/schemas/components-schemas-hostname'
                service:
                  $ref: '#/components/schemas/service'
                zone_id:
                  $ref: '#/components/schemas/zone_identifier'
              required:
                - zone_id
                - hostname
                - service
                - environment
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-domain-response-single'
          description: Attach to Domain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-domain-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Attach to Domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Attach to Domain
      tags:
        - Worker Domain
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.domain.update
  '/accounts/{account_identifier}/workers/domains/{domain_identifier}':
    delete:
      description: Detaches a worker from a zone and hostname.
      operationId: worker-domain-detach-from-domain
      parameters:
        - in: path
          name: domain_identifier
          required: true
          schema:
            $ref: '#/components/schemas/domain_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/domains_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Detach from Domain response
        4xx:
          content:
            application/json: {}
          description: Detach from Domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Detach from Domain
      tags:
        - Worker Domain
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.domain.delete
    get:
      description: Gets a Worker Domain.
      operationId: worker-domain-get-a-domain
      parameters:
        - in: path
          name: domain_identifier
          required: true
          schema:
            $ref: '#/components/schemas/domain_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/domains_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-domain-response-single'
          description: Get a Domain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-domain-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a Domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a Domain
      tags:
        - Worker Domain
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.domain.read
  '/zones/{zone_id}/workers/filters':
    get:
      deprecated: true
      operationId: worker-filters-(-deprecated)-list-filters
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-response-collection'
          description: List Filters response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Filters response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Filters
      tags:
        - Worker Filters (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/filters/x-cfDeprecations/worker_filter_deprecation'
    post:
      deprecated: true
      operationId: worker-filters-(-deprecated)-create-filter
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filter-no-id'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Create Filter response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Filter response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Filter
      tags:
        - Worker Filters (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/filters/x-cfDeprecations/worker_filter_deprecation'
  '/zones/{zone_id}/workers/filters/{filter_id}':
    delete:
      deprecated: true
      operationId: worker-filters-(-deprecated)-delete-filter
      parameters:
        - in: path
          name: filter_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Delete Filter response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Filter response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Filter
      tags:
        - Worker Filters (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/filters/x-cfDeprecations/worker_filter_deprecation'
    put:
      deprecated: true
      operationId: worker-filters-(-deprecated)-update-filter
      parameters:
        - in: path
          name: filter_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filter-no-id'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-response-single'
          description: Update Filter response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Filter response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Filter
      tags:
        - Worker Filters (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/filters/x-cfDeprecations/worker_filter_deprecation'
  '/zones/{zone_id}/workers/routes':
    get:
      operationId: worker-routes-list-routes
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route-response-collection'
          description: List Routes response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Routes response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Routes
      tags:
        - Worker Routes
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.route.list
    post:
      operationId: worker-routes-create-route
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route-no-id'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Create Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Route
      tags:
        - Worker Routes
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.route.create
  '/zones/{zone_id}/workers/routes/{route_id}':
    delete:
      operationId: worker-routes-delete-route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Delete Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Route
      tags:
        - Worker Routes
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.route.delete
    get:
      operationId: worker-routes-get-route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route-response-single'
          description: Get Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Route
      tags:
        - Worker Routes
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.route.read
    put:
      operationId: worker-routes-update-route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route-no-id'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route-response-single'
          description: Update Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Route
      tags:
        - Worker Routes
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.route.update
  '/accounts/{account_identifier}/workers/scripts':
    get:
      description: Fetch a list of uploaded workers.
      operationId: worker-script-list-workers
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/script-response-collection'
          description: List Workers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/script-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Workers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Workers
      tags:
        - Worker Script
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.list
  '/accounts/{account_identifier}/workers/scripts/{script_name}':
    delete:
      description: |-
        Delete your worker. This call has no response body on a successful delete.

        **Query paramaters**:

        1.  `force`: boolean;   If set to true, delete will not be stopped by associated service binding, durable object, or other binding. Any of these associated bindings/durable objects will be deleted along with the script.
      operationId: worker-script-delete-worker
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete Worker response
        4xx:
          content:
            application/json: {}
          description: Delete Worker response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Worker
      tags:
        - Worker Script
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.delete
    get:
      description: 'Fetch raw script content for your worker. Note this is the original script content, not JSON encoded.'
      operationId: worker-script-download-worker
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            undefined:
              schema:
                example: 'addEventListener(''fetch'', event => { event.respondWith(fetch(event.request)) })'
          description: Download Worker response
        4xx:
          content:
            undefined:
              schema:
                example: 'addEventListener(''fetch'', event => { event.respondWith(fetch(event.request)) })'
          description: Download Worker response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Download Worker
      tags:
        - Worker Script
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.read
    put:
      description: Upload a worker module.
      operationId: worker-script-upload-worker-module
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                '"second-file.js"':
                  description: Worker script.
                  example: '@second-file.js;type=application/javascript+module'
                  type: string
                '"worker.js"':
                  description: Worker script.
                  example: '@worker.js;type=application/javascript+module'
                  type: string
                metadata:
                  description: Metadata for script such as bindings. Main module needs to be specified with `main_module`.
                  example: '{"main_module": "worker.js", "some_binding": "stuff"}'
                  type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  errors: []
                  messages: []
                  result:
                    created_on: '2022-05-05T05:15:11.602148Z'
                    etag: 777f24a43bef5f69174aa69ceaf1dea67968d510a31d1vw3e49d34a0187c06d1
                    handlers:
                      - fetch
                    id: this-is_my_script-01
                    modified_on: '2022-05-20T19:02:56.446492Z'
                    usage_model: bundled
                  success: true
          description: Upload Worker Module response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - example:
                      errors: []
                      messages: []
                      result:
                        created_on: '2022-05-05T05:15:11.602148Z'
                        etag: 777f24a43bef5f69174aa69ceaf1dea67968d510a31d1vw3e49d34a0187c06d1
                        handlers:
                          - fetch
                        id: this-is_my_script-01
                        modified_on: '2022-05-20T19:02:56.446492Z'
                        usage_model: bundled
                      success: true
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Upload Worker Module response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Upload Worker Module
      tags:
        - Worker Script
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.create
  '/accounts/{account_identifier}/workers/scripts/{script_name}/usage-model':
    get:
      description: Fetches the Usage Model for a given Worker.
      operationId: worker-script-fetch-usage-model
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage-model-response'
          description: Fetch Usage Model response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/usage-model-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Fetch Usage Model response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Fetch Usage Model
      tags:
        - Worker Script
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.read
    put:
      description: Updates the Usage Model for a given Worker. Requires a Workers Paid subscription.
      operationId: worker-script-update-usage-model
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example: '{''usage_model'': ''unbound''}'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage-model-response'
          description: Update Usage Model response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/usage-model-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Usage Model response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Usage Model
      tags:
        - Worker Script
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.create
  '/zones/{zone_identifier}/workers/script':
    delete:
      deprecated: true
      description: Delete your worker. This call has no response body on a successful delete.
      operationId: worker-script-(-deprecated)-delete-worker
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete Worker response
        4xx:
          content:
            application/json: {}
          description: Delete Worker response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Worker
      tags:
        - Worker Script (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/scripts/x-cfDeprecations/worker_script_deprecation'
    get:
      deprecated: true
      description: 'Fetch raw script content for your worker. Note this is the original script content, not JSON encoded.'
      operationId: worker-script-(-deprecated)-download-worker
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            undefined:
              schema:
                example: 'addEventListener(''fetch'', event => { event.respondWith(fetch(event.request)) })'
          description: Download Worker response
        4xx:
          content:
            undefined:
              schema:
                example: 'addEventListener(''fetch'', event => { event.respondWith(fetch(event.request)) })'
          description: Download Worker response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Download Worker
      tags:
        - Worker Script (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/scripts/x-cfDeprecations/worker_script_deprecation'
    put:
      deprecated: true
      description: 'Upload a worker, or a new version of a worker.'
      operationId: worker-script-(-deprecated)-upload-worker
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/javascript:
            schema:
              example: 'addEventListener(''fetch'', event => { event.respondWith(fetch(event.request)) })'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/script-response-single'
          description: Upload Worker response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/script-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Upload Worker response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Upload Worker
      tags:
        - Worker Script (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/scripts/x-cfDeprecations/worker_script_deprecation'
  '/accounts/{account_identifier}/workers/subdomain':
    get:
      description: Returns a Workers subdomain for an account.
      operationId: worker-subdomain-get-subdomain
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subdomain-response'
          description: Get Subdomain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/subdomain-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Subdomain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Subdomain
      tags:
        - Worker Subdomain
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.cron.subdomain.read
    put:
      description: Creates a Workers subdomain for an account.
      operationId: worker-subdomain-create-subdomain
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example: '{''subdomain'': ''example-subdomain''}'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subdomain-response'
          description: Create Subdomain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/subdomain-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Subdomain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Subdomain
      tags:
        - Worker Subdomain
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.cron.subdomain.create
  '/accounts/{account_identifier}/storage/kv/namespaces':
    get:
      description: Returns the namespaces owned by an account.
      operationId: workers-kv-namespace-list-namespaces
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/namespace'
                        type: array
                    type: object
          description: List Namespaces response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/namespace'
                            type: array
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Namespaces response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Namespaces
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.namespace.list
    post:
      description: Creates a namespace under the given title. A 400 is returned if the account already owns a namespace with this title. A namespace must be explicitly deleted to be replaced.
      operationId: workers-kv-namespace-create-a-namespace
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_rename_namespace_body'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/namespace'
                    type: object
          description: Create a Namespace response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/namespace'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a Namespace response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a Namespace
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.namespace.create
  '/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}':
    delete:
      description: Deletes the namespace corresponding to the given ID.
      operationId: workers-kv-namespace-remove-a-namespace
      parameters:
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Remove a Namespace response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Remove a Namespace response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Remove a Namespace
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.namespace.delete
    put:
      description: Modifies a namespace's title.
      operationId: workers-kv-namespace-rename-a-namespace
      parameters:
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_rename_namespace_body'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Rename a Namespace response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Rename a Namespace response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Rename a Namespace
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.namespace.delete
  '/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/bulk':
    delete:
      description: 'Remove multiple KV pairs from the Namespace. Body should be an array of up to 10,000 keys to be removed.'
      operationId: workers-kv-namespace-delete-multiple-key-value-pairs
      parameters:
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulk_delete'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Delete multiple key-value pairs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete multiple key-value pairs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete multiple key-value pairs
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.key.delete
    put:
      description: 'Write multiple keys and values at once. Body should be an array of up to 10,000 key-value pairs to be stored, along with optional expiration information. Existing values and expirations will be overwritten. If neither expiration nor expiration_ttl is specified, the key-value pair will never expire. If both are set, `expiration_ttl` is used and `expiration` is ignored. The entire request size must be 100 megabytes or less.'
      operationId: workers-kv-namespace-write-multiple-key-value-pairs
      parameters:
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulk_write'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Write multiple key-value pairs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Write multiple key-value pairs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Write multiple key-value pairs
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.key.update
  '/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/keys':
    get:
      description: Lists a namespace's keys.
      operationId: workers-kv-namespace-list-a-namespace'-s-keys
      parameters:
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-common'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/key'
                        type: array
                      result_info:
                        properties:
                          count:
                            description: Total results returned based on your list parameters.
                            example: 1
                            type: number
                          cursor:
                            $ref: '#/components/schemas/cursor'
          description: List a Namespace's Keys response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-common'
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/key'
                            type: array
                          result_info:
                            properties:
                              count:
                                description: Total results returned based on your list parameters.
                                example: 1
                                type: number
                              cursor:
                                $ref: '#/components/schemas/cursor'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List a Namespace's Keys response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List a Namespace's Keys
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.key.list
  '/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/metadata/{key_name}':
    get:
      description: 'Returns the metadata associated with the given key in the given namespace. Use URL-encoding to use special characters (e.g. :, !, %) in the key name.'
      operationId: workers-kv-namespace-read-the-metadata-for-a-key
      parameters:
        - in: path
          name: key_name
          required: true
          schema:
            $ref: '#/components/schemas/key_name'
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/list_metadata'
          description: Read the metadata for a key response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/list_metadata'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Read the metadata for a key response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Read the metadata for a key
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.key.read
  '/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/values/{key_name}':
    delete:
      description: 'Remove a KV pair from the Namespace. Use URL-encoding to use special characters (e.g. :, !, %) in the key name.'
      operationId: workers-kv-namespace-delete-key-value-pair
      parameters:
        - in: path
          name: key_name
          required: true
          schema:
            $ref: '#/components/schemas/key_name'
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Delete key-value pair response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete key-value pair response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete key-value pair
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.key.delete
    get:
      description: 'Returns the value associated with the given key in the given namespace. Use URL-encoding to use special characters (e.g. :, !, %) in the key name. If the KV-pair is set to expire at some point, the expiration time as measured in seconds since the UNIX epoch will be returned in the "Expiration" response header.'
      operationId: workers-kv-namespace-read-key-value-pair
      parameters:
        - in: path
          name: key_name
          required: true
          schema:
            $ref: '#/components/schemas/key_name'
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kv_components-schemas-value'
          description: Read key-value pair response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/kv_components-schemas-value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Read key-value pair response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Read key-value pair
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.key.read
    put:
      description: 'Write a value identified by a key. Use URL-encoding to use special characters (e.g. :, !, %) in the key name. Body should be the value to be stored along with json metadata to be associated with the key/value pair. Existing values, expirations and metadata will be overwritten. If neither `expiration` nor `expiration_ttl` is specified, the key-value pair will never expire. If both are set, `expiration_ttl` is used and `expiration` is ignored.'
      operationId: workers-kv-namespace-write-key-value-pair-with-metadata
      parameters:
        - in: path
          name: key_name
          required: true
          schema:
            $ref: '#/components/schemas/key_name'
        - in: path
          name: namespace_identifier
          required: true
          schema:
            $ref: '#/components/schemas/namespace_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                metadata:
                  $ref: '#/components/schemas/components-schemas-metadata'
                value:
                  $ref: '#/components/schemas/kv_components-schemas-value'
              required:
                - value
                - metadata
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Write key-value pair with metadata response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Write key-value pair with metadata response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Write key-value pair with metadata
      tags:
        - Workers KV Namespace
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.storage.kv.key.update
  '/accounts/{account_identifier}/storage/analytics':
    get:
      description: Retrieves Workers KV request metrics for the given account.
      operationId: workers-kv-request-analytics-query-request-analytics
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/components-schemas-result'
                    type: object
          description: Query Request Analytics response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/components-schemas-result'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Query Request Analytics response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Query Request Analytics
      tags:
        - Workers KV Request Analytics
  '/accounts/{account_identifier}/storage/analytics/stored':
    get:
      description: Retrieves Workers KV stored data metrics for the given account.
      operationId: workers-kv-stored-data-analytics-query-stored-data-analytics
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/stored_components-schemas-result'
                    type: object
          description: Query Stored Data Analytics response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/stored_components-schemas-result'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Query Stored Data Analytics response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Query Stored Data Analytics
      tags:
        - Workers KV Stored Data Analytics
