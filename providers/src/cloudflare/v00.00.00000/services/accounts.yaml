openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Account Billing Profile
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - accounts
  version: 4.0.0
components:
  schemas:
    account_identifier: {}
    billing_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                type: object
              type: array
          type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    create:
      properties:
        email:
          $ref: '#/components/schemas/email'
        roles:
          description: Array of roles associated with this member.
          items:
            $ref: '#/components/schemas/role_components-schemas-identifier'
          type: array
        status:
          default: pending
          enum:
            - accepted
            - pending
      required:
        - email
        - roles
      type: object
    response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    email:
      description: The contact email address of the user.
      example: user@example.com
      maxLength: 90
      type: string
    role_components-schemas-identifier:
      description: Role identifier tag.
      example: 3536bcfad5faccb999b47003c79917fb
      maxLength: 32
      readOnly: true
      type: string
    schemas-identifier: {}
    api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                id:
                  $ref: '#/components/schemas/common_components-schemas-identifier'
              required:
                - id
              type: object
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    schemas-member:
      allOf:
        - $ref: '#/components/schemas/member'
    member:
      properties:
        code:
          $ref: '#/components/schemas/code'
        id:
          $ref: '#/components/schemas/membership_components-schemas-identifier'
        roles:
          description: Roles assigned to this member.
          items:
            $ref: '#/components/schemas/role'
          type: array
        status:
          readOnly: true
        user:
          properties:
            email:
              $ref: '#/components/schemas/email'
            first_name:
              $ref: '#/components/schemas/first_name'
            id:
              $ref: '#/components/schemas/common_components-schemas-identifier'
            last_name:
              $ref: '#/components/schemas/last_name'
            two_factor_authentication_enabled:
              $ref: '#/components/schemas/two_factor_authentication_enabled'
          readOnly: true
          required:
            - email
          type: object
      required:
        - id
        - user
        - status
        - roles
      type: object
    code:
      description: The unique activation code for the account membership.
      example: 05dd05cce12bbed97c0d87cd78e89bc2fd41a6cee72f27f6fc84af2e45c0fac0
      maxLength: 64
      readOnly: true
      type: string
    membership_components-schemas-identifier:
      description: Membership identifier tag.
      example: 4536bcfad5faccb111b47003c79917fa
      maxLength: 32
      readOnly: true
      type: string
    role:
      properties:
        description:
          description: Description of role's permissions.
          example: Administrative access to the entire Account
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/role_components-schemas-identifier'
        name:
          description: Role name.
          example: Account Administrator
          maxLength: 120
          readOnly: true
          type: string
        permissions:
          $ref: '#/components/schemas/permissions'
      required:
        - id
        - name
        - description
        - permissions
      type: object
    first_name:
      description: User's first name
      example: John
      maxLength: 60
      nullable: true
      type: string
    last_name:
      description: User's last name
      example: Appleseed
      maxLength: 60
      nullable: true
      type: string
    two_factor_authentication_enabled:
      default: false
      description: Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.
      readOnly: true
      type: boolean
    permissions:
      example:
        analytics:
          read: true
          write: false
        zones:
          read: true
          write: true
      properties:
        analytics:
          $ref: '#/components/schemas/grants'
        billing:
          $ref: '#/components/schemas/grants'
        cache_purge:
          $ref: '#/components/schemas/grants'
        dns:
          $ref: '#/components/schemas/grants'
        dns_records:
          $ref: '#/components/schemas/grants'
        lb:
          $ref: '#/components/schemas/grants'
        logs:
          $ref: '#/components/schemas/grants'
        organization:
          $ref: '#/components/schemas/grants'
        ssl:
          $ref: '#/components/schemas/grants'
        waf:
          $ref: '#/components/schemas/grants'
        zone_settings:
          $ref: '#/components/schemas/grants'
        zones:
          $ref: '#/components/schemas/grants'
      type: object
    grants:
      example:
        read: true
        write: false
      properties:
        read:
          example: true
          type: boolean
        write:
          example: true
          type: boolean
      type: object
    account_subscription_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/subscription'
              type: array
          type: object
    subscription:
      allOf:
        - $ref: '#/components/schemas/subscription-v2'
    subscription-v2:
      properties:
        app:
          properties:
            install_id:
              $ref: '#/components/schemas/install_id'
        component_values:
          $ref: '#/components/schemas/component_values'
        currency:
          $ref: '#/components/schemas/currency'
        current_period_end:
          $ref: '#/components/schemas/current_period_end'
        current_period_start:
          $ref: '#/components/schemas/current_period_start'
        frequency:
          $ref: '#/components/schemas/frequency'
        id:
          $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
        price:
          $ref: '#/components/schemas/price'
        rate_plan:
          $ref: '#/components/schemas/rate_plan'
        state:
          $ref: '#/components/schemas/state'
        zone:
          $ref: '#/components/schemas/zone'
      type: object
    install_id:
      description: app install id.
      type: string
    component_values:
      description: The list of add-ons subscribed to.
      items:
        $ref: '#/components/schemas/component_value'
      type: array
    currency:
      description: The monetary unit in which pricing information is displayed.
      example: USD
      readOnly: true
      type: string
    current_period_end:
      description: The end of the current period and also when the next billing is due.
      example: '2014-03-31T12:20:00Z'
      format: date-time
      readOnly: true
      type: string
    current_period_start:
      description: When the current billing period started. May match initial_period_start if this is the first period.
      example: '2014-05-11T12:20:00Z'
      format: date-time
      readOnly: true
      type: string
    frequency:
      description: How often the subscription is renewed automatically.
      enum:
        - weekly
        - monthly
        - quarterly
        - yearly
      example: monthly
      type: string
    subscription-v2_components-schemas-identifier:
      description: Subscription identifier tag.
      example: 506e3185e9c882d175a2d0cb0093d9f2
      maxLength: 32
      readOnly: true
      type: string
    price:
      description: 'The price of the subscription that will be billed, in US dollars.'
      example: 20
      readOnly: true
      type: number
    rate_plan:
      description: The rate plan applied to the subscription.
      properties:
        currency:
          description: The currency applied to the rate plan subscription.
          example: USD
          type: string
        externally_managed:
          description: Whether this rate plan is managed externally from Cloudflare.
          example: false
          type: boolean
        id:
          description: The ID of the rate plan.
          example: free
        is_contract:
          description: Whether a rate plan is enterprise-based (or newly adopted term contract).
          example: false
          type: boolean
        public_name:
          description: The full name of the rate plan.
          example: Business Plan
          type: string
        scope:
          description: The scope that this rate plan applies to.
          example: zone
          type: string
        sets:
          description: The list of sets this rate plan applies to.
          items:
            type: string
          type: array
      type: object
    state:
      description: The state that the subscription is in.
      enum:
        - Trial
        - Provisioned
        - Paid
        - AwaitingPayment
        - Cancelled
        - Failed
        - Expired
      example: Paid
      readOnly: true
      type: string
    zone:
      description: A simple zone object. May have null properties if not a zone subscription.
      properties:
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/properties-name'
      type: object
    component_value:
      description: A component value for a subscription.
      properties:
        default:
          description: The default amount assigned.
          example: 5
          type: number
        name:
          description: The name of the component value.
          example: page_rules
          type: string
        price:
          description: The unit price for the component value.
          example: 5
          type: number
        value:
          description: The amount of the component value assigned.
          example: 20
          type: number
      type: object
    properties-name:
      description: The domain name
      example: example.com
      maxLength: 253
      pattern: '^([a-zA-Z0-9][\-a-zA-Z0-9]*\.)+[\-a-zA-Z0-9]{2,20}$'
      readOnly: true
      type: string
    account_subscription_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    components-schemas-account:
      allOf:
        - $ref: '#/components/schemas/account'
    account:
      properties:
        created_on:
          description: Timestamp for the creation of the account
          example: '2014-03-01T12:21:02.0000Z'
          format: date-time
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        name:
          description: Account name
          example: Demo Account
          maxLength: 100
          type: string
        settings:
          description: Account settings
          properties:
            enforce_twofactor:
              default: false
              description: |-
                Indicates whether membership in this account requires that
                Two-Factor Authentication is enabled
              type: boolean
            use_account_custom_ns_by_default:
              default: false
              description: |-
                Indicates whether new zones should use the account-level custom
                nameservers by default
              type: boolean
          type: object
      required:
        - id
        - name
      type: object
    audit_logs_response_collection:
      oneOf:
        - properties:
            errors:
              nullable: true
            messages:
              example: []
              items: {}
              type: array
            result:
              items:
                $ref: '#/components/schemas/audit-logs'
              type: array
            success:
              example: true
              type: boolean
        - $ref: '#/components/schemas/api-response-common'
    audit-logs:
      properties:
        action:
          properties:
            result:
              description: A boolean that indicates if the action attempted was successful.
              example: true
              type: boolean
            type:
              description: A short string that describes the action that was performed.
              example: change_setting
              type: string
          type: object
        actor:
          properties:
            email:
              description: The email of the user that performed the action.
              example: michelle@example.com
              format: email
              type: string
            id:
              description: 'The ID of the actor that performed the action. If a user performed the action, this will be their User ID.'
              example: f6b5de0326bb5182b8a4840ee01ec774
              type: string
            ip:
              description: The IP address of the request that performed the action.
              example: 198.41.129.166
              type: string
            type:
              description: 'The type of actor, whether a User, Cloudflare Admin, or an Automated System.'
              enum:
                - user
                - admin
                - Cloudflare
              example: user
              type: string
          type: object
        id:
          description: A string that uniquely identifies the audit log.
          example: d5b0f326-1232-4452-8858-1089bd7168ef
          type: string
        interface:
          description: The source of the event.
          example: API
          type: string
        metadata:
          description: An object which can lend more context to the action being logged. This is a flexible value and varies between different actions.
          example:
            name: security_level
            type: firewall
            value: high
            zone_name: example.com
          type: object
        newValue:
          description: The new value of the resource that was modified.
          example: low
          type: string
        oldValue:
          description: The value of the resource before it was modified.
          example: high
          type: string
        owner:
          properties:
            id:
              $ref: '#/components/schemas/common_components-schemas-identifier'
          type: object
        resource:
          properties:
            id:
              description: An identifier for the resource that was affected by the action.
              example: 023e105f4ecef8ad9ca31a8372d0c353
              type: string
            type:
              description: A short string that describes the resource that was affected by the action.
              example: zone
              type: string
          type: object
        when:
          description: A UTC RFC3339 timestamp that specifies when the action being logged occured.
          example: '2017-04-26T17:31:07Z'
          format: date-time
          type: string
      type: object
    organization:
      properties:
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/schemas-name'
        permissions:
          $ref: '#/components/schemas/schemas-permissions'
        roles:
          description: List of roles that a user has within an organization.
          items:
            example: All Privileges - Super Administrator
            maxLength: 120
            type: string
          readOnly: true
          type: array
        status:
          $ref: '#/components/schemas/components-schemas-status'
      type: object
    schemas-name:
      description: Organization name.
      example: 'Cloudflare, Inc.'
      maxLength: 100
      type: string
    schemas-permissions:
      description: Access permissions for this User.
      items:
        example: '#zones:read'
        maxLength: 160
        type: string
      readOnly: true
      type: array
    components-schemas-status:
      description: Whether the user is a member of the organization or has an inivitation pending.
      enum:
        - member
        - invited
      example: member
      type: string
    colos:
      description: 'If no source colo names specified, all colos will be used. China colos are unavailable for traceroutes.'
      example:
        - den
        - sin
      items:
        description: Source colo name.
        type: string
      type: array
    schemas-options:
      example:
        max_ttl: 15
        packet_type: icmp
      properties:
        max_ttl:
          $ref: '#/components/schemas/max_ttl'
        packet_type:
          $ref: '#/components/schemas/packet_type'
        packets_per_ttl:
          $ref: '#/components/schemas/packets_per_ttl'
        port:
          $ref: '#/components/schemas/traceroute_components-schemas-port'
        wait_time:
          $ref: '#/components/schemas/wait_time'
    schemas-targets:
      example:
        - 203.0.113.1
        - cloudflare.com
      items:
        description: Hosts as a hostname or IPv4/IPv6 address represented by strings.
        example: 203.0.113.1
        type: string
      maxLength: 10
      type: array
    traceroute_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/target_result'
              type: array
    max_ttl:
      default: 15
      description: Max TTL.
      maximum: 64
      minimum: 0
      type: integer
    packet_type:
      default: icmp
      description: Type of packet sent.
      enum:
        - icmp
        - tcp
        - udp
        - gre
        - gre+icmp
      example: icmp
      type: string
    packets_per_ttl:
      default: 3
      description: Number of packets sent at each TTL.
      maximum: 10
      minimum: 0
      type: integer
    traceroute_components-schemas-port:
      default: 0
      description: 'For UDP and TCP, specifies the destination port. For ICMP, specifies the initial ICMP sequence value. Default value 0 will choose the best value to use for each protocol.'
      maximum: 65535
      minimum: 0
      type: integer
    wait_time:
      default: 1
      description: Set the time (in seconds) to wait for a response to a probe.
      maximum: 5
      minimum: 1
      type: integer
    target_result:
      properties:
        colos:
          items:
            $ref: '#/components/schemas/colo_result'
          type: array
        target:
          $ref: '#/components/schemas/schemas-target'
      type: object
    colo_result:
      properties:
        colo:
          $ref: '#/components/schemas/colo'
        error:
          $ref: '#/components/schemas/error'
        hops:
          items:
            $ref: '#/components/schemas/hop_result'
          type: array
        target_summary:
          $ref: '#/components/schemas/target_summary'
        traceroute_time_ms:
          $ref: '#/components/schemas/traceroute_time_ms'
      type: object
    schemas-target:
      description: 'The target hostname, IPv6, or IPv6 address.'
      example: 1.1.1.1
      type: string
    colo:
      properties:
        city:
          $ref: '#/components/schemas/colo_city'
        name:
          $ref: '#/components/schemas/colo_name'
      type: object
    error:
      description: Errors resulting from collecting traceroute from colo to target.
      enum:
        - ''
        - 'Could not gather traceroute data: Code 1'
        - 'Could not gather traceroute data: Code 2'
        - 'Could not gather traceroute data: Code 3'
        - 'Could not gather traceroute data: Code 4'
      example: ''
      type: string
    hop_result:
      properties:
        nodes:
          description: An array of node objects.
          items:
            $ref: '#/components/schemas/node_result'
          type: array
        packets_lost:
          $ref: '#/components/schemas/packets_lost'
        packets_sent:
          $ref: '#/components/schemas/packets_sent'
        packets_ttl:
          $ref: '#/components/schemas/packets_ttl'
      type: object
    target_summary:
      description: Aggregated statistics from all hops about the target.
      example:
        asn: ''
        ip: 1.1.1.1
        max_latency_ms: 0.034
        mean_latency_ms: 0.021
        min_latency_ms: 0.014
        name: 1.1.1.1
        packet_count: 3
        std_dev_latency_ms: 0.011269427669584647
      type: object
    traceroute_time_ms:
      description: Total time of traceroute in ms.
      type: integer
    colo_city:
      description: Source colo city.
      example: 'Denver, CO, US'
      type: string
    colo_name:
      description: Source colo name.
      example: den01
      type: string
    node_result:
      example:
        asn: AS13335
        ip: 1.1.1.1
        max_latency_ms: 0.034
        mean_latency_ms: 0.021
        min_latency_ms: 0.014
        name: one.one.one.one
        packet_count: 3
        std_dev_latency_ms: 0.011269427669584647
      properties:
        asn:
          $ref: '#/components/schemas/schemas-asn'
        ip:
          $ref: '#/components/schemas/traceroute_components-schemas-ip'
        labels:
          $ref: '#/components/schemas/labels'
        max_rtt_ms:
          $ref: '#/components/schemas/max_rtt_ms'
        mean_rtt_ms:
          $ref: '#/components/schemas/mean_rtt_ms'
        min_rtt_ms:
          $ref: '#/components/schemas/min_rtt_ms'
        name:
          $ref: '#/components/schemas/traceroute_components-schemas-name'
        packet_count:
          $ref: '#/components/schemas/packet_count'
        std_dev_rtt_ms:
          $ref: '#/components/schemas/std_dev_rtt_ms'
      type: object
    packets_lost:
      description: Number of packets where no response was received.
      type: integer
    packets_sent:
      description: Number of packets sent with specified TTL.
      type: integer
    packets_ttl:
      description: The time to live (TTL).
      type: integer
    schemas-asn:
      description: AS number associated with the node object.
      type: string
    traceroute_components-schemas-ip:
      description: IP address of the node.
      type: string
    labels:
      description: Field appears if there is an additional annotation printed when the probe returns. Field also appears when running a GRE+ICMP traceroute to denote which traceroute a node comes from.
      items:
        type: string
      type: array
    max_rtt_ms:
      description: Maximum RTT in ms.
      type: number
    mean_rtt_ms:
      description: Mean RTT in ms.
      type: number
    min_rtt_ms:
      description: Minimum RTT in ms.
      type: number
    traceroute_components-schemas-name:
      description: 'Host name of the address, this may be the same as the IP address.'
      type: string
    packet_count:
      description: Number of packets with a response from this node.
      type: integer
    std_dev_rtt_ms:
      description: Standard deviation of the RTTs in ms.
      type: number
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    billing_profile:
      id: cloudflare.accounts.billing_profile
      name: billing_profile
      title: Billing Profile
      methods:
        account_billing_profile_billing_profile_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1billing~1profile/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_billing_profile_billing_profile_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1billing~1profile/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_profile/methods/account_billing_profile_billing_profile_details'
        insert: []
        update: []
        delete: []
    members:
      id: cloudflare.accounts.members
      name: members
      title: Members
      methods:
        account_members_list_members:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_members_list_members:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_members_add_member:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1members/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_members_remove_member:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1members~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_members_member_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1members~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_members_member_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1members~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_members_update_member:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1members~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/members/methods/account_members_list_members'
          - $ref: '#/components/x-stackQL-resources/members/methods/account_members_member_details'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/members/methods/account_members_remove_member'
    roles:
      id: cloudflare.accounts.roles
      name: roles
      title: Roles
      methods:
        account_roles_list_roles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_roles_list_roles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_roles_role_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1roles~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_roles_role_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1roles~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/account_roles_list_roles'
          - $ref: '#/components/x-stackQL-resources/roles/methods/account_roles_role_details'
        insert: []
        update: []
        delete: []
    subscriptions:
      id: cloudflare.accounts.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        account_subscriptions_list_subscriptions:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _account_subscriptions_list_subscriptions:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_subscriptions_create_subscription:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1subscriptions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_subscriptions_delete_subscription:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1subscriptions~1{subscription_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_subscriptions_update_subscription:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1subscriptions~1{subscription_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/account_subscriptions_list_subscriptions'
        insert:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/account_subscriptions_create_subscription'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/account_subscriptions_delete_subscription'
    accounts:
      id: cloudflare.accounts.accounts
      name: accounts
      title: Accounts
      methods:
        list_accounts:
          operation:
            $ref: '#/paths/~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _list_accounts:
          operation:
            $ref: '#/paths/~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        account_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _account_details:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_account:
          operation:
            $ref: '#/paths/~1accounts~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_accounts'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/account_details'
        insert: []
        update: []
        delete: []
    audit_logs:
      id: cloudflare.accounts.audit_logs
      name: audit_logs
      title: Audit Logs
      methods:
        get_account_audit_logs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1audit_logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_account_audit_logs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1audit_logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/audit_logs/methods/get_account_audit_logs'
        insert: []
        update: []
        delete: []
    organizations_audit_logs:
      id: cloudflare.accounts.organizations_audit_logs
      name: organizations_audit_logs
      title: Organizations Audit Logs
      methods:
        audit_logs_get_organization_audit_logs:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1audit_logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _audit_logs_get_organization_audit_logs:
          operation:
            $ref: '#/paths/~1organizations~1{organization_identifier}~1audit_logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations_audit_logs/methods/audit_logs_get_organization_audit_logs'
        insert: []
        update: []
        delete: []
    user_audit_logs:
      id: cloudflare.accounts.user_audit_logs
      name: user_audit_logs
      title: User Audit Logs
      methods:
        audit_logs_get_user_audit_logs:
          operation:
            $ref: '#/paths/~1user~1audit_logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _audit_logs_get_user_audit_logs:
          operation:
            $ref: '#/paths/~1user~1audit_logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_audit_logs/methods/audit_logs_get_user_audit_logs'
        insert: []
        update: []
        delete: []
    diagnostics_traceroute:
      id: cloudflare.accounts.diagnostics_traceroute
      name: diagnostics_traceroute
      title: Diagnostics Traceroute
      methods:
        diagnostics_traceroute:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1diagnostics~1traceroute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/accounts/{account_identifier}/billing/profile':
    get:
      description: Gets the current billing profile for the account.
      operationId: account-billing-profile-billing-profile-details
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/billing_response_single'
          description: Billing Profile Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/billing_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Billing Profile Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Billing Profile Details
      tags:
        - Account Billing Profile
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/members':
    get:
      description: List all members of an account.
      operationId: account-members-list-members
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_collection'
          description: List Members response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Members response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Members
      tags:
        - Account Members
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Add a user to the list of members for this account.
      operationId: account-members-add-member
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Add Member response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add Member response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add Member
      tags:
        - Account Members
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/members/{identifier}':
    delete:
      description: Remove a member from an account.
      operationId: account-members-remove-member
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Remove Member response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Remove Member response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Remove Member
      tags:
        - Account Members
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Get information about a specific member of an account.
      operationId: account-members-member-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Member Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Member Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Member Details
      tags:
        - Account Members
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Modify an account member.
      operationId: account-members-update-member
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-member'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Update Member response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Member response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Member
      tags:
        - Account Members
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/roles':
    get:
      description: Get all available roles for an account.
      operationId: account-roles-list-roles
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_collection'
          description: List Roles response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Roles response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Roles
      tags:
        - Account Roles
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
  '/accounts/{account_identifier}/roles/{identifier}':
    get:
      description: Get information about a specific role for an account.
      operationId: account-roles-role-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Role Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Role Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Role Details
      tags:
        - Account Roles
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
  '/accounts/{account_identifier}/subscriptions':
    get:
      description: Lists all of an account's subscriptions.
      operationId: account-subscriptions-list-subscriptions
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_subscription_response_collection'
          description: List Subscriptions response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/account_subscription_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Subscriptions response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Subscriptions
      tags:
        - Account Subscriptions
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates an account subscription.
      operationId: account-subscriptions-create-subscription
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription-v2'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_subscription_response_single'
          description: Create Subscription response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/account_subscription_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Subscription response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Subscription
      tags:
        - Account Subscriptions
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
          - '#billing:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/subscriptions/{subscription_identifier}':
    delete:
      description: Deletes an account's subscription.
      operationId: account-subscriptions-delete-subscription
      parameters:
        - in: path
          name: subscription_identifier
          required: true
          schema:
            $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        properties:
                          subscription_id:
                            $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
                        type: object
          description: Delete Subscription response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            properties:
                              subscription_id:
                                $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
                            type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Subscription response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Subscription
      tags:
        - Account Subscriptions
      x-cfPermissionsRequired:
        enum:
          - '#billing:edit'
    put:
      description: Updates an account subscription.
      operationId: account-subscriptions-update-subscription
      parameters:
        - in: path
          name: subscription_identifier
          required: true
          schema:
            $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription-v2'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_subscription_response_single'
          description: Update Subscription response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/account_subscription_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Subscription response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Subscription
      tags:
        - Account Subscriptions
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
          - '#billing:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts:
    get:
      description: List all accounts you have ownership or verified access to.
      operationId: accounts-list-accounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_collection'
          description: List Accounts response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Accounts response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Accounts
      tags:
        - Accounts
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{identifier}':
    get:
      description: Get information about a specific account that you are a member of.
      operationId: accounts-account-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Account Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Account Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Account Details
      tags:
        - Accounts
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Update an existing account.
      operationId: accounts-update-account
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/components-schemas-account'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_single'
          description: Update Account response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Account response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Account
      tags:
        - Accounts
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/audit_logs':
    get:
      description: 'Gets a list of audit logs for an account. The list can be filtered by who made the change, which zone was the change made on, and the timeframe of the change.'
      operationId: audit-logs-get-account-audit-logs
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/audit_logs_response_collection'
          description: Get account audit logs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/audit_logs_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get account audit logs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get account audit logs
      tags:
        - Audit Logs
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/organizations/{organization_identifier}/audit_logs':
    get:
      deprecated: true
      description: 'Gets a list of audit logs for an organization. The list can be filtered by who made the change, which zone was the change made on, and the timeframe of the change.'
      operationId: audit-logs-get-organization-audit-logs
      parameters:
        - in: path
          name: organization_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/audit_logs_response_collection'
          description: Get organization audit logs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/audit_logs_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get organization audit logs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get organization audit logs
      tags:
        - Audit Logs
      x-cfDeprecation:
        $ref: organization.json#/components/schemas/organization/x-cfDeprecations/org_deprecation
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  /user/audit_logs:
    get:
      description: 'Gets a list of audit logs for a user account. The list can be filtered by who made the change, which zone was the change made on, and the timeframe of the change.'
      operationId: audit-logs-get-user-audit-logs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/audit_logs_response_collection'
          description: Get user audit logs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/audit_logs_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get user audit logs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get user audit logs
      tags:
        - Audit Logs
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/diagnostics/traceroute':
    post:
      description: Run traceroutes from Cloudflare colos.
      operationId: diagnostics-traceroute
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                colos:
                  $ref: '#/components/schemas/colos'
                options:
                  $ref: '#/components/schemas/schemas-options'
                targets:
                  $ref: '#/components/schemas/schemas-targets'
              required:
                - targets
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/traceroute_response_collection'
          description: Traceroute response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/traceroute_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Traceroute response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Traceroute
      tags:
        - Diagnostics
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
