openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Analyze Certificate
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - certificates
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    bundle_method:
      default: ubiquitous
      description: 'A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.'
      enum:
        - ubiquitous
        - optimal
        - force
      example: ubiquitous
      type: string
    certificate:
      description: The zone's SSL certificate or certificate and the intermediate(s).
      example: |
        -----BEGIN CERTIFICATE-----
        MIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
        BAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX
        aWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF
        MQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50
        ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
        CgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1
        CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB
        KwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5
        0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI
        dZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2
        izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4
        9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI
        GKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV
        BAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF
        MAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2
        2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP
        Mlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG
        SvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq
        2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw
        YbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=
        -----END CERTIFICATE-----
      type: string
    certificate_analyze_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    certificate_pack_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                type: object
              type: array
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    schemas-hosts:
      description: 'Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.'
      example:
        - example.com
        - '*.example.com'
        - www.example.com
      items:
        type: string
      type: array
    certificate_pack_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    certificate_authority:
      description: 'Certificate Authority selected for the order.  Selecting Let''s Encrypt will reduce customization of other fields: validation_method must be ''txt'', validity_days must be 90, cloudflare_branding must be omitted, and hosts must contain only 2 entries, one for the zone name and one for the subdomain wildcard of the zone name (e.g. example.com, *.example.com).'
      enum:
        - digicert
        - google
        - lets_encrypt
      example: digicert
      type: string
    cloudflare_branding:
      description: Whether or not to add Cloudflare Branding for the order.  This will add sni.cloudflaressl.com as the Common Name if set true.
      example: false
      type: boolean
    advanced_type:
      description: Type of certificate pack.
      enum:
        - advanced
      example: advanced
      type: string
    validation_method:
      description: Validation Method selected for the order.
      enum:
        - txt
        - http
        - email
      example: txt
      type: string
    validity_days:
      description: Validity Days selected for the order.
      enum:
        - 14
        - 30
        - 90
        - 365
      type: integer
    advanced_certificate_pack_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                certificate_authority:
                  $ref: '#/components/schemas/certificate_authority'
                cloudflare_branding:
                  $ref: '#/components/schemas/cloudflare_branding'
                hosts:
                  $ref: '#/components/schemas/schemas-hosts'
                id:
                  $ref: '#/components/schemas/certificate-packs_components-schemas-identifier'
                status:
                  $ref: '#/components/schemas/certificate-packs_components-schemas-status'
                type:
                  $ref: '#/components/schemas/advanced_type'
                validation_method:
                  $ref: '#/components/schemas/validation_method'
                validity_days:
                  $ref: '#/components/schemas/validity_days'
              type: object
          type: object
    certificate-packs_components-schemas-identifier:
      description: The unique identifier for a certificate_pack.
      example: 3822ff90-ea29-44df-9e55-21300bb9419b
      readOnly: true
      type: string
    certificate-packs_components-schemas-status:
      description: Status of certificate pack.
      enum:
        - initializing
        - pending_validation
        - deleted
        - pending_issuance
        - pending_deployment
        - pending_deletion
        - pending_expiration
        - expired
        - active
        - initializing_timed_out
        - validation_timed_out
        - issuance_timed_out
        - deployment_timed_out
        - deletion_timed_out
        - pending_cleanup
        - staging_deployment
        - staging_active
        - deactivating
        - inactive
        - backup_issued
        - holding_deployment
      example: initializing
      type: string
    certificate_pack_quota_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                advanced:
                  $ref: '#/components/schemas/quota'
              type: object
          type: object
    quota:
      properties:
        allocated:
          description: Quantity Allocated.
          type: integer
        used:
          description: Quantity Used.
          type: integer
      type: object
    delete_advanced_certificate_pack_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/certificate-packs_components-schemas-identifier'
              type: object
          type: object
    schemas-certificate_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/certificates'
              type: array
          type: object
    certificates:
      properties:
        certificate:
          $ref: '#/components/schemas/components-schemas-certificate'
        csr:
          $ref: '#/components/schemas/csr'
        expires_on:
          $ref: '#/components/schemas/certificates_components-schemas-expires_on'
        hostnames:
          $ref: '#/components/schemas/hostnames'
        id:
          $ref: '#/components/schemas/certificates_components-schemas-identifier'
        request_type:
          $ref: '#/components/schemas/request_type'
        requested_validity:
          $ref: '#/components/schemas/requested_validity'
      required:
        - hostnames
        - csr
        - requested_validity
        - request_type
      type: object
    components-schemas-certificate:
      description: The Origin CA certificate. Will be newline-encoded.
      example: |-
        -----BEGIN CERTIFICATE-----
        MIICvDCCAaQCAQAwdzELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFV0YWgxDzANBgNV
        BAcMBkxpbmRvbjEWMBQGA1UECgwNRGlnaUNlcnQgSW5jLjERMA8GA1UECwwIRGln
        aUNlcnQxHTAbBgNVBAMMFGV4YW1wbGUuZGlnaWNlcnQuY29tMIIBIjANBgkqhkiG
        9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8+To7d+2kPWeBv/orU3LVbJwDrSQbeKamCmo
        wp5bqDxIwV20zqRb7APUOKYoVEFFOEQs6T6gImnIolhbiH6m4zgZ/CPvWBOkZc+c
        1Po2EmvBz+AD5sBdT5kzGQA6NbWyZGldxRthNLOs1efOhdnWFuhI162qmcflgpiI
        WDuwq4C9f+YkeJhNn9dF5+owm8cOQmDrV8NNdiTqin8q3qYAHHJRW28glJUCZkTZ
        wIaSR6crBQ8TbYNE0dc+Caa3DOIkz1EOsHWzTx+n0zKfqcbgXi4DJx+C1bjptYPR
        BPZL8DAeWuA8ebudVT44yEp82G96/Ggcf7F33xMxe0yc+Xa6owIDAQABoAAwDQYJ
        KoZIhvcNAQEFBQADggEBAB0kcrFccSmFDmxox0Ne01UIqSsDqHgL+XmHTXJwre6D
        hJSZwbvEtOK0G3+dr4Fs11WuUNt5qcLsx5a8uk4G6AKHMzuhLsJ7XZjgmQXGECpY
        Q4mC3yT3ZoCGpIXbw+iP3lmEEXgaQL0Tx5LFl/okKbKYwIqNiyKWOMj7ZR/wxWg/
        ZDGRs55xuoeLDJ/ZRFf9bI+IaCUd1YrfYcHIl3G87Av+r49YVwqRDT0VDV7uLgqn
        29XI1PpVUNCPQGn9p/eX6Qo7vpDaPybRtA2R7XLKjQaF9oXWeCUqy1hvJac9QFO2
        97Ob1alpHPoZ7mWiEuJwjBPii6a9M9G30nUo39lBi1w=
        -----END CERTIFICATE-----
      readOnly: true
      type: string
    csr:
      description: The Certificate Signing Request (CSR). Must be newline-encoded.
      example: |-
        -----BEGIN CERTIFICATE REQUEST-----
        MIICxzCCAa8CAQAwSDELMAkGA1UEBhMCVVMxFjAUBgNVBAgTDVNhbiBGcmFuY2lz
        Y28xCzAJBgNVBAcTAkNBMRQwEgYDVQQDEwtleGFtcGxlLm5ldDCCASIwDQYJKoZI
        hvcNAQEBBQADggEPADCCAQoCggEBALxejtu4b+jPdFeFi6OUsye8TYJQBm3WfCvL
        Hu5EvijMO/4Z2TImwASbwUF7Ir8OLgH+mGlQZeqyNvGoSOMEaZVXcYfpR1hlVak8
        4GGVr+04IGfOCqaBokaBFIwzclGZbzKmLGwIQioNxGfqFm6RGYGA3be2Je2iseBc
        N8GV1wYmvYE0RR+yWweJCTJ157exyRzu7sVxaEW9F87zBQLyOnwXc64rflXslRqi
        g7F7w5IaQYOl8yvmk/jEPCAha7fkiUfEpj4N12+oPRiMvleJF98chxjD4MH39c5I
        uOslULhrWunfh7GB1jwWNA9y44H0snrf+xvoy2TcHmxvma9Eln8CAwEAAaA6MDgG
        CSqGSIb3DQEJDjErMCkwJwYDVR0RBCAwHoILZXhhbXBsZS5uZXSCD3d3dy5leGFt
        cGxlLm5ldDANBgkqhkiG9w0BAQsFAAOCAQEAcBaX6dOnI8ncARrI9ZSF2AJX+8mx
        pTHY2+Y2C0VvrVDGMtbBRH8R9yMbqWtlxeeNGf//LeMkSKSFa4kbpdx226lfui8/
        auRDBTJGx2R1ccUxmLZXx4my0W5iIMxunu+kez+BDlu7bTT2io0uXMRHue4i6quH
        yc5ibxvbJMjR7dqbcanVE10/34oprzXQsJ/VmSuZNXtjbtSKDlmcpw6To/eeAJ+J
        hXykcUihvHyG4A1m2R6qpANBjnA0pHexfwM/SgfzvpbvUg0T1ubmer8BgTwCKIWs
        dcWYTthM51JIqRBfNqy4QcBnX+GY05yltEEswQI55wdiS3CjTTA67sdbcQ==
        -----END CERTIFICATE REQUEST-----
      type: string
    certificates_components-schemas-expires_on:
      description: When the certificate will expire.
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    hostnames:
      description: 'Array of hostnames or wildcard names (e.g., *.example.com) bound to the certificate.'
      example:
        - example.com
        - '*.example.com'
      items: {}
      type: array
    certificates_components-schemas-identifier:
      description: The x509 serial number of the Origin CA certificate.
      example: '328578533902268680212849205732770752308931942346'
      readOnly: true
      type: string
    request_type:
      description: 'Signature type desired on certificate ("origin-rsa" (rsa), "origin-ecc" (ecdsa), or "keyless-certificate" (for Keyless SSL servers).'
      enum:
        - origin-rsa
        - origin-ecc
        - keyless-certificate
      example: origin-rsa
      type: string
    requested_validity:
      default: 5475
      description: The number of days for which the certificate should be valid.
      enum:
        - 7
        - 30
        - 90
        - 365
        - 730
        - 1095
        - 5475
      example: 5475
      type: number
    schemas-certificate_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    certificate_response_single_id:
      allOf:
        - $ref: '#/components/schemas/schemas-certificate_response_single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/certificates_components-schemas-identifier'
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    zones_ssl_analyze:
      id: cloudflare.certificates.zones_ssl_analyze
      name: zones_ssl_analyze
      title: Zones Ssl Analyze
      methods:
        analyze_certificate_analyze_certificate:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1ssl~1analyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_ssl_certificate_packs:
      id: cloudflare.certificates.zones_ssl_certificate_packs
      name: zones_ssl_certificate_packs
      title: Zones Ssl Certificate Packs
      methods:
        certificate_packs_list_certificate_packs:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _certificate_packs_list_certificate_packs:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_packs_order_certificate_pack:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_packs_delete_advanced_certificate_manager_certificate_pack:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_packs_get_certificate_pack:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _certificate_packs_get_certificate_pack:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_packs_restart_validation_for_advanced_certificate_manager_certificate_pack:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_packs_order_advanced_certificate_manager_certificate_pack:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs~1order/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_ssl_certificate_packs/methods/certificate_packs_list_certificate_packs'
          - $ref: '#/components/x-stackQL-resources/zones_ssl_certificate_packs/methods/certificate_packs_get_certificate_pack'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_ssl_certificate_packs/methods/certificate_packs_delete_advanced_certificate_manager_certificate_pack'
    zones_ssl_certificate_packs_quota:
      id: cloudflare.certificates.zones_ssl_certificate_packs_quota
      name: zones_ssl_certificate_packs_quota
      title: Zones Ssl Certificate Packs Quota
      methods:
        certificate_packs_get_certificate_pack_quotas:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs~1quota/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.advanced
        _certificate_packs_get_certificate_pack_quotas:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1ssl~1certificate_packs~1quota/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_ssl_certificate_packs_quota/methods/certificate_packs_get_certificate_pack_quotas'
        insert: []
        update: []
        delete: []
    certificates:
      id: cloudflare.certificates.certificates
      name: certificates
      title: Certificates
      methods:
        origin_ca_list_certificates:
          operation:
            $ref: '#/paths/~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _origin_ca_list_certificates:
          operation:
            $ref: '#/paths/~1certificates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        origin_ca_create_certificate:
          operation:
            $ref: '#/paths/~1certificates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        origin_ca_revoke_certificate:
          operation:
            $ref: '#/paths/~1certificates~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        origin_ca_get_certificate:
          operation:
            $ref: '#/paths/~1certificates~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _origin_ca_get_certificate:
          operation:
            $ref: '#/paths/~1certificates~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/origin_ca_list_certificates'
          - $ref: '#/components/x-stackQL-resources/certificates/methods/origin_ca_get_certificate'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/origin_ca_create_certificate'
        update: []
        delete: []
paths:
  '/zones/{identifier}/ssl/analyze':
    post:
      description: 'Returns the set of hostnames, the signature algorithm, and the expiration date of the certificate.'
      operationId: analyze-certificate-analyze-certificate
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bundle_method:
                  $ref: '#/components/schemas/bundle_method'
                certificate:
                  $ref: '#/components/schemas/certificate'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_analyze_response'
          description: Analyze Certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_analyze_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Analyze Certificate response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Analyze Certificate
      tags:
        - Analyze Certificate
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/ssl/certificate_packs':
    get:
      description: 'For a given zone, list all active certificate packs.'
      operationId: certificate-packs-list-certificate-packs
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_pack_response_collection'
          description: List Certificate Packs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_pack_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Certificate Packs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Certificate Packs
      tags:
        - Certificate Packs
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: 'For a given zone, order a certificate pack with a list of hostnames.'
      operationId: certificate-packs-order-certificate-pack
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hosts:
                  $ref: '#/components/schemas/schemas-hosts'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_pack_response_single'
          description: Order Certificate Pack response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_pack_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Order Certificate Pack response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Order Certificate Pack
      tags:
        - Certificate Packs
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/ssl/certificate_packs/order':
    post:
      description: 'For a given zone, order an advanced certificate pack.'
      operationId: certificate-packs-order-advanced-certificate-manager-certificate-pack
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                certificate_authority:
                  $ref: '#/components/schemas/certificate_authority'
                cloudflare_branding:
                  $ref: '#/components/schemas/cloudflare_branding'
                hosts:
                  $ref: '#/components/schemas/schemas-hosts'
                type:
                  $ref: '#/components/schemas/advanced_type'
                validation_method:
                  $ref: '#/components/schemas/validation_method'
                validity_days:
                  $ref: '#/components/schemas/validity_days'
              required:
                - type
                - hosts
                - validation_method
                - validity_days
                - certificate_authority
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advanced_certificate_pack_response_single'
          description: Order Advanced Certificate Manager Certificate Pack response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/advanced_certificate_pack_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Order Advanced Certificate Manager Certificate Pack response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Order Advanced Certificate Manager Certificate Pack
      tags:
        - Certificate Packs
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/ssl/certificate_packs/quota':
    get:
      description: 'For a given zone, list certificate pack quotas.'
      operationId: certificate-packs-get-certificate-pack-quotas
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_pack_quota_response'
          description: Get Certificate Pack Quotas response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_pack_quota_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Certificate Pack Quotas response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Certificate Pack Quotas
      tags:
        - Certificate Packs
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/ssl/certificate_packs/{identifier}':
    delete:
      description: 'For a given zone, delete an advanced certificate pack.'
      operationId: certificate-packs-delete-advanced-certificate-manager-certificate-pack
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/certificate-packs_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delete_advanced_certificate_pack_response_single'
          description: Delete Advanced Certificate Manager Certificate Pack response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/delete_advanced_certificate_pack_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Advanced Certificate Manager Certificate Pack response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Advanced Certificate Manager Certificate Pack
      tags:
        - Certificate Packs
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: 'For a given zone, get a certificate pack.'
      operationId: certificate-packs-get-certificate-pack
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/certificate-packs_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_pack_response_single'
          description: Get Certificate Pack response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_pack_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Certificate Pack response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Certificate Pack
      tags:
        - Certificate Packs
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'For a given zone, restart validation for an advanced certificate pack.  This is only a validation operation for a Certificate Pack in a validation_timed_out status.'
      operationId: certificate-packs-restart-validation-for-advanced-certificate-manager-certificate-pack
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/certificate-packs_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advanced_certificate_pack_response_single'
          description: Restart Validation for Advanced Certificate Manager Certificate Pack response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/advanced_certificate_pack_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Restart Validation for Advanced Certificate Manager Certificate Pack response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Restart Validation for Advanced Certificate Manager Certificate Pack
      tags:
        - Certificate Packs
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /certificates:
    get:
      description: 'List all existing Origin CA certificates for a given zone. Use your Origin CA Key as your User Service Key when calling this endpoint ([see above](#requests)).'
      operationId: origin-ca-list-certificates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-certificate_response_collection'
          description: List Certificates response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-certificate_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Certificates response failure
      security:
        - user_service_key: []
        - api_token: []
      summary: List Certificates
      tags:
        - Origin CA
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: 'Create an Origin CA certificate. Use your Origin CA Key as your User Service Key when calling this endpoint ([see above](#requests)).'
      operationId: origin-ca-create-certificate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                csr:
                  $ref: '#/components/schemas/csr'
                hostnames:
                  $ref: '#/components/schemas/hostnames'
                request_type:
                  $ref: '#/components/schemas/request_type'
                requested_validity:
                  $ref: '#/components/schemas/requested_validity'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-certificate_response_single'
          description: Create Certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-certificate_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Certificate response failure
      security:
        - user_service_key: []
        - api_token: []
      summary: Create Certificate
      tags:
        - Origin CA
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/certificates/{identifier}':
    delete:
      description: 'Revoke an existing Origin CA certificate by its serial number. Use your Origin CA Key as your User Service Key when calling this endpoint ([see above](#requests)).'
      operationId: origin-ca-revoke-certificate
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/certificates_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificate_response_single_id'
          description: Revoke Certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/certificate_response_single_id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Revoke Certificate response failure
      security:
        - user_service_key: []
        - api_token: []
      summary: Revoke Certificate
      tags:
        - Origin CA
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: 'Get an existing Origin CA certificate by its serial number. Use your Origin CA Key as your User Service Key when calling this endpoint ([see above](#requests)).'
      operationId: origin-ca-get-certificate
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/certificates_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-certificate_response_single'
          description: Get Certificate response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-certificate_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Certificate response failure
      security:
        - user_service_key: []
        - api_token: []
      summary: Get Certificate
      tags:
        - Origin CA
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
