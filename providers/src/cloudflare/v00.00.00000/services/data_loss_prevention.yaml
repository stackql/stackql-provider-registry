openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: DLP Pattern Validation
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - data_loss_prevention
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    validate_pattern:
      description: A request to validate a pattern
      properties:
        regex:
          description: The regex pattern.
          example: '^4[0-9]{6,}$'
          type: string
      required:
        - regex
      title: Pattern
      type: object
    schemas-validate_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                valid:
                  example: true
                  type: boolean
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    profiles_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/profiles'
              type: array
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    profiles:
      anyOf:
        - $ref: '#/components/schemas/predefined_profile'
        - $ref: '#/components/schemas/custom_profile'
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    predefined_profile:
      properties:
        entries:
          description: The entries for this profile.
          items:
            $ref: '#/components/schemas/predefined_entry'
          type: array
        id:
          $ref: '#/components/schemas/profile_id'
        name:
          description: The name of the profile.
          example: Generic CVV Card Number
          type: string
        type:
          description: The type of the profile.
          enum:
            - predefined
          example: predefined
          type: string
      title: Predefined profile
      type: object
    custom_profile:
      properties:
        created_at:
          $ref: '#/components/schemas/timestamp'
        description:
          description: The description of the profile.
          example: A standard CVV card number
          type: string
        entries:
          description: The entries for this profile.
          items:
            $ref: '#/components/schemas/custom_entry'
          type: array
        id:
          $ref: '#/components/schemas/profile_id'
        name:
          description: The name of the profile.
          example: Generic CVV Card Number
          type: string
        type:
          description: The type of the profile.
          enum:
            - custom
          example: custom
          type: string
        updated_at:
          $ref: '#/components/schemas/timestamp'
      title: Custom profile
      type: object
    predefined_entry:
      description: A predefined entry that matches a profile
      properties:
        enabled:
          description: Whether the entry is enabled or not.
          example: true
          type: boolean
        id:
          $ref: '#/components/schemas/entry_id'
        name:
          description: The name of the entry.
          example: Credit card (Visa)
          type: string
        profile_id:
          description: ID of the parent profile
      title: Predefined entry
      type: object
    profile_id:
      allOf:
        - $ref: '#/components/schemas/uuid'
      description: The ID for this profile
      example: 384e129d-25bd-403c-8019-bc19eb7a8a5f
    timestamp:
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    custom_entry:
      description: A custom entry that matches a profile
      properties:
        created_at:
          $ref: '#/components/schemas/timestamp'
        enabled:
          description: Whether the entry is enabled or not.
          example: true
          type: boolean
        id:
          $ref: '#/components/schemas/entry_id'
        name:
          description: The name of the entry.
          example: Credit card (Visa)
          type: string
        pattern:
          $ref: '#/components/schemas/components-schemas-pattern'
        profile_id:
          description: ID of the parent profile
        updated_at:
          $ref: '#/components/schemas/timestamp'
      title: Custom entry
      type: object
    entry_id:
      allOf:
        - $ref: '#/components/schemas/uuid'
      description: The ID for this entry
      example: 719d1215-260f-41d0-8c32-eb320ad107f7
    uuid:
      description: UUID
      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      readOnly: true
      type: string
    components-schemas-pattern:
      description: A pattern that matches an entry
      properties:
        regex:
          description: The regex pattern.
          example: '^4[0-9]{6,}$'
          type: string
        validation:
          description: 'Validation algorithm for the pattern. This algorithm will get run on potential matches, and if it returns false, the entry will not be matched.'
          enum:
            - luhn
          example: luhn
          type: string
      required:
        - regex
      title: Pattern
      type: object
    create_custom_profiles:
      properties:
        profiles:
          items:
            $ref: '#/components/schemas/new_custom_profile'
          required:
            - name
            - entries
          type: array
      required:
        - profiles
    create_custom_profile_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/custom_profile'
              type: array
    new_custom_profile:
      properties:
        description:
          description: The description of the profile.
          example: A standard CVV card number
          type: string
        entries:
          description: The entries for this profile.
          items:
            $ref: '#/components/schemas/new_custom_entry'
          type: array
        name:
          description: The name of the profile.
          example: Generic CVV Card Number
          type: string
      type: object
    new_custom_entry:
      description: A custom entry create payload
      properties:
        enabled:
          description: Whether the entry is enabled or not.
          example: true
          type: boolean
        name:
          description: The name of the entry.
          example: Credit card (Visa)
          type: string
        pattern:
          $ref: '#/components/schemas/components-schemas-pattern'
      required:
        - name
        - enabled
        - pattern
      title: Custom entry
      type: object
    custom_profile_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/custom_profile'
    update_custom_profile:
      properties:
        description:
          description: The description of the profile.
          example: A standard CVV card number
          type: string
        entries:
          description: The entries for this profile. Array elements with IDs are modifying the existing entry with that ID. Elements without ID will create new entries. Any entry not in the list will be deleted.
          items:
            $ref: '#/components/schemas/custom_entry'
          type: array
        name:
          description: The name of the profile.
          example: Generic CVV Card Number
          type: string
      title: Update custom profile
      type: object
    predefined_profile_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/predefined_profile'
    update_predefined_profile:
      properties:
        entries:
          description: The entries for this profile.
          items:
            properties:
              enabled:
                description: Wheter the entry is enabled or not.
                example: true
                type: boolean
              id:
                $ref: '#/components/schemas/entry_id'
          type: array
      title: Update predefined profile
      type: object
    either_profile_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              anyOf:
                - $ref: '#/components/schemas/predefined_profile'
                - $ref: '#/components/schemas/custom_profile'
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_dlp_patterns_validate:
      id: cloudflare.data_loss_prevention.accounts_dlp_patterns_validate
      name: accounts_dlp_patterns_validate
      title: Accounts Dlp Patterns Validate
      methods:
        dlp_pattern_validation_validate_pattern:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1patterns~1validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    accounts_dlp_profiles:
      id: cloudflare.data_loss_prevention.accounts_dlp_profiles
      name: accounts_dlp_profiles
      title: Accounts Dlp Profiles
      methods:
        dlp_profiles_list_all_profiles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _dlp_profiles_list_all_profiles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dlp_profiles_get_dlp_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1{profile_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _dlp_profiles_get_dlp_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1{profile_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_dlp_profiles/methods/dlp_profiles_list_all_profiles'
          - $ref: '#/components/x-stackQL-resources/accounts_dlp_profiles/methods/dlp_profiles_get_dlp_profile'
        insert: []
        update: []
        delete: []
    accounts_dlp_profiles_custom:
      id: cloudflare.data_loss_prevention.accounts_dlp_profiles_custom
      name: accounts_dlp_profiles_custom
      title: Accounts Dlp Profiles Custom
      methods:
        dlp_profiles_create_custom_profiles:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1custom/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dlp_profiles_delete_custom_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1custom~1{profile_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dlp_profiles_get_custom_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1custom~1{profile_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _dlp_profiles_get_custom_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1custom~1{profile_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dlp_profiles_update_custom_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1custom~1{profile_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_dlp_profiles_custom/methods/dlp_profiles_get_custom_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_dlp_profiles_custom/methods/dlp_profiles_create_custom_profiles'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_dlp_profiles_custom/methods/dlp_profiles_delete_custom_profile'
    accounts_dlp_profiles_predefined:
      id: cloudflare.data_loss_prevention.accounts_dlp_profiles_predefined
      name: accounts_dlp_profiles_predefined
      title: Accounts Dlp Profiles Predefined
      methods:
        dlp_profiles_get_predefined_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1predefined~1{profile_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _dlp_profiles_get_predefined_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1predefined~1{profile_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dlp_profiles_update_predefined_profile:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dlp~1profiles~1predefined~1{profile_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_dlp_profiles_predefined/methods/dlp_profiles_get_predefined_profile'
        insert: []
        update: []
        delete: []
paths:
  '/accounts/{account_identifier}/dlp/patterns/validate':
    post:
      description: Validates whether this pattern is a valid regular expression. Rejects it if the regular expression is too complex or can match an unbounded-length string. Your regex will be rejected if it uses the Kleene Star -- be sure to bound the maximum number of characters that can be matched.
      operationId: dlp-pattern-validation-validate-pattern
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validate_pattern'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-validate_response'
          description: Validate pattern response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-validate_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Validate pattern response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Validate pattern
      tags:
        - DLP Pattern Validation
  '/accounts/{account_identifier}/dlp/profiles':
    get:
      description: Lists all DLP profiles in an account.
      operationId: dlp-profiles-list-all-profiles
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profiles_components-schemas-response_collection'
          description: List all profiles response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/profiles_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List all profiles response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List all profiles
      tags:
        - DLP Profiles
  '/accounts/{account_identifier}/dlp/profiles/custom':
    post:
      description: Creates a set of DLP custom profiles.
      operationId: dlp-profiles-create-custom-profiles
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_custom_profiles'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_custom_profile_response'
          description: Create custom profiles response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/create_custom_profile_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create custom profiles response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create custom profiles
      tags:
        - DLP Profiles
  '/accounts/{account_identifier}/dlp/profiles/custom/{profile_id}':
    delete:
      description: Deletes a DLP custom profile.
      operationId: dlp-profiles-delete-custom-profile
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            $ref: '#/components/schemas/profile_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Delete custom profile response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete custom profile response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete custom profile
      tags:
        - DLP Profiles
    get:
      description: Fetches a custom DLP profile.
      operationId: dlp-profiles-get-custom-profile
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            $ref: '#/components/schemas/profile_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_profile_response'
          description: Get custom profile response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/custom_profile_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get custom profile response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get custom profile
      tags:
        - DLP Profiles
    put:
      description: Updates a DLP custom profile.
      operationId: dlp-profiles-update-custom-profile
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            $ref: '#/components/schemas/profile_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_custom_profile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_profile'
          description: Update custom profile response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/custom_profile'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update custom profile response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update custom profile
      tags:
        - DLP Profiles
  '/accounts/{account_identifier}/dlp/profiles/predefined/{profile_id}':
    get:
      description: Fetches a predefined DLP profile.
      operationId: dlp-profiles-get-predefined-profile
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            $ref: '#/components/schemas/profile_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/predefined_profile_response'
          description: Get predefined profile response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/predefined_profile_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get predefined profile response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get predefined profile
      tags:
        - DLP Profiles
    put:
      description: Updates a DLP predefined profile. Only supports enabling/disabling entries.
      operationId: dlp-profiles-update-predefined-profile
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            $ref: '#/components/schemas/profile_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_predefined_profile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/predefined_profile'
          description: Update predefined profile response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/predefined_profile'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update predefined profile response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update predefined profile
      tags:
        - DLP Profiles
  '/accounts/{account_identifier}/dlp/profiles/{profile_id}':
    get:
      description: Fetches a DLP profile by ID. Supports both predefined and custom profiles
      operationId: dlp-profiles-get-dlp-profile
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            $ref: '#/components/schemas/profile_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/either_profile_response'
          description: Get DLP Profile response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/either_profile_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get DLP Profile response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get DLP Profile
      tags:
        - DLP Profiles
