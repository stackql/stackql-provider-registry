openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Magic GRE tunnels
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - magic
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                gre_tunnels:
                  items:
                    $ref: '#/components/schemas/gre-tunnel'
                  type: array
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    gre-tunnel:
      properties:
        cloudflare_gre_endpoint:
          $ref: '#/components/schemas/cloudflare_gre_endpoint'
        created_on:
          $ref: '#/components/schemas/common_components-schemas-created_on'
        customer_gre_endpoint:
          $ref: '#/components/schemas/customer_gre_endpoint'
        description:
          $ref: '#/components/schemas/gre-tunnel_components-schemas-description'
        health_check:
          $ref: '#/components/schemas/health_check'
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier-2'
        interface_address:
          $ref: '#/components/schemas/interface_address'
        modified_on:
          $ref: '#/components/schemas/common_components-schemas-modified_on'
        mtu:
          $ref: '#/components/schemas/mtu'
        name:
          $ref: '#/components/schemas/gre-tunnel_components-schemas-name'
        ttl:
          $ref: '#/components/schemas/components-schemas-ttl'
      required:
        - name
        - customer_gre_endpoint
        - cloudflare_gre_endpoint
        - interface_address
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    cloudflare_gre_endpoint:
      description: The IP address assigned to the Cloudflare side of the GRE tunnel.
      example: 203.0.113.1
      type: string
    common_components-schemas-created_on:
      description: The date and time the tunnel was created.
      example: '2017-06-14T00:00:00Z'
      format: date-time
      readOnly: true
      type: string
    customer_gre_endpoint:
      description: The IP address assigned to the customer side of the GRE tunnel.
      example: 203.0.113.1
      type: string
    gre-tunnel_components-schemas-description:
      description: An optional description of the GRE tunnel.
      example: Tunnel for ISP X
      type: string
    health_check:
      properties:
        enabled:
          default: true
          description: Determines whether to run healthchecks for a tunnel.
          example: true
          type: boolean
        target:
          description: The address used to run healthchecks for a tunnel. This field defaults to `customer_gre_endpoint address`.
          example: 203.0.113.1
          type: string
        type:
          default: reply
          description: 'The type of healthcheck to run, reply or request. The default value is `reply`.'
          enum:
            - reply
            - request
          example: request
          type: string
      type: object
    common_components-schemas-identifier-2:
      description: Tunnel identifier tag.
      example: c4a7362d577a6c3019a474fd6f485821
      maxLength: 32
      readOnly: true
      type: string
    interface_address:
      description: 'A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.'
      example: 192.0.2.0/31
      type: string
    common_components-schemas-modified_on:
      description: The date and time the tunnel was last modified.
      example: '2017-06-14T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    mtu:
      default: 1476
      description: Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.
      type: integer
    gre-tunnel_components-schemas-name:
      description: 'The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.'
      example: GRE_1
      type: string
    components-schemas-ttl:
      default: 64
      description: Time To Live (TTL) in number of hops of the GRE tunnel.
      type: integer
    modified_tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_gre_tunnels:
                  items:
                    $ref: '#/components/schemas/gre-tunnel'
                  type: array
    tunnel_deleted_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  example: true
                  type: boolean
                deleted_gre_tunnel:
                  type: object
    tunnel_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                gre_tunnel:
                  type: object
    tunnel_update_request:
      allOf:
        - $ref: '#/components/schemas/tunnel_add_single_request'
    tunnel_modified_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_gre_tunnel:
                  type: object
    tunnel_add_single_request:
      properties:
        cloudflare_gre_endpoint:
          $ref: '#/components/schemas/cloudflare_gre_endpoint'
        customer_gre_endpoint:
          $ref: '#/components/schemas/customer_gre_endpoint'
        description:
          $ref: '#/components/schemas/gre-tunnel_components-schemas-description'
        health_check:
          $ref: '#/components/schemas/health_check'
        interface_address:
          $ref: '#/components/schemas/interface_address'
        mtu:
          $ref: '#/components/schemas/mtu'
        name:
          $ref: '#/components/schemas/gre-tunnel_components-schemas-name'
        ttl:
          $ref: '#/components/schemas/components-schemas-ttl'
      required:
        - name
        - customer_gre_endpoint
        - cloudflare_gre_endpoint
        - interface_address
      type: object
    schemas-tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                ipsec_tunnels:
                  items:
                    $ref: '#/components/schemas/ipsec-tunnel'
                  type: array
    ipsec-tunnel:
      properties:
        allow_null_cipher:
          $ref: '#/components/schemas/allow_null_cipher'
        cloudflare_endpoint:
          $ref: '#/components/schemas/cloudflare_ipsec_endpoint'
        created_on:
          $ref: '#/components/schemas/common_components-schemas-created_on'
        customer_endpoint:
          $ref: '#/components/schemas/customer_ipsec_endpoint'
        description:
          $ref: '#/components/schemas/ipsec-tunnel_components-schemas-description'
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier-2'
        interface_address:
          $ref: '#/components/schemas/interface_address'
        modified_on:
          $ref: '#/components/schemas/common_components-schemas-modified_on'
        name:
          $ref: '#/components/schemas/ipsec-tunnel_components-schemas-name'
        psk_metadata:
          $ref: '#/components/schemas/psk_metadata'
        tunnel_health_check:
          $ref: '#/components/schemas/tunnel_health_check'
      required:
        - name
        - cloudflare_endpoint
        - interface_address
      type: object
    allow_null_cipher:
      description: 'When `true`, the tunnel can use a null-cipher (`ENCR_NULL`) in the ESP tunnel (Phase 2).'
      example: true
      type: boolean
    cloudflare_ipsec_endpoint:
      description: The IP address assigned to the Cloudflare side of the IPsec tunnel.
      example: 203.0.113.1
      type: string
    customer_ipsec_endpoint:
      description: The IP address assigned to the customer side of the IPsec tunnel.
      example: 203.0.113.1
      type: string
    ipsec-tunnel_components-schemas-description:
      description: An optional description forthe IPsec tunnel.
      example: Tunnel for ISP X
      type: string
    ipsec-tunnel_components-schemas-name:
      description: The name of the IPsec tunnel. The name cannot share a name with other tunnels.
      example: IPsec_1
      type: string
    psk_metadata:
      description: The PSK metadata that includes when the PSK was generated.
      properties:
        last_generated_on:
          $ref: '#/components/schemas/common_components-schemas-modified_on'
      type: object
    tunnel_health_check:
      properties:
        enabled:
          default: true
          description: Determines whether to run healthchecks for a tunnel.
          example: true
          type: boolean
        target:
          description: The address used to run healthchecks for a tunnel. This field defaults to `customer_gre_endpoint address`.
          example: 203.0.113.1
          type: string
        type:
          default: reply
          description: 'The type of healthcheck to run, reply or request. The default value is `reply`.'
          enum:
            - reply
            - request
          example: request
          type: string
      type: object
    schemas-modified_tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_ipsec_tunnels:
                  items:
                    $ref: '#/components/schemas/ipsec-tunnel'
                  type: array
    schemas-tunnel_deleted_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  example: true
                  type: boolean
                deleted_ipsec_tunnel:
                  type: object
    schemas-tunnel_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                ipsec_tunnel:
                  type: object
    schemas-tunnel_update_request:
      allOf:
        - $ref: '#/components/schemas/schemas-tunnel_add_single_request'
    schemas-tunnel_modified_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_ipsec_tunnel:
                  type: object
    schemas-tunnel_add_single_request:
      properties:
        cloudflare_endpoint:
          $ref: '#/components/schemas/cloudflare_ipsec_endpoint'
        customer_endpoint:
          $ref: '#/components/schemas/customer_ipsec_endpoint'
        description:
          $ref: '#/components/schemas/ipsec-tunnel_components-schemas-description'
        interface_address:
          $ref: '#/components/schemas/interface_address'
        name:
          $ref: '#/components/schemas/ipsec-tunnel_components-schemas-name'
        psk:
          $ref: '#/components/schemas/psk'
      required:
        - name
        - cloudflare_endpoint
        - interface_address
      type: object
    psk:
      description: A randomly generated or provided string for use in the IPsec tunnel.
      example: O3bwKSjnaoCxDoUxjcq4Rk8ZKkezQUiy
      type: string
    psk_generation_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                ipsec_tunnel_id:
                  $ref: '#/components/schemas/common_components-schemas-identifier'
                psk:
                  $ref: '#/components/schemas/psk'
                psk_metadata:
                  $ref: '#/components/schemas/psk_metadata'
    components-schemas-tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                interconnects:
                  items:
                    $ref: '#/components/schemas/interconnect'
                  type: array
    interconnect:
      properties:
        colo_name:
          $ref: '#/components/schemas/interconnect_components-schemas-name'
        created_on:
          $ref: '#/components/schemas/common_components-schemas-created_on'
        description:
          $ref: '#/components/schemas/interconnect_components-schemas-description'
        gre:
          $ref: '#/components/schemas/gre'
        health_check:
          $ref: '#/components/schemas/schemas-health_check'
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier-2'
        interface_address:
          $ref: '#/components/schemas/interface_address'
        modified_on:
          $ref: '#/components/schemas/common_components-schemas-modified_on'
        mtu:
          $ref: '#/components/schemas/schemas-mtu'
        name:
          $ref: '#/components/schemas/interconnect_components-schemas-name'
      type: object
    interconnect_components-schemas-name:
      description: The name of the interconnect. The name cannot share a name with other tunnels.
      example: pni_ord
      type: string
    interconnect_components-schemas-description:
      description: An optional description of the interconnect.
      example: Tunnel for Interconnect to ORD
      type: string
    gre:
      description: The configuration specific to GRE interconnects.
      properties:
        cloudflare_endpoint:
          description: The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.
          example: 203.0.113.1
          type: string
        customer_endpoint:
          description: The IP address assigned to the customer side of the GRE tunnel created as part of the Interconnect.
          example: 203.0.113.1
          type: string
      type: object
    schemas-health_check:
      properties:
        enabled:
          default: true
          description: Determines whether to run healthchecks for a tunnel.
          example: true
          type: boolean
        target:
          description: The address used to run healthchecks for a tunnel.
          example: 203.0.113.1
          type: string
        type:
          default: reply
          description: 'The type of healthcheck to run, reply or request. The default value is `reply`.'
          enum:
            - reply
            - request
          example: request
          type: string
      type: object
    schemas-mtu:
      default: 1476
      description: The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.
      type: integer
    components-schemas-modified_tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_interconnects:
                  items:
                    $ref: '#/components/schemas/interconnect'
                  type: array
    components-schemas-tunnel_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                interconnect:
                  type: object
    components-schemas-tunnel_update_request:
      properties:
        description:
          $ref: '#/components/schemas/interconnect_components-schemas-description'
        gre:
          $ref: '#/components/schemas/gre'
        interface_address:
          $ref: '#/components/schemas/interface_address'
        mtu:
          $ref: '#/components/schemas/schemas-mtu'
      type: object
    components-schemas-tunnel_modified_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_interconnect:
                  type: object
    config_components-schemas-account_identifier:
      example: 6f91088a406011ed95aed352566e8d4c
    mnm_config:
      properties:
        default_sampling:
          $ref: '#/components/schemas/mnm_config_default_sampling'
        name:
          $ref: '#/components/schemas/mnm_config_name'
        router_ips:
          $ref: '#/components/schemas/mnm_config_router_ips'
      required:
        - name
        - default_sampling
        - router_ips
      type: object
    mnm_config_default_sampling:
      default: 1
      description: Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
      minimum: 1
      type: number
    mnm_config_name:
      description: The account name.
      example: cloudflare user's account
      type: string
    mnm_config_router_ips:
      items:
        $ref: '#/components/schemas/mnm_config_router_ip'
      type: array
    mnm_config_router_ip:
      description: IPv4 CIDR of the router sourcing flow data. Only /32 addresses are currently supported.
      example: 203.0.113.1/32
      type: string
    rules_components-schemas-account_identifier:
      example: 6f91088a406011ed95aed352566e8d4c
    mnm_rules:
      items:
        $ref: '#/components/schemas/mnm_rule'
      type: array
    mnm_rule:
      properties:
        automatic_advertisement:
          $ref: '#/components/schemas/mnm_rule_automatic_advertisement'
        bandwidth_threshold:
          $ref: '#/components/schemas/mnm_rule_bandwidth_threshold'
        duration:
          $ref: '#/components/schemas/mnm_rule_duration'
        id:
          $ref: '#/components/schemas/schemas-rule_identifier'
        name:
          $ref: '#/components/schemas/mnm_rule_name'
        packet_threshold:
          $ref: '#/components/schemas/mnm_rule_packet_threshold'
        prefixes:
          $ref: '#/components/schemas/mnm_rule_ip_prefixes'
      required:
        - name
        - prefixes
        - automatic_advertisement
        - duration
      type: object
    mnm_rule_automatic_advertisement:
      description: Toggle on if you would like Cloudflare to automatically advertise the IP Prefixes within the rule via Magic Transit when the rule is triggered. Only available for users of Magic Transit.
      example: 'false'
      type: boolean
    mnm_rule_bandwidth_threshold:
      description: 'The number of bits per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.'
      example: 1000
      minimum: 1
      type: number
    mnm_rule_duration:
      default: 60s
      description: 'The amount of time that the rule threshold must be exceeded to send an alert notification. The minimum is 60 seconds and maximum is 21600 seconds. The format is XhYmZs where X, Y, and Z durations are optional; however at least one unit must be provided.'
      example: 1h2m3s
      type: string
    schemas-rule_identifier:
      example: 2890e6fa406311ed9b5a23f70f6fb8cf
    mnm_rule_name:
      description: 'The name of the rule. Must be unique. Supports characters A-Z, a-z, 0-9, underscore (_), dash (-), period (.), and tilde (~). You can’t have a space in the rule name. Max 256 characters.'
      example: my_rule_1
      type: string
    mnm_rule_packet_threshold:
      description: 'The number of packets per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.'
      example: 10000
      minimum: 1
      type: number
    mnm_rule_ip_prefixes:
      items:
        $ref: '#/components/schemas/mnm_rule_ip_prefix'
      type: array
    mnm_rule_ip_prefix:
      description: The IP prefixes that are monitored for this rule. Must be a CIDR range like 203.0.113.0/24. Max 5000 different CIDR ranges.
      example: 203.0.113.1/32
      type: string
    pcaps_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                anyOf:
                  - $ref: '#/components/schemas/pcaps_response_simple'
                  - $ref: '#/components/schemas/pcaps_response_full'
              type: array
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    pcaps_response_simple:
      properties:
        filter_v1:
          $ref: '#/components/schemas/pcaps_filter_v1'
        id:
          $ref: '#/components/schemas/pcaps_id'
        status:
          $ref: '#/components/schemas/pcaps_status'
        submitted:
          $ref: '#/components/schemas/pcaps_submitted'
        system:
          $ref: '#/components/schemas/pcaps_system'
        time_limit:
          $ref: '#/components/schemas/pcaps_time_limit'
        type:
          $ref: '#/components/schemas/pcaps_type'
      type: object
    pcaps_response_full:
      properties:
        byte_limit:
          $ref: '#/components/schemas/pcaps_byte_limit'
        colo_name:
          $ref: '#/components/schemas/pcaps_colo_name'
        destination_conf:
          $ref: '#/components/schemas/pcaps_destination_conf'
        error_message:
          $ref: '#/components/schemas/pcaps_error_message'
        filter_v1:
          $ref: '#/components/schemas/pcaps_filter_v1'
        id:
          $ref: '#/components/schemas/pcaps_id'
        status:
          $ref: '#/components/schemas/pcaps_status'
        submitted:
          $ref: '#/components/schemas/pcaps_submitted'
        system:
          $ref: '#/components/schemas/pcaps_system'
        time_limit:
          $ref: '#/components/schemas/pcaps_time_limit'
        type:
          $ref: '#/components/schemas/pcaps_type'
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    pcaps_filter_v1:
      description: 'The packet capture filter. When this field is empty, all packets are captured.'
      properties:
        destination_address:
          description: The destination IP address of the packet.
          example: 1.2.3.4
          type: string
        destination_port:
          description: The destination port of the packet.
          example: 80
          type: number
        protocol:
          description: The protocol number of the packet.
          example: 6
          type: number
        source_address:
          description: The source IP address of the packet.
          example: 1.2.3.4
          type: string
        source_port:
          description: The source port of the packet.
          example: 123
          type: number
      type: object
    pcaps_id:
      description: The ID for the packet capture.
      example: 66802ca5668e47a2b82c2e6746e45037
      maxLength: 32
      minLength: 32
      type: string
    pcaps_status:
      description: The status of the packet capture request.
      enum:
        - unknown
        - success
        - pending
        - running
        - conversion_pending
        - conversion_running
        - complete
        - failed
      example: success
      type: string
    pcaps_submitted:
      description: The RFC 3339 timestamp when the packet capture was created.
      example: '2020-01-01T08:00:00Z'
      type: string
    pcaps_system:
      description: The system used to collect packet captures.
      enum:
        - magic-transit
      example: magic-transit
      type: string
    pcaps_time_limit:
      description: The packet capture duration in seconds.
      example: 300
      maximum: 300
      minimum: 1
      type: number
    pcaps_type:
      description: 'The type of packet capture. `Simple` captures sampled packets, and `full` captures entire payloads and non-sampled packets.'
      enum:
        - simple
        - full
      example: simple
      type: string
    pcaps_byte_limit:
      description: The maximum number of bytes to capture. This field only applies to `full` packet captures.
      example: 500000
      maximum: 1000000000
      minimum: 1
      type: number
    pcaps_colo_name:
      description: The name of the data center used for the packet capture. This can be a specific colo (ord02) or a multi-colo name (ORD). This field only applies to `full` packet captures.
      example: ord02
      type: string
    pcaps_destination_conf:
      description: The full URI for the bucket. This field only applies to `full` packet captures.
      example: 's3://pcaps-bucket?region=us-east-1'
      type: string
    pcaps_error_message:
      description: An error message that describes why the packet capture failed. This field only applies to `full` packet captures.
      example: No packets matched the filter in the time limit given. Please modify the filter or try again.
      type: string
    pcaps_request_pcap:
      anyOf:
        - $ref: '#/components/schemas/pcaps_request_simple'
        - $ref: '#/components/schemas/pcaps_request_full'
    pcaps_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              anyOf:
                - $ref: '#/components/schemas/pcaps_response_simple'
                - $ref: '#/components/schemas/pcaps_response_full'
    pcaps_request_simple:
      properties:
        filter_v1:
          $ref: '#/components/schemas/pcaps_filter_v1'
        packet_limit:
          $ref: '#/components/schemas/pcaps_packet_limit'
        system:
          $ref: '#/components/schemas/pcaps_system'
        time_limit:
          $ref: '#/components/schemas/pcaps_time_limit'
        type:
          $ref: '#/components/schemas/pcaps_type'
      required:
        - time_limit
        - packet_limit
        - type
        - system
      type: object
    pcaps_request_full:
      properties:
        byte_limit:
          $ref: '#/components/schemas/pcaps_byte_limit'
        colo_name:
          $ref: '#/components/schemas/pcaps_colo_name'
        destination_conf:
          $ref: '#/components/schemas/pcaps_destination_conf'
        filter_v1:
          $ref: '#/components/schemas/pcaps_filter_v1'
        packet_limit:
          $ref: '#/components/schemas/pcaps_packet_limit'
        system:
          $ref: '#/components/schemas/pcaps_system'
        time_limit:
          $ref: '#/components/schemas/pcaps_time_limit'
        type:
          $ref: '#/components/schemas/pcaps_type'
      required:
        - time_limit
        - type
        - system
        - colo_name
        - destination_conf
      type: object
    pcaps_packet_limit:
      description: The limit of packets contained in a packet capture.
      example: 10000
      maximum: 10000
      minimum: 1
      type: number
    pcaps_ownership_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/pcaps_ownership_response'
              nullable: true
              type: array
    pcaps_ownership_response:
      properties:
        destination_conf:
          $ref: '#/components/schemas/pcaps_destination_conf'
        filename:
          $ref: '#/components/schemas/pcaps_ownership_challenge'
        id:
          description: The bucket ID associated with the packet captures API.
          example: 9883874ecac311ec8475433579a6bf5f
          maxLength: 32
          minLength: 32
          type: string
        status:
          description: 'The status of the ownership challenge. Can be pending, success or failed.'
          enum:
            - pending
            - success
            - failed
          example: success
          type: string
        submitted:
          description: The RFC 3339 timestamp when the bucket was added to packet captures API.
          example: '2020-01-01T08:00:00Z'
          type: string
        validated:
          description: The RFC 3339 timestamp when the bucket was validated.
          example: '2020-01-01T08:00:00Z'
          type: string
      required:
        - id
        - status
        - submitted
        - destination_conf
        - filename
      type: object
    pcaps_ownership_challenge:
      description: The ownership challenge filename stored in the bucket.
      example: ownership-challenge-9883874ecac311ec8475433579a6bf5f.txt
      type: string
    pcaps_ownership_request:
      properties:
        destination_conf:
          $ref: '#/components/schemas/pcaps_destination_conf'
      required:
        - destination_conf
      type: object
    pcaps_ownership_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/pcaps_ownership_response'
    pcaps_ownership_validate_request:
      properties:
        destination_conf:
          $ref: '#/components/schemas/pcaps_destination_conf'
        ownership_challenge:
          $ref: '#/components/schemas/pcaps_ownership_challenge'
      required:
        - destination_conf
        - ownership_challenge
      type: object
    routes_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                routes:
                  items:
                    $ref: '#/components/schemas/schemas-route'
                  type: array
    schemas-route:
      properties:
        created_on:
          $ref: '#/components/schemas/route_components-schemas-created_on'
        description:
          $ref: '#/components/schemas/route_components-schemas-description'
        id:
          $ref: '#/components/schemas/route_components-schemas-identifier'
        modified_on:
          $ref: '#/components/schemas/route_components-schemas-modified_on'
        nexthop:
          $ref: '#/components/schemas/nexthop'
        prefix:
          $ref: '#/components/schemas/prefix'
        priority:
          $ref: '#/components/schemas/route_components-schemas-priority'
        scope:
          $ref: '#/components/schemas/schemas-scope'
        weight:
          $ref: '#/components/schemas/schemas-weight'
      required:
        - prefix
        - nexthop
        - priority
      type: object
    route_components-schemas-created_on:
      description: When the route was created.
      example: '2017-06-14T00:00:00Z'
      format: date-time
      readOnly: true
      type: string
    route_components-schemas-description:
      description: An optional human provided description of the static route.
      example: New route for new prefix 203.0.113.1
      type: string
    route_components-schemas-identifier:
      description: Route identifier tag.
      example: c4a7362d577a6c3019a474fd6f485821
      maxLength: 32
      readOnly: true
      type: string
    route_components-schemas-modified_on:
      description: When the route was last modified.
      example: '2017-06-14T05:20:00Z'
      format: date-time
      readOnly: true
      type: string
    nexthop:
      description: The next-hop IP Address for the static route.
      example: 203.0.113.1
      type: string
    prefix:
      description: IP Prefix in Classless Inter-Domain Routing format.
      example: 192.0.2.0/24
      type: string
    route_components-schemas-priority:
      description: Priority of the static route.
      type: integer
    schemas-scope:
      description: Used only for ECMP routes.
      properties:
        colo_names:
          $ref: '#/components/schemas/colo_names'
        colo_regions:
          $ref: '#/components/schemas/colo_regions'
      type: object
    schemas-weight:
      description: Optional weight of the ECMP scope - if provided.
      type: integer
    colo_names:
      description: List of colo names for the ECMP scope.
      items:
        $ref: '#/components/schemas/schemas-colo_name'
      type: array
    colo_regions:
      description: List of colo regions for the ECMP scope.
      items:
        $ref: '#/components/schemas/colo_region'
      type: array
    schemas-colo_name:
      description: Scope colo name.
      example: den01
      type: string
    colo_region:
      description: Scope colo region.
      example: APAC
      type: string
    route_update_many_request:
      properties:
        routes:
          items:
            $ref: '#/components/schemas/route_update_single_request'
          type: array
      required:
        - routes
      type: object
    multiple_route_modified_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_routes:
                  items:
                    $ref: '#/components/schemas/schemas-route'
                  type: array
    route_update_single_request:
      allOf:
        - properties:
            id:
              $ref: '#/components/schemas/common_components-schemas-identifier'
          required:
            - id
        - $ref: '#/components/schemas/route_add_single_request'
    route_add_single_request:
      properties:
        description:
          $ref: '#/components/schemas/route_components-schemas-description'
        nexthop:
          $ref: '#/components/schemas/nexthop'
        prefix:
          $ref: '#/components/schemas/prefix'
        priority:
          $ref: '#/components/schemas/route_components-schemas-priority'
        scope:
          $ref: '#/components/schemas/schemas-scope'
        weight:
          $ref: '#/components/schemas/schemas-weight'
      required:
        - prefix
        - nexthop
        - priority
      type: object
    route_deleted_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  example: true
                  type: boolean
                deleted_route:
                  type: object
    route_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                route:
                  type: object
    route_update_request:
      allOf:
        - $ref: '#/components/schemas/route_add_single_request'
    route_modified_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_route:
                  type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_gre_tunnels:
      id: cloudflare.magic.accounts_gre_tunnels
      name: accounts_gre_tunnels
      title: Accounts Gre Tunnels
      methods:
        gre_tunnels_list_gre_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1gre_tunnels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.gre_tunnels
        _gre_tunnels_list_gre_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1gre_tunnels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gre_tunnels_create_gre_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1gre_tunnels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gre_tunnels_update_multiple_gre_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1gre_tunnels/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gre_tunnels_delete_gre_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1gre_tunnels~1{tunnel_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gre_tunnels_list_gre_tunnel_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1gre_tunnels~1{tunnel_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.gre_tunnel
        _gre_tunnels_list_gre_tunnel_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1gre_tunnels~1{tunnel_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        gre_tunnels_update_gre_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1gre_tunnels~1{tunnel_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_gre_tunnels/methods/gre_tunnels_list_gre_tunnels'
          - $ref: '#/components/x-stackQL-resources/accounts_gre_tunnels/methods/gre_tunnels_list_gre_tunnel_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_gre_tunnels/methods/gre_tunnels_create_gre_tunnels'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_gre_tunnels/methods/gre_tunnels_delete_gre_tunnel'
    accounts_ipsec_tunnels:
      id: cloudflare.magic.accounts_ipsec_tunnels
      name: accounts_ipsec_tunnels
      title: Accounts Ipsec Tunnels
      methods:
        i_psec_tunnels_list_i_psec_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.ipsec_tunnels
        _i_psec_tunnels_list_i_psec_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        i_psec_tunnels_create_i_psec_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        i_psec_tunnels_update_multiple_i_psec_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        i_psec_tunnels_delete_i_psec_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels~1{tunnel_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        i_psec_tunnels_list_i_psec_tunnel_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels~1{tunnel_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.ipsec_tunnel
        _i_psec_tunnels_list_i_psec_tunnel_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels~1{tunnel_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        i_psec_tunnels_update_i_psec_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels~1{tunnel_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        i_psec_tunnels_generate_pre_shared_key___psk__for_i_psec_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1ipsec_tunnels~1{tunnel_identifier}~1psk_generate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_ipsec_tunnels/methods/i_psec_tunnels_list_i_psec_tunnels'
          - $ref: '#/components/x-stackQL-resources/accounts_ipsec_tunnels/methods/i_psec_tunnels_list_i_psec_tunnel_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_ipsec_tunnels/methods/i_psec_tunnels_create_i_psec_tunnels'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_ipsec_tunnels/methods/i_psec_tunnels_delete_i_psec_tunnel'
    accounts_cf_interconnects:
      id: cloudflare.magic.accounts_cf_interconnects
      name: accounts_cf_interconnects
      title: Accounts Cf Interconnects
      methods:
        interconnects_list_interconnects:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1cf_interconnects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.interconnects
        _interconnects_list_interconnects:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1cf_interconnects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        interconnects_update_multiple_interconnects:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1cf_interconnects/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        interconnects_list_interconnect_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1cf_interconnects~1{tunnel_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.interconnect
        _interconnects_list_interconnect_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1cf_interconnects~1{tunnel_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        interconnects_update_interconnect:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1cf_interconnects~1{tunnel_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_cf_interconnects/methods/interconnects_list_interconnects'
          - $ref: '#/components/x-stackQL-resources/accounts_cf_interconnects/methods/interconnects_list_interconnect_details'
        insert: []
        update: []
        delete: []
    accounts_mnm_config:
      id: cloudflare.magic.accounts_mnm_config
      name: accounts_mnm_config
      title: Accounts Mnm Config
      methods:
        network_monitoring_configuration_delete_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1config/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_configuration_list_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _network_monitoring_configuration_list_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_configuration_update_account_configuration_fields:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_configuration_create_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1config/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_configuration_update_an_entire_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1config/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_mnm_config/methods/network_monitoring_configuration_list_account_configuration'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_mnm_config/methods/network_monitoring_configuration_create_account_configuration'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_mnm_config/methods/network_monitoring_configuration_delete_account_configuration'
    accounts_mnm_config_full:
      id: cloudflare.magic.accounts_mnm_config_full
      name: accounts_mnm_config_full
      title: Accounts Mnm Config Full
      methods:
        network_monitoring_configuration_list_rules_and_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1config~1full/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _network_monitoring_configuration_list_rules_and_account_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1config~1full/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_mnm_config_full/methods/network_monitoring_configuration_list_rules_and_account_configuration'
        insert: []
        update: []
        delete: []
    accounts_mnm_rules:
      id: cloudflare.magic.accounts_mnm_rules
      name: accounts_mnm_rules
      title: Accounts Mnm Rules
      methods:
        network_monitoring_rules_list_rules:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _network_monitoring_rules_list_rules:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_rules_create_rules:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_rules_update_rules:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_rules_delete_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules~1{rule_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_rules_get_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules~1{rule_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _network_monitoring_rules_get_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules~1{rule_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_rules_update_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules~1{rule_identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        network_monitoring_rules_update_advertisement_for_rule:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1mnm~1rules~1{rule_identifier}~1advertisement/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_mnm_rules/methods/network_monitoring_rules_list_rules'
          - $ref: '#/components/x-stackQL-resources/accounts_mnm_rules/methods/network_monitoring_rules_get_rule'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_mnm_rules/methods/network_monitoring_rules_create_rules'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_mnm_rules/methods/network_monitoring_rules_delete_rule'
    accounts_pcaps:
      id: cloudflare.magic.accounts_pcaps
      name: accounts_pcaps
      title: Accounts Pcaps
      methods:
        pcap_collection_list_packet_capture_requests:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _pcap_collection_list_packet_capture_requests:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pcap_collection_create_pcap_request:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pcap_collection_get_pcap_request:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _pcap_collection_get_pcap_request:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pcap_collection_download_simple_pcap:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1{identifier}~1download/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _pcap_collection_download_simple_pcap:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1{identifier}~1download/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_pcaps/methods/pcap_collection_list_packet_capture_requests'
          - $ref: '#/components/x-stackQL-resources/accounts_pcaps/methods/pcap_collection_get_pcap_request'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_pcaps/methods/pcap_collection_create_pcap_request'
        update: []
        delete: []
    accounts_pcaps_ownership:
      id: cloudflare.magic.accounts_pcaps_ownership
      name: accounts_pcaps_ownership
      title: Accounts Pcaps Ownership
      methods:
        pcap_collection_list_pca_ps_bucket_ownership:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1ownership/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _pcap_collection_list_pca_ps_bucket_ownership:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1ownership/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pcap_collection_add_buckets_for_full_packet_captures:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1ownership/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pcap_collection_delete_buckets_for_full_packet_captures:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1ownership~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pcap_collection_validate_buckets_for_full_packet_captures:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pcaps~1ownership~1validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_pcaps_ownership/methods/pcap_collection_list_pca_ps_bucket_ownership'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_pcaps_ownership/methods/pcap_collection_delete_buckets_for_full_packet_captures'
    accounts_routes:
      id: cloudflare.magic.accounts_routes
      name: accounts_routes
      title: Accounts Routes
      methods:
        static_routes_list_routes:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1routes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _static_routes_list_routes:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1routes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        static_routes_create_routes:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1routes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        static_routes_update_many_routes:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1routes/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        static_routes_delete_route:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1routes~1{route_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        static_routes_route_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1routes~1{route_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _static_routes_route_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1routes~1{route_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        static_routes_update_route:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1magic~1routes~1{route_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_routes/methods/static_routes_list_routes'
          - $ref: '#/components/x-stackQL-resources/accounts_routes/methods/static_routes_route_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_routes/methods/static_routes_create_routes'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_routes/methods/static_routes_delete_route'
paths:
  '/accounts/{account_identifier}/magic/gre_tunnels':
    get:
      description: Lists GRE tunnels associated with an account.
      operationId: magic-gre-tunnels-list-gre-tunnels
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnels_collection_response'
          description: List GRE tunnels response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnels_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List GRE tunnels response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List GRE tunnels
      tags:
        - Magic GRE tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Creates new GRE tunnels. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-gre-tunnels-create-gre-tunnels
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - customer_gre_endpoint
                - cloudflare_gre_endpoint
                - interface_address
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnels_collection_response'
          description: Create GRE tunnels response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnels_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create GRE tunnels response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create GRE tunnels
      tags:
        - Magic GRE tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Updates multiple GRE tunnels. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-gre-tunnels-update-multiple-gre-tunnels
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modified_tunnels_collection_response'
          description: Update multiple GRE tunnels response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/modified_tunnels_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update multiple GRE tunnels response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update multiple GRE tunnels
      tags:
        - Magic GRE tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/magic/gre_tunnels/{tunnel_identifier}':
    delete:
      description: Disables and removes a specific static GRE tunnel. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-gre-tunnels-delete-gre-tunnel
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_deleted_response'
          description: Delete GRE Tunnel response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_deleted_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete GRE Tunnel response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete GRE Tunnel
      tags:
        - Magic GRE tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Lists informtion for a specific GRE tunnel.
      operationId: magic-gre-tunnels-list-gre-tunnel-details
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_single_response'
          description: List GRE Tunnel Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List GRE Tunnel Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List GRE Tunnel Details
      tags:
        - Magic GRE tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Updates a specific GRE tunnel. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-gre-tunnels-update-gre-tunnel
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tunnel_update_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_modified_response'
          description: Update GRE Tunnel response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_modified_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update GRE Tunnel response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update GRE Tunnel
      tags:
        - Magic GRE tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/magic/ipsec_tunnels':
    get:
      description: Lists IPsec tunnels associated with an account.
      operationId: magic-i-psec-tunnels-list-i-psec-tunnels
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnels_collection_response'
          description: List IPsec tunnels response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnels_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List IPsec tunnels response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List IPsec tunnels
      tags:
        - Magic IPsec tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Creates new IPsec tunnels associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-i-psec-tunnels-create-i-psec-tunnels
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - customer_ipsec_endpoint
                - cloudflare_ipsec_endpoint
                - interface_address
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnels_collection_response'
          description: Create IPsec tunnels response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnels_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create IPsec tunnels response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create IPsec tunnels
      tags:
        - Magic IPsec tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Update multiple IPsec tunnels associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-i-psec-tunnels-update-multiple-i-psec-tunnels
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-modified_tunnels_collection_response'
          description: Update multiple IPsec tunnels response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-modified_tunnels_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update multiple IPsec tunnels response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update multiple IPsec tunnels
      tags:
        - Magic IPsec tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/magic/ipsec_tunnels/{tunnel_identifier}':
    delete:
      description: Disables and removes a specific static IPsec Tunnel associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-i-psec-tunnels-delete-i-psec-tunnel
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnel_deleted_response'
          description: Delete IPsec Tunnel response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnel_deleted_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete IPsec Tunnel response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete IPsec Tunnel
      tags:
        - Magic IPsec tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Lists details for a specific IPsec tunnel.
      operationId: magic-i-psec-tunnels-list-i-psec-tunnel-details
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnel_single_response'
          description: List IPsec tunnel details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnel_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List IPsec tunnel details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List IPsec tunnel details
      tags:
        - Magic IPsec tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Updates a specific IPsec tunnel associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-i-psec-tunnels-update-i-psec-tunnel
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-tunnel_update_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnel_modified_response'
          description: Update IPsec Tunnel response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnel_modified_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update IPsec Tunnel response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update IPsec Tunnel
      tags:
        - Magic IPsec tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/magic/ipsec_tunnels/{tunnel_identifier}/psk_generate':
    post:
      description: 'Generates a Pre Shared Key for a specific IPsec tunnel used in the IKE session. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes. After a PSK is generated, the PSK is immediately persisted to Cloudflare''s edge and cannot be retrieved later. Note the PSK in a safe place.'
      operationId: magic-i-psec-tunnels-generate-pre-shared-key-(-psk)-for-i-psec-tunnels
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/psk_generation_response'
          description: Generate Pre Shared Key (PSK) for IPsec tunnels response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/psk_generation_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Generate Pre Shared Key (PSK) for IPsec tunnels response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Generate Pre Shared Key (PSK) for IPsec tunnels
      tags:
        - Magic IPsec tunnels
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/magic/cf_interconnects':
    get:
      description: Lists interconnects associated with an account.
      operationId: magic-interconnects-list-interconnects
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-tunnels_collection_response'
          description: List interconnects response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-tunnels_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List interconnects response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List interconnects
      tags:
        - Magic Interconnects
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Updates multiple interconnects associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-interconnects-update-multiple-interconnects
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-modified_tunnels_collection_response'
          description: Update multiple interconnects response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-modified_tunnels_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update multiple interconnects response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update multiple interconnects
      tags:
        - Magic Interconnects
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/magic/cf_interconnects/{tunnel_identifier}':
    get:
      description: Lists details for a specific interconnect.
      operationId: magic-interconnects-list-interconnect-details
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-tunnel_single_response'
          description: List interconnect Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-tunnel_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List interconnect Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List interconnect Details
      tags:
        - Magic Interconnects
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Updates a specific interconnect associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.
      operationId: magic-interconnects-update-interconnect
      parameters:
        - in: path
          name: tunnel_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/components-schemas-tunnel_update_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-tunnel_modified_response'
          description: Update interconnect response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-tunnel_modified_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update interconnect response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update interconnect
      tags:
        - Magic Interconnects
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/mnm/config':
    delete:
      description: Delete an existing network monitoring configuration.
      operationId: magic-network-monitoring-configuration-delete-account-configuration
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/config_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_config'
          description: Delete account configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_config'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete account configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete account configuration
      tags:
        - Magic Network Monitoring Configuration
    get:
      description: Lists default sampling and router IPs for account.
      operationId: magic-network-monitoring-configuration-list-account-configuration
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/config_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_config'
          description: List account configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_config'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List account configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List account configuration
      tags:
        - Magic Network Monitoring Configuration
    patch:
      description: Update fields in an existing network monitoring configuration.
      operationId: magic-network-monitoring-configuration-update-account-configuration-fields
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/config_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_config'
          description: Update account configuration fields response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_config'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update account configuration fields response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update account configuration fields
      tags:
        - Magic Network Monitoring Configuration
    post:
      description: Create a new network monitoring configuration.
      operationId: magic-network-monitoring-configuration-create-account-configuration
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/config_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_config'
          description: Create account configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_config'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create account configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create account configuration
      tags:
        - Magic Network Monitoring Configuration
    put:
      description: 'Update an existing network monitoring configuration, requires the entire configuration to be updated at once.'
      operationId: magic-network-monitoring-configuration-update-an-entire-account-configuration
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/config_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_config'
          description: Update an entire account configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_config'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update an entire account configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update an entire account configuration
      tags:
        - Magic Network Monitoring Configuration
  '/accounts/{account_identifier}/mnm/config/full':
    get:
      description: 'Lists default sampling, router IPs, and rules for account.'
      operationId: magic-network-monitoring-configuration-list-rules-and-account-configuration
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/config_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_config'
          description: List rules and account configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_config'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List rules and account configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List rules and account configuration
      tags:
        - Magic Network Monitoring Configuration
  '/accounts/{account_identifier}/mnm/rules':
    get:
      description: Lists network monitoring rules for account.
      operationId: magic-network-monitoring-rules-list-rules
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_rules'
          description: List rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_rules'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List rules
      tags:
        - Magic Network Monitoring Rules
    post:
      description: Create network monitoring rules for account.
      operationId: magic-network-monitoring-rules-create-rules
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_rules'
          description: Create rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_rules'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create rules
      tags:
        - Magic Network Monitoring Rules
    put:
      description: Update network monitoring rules for account.
      operationId: magic-network-monitoring-rules-update-rules
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_rules'
          description: Update rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_rules'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update rules
      tags:
        - Magic Network Monitoring Rules
  '/accounts/{account_identifier}/mnm/rules/{rule_identifier}':
    delete:
      description: Delete a network monitoring rule for account.
      operationId: magic-network-monitoring-rules-delete-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-rule_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_rule'
          description: Delete rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_rule'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete rule
      tags:
        - Magic Network Monitoring Rules
    get:
      description: List a single network monitoring rule for account.
      operationId: magic-network-monitoring-rules-get-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-rule_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_rule'
          description: Get rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_rule'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get rule
      tags:
        - Magic Network Monitoring Rules
    patch:
      description: Update a network monitoring rule for account.
      operationId: magic-network-monitoring-rules-update-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-rule_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_rule'
          description: Update rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_rule'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update rule
      tags:
        - Magic Network Monitoring Rules
  '/accounts/{account_identifier}/mnm/rules/{rule_identifier}/advertisement':
    patch:
      description: Update advertisement for rule.
      operationId: magic-network-monitoring-rules-update-advertisement-for-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-rule_identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/rules_components-schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnm_rule_automatic_advertisement'
          description: Update advertisement for rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mnm_rule_automatic_advertisement'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update advertisement for rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update advertisement for rule
      tags:
        - Magic Network Monitoring Rules
  '/accounts/{account_identifier}/pcaps':
    get:
      description: Lists all packet capture requests for an account.
      operationId: magic-pcap-collection-list-packet-capture-requests
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pcaps_collection_response'
          description: List packet capture requests response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pcaps_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List packet capture requests response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List packet capture requests
      tags:
        - Magic PCAP collection
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Create new PCAP request for account.
      operationId: magic-pcap-collection-create-pcap-request
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pcaps_request_pcap'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pcaps_single_response'
          description: Create PCAP request response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pcaps_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create PCAP request response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create PCAP request
      tags:
        - Magic PCAP collection
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/pcaps/ownership':
    get:
      description: List all buckets configured for use with PCAPs API.
      operationId: magic-pcap-collection-list-pca-ps-bucket-ownership
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pcaps_ownership_collection'
          description: List PCAPs Bucket Ownership response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pcaps_ownership_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List PCAPs Bucket Ownership response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List PCAPs Bucket Ownership
      tags:
        - Magic PCAP collection
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Adds an AWS or GCP bucket to use with full packet captures.
      operationId: magic-pcap-collection-add-buckets-for-full-packet-captures
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pcaps_ownership_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pcaps_ownership_single_response'
          description: Add buckets for full packet captures response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pcaps_ownership_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add buckets for full packet captures response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add buckets for full packet captures
      tags:
        - Magic PCAP collection
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/pcaps/ownership/validate':
    post:
      description: Validates buckets added to the packet captures API.
      operationId: magic-pcap-collection-validate-buckets-for-full-packet-captures
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pcaps_ownership_validate_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pcaps_ownership_single_response'
          description: Validate buckets for full packet captures response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pcaps_ownership_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Validate buckets for full packet captures response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Validate buckets for full packet captures
      tags:
        - Magic PCAP collection
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/pcaps/ownership/{identifier}':
    delete:
      description: Deletes buckets added to the packet captures API.
      operationId: magic-pcap-collection-delete-buckets-for-full-packet-captures
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json: {}
          description: Delete buckets for full packet captures response
        4xx:
          content:
            application/json: {}
          description: Delete buckets for full packet captures response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete buckets for full packet captures
      tags:
        - Magic PCAP collection
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/pcaps/{identifier}':
    get:
      description: Get information for a PCAP request by id.
      operationId: magic-pcap-collection-get-pcap-request
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pcaps_single_response'
          description: Get PCAP request response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pcaps_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get PCAP request response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get PCAP request
      tags:
        - Magic PCAP collection
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/pcaps/{identifier}/download':
    get:
      description: Download PCAP information into a file. Response is a binary PCAP file.
      operationId: magic-pcap-collection-download-simple-pcap
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json: {}
          description: Download Simple PCAP response
        4xx:
          content:
            application/json: {}
          description: Download Simple PCAP response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Download Simple PCAP
      tags:
        - Magic PCAP collection
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/magic/routes':
    get:
      description: List all Magic static routes.
      operationId: magic-static-routes-list-routes
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/routes_collection_response'
          description: List Routes response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/routes_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Routes response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Routes
      tags:
        - Magic Static Routes
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Creates a new Magic static route. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes.
      operationId: magic-static-routes-create-routes
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - prefix
                - nexthop
                - priority
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/routes_collection_response'
          description: Create Routes response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/routes_collection_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Routes response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Routes
      tags:
        - Magic Static Routes
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Update multiple Magic static routes. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes. Only fields for a route that need to be changed need be provided.
      operationId: magic-static-routes-update-many-routes
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route_update_many_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multiple_route_modified_response'
          description: Update Many Routes response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/multiple_route_modified_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Many Routes response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Many Routes
      tags:
        - Magic Static Routes
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/magic/routes/{route_identifier}':
    delete:
      description: Disable and remove a specific Magic static route.
      operationId: magic-static-routes-delete-route
      parameters:
        - in: path
          name: route_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route_deleted_response'
          description: Delete Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route_deleted_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Route
      tags:
        - Magic Static Routes
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Get a specific Magic static route.
      operationId: magic-static-routes-route-details
      parameters:
        - in: path
          name: route_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route_single_response'
          description: Route Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Route Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Route Details
      tags:
        - Magic Static Routes
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Update a specific Magic static route. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes.
      operationId: magic-static-routes-update-route
      parameters:
        - in: path
          name: route_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route_update_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route_modified_response'
          description: Update Route response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/route_modified_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Route response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Route
      tags:
        - Magic Static Routes
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
