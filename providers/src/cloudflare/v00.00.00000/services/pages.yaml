openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Available Page Rules settings
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - pages
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    pagerule_settings_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/settings'
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    settings:
      description: Settings available for the zone.
      example:
        - id: browser_check
          properties:
            - name: value
              type: toggle
        - id: browser_cache_ttl
          properties:
            - max: 31536000
              min: 1800
              name: value
              suggested_values:
                - 1800
                - 3600
                - 7200
                - 10800
                - 14400
                - 18000
                - 28800
                - 43200
                - 57600
                - 72000
                - 86400
                - 172800
                - 259200
                - 345600
                - 432000
                - 691200
                - 1382400
                - 2073600
                - 2678400
                - 5356800
                - 16070400
                - 31536000
              type: range
        - id: browser_check
          properties:
            - name: value
              type: toggle
        - id: cache_key_fields
          properties:
            - name: value
              properties:
                - allowEmpty: true
                  choices:
                    - include
                    - exclude
                  multiple: false
                  name: query_string
                  type: select
                - allowEmpty: true
                  choices:
                    - include
                    - exclude
                    - check_presence
                  multiple: true
                  name: header
                  type: select
                - allowEmpty: false
                  choices:
                    - resolved
                  multiple: true
                  name: host
                  type: select
                - allowEmpty: true
                  choices:
                    - include
                    - check_presence
                  multiple: true
                  name: cookie
                  type: select
                - allowEmpty: false
                  choices:
                    - device_type
                    - geo
                    - lang
                  multiple: true
                  name: user
                  type: select
              type: object
        - id: cache_deception_armor
          properties:
            - name: value
              type: toggle
        - id: cache_level
          properties:
            - choices:
                - bypass
                - basic
                - simplified
                - aggressive
                - cache_everything
              multiple: false
              name: value
              type: select
        - id: cache_ttl_by_status
          properties:
            - allowEmpty: false
              name: value
              type: object
        - id: disable_apps
          properties: []
        - id: disable_performance
          properties: []
        - id: disable_security
          properties: []
        - id: edge_cache_ttl
          properties:
            - max: 2419200
              min: 7200
              name: value
              suggested_values:
                - 7200
                - 10800
                - 14400
                - 18000
                - 28800
                - 43200
                - 57600
                - 72000
                - 86400
                - 172800
                - 259200
                - 345600
                - 432000
                - 518400
                - 604800
                - 1209600
                - 2419200
              type: range
        - id: email_obfuscation
          properties:
            - name: value
              type: toggle
        - id: forwarding_url
          properties:
            - choices:
                - 301
                - 302
              multiple: false
              name: status_code
              type: choice
            - name: url
              type: forwardingUrl
        - id: ip_geolocation
          properties:
            - name: value
              type: toggle
        - id: minify
          properties:
            - allowEmpty: true
              choices:
                - html
                - css
                - js
              multiple: true
              name: value
              type: select
        - id: explicit_cache_control
          properties:
            - name: value
              type: toggle
        - id: rocket_loader
          properties:
            - name: value
              type: toggle
        - id: security_level
          properties:
            - choices:
                - essentially_off
                - low
                - medium
                - high
                - under_attack
              multiple: false
              name: value
              type: select
        - id: server_side_exclude
          properties:
            - name: value
              type: toggle
        - id: ssl
          properties:
            - choices:
                - 'off'
                - flexible
                - full
                - strict
              multiple: false
              name: value
              type: choice
      items:
        type: object
      type: array
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    custom_pages_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                type: object
              type: array
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    custom-pages_components-schemas-identifier:
      description: The name of the custom page type.
      enum:
        - basic_challenge
        - managed_challenge
        - waf_block
        - ratelimit_block
        - country_challenge
        - ip_block
        - under_attack
        - 500_errors
        - 1000_errors
      example: basic_challenge
      readOnly: true
    custom_pages_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    schemas-state:
      description: The custom page state.
      enum:
        - default
        - customized
      example: default
      type: string
    url:
      default: ''
      description: The URL associated with the custom page.
      example: 'http://www.example.com'
      format: uri
      type: string
    custom-pages_components-schemas-identifier-2:
      description: The name of the custom page type.
      enum:
        - basic_challenge
        - managed_challenge
        - waf_block
        - country_challenge
        - ip_block
        - under_attack
        - ratelimit_block
        - 500_errors
        - 1000_errors
      example: basic_challenge
      readOnly: true
    components-schemas-state:
      description: The custom page state.
      enum:
        - default
        - customized
      example: default
    pagerule_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/page-rule'
              type: array
    page-rule:
      properties:
        actions:
          $ref: '#/components/schemas/schemas-actions'
        created_on:
          $ref: '#/components/schemas/created_on'
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        modified_on:
          $ref: '#/components/schemas/page-rule_components-schemas-modified_on'
        priority:
          $ref: '#/components/schemas/page-rule_components-schemas-priority'
        status:
          $ref: '#/components/schemas/page-rule_components-schemas-status'
        targets:
          $ref: '#/components/schemas/targets'
      required:
        - id
        - targets
        - actions
        - priority
        - status
        - modified_on
        - created_on
      type: object
    schemas-actions:
      description: 'The set of actions to perform if the targets of this rule match the request. Actions can redirect to another URL or override settings, but not both.'
      example:
        - id: browser_check
          value: 'on'
      items:
        oneOf:
          - $ref: '#/components/schemas/route'
      type: array
    created_on:
      description: The timestamp of when the Page Rule was created.
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    page-rule_components-schemas-modified_on:
      description: The timestamp of when the Page Rule was last modified.
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    page-rule_components-schemas-priority:
      default: 1
      description: 'The priority of the rule, used to define which Page Rule is processed over another. A higher number indicates a higher priority. For example, if you have a catch-all Page Rule (rule A: `/images/*`) but want a more specific Page Rule to take precedence (rule B: `/images/special/*`), specify a higher priority for rule B so it overrides rule A.'
      type: integer
    page-rule_components-schemas-status:
      default: disabled
      description: The status of the Page Rule.
      enum:
        - active
        - disabled
      example: active
      type: string
    targets:
      description: The rule targets to evaluate on each request.
      example:
        - constraint:
            operator: matches
            value: '*example.com/images/*'
          target: url
      items:
        $ref: '#/components/schemas/target'
      type: array
    route:
      properties:
        modified_on:
          description: The timestamp of when the override was last modified.
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        name:
          description: The type of route.
          enum:
            - forward_url
          example: forward_url
        value:
          properties:
            type:
              description: The response type for the URL redirect.
              enum:
                - temporary
                - permanent
              example: temporary
            url:
              description: |-
                The URL to redirect the request to.
                Notes: ${num} refers to the position of '*' in the constraint value.
              example: 'http://www.example.com/somewhere/$1/astring/$2/anotherstring/$3'
              type: string
      type: object
    target:
      description: A request condition target.
      oneOf:
        - $ref: '#/components/schemas/url_target'
      required:
        - target
        - constraint
    url_target:
      description: URL target.
      properties:
        constraint:
          allOf:
            - $ref: '#/components/schemas/string_constraint'
            - properties:
                value:
                  description: The URL pattern to match against the current request. The pattern may contain up to four asterisks ('*') as placeholders.
                  example: '*example.com/images/*'
                  pattern: '^(https?://)?(([-a-zA-Z0-9*]*\.)+[-a-zA-Z0-9]{2,20})(:(8080|8443|443|80))?(/[\S]+)?$'
                  type: string
          description: The constraint of a target.
          type: object
        target:
          description: A target based on the URL of the request.
          enum:
            - url
          example: url
      type: object
    string_constraint:
      description: String constraint.
      properties:
        operator:
          default: contains
          description: The matches operator can use asterisks and pipes as wildcard and 'or' operators.
          enum:
            - matches
            - contains
            - equals
            - not_equal
            - not_contain
        value:
          description: The value to apply the operator to.
          type: string
      required:
        - operator
        - value
      type: object
    pagerule_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                id:
                  $ref: '#/components/schemas/common_components-schemas-identifier'
              required:
                - id
              type: object
    project_name:
      description: Name of the project.
      example: this-is-my-project-01
      pattern: '^[a-z0-9][a-z0-9-]*$'
      type: string
    deployment-list-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result_info:
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 100
                total_count:
                  example: 1
              type: object
        - properties:
            result:
              items:
                type: object
              type: array
    deployment-new-deployment:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/deployments'
    deployments:
      properties:
        aliases:
          description: A list of alias URLs pointing to this deployment.
          example:
            - 'https://branchname.projectname.pages.dev'
          items: {}
          nullable: true
          readOnly: true
          type: array
        build_config:
          readOnly: true
        created_on:
          description: When the deployment was created.
          example: '2021-03-09T00:55:03.923456Z'
          format: date-time
          readOnly: true
          type: string
        deployment_trigger:
          description: Info about what caused the deployment.
          properties:
            metadata:
              description: Additional info about the trigger.
              properties:
                branch:
                  description: Where the trigger happened.
                  example: main
                  readOnly: true
                  type: string
                commit_hash:
                  description: Hash of the deployment trigger commit.
                  example: ad9ccd918a81025731e10e40267e11273a263421
                  readOnly: true
                  type: string
                commit_message:
                  description: Message of the deployment trigger commit.
                  example: Update index.html
                  readOnly: true
                  type: string
              type: object
            type:
              description: What caused the deployment.
              example: ad_hoc
              pattern: push|ad_hoc
              readOnly: true
              type: string
          readOnly: true
          type: object
        env_vars:
          description: A dict of env variables to build this deploy.
          example:
            BUILD_VERSION:
              value: '3.3'
            ENV:
              value: STAGING
          readOnly: true
          type: object
        environment:
          description: Type of deploy.
          example: preview
          pattern: preview|production
          readOnly: true
          type: string
        id:
          description: Id of the deployment.
          example: f64788e9-fccd-4d4a-a28a-cb84f88f6
          readOnly: true
          type: string
        is_skipped:
          description: If the deployment has been skipped.
          example: true
          readOnly: true
          type: boolean
        latest_stage:
          readOnly: true
        modified_on:
          description: When the deployment was last modified.
          example: '2021-03-09T00:58:59.045655'
          format: date-time
          readOnly: true
          type: string
        project_id:
          description: Id of the project.
          example: 7b162ea7-7367-4d67-bcde-1160995d5
          readOnly: true
          type: string
        project_name:
          description: Name of the project.
          example: ninjakittens
          readOnly: true
          type: string
        short_id:
          description: Short Id (8 character) of the deployment.
          example: f64788e9
          readOnly: true
          type: string
        source:
          readOnly: true
        stages:
          description: List of past stages.
          example:
            - ended_on: '2021-06-03T15:39:03.134378Z'
              name: queued
              started_on: '2021-06-03T15:38:15.608194Z'
              status: active
            - ended_on: null
              name: initialize
              started_on: null
              status: idle
            - ended_on: null
              name: clone_repo
              started_on: null
              status: idle
            - ended_on: null
              name: build
              started_on: null
              status: idle
            - ended_on: null
              name: deploy
              started_on: null
              status: idle
          items:
            $ref: '#/components/schemas/stage'
          readOnly: true
          type: array
        url:
          description: The live URL to view this deployment.
          example: 'https://f64788e9.ninjakittens.pages.dev'
          readOnly: true
          type: string
      type: object
    stage:
      description: The status of the deployment.
      properties:
        ended_on:
          description: When the stage ended.
          example: '2021-03-09T00:58:59.045655'
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          description: The current build stage.
          example: deploy
          pattern: queued|initialize|clone_repo|build|deploy
          type: string
        started_on:
          description: When the stage started.
          example: '2021-03-09T00:55:03.923456Z'
          format: date-time
          nullable: true
          readOnly: true
          type: string
        status:
          description: State of the current stage.
          example: success
          pattern: success|idle|active|failure|canceled
          readOnly: true
          type: string
      readOnly: true
      type: object
    deployment-response-details:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/deployments'
    deployment-response-logs:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              example:
                data:
                  - line: Cloning repository...
                    ts: '2021-04-20T19:35:29.0749819Z'
                  - line: 'From https://github.com/cloudflare/example'
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: ' * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD'
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: ''
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: HEAD is now at 209c5bb Update index.html
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: ''
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: ''
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: 'Success: Finished cloning repository files'
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: Installing dependencies
                    ts: '2021-04-20T19:35:59.0749819Z'
                  - line: Python version set to 2.7
                    ts: '2021-04-20T19:35:59.0931208Z'
                  - line: v12.18.0 is already installed.
                    ts: '2021-04-20T19:36:02.2369501Z'
                  - line: Now using node v12.18.0 (npm v6.14.4)
                    ts: '2021-04-20T19:36:02.6028886Z'
                  - line: Started restoring cached build plugins
                    ts: '2021-04-20T19:36:02.624555Z'
                  - line: Finished restoring cached build plugins
                    ts: '2021-04-20T19:36:02.6340688Z'
                  - line: 'Attempting ruby version 2.7.1, read from environment'
                    ts: '2021-04-20T19:36:02.963095Z'
                  - line: Using ruby version 2.7.1
                    ts: '2021-04-20T19:36:04.2236084Z'
                  - line: Using PHP version 5.6
                    ts: '2021-04-20T19:36:04.5450152Z'
                  - line: 5.2 is already installed.
                    ts: '2021-04-20T19:36:04.5740509Z'
                  - line: Using Swift version 5.2
                    ts: '2021-04-20T19:36:04.577035Z'
                  - line: Installing Hugo 0.54.0
                    ts: '2021-04-20T19:36:04.5771615Z'
                  - line: 'Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z'
                    ts: '2021-04-20T19:36:05.4786868Z'
                  - line: Started restoring cached go cache
                    ts: '2021-04-20T19:36:05.4794366Z'
                  - line: Finished restoring cached go cache
                    ts: '2021-04-20T19:36:05.481977Z'
                  - line: go version go1.14.4 linux/amd64
                    ts: '2021-04-20T19:36:05.9049776Z'
                  - line: go version go1.14.4 linux/amd64
                    ts: '2021-04-20T19:36:05.9086053Z'
                  - line: Installing missing commands
                    ts: '2021-04-20T19:36:05.9163568Z'
                  - line: Verify run directory
                    ts: '2021-04-20T19:36:05.9163934Z'
                  - line: 'Executing user command: echo "skipping build step: no build command specified"'
                    ts: '2021-04-20T19:36:05.9164636Z'
                  - line: 'skipping build step: no build command specified'
                    ts: '2021-04-20T19:36:05.9165087Z'
                  - line: Finished
                    ts: '2021-04-20T19:36:05.917412Z'
                includes_container_logs: true
                total: 30
              type: object
    deployment_stage_name:
      description: Deployment stage name.
      example: deploy
      pattern: queued|initialize|clone_repo|build|deploy
      type: string
    deployment-response-stage-logs:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              example:
                data:
                  - id: 15
                    message: Installing dependencies
                    timestamp: '2021-04-20T19:35:59.0749819Z'
                  - id: 16
                    message: Python version set to 2.7
                    timestamp: '2021-04-20T19:35:59.0931208Z'
                  - id: 17
                    message: v12.18.0 is already installed.
                    timestamp: '2021-04-20T19:36:02.2369501Z'
                  - id: 18
                    message: Now using node v12.18.0 (npm v6.14.4)
                    timestamp: '2021-04-20T19:36:02.6028886Z'
                  - id: 19
                    message: Started restoring cached build plugins
                    timestamp: '2021-04-20T19:36:02.624555Z'
                  - id: 20
                    message: Finished restoring cached build plugins
                    timestamp: '2021-04-20T19:36:02.6340688Z'
                  - id: 21
                    message: 'Attempting ruby version 2.7.1, read from environment'
                    timestamp: '2021-04-20T19:36:02.963095Z'
                  - id: 22
                    message: Using ruby version 2.7.1
                    timestamp: '2021-04-20T19:36:04.2236084Z'
                  - id: 23
                    message: Using PHP version 5.6
                    timestamp: '2021-04-20T19:36:04.5450152Z'
                  - id: 24
                    message: 5.2 is already installed.
                    timestamp: '2021-04-20T19:36:04.5740509Z'
                  - id: 25
                    message: Using Swift version 5.2
                    timestamp: '2021-04-20T19:36:04.577035Z'
                  - id: 26
                    message: Installing Hugo 0.54.0
                    timestamp: '2021-04-20T19:36:04.5771615Z'
                  - id: 27
                    message: 'Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z'
                    timestamp: '2021-04-20T19:36:05.4786868Z'
                  - id: 28
                    message: Started restoring cached go cache
                    timestamp: '2021-04-20T19:36:05.4794366Z'
                  - id: 29
                    message: Finished restoring cached go cache
                    timestamp: '2021-04-20T19:36:05.481977Z'
                  - id: 30
                    message: go version go1.14.4 linux/amd64
                    timestamp: '2021-04-20T19:36:05.9049776Z'
                  - id: 31
                    message: go version go1.14.4 linux/amd64
                    timestamp: '2021-04-20T19:36:05.9086053Z'
                  - id: 32
                    message: Installing missing commands
                    timestamp: '2021-04-20T19:36:05.9163568Z'
                  - id: 33
                    message: Verify run directory
                    timestamp: '2021-04-20T19:36:05.9163934Z'
                  - id: 34
                    message: 'Executing user command: echo "skipping build step: no build command specified"'
                    timestamp: '2021-04-20T19:36:05.9164636Z'
                  - id: 35
                    message: 'skipping build step: no build command specified'
                    timestamp: '2021-04-20T19:36:05.9165087Z'
                  - id: 36
                    message: Finished
                    timestamp: '2021-04-20T19:36:05.917412Z'
                end: 37
                ended_on: '2021-04-20T19:36:06.38889Z'
                name: build
                start: 0
                started_on: '2021-04-20T19:35:58.238757Z'
                status: success
                total: 37
              type: object
    domain-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result_info:
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 100
                total_count:
                  example: 1
              type: object
        - properties:
            result:
              items:
                type: object
              type: array
    domains-post:
      example:
        name: example.com
    domain-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    domain_name:
      description: Name of the domain.
      example: this-is-my-domain-01.com
      pattern: '^[a-z0-9][a-z0-9-]*$'
      type: string
    projects-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result_info:
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 100
                total_count:
                  example: 1
              type: object
        - properties:
            result:
              items:
                type: object
              type: array
    projects:
      properties:
        build_config:
          $ref: '#/components/schemas/build_config'
        canonical_deployment:
          description: Most recent deployment to the repo.
          oneOf:
            - nullable: true
            - $ref: '#/components/schemas/deployments'
          readOnly: true
        created_on:
          description: When the project was created.
          example: '2017-01-01T00:00:00Z'
          format: date-time
          readOnly: true
          type: string
        deployment_configs:
          $ref: '#/components/schemas/deployment_configs'
        domains:
          description: A list of associated custom domains for the project.
          example:
            - customdomain.com
            - customdomain.org
          items: {}
          readOnly: true
          type: array
        id:
          description: Id of the project.
          example: 7b162ea7-7367-4d67-bcde-1160995d5
          readOnly: true
          type: string
        latest_deployment:
          description: Most recent deployment to the repo.
          oneOf:
            - nullable: true
            - $ref: '#/components/schemas/deployments'
          readOnly: true
        name:
          description: Name of the project.
          example: NextJS Blog
          type: string
        production_branch:
          description: Production branch of the project. Used to identify production deployments.
          example: main
          type: string
        source:
          readOnly: true
        subdomain:
          description: The Cloudflare subdomain associated with the project.
          example: helloworld.pages.dev
          readOnly: true
          type: string
      type: object
    new-project-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              type: object
    build_config:
      description: Configs for the project build process.
      properties:
        build_command:
          description: Command used to build project.
          example: npm run build
          nullable: true
          type: string
        destination_dir:
          description: Output directory of the build.
          example: build
          nullable: true
          type: string
        root_dir:
          description: Directory to run the command.
          example: /
          nullable: true
          type: string
        web_analytics_tag:
          description: The classifying tag for analytics.
          example: cee1c73f6e4743d0b5e6bb1a0bcaabcc
          nullable: true
          type: string
        web_analytics_token:
          description: The auth token for analytics.
          example: 021e1057c18547eca7b79f2516f06o7x
          nullable: true
          type: string
      type: object
    deployment_configs:
      description: Configs for deployments in a project.
      properties:
        preview:
          description: Configs for preview deploys.
          properties:
            compatibility_date:
              description: Compatibility date used for Pages Functions.
              example: '2022-01-01'
              type: string
            compatibility_flags:
              description: Compatibility flags used for Pages Functions.
              example:
                - url_standard
              items: {}
              type: array
            d1_databases:
              description: D1 databases used for Pages Functions.
              properties:
                D1_BINDING:
                  description: D1 binding.
                  example:
                    id: 445e2955-951a-43f8-a35b-a4d0c8138f63
                  properties:
                    id:
                      description: UUID of the D1 database.
                      example: 445e2955-951a-43f8-a35b-a4d0c8138f63
                      type: string
                  type: object
              type: object
            durable_object_namespaces:
              description: Durabble Object namespaces used for Pages Functions.
              properties:
                DO_BINDING:
                  description: Durabble Object binding.
                  example:
                    namespace_id: 5eb63bbbe01eeed093cb22bb8f5acdc3
                  properties:
                    namespace_id:
                      description: ID of the Durabble Object namespace.
                      example: 5eb63bbbe01eeed093cb22bb8f5acdc3
                      type: string
                  type: object
              type: object
            env_vars:
              description: Environment variables for build configs.
              nullable: true
              properties:
                BUILD_VERSION:
                  description: Environment variable.
                  example:
                    value: '3.3'
                  properties:
                    value:
                      description: Environment variable value.
                      example: '3.3'
                      type: string
                  type: object
              type: object
            kv_namespaces:
              description: KV namespaces used for Pages Functions.
              properties:
                KV_BINDING:
                  description: KV binding.
                  example:
                    namespace_id: 5eb63bbbe01eeed093cb22bb8f5acdc3
                  properties:
                    namespace_id:
                      description: ID of the KV namespace.
                      example: 5eb63bbbe01eeed093cb22bb8f5acdc3
                      type: string
                  type: object
              type: object
            r2_buckets:
              description: R2 buckets used for Pages Functions.
              properties:
                R2_BINDING:
                  description: R2 binding.
                  example:
                    name: some-bucket
                  properties:
                    name:
                      description: Name of the R2 bucket.
                      example: some-bucket
                      type: string
                  type: object
              type: object
          type: object
        production:
          description: Configs for production deploys.
          properties:
            compatibility_date:
              description: Compatibility date used for Pages Functions.
              example: '2022-01-01'
              type: string
            compatibility_flags:
              description: Compatibility flags used for Pages Functions.
              example:
                - url_standard
              items: {}
              type: array
            d1_databases:
              description: D1 databases used for Pages Functions.
              properties:
                D1_BINDING:
                  description: D1 binding.
                  example:
                    id: 445e2955-951a-43f8-a35b-a4d0c8138f63
                  properties:
                    id:
                      description: UUID of the D1 database.
                      example: 445e2955-951a-43f8-a35b-a4d0c8138f63
                      type: string
                  type: object
              type: object
            durable_object_namespaces:
              description: Durabble Object namespaces used for Pages Functions.
              properties:
                DO_BINDING:
                  description: Durabble Object binding.
                  example:
                    namespace_id: 5eb63bbbe01eeed093cb22bb8f5acdc3
                  properties:
                    namespace_id:
                      description: ID of the Durabble Object namespace.
                      example: 5eb63bbbe01eeed093cb22bb8f5acdc3
                      type: string
                  type: object
              type: object
            env_vars:
              description: Environment variables for build configs.
              nullable: true
              properties:
                BUILD_VERSION:
                  description: Environment variable.
                  example:
                    value: '3.3'
                  properties:
                    value:
                      description: Environment variable value.
                      example: '3.3'
                      type: string
                  type: object
              type: object
            kv_namespaces:
              description: KV namespaces used for Pages Functions.
              properties:
                KV_BINDING:
                  description: KV binding.
                  example:
                    namespace_id: 5eb63bbbe01eeed093cb22bb8f5acdc3
                  properties:
                    namespace_id:
                      description: ID of the KV namespace.
                      example: 5eb63bbbe01eeed093cb22bb8f5acdc3
                      type: string
                  type: object
              type: object
            r2_buckets:
              description: R2 buckets used for Pages Functions.
              properties:
                R2_BINDING:
                  description: R2 binding.
                  example:
                    name: some-bucket
                  properties:
                    name:
                      description: Name of the R2 bucket.
                      example: some-bucket
                      type: string
                  type: object
              type: object
          type: object
      type: object
    project-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              type: object
    project-patch:
      example:
        deployment_configs:
          production:
            compatibility_date: '2022-01-01'
            compatibility_flags:
              - url_standard
            env_vars:
              BUILD_VERSION:
                value: '3.3'
              delete_this_env_var: null
    r2-single-bucket-operation-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              type: object
    bucket_name:
      description: Name of the bucket. The name must be greater than 2 and less than 64 characters.
      example: example-bucket
      pattern: '^[a-z0-9][a-z0-9-]*[a-z0-9]'
      type: string
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    zones_pagerules_settings:
      id: cloudflare.pages.zones_pagerules_settings
      name: zones_pagerules_settings
      title: Zones Pagerules Settings
      methods:
        available_page_rules_settings_list_available_page_rules_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _available_page_rules_settings_list_available_page_rules_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_pagerules_settings/methods/available_page_rules_settings_list_available_page_rules_settings'
        insert: []
        update: []
        delete: []
    zones_custom_pages:
      id: cloudflare.pages.zones_custom_pages
      name: zones_custom_pages
      title: Zones Custom Pages
      methods:
        custom_pages_for_a_zone_list_custom_pages:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_pages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _custom_pages_for_a_zone_list_custom_pages:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_pages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_pages_for_a_zone_get_a_custom_page:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_pages~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _custom_pages_for_a_zone_get_a_custom_page:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_pages~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_pages_for_a_zone_update_a_custom_page:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1custom_pages~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_custom_pages/methods/custom_pages_for_a_zone_list_custom_pages'
          - $ref: '#/components/x-stackQL-resources/zones_custom_pages/methods/custom_pages_for_a_zone_get_a_custom_page'
        insert: []
        update: []
        delete: []
    accounts_custom_pages:
      id: cloudflare.pages.accounts_custom_pages
      name: accounts_custom_pages
      title: Accounts Custom Pages
      methods:
        custom_pages_for_an_account_list_custom_pages:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1custom_pages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _custom_pages_for_an_account_list_custom_pages:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1custom_pages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_pages_for_an_account_get_a_custom_page:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1custom_pages~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _custom_pages_for_an_account_get_a_custom_page:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1custom_pages~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custom_pages_for_an_account_update_a_custom_page:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1custom_pages~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_custom_pages/methods/custom_pages_for_an_account_list_custom_pages'
          - $ref: '#/components/x-stackQL-resources/accounts_custom_pages/methods/custom_pages_for_an_account_get_a_custom_page'
        insert: []
        update: []
        delete: []
    zones_pagerules:
      id: cloudflare.pages.zones_pagerules
      name: zones_pagerules
      title: Zones Pagerules
      methods:
        page_rules_list_page_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _page_rules_list_page_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        page_rules_create_a_page_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        page_rules_delete_a_page_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        page_rules_get_a_page_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _page_rules_get_a_page_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        page_rules_edit_a_page_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        page_rules_update_a_page_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1pagerules~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_pagerules/methods/page_rules_list_page_rules'
          - $ref: '#/components/x-stackQL-resources/zones_pagerules/methods/page_rules_get_a_page_rule'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_pagerules/methods/page_rules_create_a_page_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_pagerules/methods/page_rules_delete_a_page_rule'
    accounts_projects_deployments:
      id: cloudflare.pages.accounts_projects_deployments
      name: accounts_projects_deployments
      title: Accounts Projects Deployments
      methods:
        deployment_get_deployments:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _deployment_get_deployments:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployment_create_deployment:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployment_delete_deployment:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployment_get_deployment_info:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _deployment_get_deployment_info:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployment_retry_deployment:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}~1retry/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployment_rollback_deployment:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}~1rollback/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_projects_deployments/methods/deployment_get_deployments'
          - $ref: '#/components/x-stackQL-resources/accounts_projects_deployments/methods/deployment_get_deployment_info'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_projects_deployments/methods/deployment_create_deployment'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_projects_deployments/methods/deployment_delete_deployment'
    accounts_projects_deployments_history_logs:
      id: cloudflare.pages.accounts_projects_deployments_history_logs
      name: accounts_projects_deployments_history_logs
      title: Accounts Projects Deployments History Logs
      methods:
        deployment_get_deployment_logs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}~1history~1logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _deployment_get_deployment_logs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}~1history~1logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployment_get_deployment_stage_logs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}~1history~1{deployment_stage_name}~1logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _deployment_get_deployment_stage_logs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1deployments~1{deployment_identifier}~1history~1{deployment_stage_name}~1logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_projects_deployments_history_logs/methods/deployment_get_deployment_logs'
          - $ref: '#/components/x-stackQL-resources/accounts_projects_deployments_history_logs/methods/deployment_get_deployment_stage_logs'
        insert: []
        update: []
        delete: []
    accounts_projects_domains:
      id: cloudflare.pages.accounts_projects_domains
      name: accounts_projects_domains
      title: Accounts Projects Domains
      methods:
        domains_get_domains:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _domains_get_domains:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        domains_add_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1domains/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        domains_delete_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1domains~1{domain_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        domains_get_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1domains~1{domain_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _domains_get_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1domains~1{domain_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        domains_patch_domain:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}~1domains~1{domain_name}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_projects_domains/methods/domains_get_domains'
          - $ref: '#/components/x-stackQL-resources/accounts_projects_domains/methods/domains_get_domain'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_projects_domains/methods/domains_delete_domain'
    accounts_projects:
      id: cloudflare.pages.accounts_projects
      name: accounts_projects
      title: Accounts Projects
      methods:
        project_get_projects:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _project_get_projects:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        project_create_project:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        project_delete_project:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        project_get_project:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _project_get_project:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        project_update_project:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1pages~1projects~1{project_name}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_projects/methods/project_get_projects'
          - $ref: '#/components/x-stackQL-resources/accounts_projects/methods/project_get_project'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_projects/methods/project_create_project'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_projects/methods/project_delete_project'
    accounts_r2_buckets:
      id: cloudflare.pages.accounts_r2_buckets
      name: accounts_r2_buckets
      title: Accounts R2 Buckets
      methods:
        r_2_bucket_create_bucket:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1r2~1buckets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        r_2_bucket_delete_bucket:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1r2~1buckets~1{bucket_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_r2_buckets/methods/r_2_bucket_create_bucket'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_r2_buckets/methods/r_2_bucket_delete_bucket'
paths:
  '/zones/{zone_identifier}/pagerules/settings':
    get:
      description: Returns a list of settings (and their details) that Page Rules can apply to matching requests.
      operationId: available-page-rules-settings-list-available-page-rules-settings
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pagerule_settings_response_collection'
          description: List available Page Rules settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pagerule_settings_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List available Page Rules settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List available Page Rules settings
      tags:
        - Available Page Rules settings
      x-cfPermissionsRequired:
        enum:
          - '#zone:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/custom_pages':
    get:
      description: Fetches all the custom pages at the zone level.
      operationId: custom-pages-for-a-zone-list-custom-pages
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_pages_response_collection'
          description: List custom pages response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/custom_pages_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List custom pages response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List custom pages
      tags:
        - Custom pages for a zone
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/custom_pages/{identifier}':
    get:
      description: Fetches the details of a custom page.
      operationId: custom-pages-for-a-zone-get-a-custom-page
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_pages_response_single'
          description: Get a custom page response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/custom_pages_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a custom page response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a custom page
      tags:
        - Custom pages for a zone
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    put:
      description: Updates the configuration of an existing custom page.
      operationId: custom-pages-for-a-zone-update-a-custom-page
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                state:
                  $ref: '#/components/schemas/schemas-state'
                url:
                  $ref: '#/components/schemas/url'
              required:
                - url
                - state
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_pages_response_single'
          description: Update a custom page response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/custom_pages_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a custom page response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a custom page
      tags:
        - Custom pages for a zone
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/accounts/{account_identifier}/custom_pages':
    get:
      description: Fetches all the custom pages at the account level.
      operationId: custom-pages-for-an-account-list-custom-pages
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_pages_response_collection'
          description: List custom pages response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/custom_pages_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List custom pages response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List custom pages
      tags:
        - Custom pages for an account
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/accounts/{account_identifier}/custom_pages/{identifier}':
    get:
      description: Fetches the details of a custom page.
      operationId: custom-pages-for-an-account-get-a-custom-page
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_components-schemas-identifier-2'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_pages_response_single'
          description: Get a custom page response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/custom_pages_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a custom page response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a custom page
      tags:
        - Custom pages for an account
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    put:
      description: Updates the configuration of an existing custom page.
      operationId: custom-pages-for-an-account-update-a-custom-page
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_components-schemas-identifier-2'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                state:
                  $ref: '#/components/schemas/components-schemas-state'
                url:
                  $ref: '#/components/schemas/url'
              required:
                - url
                - state
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_pages_response_single'
          description: Update a custom page response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/custom_pages_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a custom page response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a custom page
      tags:
        - Custom pages for an account
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/pagerules':
    get:
      description: Fetches Page Rules in a zone.
      operationId: page-rules-list-page-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pagerule_response_collection'
          description: List Page Rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pagerule_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Page Rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Page Rules
      tags:
        - Page Rules
      x-cfPermissionsRequired:
        enum:
          - '#zone:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates a new Page Rule.
      operationId: page-rules-create-a-page-rule
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                actions:
                  $ref: '#/components/schemas/schemas-actions'
                priority:
                  $ref: '#/components/schemas/page-rule_components-schemas-priority'
                status:
                  $ref: '#/components/schemas/page-rule_components-schemas-status'
                targets:
                  $ref: '#/components/schemas/targets'
              required:
                - targets
                - actions
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pagerule_response_single'
          description: Create a Page Rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pagerule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a Page Rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a Page Rule
      tags:
        - Page Rules
      x-cfPermissionsRequired:
        enum:
          - '#zone:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/pagerules/{identifier}':
    delete:
      description: Deletes an existing Page Rule.
      operationId: page-rules-delete-a-page-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Delete a Page Rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a Page Rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a Page Rule
      tags:
        - Page Rules
      x-cfPermissionsRequired:
        enum:
          - '#zone:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the details of a Page Rule.
      operationId: page-rules-get-a-page-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pagerule_response_single'
          description: Get a Page Rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pagerule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a Page Rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a Page Rule
      tags:
        - Page Rules
      x-cfPermissionsRequired:
        enum:
          - '#zone:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates one or more fields of an existing Page Rule.
      operationId: page-rules-edit-a-page-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                actions:
                  $ref: '#/components/schemas/schemas-actions'
                priority:
                  $ref: '#/components/schemas/page-rule_components-schemas-priority'
                status:
                  $ref: '#/components/schemas/page-rule_components-schemas-status'
                targets:
                  $ref: '#/components/schemas/targets'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pagerule_response_single'
          description: Edit a Page Rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pagerule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit a Page Rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit a Page Rule
      tags:
        - Page Rules
      x-cfPermissionsRequired:
        enum:
          - '#zone:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Replaces the configuration of an existing Page Rule. The configuration of the updated Page Rule will exactly match the data passed in the API request.
      operationId: page-rules-update-a-page-rule
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                actions:
                  $ref: '#/components/schemas/schemas-actions'
                priority:
                  $ref: '#/components/schemas/page-rule_components-schemas-priority'
                status:
                  $ref: '#/components/schemas/page-rule_components-schemas-status'
                targets:
                  $ref: '#/components/schemas/targets'
              required:
                - targets
                - actions
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pagerule_response_single'
          description: Update a Page Rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pagerule_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a Page Rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a Page Rule
      tags:
        - Page Rules
      x-cfPermissionsRequired:
        enum:
          - '#zone:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/pages/projects/{project_name}/deployments':
    get:
      description: Fetch a list of deployments from a project.
      operationId: pages-deployment-get-deployments
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-list-response'
          description: Get deployments response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deployment-list-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get deployments response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get deployments
      tags:
        - Pages Deployment
    post:
      description: Start a new deployment from production. The repo/account must have been authorized through the Pages UI dash before.
      operationId: pages-deployment-create-deployment
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-new-deployment'
          description: Create deployment response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deployment-new-deployment'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create deployment response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create deployment
      tags:
        - Pages Deployment
  '/accounts/{account_identifier}/pages/projects/{project_name}/deployments/{deployment_identifier}':
    delete:
      description: Destroy a deployment.
      operationId: pages-deployment-delete-deployment
      parameters:
        - in: path
          name: deployment_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  errors: []
                  messages: []
                  result: null
                  success: true
          description: Delete deployment response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - example:
                      errors: []
                      messages: []
                      result: null
                      success: true
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete deployment response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete deployment
      tags:
        - Pages Deployment
    get:
      description: Fetch a deployment.
      operationId: pages-deployment-get-deployment-info
      parameters:
        - in: path
          name: deployment_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-response-details'
          description: Get deployment info response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deployment-response-details'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get deployment info response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get deployment info
      tags:
        - Pages Deployment
  '/accounts/{account_identifier}/pages/projects/{project_name}/deployments/{deployment_identifier}/history/logs':
    get:
      description: Fetch deploy logs.
      operationId: pages-deployment-get-deployment-logs
      parameters:
        - in: path
          name: deployment_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-response-logs'
          description: Get deployment logs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deployment-response-logs'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get deployment logs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get deployment logs
      tags:
        - Pages Deployment
  '/accounts/{account_identifier}/pages/projects/{project_name}/deployments/{deployment_identifier}/history/{deployment_stage_name}/logs':
    get:
      deprecated: true
      description: Fetch deploy logs.
      operationId: pages-deployment-get-deployment-stage-logs
      parameters:
        - in: path
          name: deployment_stage_name
          required: true
          schema:
            $ref: '#/components/schemas/deployment_stage_name'
        - in: path
          name: deployment_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-response-stage-logs'
          description: Get deployment stage logs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deployment-response-stage-logs'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get deployment stage logs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get deployment stage logs
      tags:
        - Pages Deployment
      x-cfDeprecation:
        $ref: '#/components/schemas/deployments/x-cfDeprecations/logs_v1_deprecated'
  '/accounts/{account_identifier}/pages/projects/{project_name}/deployments/{deployment_identifier}/retry':
    post:
      description: Retry a previous deployment.
      operationId: pages-deployment-retry-deployment
      parameters:
        - in: path
          name: deployment_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-new-deployment'
          description: Retry deployment response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deployment-new-deployment'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Retry deployment response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Retry deployment
      tags:
        - Pages Deployment
  '/accounts/{account_identifier}/pages/projects/{project_name}/deployments/{deployment_identifier}/rollback':
    post:
      description: Rollback the production deployment to a previous deploy. You can only rollback to succesful builds on production.
      operationId: pages-deployment-rollback-deployment
      parameters:
        - in: path
          name: deployment_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-response-details'
          description: Rollback deployment response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deployment-response-details'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Rollback deployment response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Rollback deployment
      tags:
        - Pages Deployment
  '/accounts/{account_identifier}/pages/projects/{project_name}/domains':
    get:
      description: Fetch a list of all domains.
      operationId: pages-domains-get-domains
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain-response-collection'
          description: Get domains response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/domain-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get domains response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get domains
      tags:
        - Pages Domains
    post:
      description: Add a new domain for the Pages project.
      operationId: pages-domains-add-domain
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domains-post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain-response-single'
          description: Add domain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/domain-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Add domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Add domain
      tags:
        - Pages Domains
  '/accounts/{account_identifier}/pages/projects/{project_name}/domains/{domain_name}':
    delete:
      description: Delete a domain.
      operationId: pages-domains-delete-domain
      parameters:
        - in: path
          name: domain_name
          required: true
          schema:
            $ref: '#/components/schemas/domain_name'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  errors: []
                  messages: []
                  result: null
                  success: true
          description: Delete domain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - example:
                      errors: []
                      messages: []
                      result: null
                      success: true
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete domain
      tags:
        - Pages Domains
    get:
      description: Fetch a single domain.
      operationId: pages-domains-get-domain
      parameters:
        - in: path
          name: domain_name
          required: true
          schema:
            $ref: '#/components/schemas/domain_name'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain-response-single'
          description: Get domain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/domain-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get domain
      tags:
        - Pages Domains
    patch:
      description: Retry the validation status of a single domain.
      operationId: pages-domains-patch-domain
      parameters:
        - in: path
          name: domain_name
          required: true
          schema:
            $ref: '#/components/schemas/domain_name'
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain-response-single'
          description: Patch domain response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/domain-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Patch domain response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Patch domain
      tags:
        - Pages Domains
  '/accounts/{account_identifier}/pages/projects':
    get:
      description: Fetch a list of all user projects.
      operationId: pages-project-get-projects
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projects-response'
          description: Get projects response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/projects-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get projects response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get projects
      tags:
        - Pages Project
    post:
      description: Make a new project.
      operationId: pages-project-create-project
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/new-project-response'
          description: Create project response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/new-project-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create project response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create project
      tags:
        - Pages Project
  '/accounts/{account_identifier}/pages/projects/{project_name}':
    delete:
      description: Destroy a project by name.
      operationId: pages-project-delete-project
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  errors: []
                  messages: []
                  result: null
                  success: true
          description: Delete project response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - example:
                      errors: []
                      messages: []
                      result: null
                      success: true
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete project response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete project
      tags:
        - Pages Project
    get:
      description: Fetch a project by name.
      operationId: pages-project-get-project
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project-response'
          description: Get project response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/project-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get project response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get project
      tags:
        - Pages Project
    patch:
      description: 'Set new attributes for an existing project. Modify environment variables. To delete an environment variable, set the key to null.'
      operationId: pages-project-update-project
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            $ref: '#/components/schemas/project_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project-patch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/new-project-response'
          description: Update project response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/new-project-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update project response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update project
      tags:
        - Pages Project
  '/accounts/{account_identifier}/r2/buckets':
    post:
      description: Creates a new R2 bucket.
      operationId: r-2-bucket-create-bucket
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              example: '{''name'': ''example-bucket''}'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-single-bucket-operation-response'
          description: Create Bucket response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-single-bucket-operation-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Bucket response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Bucket
      tags:
        - R2 Bucket
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.r2.bucket.create
  '/accounts/{account_identifier}/r2/buckets/{bucket_name}':
    delete:
      description: Deletes an existing R2 bucket.
      operationId: r-2-bucket-delete-bucket
      parameters:
        - in: path
          name: bucket_name
          required: true
          schema:
            $ref: '#/components/schemas/bucket_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-single-bucket-operation-response'
          description: Delete Bucket response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-single-bucket-operation-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Bucket response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Bucket
      tags:
        - R2 Bucket
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.r2.bucket.delete
