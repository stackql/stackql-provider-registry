openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Lists
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - lists
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    lists-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                allOf:
                  - $ref: '#/components/schemas/list'
                  - required:
                      - id
                      - name
                      - kind
                      - num_items
                      - created_on
                      - modified_on
                    type: object
              type: array
          type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    list:
      properties:
        created_on:
          $ref: '#/components/schemas/components-schemas-created_on'
        description:
          $ref: '#/components/schemas/lists_components-schemas-description'
        id:
          $ref: '#/components/schemas/list_id'
        kind:
          $ref: '#/components/schemas/kind'
        modified_on:
          $ref: '#/components/schemas/lists_components-schemas-modified_on'
        name:
          $ref: '#/components/schemas/lists_components-schemas-name'
        num_items:
          $ref: '#/components/schemas/num_items'
        num_referencing_filters:
          $ref: '#/components/schemas/num_referencing_filters'
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    components-schemas-created_on:
      description: The RFC 3339 timestamp of when the list was created.
      example: '2020-01-01T08:00:00Z'
      type: string
    lists_components-schemas-description:
      description: An informative summary of the list.
      example: This is a note.
      maxLength: 500
      type: string
    list_id:
      description: The unique ID of the list.
      example: 2c0fc9fa937b11eaa1b71c4d701ab86e
      maxLength: 32
      minLength: 32
      readOnly: true
      type: string
    kind:
      description: The type of the list. Each type supports specific list items (IP addresses or redirects).
      enum:
        - ip
        - redirect
      example: ip
      type: string
    lists_components-schemas-modified_on:
      description: The RFC 3339 timestamp of when the list was last modified.
      example: '2020-01-10T14:00:00Z'
      type: string
    lists_components-schemas-name:
      description: An informative name for the list. Use this name in filter and rule expressions.
      example: list1
      maxLength: 50
      pattern: '^[a-zA-Z0-9_]+$'
      type: string
    num_items:
      description: The number of items in the list.
      example: 10
      type: number
    num_referencing_filters:
      description: 'The number of [filters](#filters) referencing the list.'
      example: 2
      type: number
    list-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/list'
          type: object
    schemas-operation_id:
      description: The unique operation ID of the asynchronous action.
      example: 4da8780eeb215e6cb7f48dd981c4ea02
      readOnly: true
      type: string
    bulk-operation-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/schemas-operation'
          type: object
    schemas-operation:
      properties:
        completed:
          description: The RFC 3339 timestamp of when the operation was completed.
          example: '2020-01-01T08:00:00Z'
          readOnly: true
          type: string
        error:
          description: A message describing the error when the status is `failed`.
          example: This list is at the maximum number of items
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/schemas-operation_id'
        status:
          description: The current status of the asynchronous operation.
          enum:
            - pending
            - running
            - completed
            - failed
          example: failed
          readOnly: true
          type: string
      required:
        - id
        - status
      type: object
    list-delete-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/item_id'
              type: object
          type: object
    item_id:
      description: The unique ID of the item in the List.
      example: 34b12448945f11eaa1b71c4d701ab86e
      type: string
    lists-async-response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              properties:
                operation_id:
                  $ref: '#/components/schemas/schemas-operation_id'
              type: object
          type: object
    items-list-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/items'
            result_info:
              properties:
                cursors:
                  properties:
                    after:
                      example: yyy
                      type: string
                    before:
                      example: xxx
                      type: string
                  type: object
              type: object
          type: object
    items:
      items:
        $ref: '#/components/schemas/item'
      type: array
    item:
      example:
        comment: Private IP address
        created_on: '2020-01-01T08:00:00Z'
        id: 2c0fc9fa937b11eaa1b71c4d701ab86e
        ip: 10.0.0.1
        modified_on: '2020-01-10T14:00:00Z'
      oneOf:
        - required:
            - ip
        - required:
            - redirect
      properties:
        comment:
          $ref: '#/components/schemas/item_comment'
        created_on:
          description: The RFC 3339 timestamp of when the item was created.
          example: '2020-01-01T08:00:00Z'
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/list_id'
        ip:
          $ref: '#/components/schemas/item_ip'
        modified_on:
          description: The RFC 3339 timestamp of when the item was last modified.
          example: '2020-01-10T14:00:00Z'
          readOnly: true
          type: string
        redirect:
          $ref: '#/components/schemas/item_redirect'
      type: object
    item_comment:
      description: An informative summary of the list item.
      example: Private IP address
      type: string
    item_ip:
      description: 'An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.'
      example: 10.0.0.1
      type: string
    item_redirect:
      description: The definition of the redirect.
      properties:
        include_subdomains:
          default: false
          type: boolean
        preserve_path_suffix:
          default: true
          type: boolean
        preserve_query_string:
          default: false
          type: boolean
        source_url:
          example: example.com/arch
          type: string
        status_code:
          default: 301
          enum:
            - 301
            - 302
            - 307
            - 308
          type: integer
        subpath_matching:
          default: false
          type: boolean
        target_url:
          example: 'https://archlinux.org/'
          type: string
      required:
        - source_url
        - target_url
      type: object
    items-update-request-collection:
      items:
        allOf:
          - oneOf:
              - required:
                  - ip
              - required:
                  - redirect
            properties:
              comment:
                $ref: '#/components/schemas/item_comment'
              ip:
                $ref: '#/components/schemas/item_ip'
              redirect:
                $ref: '#/components/schemas/item_redirect'
            type: object
      type: array
    item-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/item'
          type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_rules:
      id: cloudflare.lists.accounts_rules
      name: accounts_rules
      title: Accounts Rules
      methods:
        get_lists:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_lists:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_a_list:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_a_list:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_a_list:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_a_list:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_a_list:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_rules/methods/get_lists'
          - $ref: '#/components/x-stackQL-resources/accounts_rules/methods/get_a_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_rules/methods/create_a_list'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_rules/methods/delete_a_list'
    accounts_rules_bulk_operations:
      id: cloudflare.lists.accounts_rules_bulk_operations
      name: accounts_rules_bulk_operations
      title: Accounts Rules Bulk Operations
      methods:
        get_bulk_operation_status:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1bulk_operations~1{operation_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_bulk_operation_status:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1bulk_operations~1{operation_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_rules_bulk_operations/methods/get_bulk_operation_status'
        insert: []
        update: []
        delete: []
    accounts_rules_items:
      id: cloudflare.lists.accounts_rules_items
      name: accounts_rules_items
      title: Accounts Rules Items
      methods:
        delete_list_items:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}~1items/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_list_items:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}~1items/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_list_items:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}~1items/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_list_items:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}~1items/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_all_list_items:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}~1items/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_a_list_item:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}~1items~1{item_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_a_list_item:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1rules~1lists~1{list_id}~1items~1{item_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_rules_items/methods/get_list_items'
          - $ref: '#/components/x-stackQL-resources/accounts_rules_items/methods/get_a_list_item'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_rules_items/methods/create_list_items'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_rules_items/methods/delete_list_items'
paths:
  '/accounts/{account_identifier}/rules/lists':
    get:
      description: Fetches all lists in the account.
      operationId: lists-get-lists
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists-response-collection'
          description: Get lists response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get lists response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get lists
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates a new list of the specified type.
      operationId: lists-create-a-list
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  $ref: '#/components/schemas/lists_components-schemas-description'
                kind:
                  $ref: '#/components/schemas/kind'
                name:
                  $ref: '#/components/schemas/lists_components-schemas-name'
              required:
                - name
                - kind
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list-response-collection'
          description: Create a list response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/list-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a list response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a list
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/rules/lists/bulk_operations/{operation_id}':
    get:
      description: |-
        Gets the current status of an asynchronous operation on a list.

        The `status` property can have one of the following values: `pending`, `running`, `completed`, or `failed`. If the status is `failed`, the `error` property will contain a message describing the error.
      operationId: lists-get-bulk-operation-status
      parameters:
        - in: path
          name: operation_id
          required: true
          schema:
            $ref: '#/components/schemas/schemas-operation_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulk-operation-response-collection'
          description: Get bulk operation status response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bulk-operation-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get bulk operation status response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get bulk operation status
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/rules/lists/{list_id}':
    delete:
      description: Deletes a specific list and all its items.
      operationId: lists-delete-a-list
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/list_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list-delete-response-collection'
          description: Delete a list response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/list-delete-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a list response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a list
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the details of a list.
      operationId: lists-get-a-list
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/list_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list-response-collection'
          description: Get a list response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/list-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a list response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a list
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates the description of a list.
      operationId: lists-update-a-list
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/list_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  $ref: '#/components/schemas/lists_components-schemas-description'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list-response-collection'
          description: Update a list response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/list-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a list response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a list
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/rules/lists/{list_id}/items':
    delete:
      description: |-
        Removes one or more items from a list.

        This operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.
      operationId: lists-delete-list-items
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/list_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                items:
                  items:
                    properties:
                      id:
                        $ref: '#/components/schemas/item_id'
                  minItems: 1
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists-async-response'
          description: Delete list items response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists-async-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete list items response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete list items
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches all the items in the list.
      operationId: lists-get-list-items
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/list_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/items-list-response-collection'
          description: Get list items response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/items-list-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get list items response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get list items
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: |-
        Appends new items to the list.

        This operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.
      operationId: lists-create-list-items
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/list_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/items-update-request-collection'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists-async-response'
          description: Create list items response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists-async-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create list items response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create list items
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: |-
        Removes all existing items from the list and adds the provided items to the list.

        This operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.
      operationId: lists-update-all-list-items
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/list_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/items-update-request-collection'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists-async-response'
          description: Update all list items response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists-async-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update all list items response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update all list items
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/rules/lists/{list_id}/items/{item_id}':
    get:
      description: Fetches a list item in the list.
      operationId: lists-get-a-list-item
      parameters:
        - in: path
          name: item_id
          required: true
          schema:
            $ref: '#/components/schemas/item_id'
        - in: path
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/list_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item-response-collection'
          description: Get a list item response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/item-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a list item response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a list item
      tags:
        - Lists
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
