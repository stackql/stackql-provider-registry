openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Logpush Jobs
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - logs
  version: 4.0.0
components:
  schemas:
    dataset:
      description: Dataset to be pulled.
      example: http_requests
      maxLength: 256
      nullable: true
      pattern: '^[a-zA-Z0-9_\-]*$'
      type: string
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    logpush_field_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items:
                nullable: true
                properties:
                  key:
                    example: value
                    type: string
                type: object
              type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    logpush_job_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items:
                nullable: true
                type: object
              type: array
    destination_conf:
      description: Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
      example: 's3://mybucket/logs?region=us-west-2'
      format: uri
      maxLength: 4096
      type: string
    enabled:
      description: Flag that indicates if the job was enabled.
      example: false
      type: boolean
    components-schemas-frequency:
      default: high
      description: The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.
      enum:
        - high
        - low
      example: high
      nullable: true
      type: string
    logpull_options:
      description: 'Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.'
      example: 'fields=RayID,ClientIP,EdgeStartTimestamp&timestamps=rfc3339'
      format: uri-reference
      maxLength: 4096
      nullable: true
      type: string
    logpush_components-schemas-name:
      description: 'Optional human readable job name. Not unique. Cloudflare suggests that you set this to a meaningful string, like the domain name, to make it easier to identify your job.'
      example: example.com
      maxLength: 512
      nullable: true
      pattern: '^[a-zA-Z0-9\-\.]*$'
      type: string
    ownership_challenge:
      description: Ownership challenge token to prove destination ownership.
      example: '00000000000000000000'
      maxLength: 4096
      pattern: '^[a-zA-Z0-9/\+\.\-_]*$'
      type: string
    logpush_job_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              nullable: true
              type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    id:
      description: Unique id of the job.
      minimum: 1
      type: integer
    get_ownership_response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                filename:
                  example: logs/challenge-filename.txt
                  type: string
                message:
                  example: ''
                  type: string
                valid:
                  example: true
                  type: boolean
              type: object
    validate_ownership_response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                valid:
                  example: true
                  type: boolean
              type: object
    destination_exists_response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                exists:
                  example: false
                  type: boolean
              type: object
    validate_response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                message:
                  example: ''
                  type: string
                valid:
                  example: true
                  type: boolean
              type: object
    flag_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                flag:
                  example: true
                  type: boolean
              type: object
    flag:
      description: The log retention flag for Logpull API.
      example: true
      type: boolean
    ray_identifier:
      description: Ray identifier.
      example: 41ddf1740f67442d
      maxLength: 16
      readOnly: true
      type: string
    logs:
      anyOf:
        - type: string
        - type: object
      example: |-
        {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}
        {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}
        {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}
    fields_response:
      properties:
        key:
          example: value
          type: string
      type: object
    script_name:
      description: 'Name of the script, used in URLs and route configuration.'
      example: this-is_my_script-01
      pattern: '^[a-z0-9_][a-z0-9-_]*$'
      type: string
    tail-response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              properties:
                expires_at:
                  readOnly: true
                id:
                  readOnly: true
                url:
                  readOnly: true
              type: object
    components-schemas-id:
      description: Identifier for the tail.
      example: 03dc9f77817b488fb26c5861ec18f791
      type: string
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    zones_logpush_datasets_fields:
      id: cloudflare.logs.zones_logpush_datasets_fields
      name: zones_logpush_datasets_fields
      title: Zones Logpush Datasets Fields
      methods:
        logpush_jobs_list_fields:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1datasets~1{dataset}~1fields/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _logpush_jobs_list_fields:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1datasets~1{dataset}~1fields/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_logpush_datasets_fields/methods/logpush_jobs_list_fields'
        insert: []
        update: []
        delete: []
    zones_logpush_datasets_jobs:
      id: cloudflare.logs.zones_logpush_datasets_jobs
      name: zones_logpush_datasets_jobs
      title: Zones Logpush Datasets Jobs
      methods:
        logpush_jobs_list_logpush_jobs_for_a_dataset:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1datasets~1{dataset}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _logpush_jobs_list_logpush_jobs_for_a_dataset:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1datasets~1{dataset}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_logpush_datasets_jobs/methods/logpush_jobs_list_logpush_jobs_for_a_dataset'
        insert: []
        update: []
        delete: []
    zones_logpush_jobs:
      id: cloudflare.logs.zones_logpush_jobs
      name: zones_logpush_jobs
      title: Zones Logpush Jobs
      methods:
        logpush_jobs_list_logpush_jobs:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _logpush_jobs_list_logpush_jobs:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        logpush_jobs_create_logpush_job:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        logpush_jobs_delete_logpush_job:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1jobs~1{job_identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        logpush_jobs_get_logpush_job_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1jobs~1{job_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _logpush_jobs_get_logpush_job_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1jobs~1{job_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        logpush_jobs_update_logpush_job:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1jobs~1{job_identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_logpush_jobs/methods/logpush_jobs_list_logpush_jobs'
          - $ref: '#/components/x-stackQL-resources/zones_logpush_jobs/methods/logpush_jobs_get_logpush_job_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_logpush_jobs/methods/logpush_jobs_create_logpush_job'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_logpush_jobs/methods/logpush_jobs_delete_logpush_job'
    zones_logpush_ownership:
      id: cloudflare.logs.zones_logpush_ownership
      name: zones_logpush_ownership
      title: Zones Logpush Ownership
      methods:
        logpush_jobs_get_ownership_challenge:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1ownership/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        logpush_jobs_validate_ownership_challenge:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1ownership~1validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_logpush_validate_destination_exists:
      id: cloudflare.logs.zones_logpush_validate_destination_exists
      name: zones_logpush_validate_destination_exists
      title: Zones Logpush Validate Destination Exists
      methods:
        logpush_jobs_check_destination_exists:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1validate~1destination~1exists/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_logpush_validate_origin:
      id: cloudflare.logs.zones_logpush_validate_origin
      name: zones_logpush_validate_origin
      title: Zones Logpush Validate Origin
      methods:
        logpush_jobs_validate_origin:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logpush~1validate~1origin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_control_retention_flag:
      id: cloudflare.logs.zones_control_retention_flag
      name: zones_control_retention_flag
      title: Zones Control Retention Flag
      methods:
        received_get_log_retention_flag:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1control~1retention~1flag/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _received_get_log_retention_flag:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1control~1retention~1flag/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        received_update_log_retention_flag:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1control~1retention~1flag/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_control_retention_flag/methods/received_get_log_retention_flag'
        insert: []
        update: []
        delete: []
    zones_rayids:
      id: cloudflare.logs.zones_rayids
      name: zones_rayids
      title: Zones Rayids
      methods:
        received_get_logs_ray_i_ds:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1rayids~1{ray_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _received_get_logs_ray_i_ds:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1rayids~1{ray_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_received:
      id: cloudflare.logs.zones_received
      name: zones_received
      title: Zones Received
      methods:
        received_get_logs_received:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1received/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _received_get_logs_received:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1received/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_received_fields:
      id: cloudflare.logs.zones_received_fields
      name: zones_received_fields
      title: Zones Received Fields
      methods:
        received_list_fields:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1received~1fields/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _received_list_fields:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1logs~1received~1fields/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_received_fields/methods/received_list_fields'
        insert: []
        update: []
        delete: []
    accounts_workers_scripts_tails:
      id: cloudflare.logs.accounts_workers_scripts_tails
      name: accounts_workers_scripts_tails
      title: Accounts Workers Scripts Tails
      methods:
        worker_tail_logs_list_tails:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1tails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _worker_tail_logs_list_tails:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1tails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_tail_logs_start_tail:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1tails/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        worker_tail_logs_delete_tail:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1workers~1scripts~1{script_name}~1tails~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_workers_scripts_tails/methods/worker_tail_logs_list_tails'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_workers_scripts_tails/methods/worker_tail_logs_delete_tail'
paths:
  '/zones/{zone_identifier}/logpush/datasets/{dataset}/fields':
    get:
      description: 'Lists all fields available for a dataset. The response result is an object with key-value pairs, where keys are field names, and values are descriptions.'
      operationId: logpush-jobs-list-fields
      parameters:
        - in: path
          name: dataset
          required: true
          schema:
            $ref: '#/components/schemas/dataset'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_field_response_collection'
          description: List fields response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_field_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List fields response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List fields
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logpush/datasets/{dataset}/jobs':
    get:
      description: Lists Logpush jobs for a zone for a dataset.
      operationId: logpush-jobs-list-logpush-jobs-for-a-dataset
      parameters:
        - in: path
          name: dataset
          required: true
          schema:
            $ref: '#/components/schemas/dataset'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_job_response_collection'
          description: List Logpush jobs for a dataset response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_job_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Logpush jobs for a dataset response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Logpush jobs for a dataset
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logpush/jobs':
    get:
      description: Lists Logpush jobs for a zone.
      operationId: logpush-jobs-list-logpush-jobs
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_job_response_collection'
          description: List Logpush jobs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_job_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Logpush jobs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Logpush jobs
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Creates a new Logpush job for a zone.
      operationId: logpush-jobs-create-logpush-job
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dataset:
                  $ref: '#/components/schemas/dataset'
                destination_conf:
                  $ref: '#/components/schemas/destination_conf'
                enabled:
                  $ref: '#/components/schemas/enabled'
                frequency:
                  $ref: '#/components/schemas/components-schemas-frequency'
                logpull_options:
                  $ref: '#/components/schemas/logpull_options'
                name:
                  $ref: '#/components/schemas/logpush_components-schemas-name'
                ownership_challenge:
                  $ref: '#/components/schemas/ownership_challenge'
              required:
                - destination_conf
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_job_response_single'
          description: Create Logpush job response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_job_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Logpush job response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Logpush job
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logpush/jobs/{job_identifier}':
    delete:
      description: Deletes a Logpush job.
      operationId: logpush-jobs-delete-logpush-job
      parameters:
        - in: path
          name: job_identifier
          required: true
          schema:
            $ref: '#/components/schemas/id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-common'
                  - properties:
                      result:
                        example: {}
                        nullable: true
                        type: object
          description: Delete Logpush job response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-common'
                      - properties:
                          result:
                            example: {}
                            nullable: true
                            type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Logpush job response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Logpush job
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Gets the details of a Logpush job.
      operationId: logpush-jobs-get-logpush-job-details
      parameters:
        - in: path
          name: job_identifier
          required: true
          schema:
            $ref: '#/components/schemas/id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_job_response_single'
          description: Get Logpush job details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_job_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Logpush job details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Logpush job details
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Updates a Logpush job.
      operationId: logpush-jobs-update-logpush-job
      parameters:
        - in: path
          name: job_identifier
          required: true
          schema:
            $ref: '#/components/schemas/id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                destination_conf:
                  $ref: '#/components/schemas/destination_conf'
                enabled:
                  $ref: '#/components/schemas/enabled'
                frequency:
                  $ref: '#/components/schemas/components-schemas-frequency'
                logpull_options:
                  $ref: '#/components/schemas/logpull_options'
                ownership_challenge:
                  $ref: '#/components/schemas/ownership_challenge'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_job_response_single'
          description: Update Logpush job response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_job_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Logpush job response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Logpush job
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logpush/ownership':
    post:
      description: Gets a new ownership challenge sent to your destination.
      operationId: logpush-jobs-get-ownership-challenge
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                destination_conf:
                  $ref: '#/components/schemas/destination_conf'
              required:
                - destination_conf
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_ownership_response'
          description: Get ownership challenge response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/get_ownership_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get ownership challenge response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get ownership challenge
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logpush/ownership/validate':
    post:
      description: Validates ownership challenge of the destination.
      operationId: logpush-jobs-validate-ownership-challenge
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                destination_conf:
                  $ref: '#/components/schemas/destination_conf'
                ownership_challenge:
                  $ref: '#/components/schemas/ownership_challenge'
              required:
                - destination_conf
                - ownership_challenge
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validate_ownership_response'
          description: Validate ownership challenge response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/validate_ownership_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Validate ownership challenge response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Validate ownership challenge
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logpush/validate/destination/exists':
    post:
      description: Checks if there is an existing job with a destination.
      operationId: logpush-jobs-check-destination-exists
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                destination_conf:
                  $ref: '#/components/schemas/destination_conf'
              required:
                - destination_conf
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/destination_exists_response'
          description: Check destination exists response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/destination_exists_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Check destination exists response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Check destination exists
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logpush/validate/origin':
    post:
      description: Validates logpull origin with logpull_options.
      operationId: logpush-jobs-validate-origin
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                logpull_options:
                  $ref: '#/components/schemas/logpull_options'
              required:
                - logpull_options
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validate_response'
          description: Validate origin response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/validate_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Validate origin response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Validate origin
      tags:
        - Logpush Jobs
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logs/control/retention/flag':
    get:
      description: Gets log retention flag for Logpull API.
      operationId: logs-received-get-log-retention-flag
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flag_response'
          description: Get log retention flag response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/flag_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get log retention flag response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get log retention flag
      tags:
        - Logs Received
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Updates log retention flag for Logpull API.
      operationId: logs-received-update-log-retention-flag
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                flag:
                  $ref: '#/components/schemas/flag'
              required:
                - flag
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flag_response'
          description: Update log retention flag response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/flag_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update log retention flag response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update log retention flag
      tags:
        - Logs Received
      x-cfPermissionsRequired:
        enum:
          - '#logs:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logs/rayids/{ray_identifier}':
    get:
      description: 'The `/rayids` api route allows lookups by specific rayid. The rayids route will return zero, one, or more records (ray ids are not unique).'
      operationId: logs-received-get-logs-ray-i-ds
      parameters:
        - in: path
          name: ray_identifier
          required: true
          schema:
            $ref: '#/components/schemas/ray_identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logs'
          description: Get logs RayIDs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logs'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get logs RayIDs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get logs RayIDs
      tags:
        - Logs Received
      x-cfPermissionsRequired:
        enum:
          - '#logs:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logs/received':
    get:
      description: 'The `/received` api route allows customers to retrieve their edge HTTP logs. The basic access pattern is "give me all the logs for zone Z for minute M", where the minute M refers to the time records were received at Cloudflare''s central data center. `start` is inclusive, and `end` is exclusive. Because of that, to get all data, at minutely cadence, starting at 10AM, the proper values are: `start=2018-05-20T10:00:00Z&end=2018-05-20T10:01:00Z`, then `start=2018-05-20T10:01:00Z&end=2018-05-20T10:02:00Z` and so on; the overlap will be handled properly.'
      operationId: logs-received-get-logs-received
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logs'
          description: Get logs received response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logs'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get logs received response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get logs received
      tags:
        - Logs Received
      x-cfPermissionsRequired:
        enum:
          - '#logs:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/logs/received/fields':
    get:
      description: 'Lists all fields available. The response is json object with key-value pairs, where keys are field names, and values are descriptions.'
      operationId: logs-received-list-fields
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fields_response'
          description: List fields response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/fields_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List fields response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List fields
      tags:
        - Logs Received
      x-cfPermissionsRequired:
        enum:
          - '#logs:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/workers/scripts/{script_name}/tails':
    get:
      description: Get list of tails currently deployed on a worker.
      operationId: worker-tail-logs-list-tails
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tail-response'
          description: List Tails response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tail-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Tails response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Tails
      tags:
        - Worker Tail Logs
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.read
    post:
      description: Starts a tail that receives logs and exception from a Worker.
      operationId: worker-tail-logs-start-tail
      parameters:
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tail-response'
          description: Start Tail response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tail-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Start Tail response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Start Tail
      tags:
        - Worker Tail Logs
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.read
          - com.cloudflare.edge.worker.tail.create
  '/accounts/{account_identifier}/workers/scripts/{script_name}/tails/{id}':
    delete:
      description: Deletes a tail from a Worker.
      operationId: worker-tail-logs-delete-tail
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/components-schemas-id'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/script_name'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-common'
          description: Delete Tail response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-common'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Tail response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Tail
      tags:
        - Worker Tail Logs
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.script.read
          - com.cloudflare.edge.worker.tail.create
