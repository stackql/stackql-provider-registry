openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: DNS Analytics
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - dns
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    result:
      properties:
        data:
          items:
            properties:
              dimensions:
                description: Array of dimension values for this row.
                example:
                  - name: NODATA
                items:
                  $ref: '#/components/schemas/dimension_value'
                type: array
              metrics:
                items: {}
                type: array
            required:
              - dimensions
              - metrics
            type: object
          nullable: true
          type: array
        data_lag:
          description: 'Number of seconds between current time and last processed event, in another words how many seconds of data could be missing.'
          example: 60
          minimum: 0
          type: number
        max:
          description: Maximum results for each metric.
        min:
          description: Minimum results for each metric.
        rows:
          description: Total number of rows in the result.
          example: 100
          minimum: 0
          type: number
        totals:
          description: Total results for metrics across all data.
      required:
        - rows
        - data
        - totals
      type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    dimension_value:
      anyOf:
        - description: 'Dimension value, may contain dimension identifier for drill down.'
          properties:
            id:
              description: Dimension value identifier that can be used for drill down.
              type: string
            name:
              description: Dimension value.
              example: NODATA
              type: string
          required:
            - name
          type: object
        - description: Dimension value.
          example: NODATA
          type: string
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    dns_firewall_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/dns-firewall'
              type: array
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    dns-firewall:
      properties:
        attack_mitigation:
          $ref: '#/components/schemas/attack_mitigation'
        deprecate_any_requests:
          $ref: '#/components/schemas/deprecate_any_requests'
        dns_firewall_ips:
          $ref: '#/components/schemas/dns_firewall_ips'
        ecs_fallback:
          $ref: '#/components/schemas/ecs_fallback'
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        maximum_cache_ttl:
          $ref: '#/components/schemas/maximum_cache_ttl'
        minimum_cache_ttl:
          $ref: '#/components/schemas/minimum_cache_ttl'
        modified_on:
          $ref: '#/components/schemas/schemas-modified_on'
        name:
          $ref: '#/components/schemas/dns-firewall_components-schemas-name'
        negative_cache_ttl:
          $ref: '#/components/schemas/negative_cache_ttl'
        origin_ips:
          $ref: '#/components/schemas/origin_ips'
        ratelimit:
          $ref: '#/components/schemas/ratelimit'
      required:
        - id
        - name
        - origin_ips
        - dns_firewall_ips
        - minimum_cache_ttl
        - maximum_cache_ttl
        - deprecate_any_requests
        - ecs_fallback
        - modified_on
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    attack_mitigation:
      description: Attack mitigation settings.
      nullable: true
      properties:
        enabled:
          description: 'When enabled, random-prefix attacks are automatically mitigated and the origin DNS servers protected.'
          example: true
          type: boolean
        only_when_origin_unhealthy:
          default: true
          description: Only mitigate attacks when origin servers seem unhealthy.
          example: false
          type: boolean
      type: object
    deprecate_any_requests:
      description: Deprecate the response to ANY requests.
      example: true
      type: boolean
    dns_firewall_ips:
      example:
        - 203.0.113.1
        - 203.0.113.254
        - '2001:DB8:AB::CF'
        - '2001:DB8:CD::CF'
      items:
        anyOf:
          - description: Origin DNS Server IPv4 Address.
            example: 203.0.113.1
            format: ipv4
            type: string
          - description: Origin DNS Server IPv6 Address.
            example: '2001:DB8:ab::CF'
            format: ipv6
            type: string
      type: array
    ecs_fallback:
      description: Forward client IP (resolver) subnet if no EDNS Client Subnet is sent.
      example: false
      type: boolean
    maximum_cache_ttl:
      default: 900
      description: Maximum DNS Cache TTL.
      example: 900
      maximum: 36000
      minimum: 30
      type: number
    minimum_cache_ttl:
      default: 60
      description: Minimum DNS Cache TTL.
      example: 60
      maximum: 36000
      minimum: 30
      type: number
    schemas-modified_on:
      description: Last modification of DNS Firewall cluster.
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    dns-firewall_components-schemas-name:
      description: DNS Firewall Cluster Name.
      example: My Awesome DNS Firewall cluster
      maxLength: 160
      type: string
    negative_cache_ttl:
      description: Negative DNS Cache TTL.
      example: 900
      maximum: 36000
      minimum: 30
      nullable: true
      type: number
    origin_ips:
      example:
        - 192.0.2.1
        - 198.51.100.1
        - '2001:DB8:100::CF'
      items:
        anyOf:
          - description: Origin DNS Server IPv4 Address.
            example: 192.0.2.1
            format: ipv4
            type: string
          - description: Origin DNS Server IPv6 Address.
            example: '2001:DB8:100::CF'
            format: ipv6
            type: string
      type: array
    ratelimit:
      description: Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).
      example: 600
      maximum: 1000000000
      minimum: 100
      nullable: true
      type: number
    dns_firewall_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/dns-firewall'
    schemas-dns-firewall:
      allOf:
        - $ref: '#/components/schemas/dns-firewall'
    virtual_dns_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/virtual-dns'
              type: array
    virtual-dns:
      properties:
        deprecate_any_requests:
          $ref: '#/components/schemas/deprecate_any_requests'
        ecs_fallback:
          $ref: '#/components/schemas/ecs_fallback'
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        maximum_cache_ttl:
          $ref: '#/components/schemas/maximum_cache_ttl'
        minimum_cache_ttl:
          $ref: '#/components/schemas/minimum_cache_ttl'
        modified_on:
          $ref: '#/components/schemas/schemas-modified_on'
        name:
          $ref: '#/components/schemas/virtual-dns_components-schemas-name'
        negative_cache_ttl:
          $ref: '#/components/schemas/schemas-negative_cache_ttl'
        origin_ips:
          $ref: '#/components/schemas/origin_ips'
        ratelimit:
          $ref: '#/components/schemas/schemas-ratelimit'
        virtual_dns_ips:
          $ref: '#/components/schemas/virtual_dns_ips'
      required:
        - id
        - name
        - origin_ips
        - virtual_dns_ips
        - minimum_cache_ttl
        - maximum_cache_ttl
        - deprecate_any_requests
        - ecs_fallback
        - modified_on
      type: object
    virtual-dns_components-schemas-name:
      description: DNS Firewall Cluster Name.
      example: My Awesome DNS Firewall cluster
      maxLength: 160
      type: string
    schemas-negative_cache_ttl:
      default: 900
      description: Negative DNS Cache TTL.
      example: 900
      maximum: 36000
      minimum: 30
      nullable: true
      type: number
    schemas-ratelimit:
      description: |-
        Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).
        Notes: A ratelimit of 0 turns off the ratelimit. Otherwise the minimum is 100.
      example: 600
      maximum: 100000000
      type: number
    virtual_dns_ips:
      example:
        - 203.0.113.1
        - 203.0.113.254
        - '2001:DB8:AB::CF'
        - '2001:DB8:CD::CF'
      items:
        anyOf:
          - description: Origin DNS Server IPv4 Address.
            example: 203.0.113.1
            format: ipv4
            type: string
          - description: Origin DNS Server IPv6 Address.
            example: '2001:DB8:ab::CF'
            format: ipv6
            type: string
      type: array
    virtual_dns_single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/virtual-dns'
    schemas-virtual-dns:
      allOf:
        - $ref: '#/components/schemas/virtual-dns'
    dns_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/dns-record'
              type: array
          type: object
    dns-record:
      oneOf:
        - $ref: '#/components/schemas/ARecord'
        - $ref: '#/components/schemas/AAAARecord'
        - $ref: '#/components/schemas/CNAMERecord'
        - $ref: '#/components/schemas/HTTPSRecord'
        - $ref: '#/components/schemas/NSRecord'
        - $ref: '#/components/schemas/MXRecord'
        - $ref: '#/components/schemas/TXTRecord'
        - $ref: '#/components/schemas/LOCRecord'
        - $ref: '#/components/schemas/SRVRecord'
        - $ref: '#/components/schemas/CERTRecord'
        - $ref: '#/components/schemas/DNSKEYRecord'
        - $ref: '#/components/schemas/DSRecord'
        - $ref: '#/components/schemas/NAPTRRecord'
        - $ref: '#/components/schemas/SMIMEARecord'
        - $ref: '#/components/schemas/SSHFPRecord'
        - $ref: '#/components/schemas/SVCBRecord'
        - $ref: '#/components/schemas/TLSARecord'
        - $ref: '#/components/schemas/URIRecord'
      required:
        - id
        - type
        - name
        - content
        - proxiable
        - proxied
        - ttl
        - locked
        - zone_name
        - created_on
        - modified_on
      type: object
    ARecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: A valid IPv4 address.
              example: 198.51.100.4
              format: ipv4
              type: string
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - A
              example: A
      required:
        - type
        - name
        - content
      title: A Record
    AAAARecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: A valid IPv6 address.
              example: '2400:cb00:2049:1::173.245.59.16'
              format: ipv6
              type: string
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - AAAA
              example: AAAA
      required:
        - type
        - name
        - content
      title: AAAA Record
    CNAMERecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: A valid hostname.
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - CNAME
              example: CNAME
      required:
        - type
        - name
        - content
      title: CNAME Record
    HTTPSRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted HTTPS content. See 'data' to set HTTPS properties.
              readOnly: true
              type: string
            data:
              description: Components of a HTTPS record.
              properties:
                priority:
                  description: priority.
                  example: 1
                  maximum: 65535
                  minimum: 0
                  type: number
                target:
                  description: target.
                  example: .
                  type: string
                value:
                  description: value.
                  example: 'alpn="h3,h2" ipv4hint="127.0.0.1" ipv6hint="::1"'
                  type: string
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - HTTPS
              example: HTTPS
      required:
        - type
        - name
        - data
      title: HTTPS Record
    NSRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: A valid name server host name.
              example: ns1.example.com
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - NS
              example: NS
      required:
        - type
        - name
        - content
      title: NS Record
    MXRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: A valid mail server hostname.
              example: mx.example.com
              format: hostname
              type: string
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            priority:
              $ref: '#/components/schemas/priority'
            type:
              description: Record type.
              enum:
                - MX
              example: MX
      required:
        - type
        - name
        - content
        - priority
      title: MX Record
    TXTRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Text content for the record.
              example: example text content
              type: string
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - TXT
              example: TXT
      required:
        - type
        - name
        - content
      title: TXT Record
    LOCRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted LOC content. See 'data' to set LOC properties.
              example: IN LOC 37 46 46 N 122 23 35 W 0m 100m 0m 0m
              readOnly: true
              type: string
            data:
              description: Components of a LOC record.
              properties:
                altitude:
                  description: Altitude of location in meters.
                  example: 0
                  maximum: 42849672.95
                  minimum: -100000
                  type: number
                lat_degrees:
                  description: Degrees of latitude.
                  example: 37
                  maximum: 90
                  minimum: 0
                  type: number
                lat_direction:
                  description: Latitude direction.
                  enum:
                    - 'N'
                    - S
                  example: 'N'
                lat_minutes:
                  default: 0
                  description: Minutes of latitude.
                  example: 46
                  maximum: 59
                  minimum: 0
                  type: number
                lat_seconds:
                  default: 0
                  description: Seconds of latitude.
                  example: 46
                  maximum: 59.999
                  minimum: 0
                  type: number
                long_degrees:
                  description: Degrees of longitude.
                  example: 122
                  maximum: 180
                  minimum: 0
                  type: number
                long_direction:
                  description: Longitude direction.
                  enum:
                    - E
                    - W
                  example: W
                long_minutes:
                  default: 0
                  description: Minutes of longitude.
                  example: 23
                  maximum: 59
                  minimum: 0
                  type: number
                long_seconds:
                  default: 0
                  description: Seconds of longitude.
                  example: 35
                  maximum: 59.999
                  minimum: 0
                  type: number
                precision_horz:
                  default: 0
                  description: Horizontal precision of location.
                  example: 0
                  maximum: 90000000
                  minimum: 0
                  type: number
                precision_vert:
                  default: 0
                  description: Vertical precision of location.
                  example: 0
                  maximum: 90000000
                  minimum: 0
                  type: number
                size:
                  default: 0
                  description: Size of location in meters.
                  example: 100
                  maximum: 90000000
                  minimum: 0
                  type: number
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - LOC
              example: LOC
      required:
        - type
        - name
        - data
      title: LOC Record
    SRVRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: 'Priority, weight, port, and SRV target. See ''data'' for setting the individual component values.'
              example: 10 IN SRV 5 8806 example.com.
              readOnly: true
              type: string
            data:
              description: Components of a SRV record.
              properties:
                name:
                  description: A valid hostname.
                  example: example.com
                  format: hostname
                  type: string
                port:
                  description: The port of the service.
                  example: 8806
                  maximum: 65535
                  minimum: 0
                  type: number
                priority:
                  $ref: '#/components/schemas/priority'
                proto:
                  description: A valid protocol.
                  example: _tcp
                  type: string
                service:
                  description: 'A service type, prefixed with an underscore.'
                  example: _sip
                  type: string
                target:
                  description: A valid hostname.
                  example: example.com
                  format: hostname
                  type: string
                weight:
                  description: The record weight.
                  example: 5
                  maximum: 65535
                  minimum: 0
                  type: number
              type: object
            name:
              description: 'Service, protocol, and SRV name content. See ''data'' for setting the individual component values.'
              example: _sip._tcp.example.com
              maxLength: 255
              readOnly: true
              type: string
            type:
              description: Record type.
              enum:
                - SRV
              example: SRV
      required:
        - type
        - data
      title: SRV Record
    CERTRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted CERT content. See 'data' to set CERT properties.
              readOnly: true
              type: string
            data:
              description: Components of a CERT record.
              properties:
                algorithm:
                  description: Algorithm.
                  example: 8
                  maximum: 255
                  minimum: 0
                  type: number
                certificate:
                  description: Certificate.
                  type: string
                key_tag:
                  description: Key Tag.
                  example: 1
                  maximum: 65535
                  minimum: 0
                  type: number
                type:
                  description: Type.
                  example: 9
                  maximum: 65535
                  minimum: 0
                  type: number
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - CERT
              example: CERT
      required:
        - type
        - name
        - data
      title: CERT Record
    DNSKEYRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted DNSKEY content. See 'data' to set DNSKEY properties.
              readOnly: true
              type: string
            data:
              description: Components of a DNSKEY record.
              properties:
                algorithm:
                  description: Algorithm.
                  example: 5
                  maximum: 255
                  minimum: 0
                  type: number
                flags:
                  description: Flags.
                  example: 1
                  maximum: 65535
                  minimum: 0
                  type: number
                protocol:
                  description: Protocol.
                  example: 3
                  maximum: 255
                  minimum: 0
                  type: number
                public_key:
                  description: Public Key.
                  type: string
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - DNSKEY
              example: DNSKEY
      required:
        - type
        - name
        - data
      title: DNSKEY Record
    DSRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted DS content. See 'data' to set DS properties.
              readOnly: true
              type: string
            data:
              description: Components of a DS record.
              properties:
                algorithm:
                  description: Algorithm.
                  example: 3
                  maximum: 255
                  minimum: 0
                  type: number
                digest:
                  description: Digest.
                  type: string
                digest_type:
                  description: Digest Type.
                  example: 1
                  maximum: 255
                  minimum: 0
                  type: number
                key_tag:
                  description: Key Tag.
                  example: 1
                  maximum: 65535
                  minimum: 0
                  type: number
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - DS
              example: DS
      required:
        - type
        - name
        - data
      title: DS Record
    NAPTRRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted NAPTR content. See 'data' to set NAPTR properties.
              readOnly: true
              type: string
            data:
              description: Components of a NAPTR record.
              properties:
                flags:
                  description: Flags.
                  type: string
                order:
                  description: Order.
                  example: 100
                  maximum: 65535
                  minimum: 0
                  type: number
                preference:
                  description: Preference.
                  example: 10
                  maximum: 65535
                  minimum: 0
                  type: number
                regex:
                  description: Regex.
                  type: string
                replacement:
                  description: Replacement.
                  type: string
                service:
                  description: Service.
                  type: string
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - NAPTR
              example: NAPTR
      required:
        - type
        - name
        - data
      title: NAPTR Record
    SMIMEARecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted SMIMEA content. See 'data' to set SMIMEA properties.
              readOnly: true
              type: string
            data:
              description: Components of a SMIMEA record.
              properties:
                certificate:
                  description: Certificate.
                  type: string
                matching_type:
                  description: Matching Type.
                  example: 0
                  maximum: 255
                  minimum: 0
                  type: number
                selector:
                  description: Selector.
                  example: 0
                  maximum: 255
                  minimum: 0
                  type: number
                usage:
                  description: Usage.
                  example: 3
                  maximum: 255
                  minimum: 0
                  type: number
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - SMIMEA
              example: SMIMEA
      required:
        - type
        - name
        - data
      title: SMIMEA Record
    SSHFPRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted SSHFP content. See 'data' to set SSHFP properties.
              readOnly: true
              type: string
            data:
              description: Components of a SSHFP record.
              properties:
                algorithm:
                  description: algorithm.
                  example: 2
                  maximum: 255
                  minimum: 0
                  type: number
                fingerprint:
                  description: fingerprint.
                  type: string
                type:
                  description: type.
                  example: 1
                  maximum: 255
                  minimum: 0
                  type: number
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - SSHFP
              example: SSHFP
      required:
        - type
        - name
        - data
      title: SSHFP Record
    SVCBRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted SVCB content. See 'data' to set SVCB properties.
              readOnly: true
              type: string
            data:
              description: Components of a SVCB record.
              properties:
                priority:
                  description: priority.
                  example: 1
                  maximum: 65535
                  minimum: 0
                  type: number
                target:
                  description: target.
                  example: .
                  type: string
                value:
                  description: value.
                  example: 'alpn="h3,h2" ipv4hint="127.0.0.1" ipv6hint="::1"'
                  type: string
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - SVCB
              example: SVCB
      required:
        - type
        - name
        - data
      title: SVCB Record
    TLSARecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted TLSA content. See 'data' to set TLSA properties.
              readOnly: true
              type: string
            data:
              description: Components of a TLSA record.
              properties:
                certificate:
                  description: certificate.
                  type: string
                matching_type:
                  description: Matching Type.
                  example: 1
                  maximum: 255
                  minimum: 0
                  type: number
                selector:
                  description: Selector.
                  example: 0
                  maximum: 255
                  minimum: 0
                  type: number
                usage:
                  description: Usage.
                  example: 0
                  maximum: 255
                  minimum: 0
                  type: number
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            type:
              description: Record type.
              enum:
                - TLSA
              example: TLSA
      required:
        - type
        - name
        - data
      title: TLSA Record
    URIRecord:
      allOf:
        - $ref: '#/components/schemas/dns-record_components-schemas-base'
        - properties:
            content:
              description: Formatted URI content. See 'data' to set URI properties.
              readOnly: true
              type: string
            data:
              description: Components of a URI record.
              properties:
                content:
                  description: The record content.
                  example: 'http://example.com/example.html'
                  type: string
                weight:
                  description: The record weight.
                  example: 20
                  maximum: 65535
                  minimum: 0
                  type: number
              type: object
            name:
              $ref: '#/components/schemas/dns-record_components-schemas-name'
            priority:
              $ref: '#/components/schemas/priority'
            type:
              description: Record type.
              enum:
                - URI
              example: URI
      required:
        - type
        - name
        - data
        - priority
      title: URI Record
    dns-record_components-schemas-base:
      properties:
        content:
          $ref: '#/components/schemas/content'
        created_on:
          description: When the record was created.
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        data:
          description: Metadata about the record.
          example: {}
          type: object
        id:
          $ref: '#/components/schemas/dns-record_components-schemas-identifier'
        locked:
          description: Whether this record can be modified/deleted (true means it's managed by Cloudflare).
          example: false
          readOnly: true
          type: boolean
        meta:
          description: Extra Cloudflare-specific information about the record.
          properties:
            auto_added:
              description: Will exist if Cloudflare automatically added this DNS record during initial setup.
              example: true
              type: boolean
            source:
              description: Where the record originated from.
              example: primary
              type: string
          type: object
        modified_on:
          description: When the record was last modified.
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        name:
          $ref: '#/components/schemas/dns-record_components-schemas-name'
        proxiable:
          description: Whether the record can be proxied by Cloudflare or not.
          example: true
          readOnly: true
          type: boolean
        proxied:
          $ref: '#/components/schemas/proxied'
        ttl:
          $ref: '#/components/schemas/ttl'
        type:
          $ref: '#/components/schemas/dns-record_components-schemas-type'
        zone_id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        zone_name:
          description: The domain of the record.
          example: example.com
          format: hostname
          readOnly: true
          type: string
    dns-record_components-schemas-name:
      description: DNS record name (or @ for the zone apex).
      example: example.com
      maxLength: 255
      type: string
    priority:
      description: 'Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.'
      example: 10
      maximum: 65535
      minimum: 0
      type: number
    content:
      description: DNS record content.
      example: 127.0.0.1
      type: string
    dns-record_components-schemas-identifier:
      description: DNS record identifier tag.
      example: 372e67954025e0ba6aaa6d586b9e0b59
      maxLength: 32
      readOnly: true
      type: string
    proxied:
      description: Whether the record is receiving the performance and security benefits of Cloudflare.
      example: false
      type: boolean
    ttl:
      anyOf:
        - example: 3600
          maximum: 86400
          minimum: 60
          type: number
        - enum:
            - 1
          type: number
      description: 'Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for ''automatic''.'
      example: 3600
      type: number
    dns-record_components-schemas-type:
      description: DNS record type.
      enum:
        - A
        - AAAA
        - CNAME
        - HTTPS
        - TXT
        - SRV
        - LOC
        - MX
        - NS
        - CERT
        - DNSKEY
        - DS
        - NAPTR
        - SMIMEA
        - SSHFP
        - SVCB
        - TLSA
        - URI
      example: A
      readOnly: true
      type: string
    dns_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    dns_response_import_scan:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                recs_added:
                  description: Number of DNS records added.
                  example: 5
                  type: number
                total_records_parsed:
                  description: Total number of DNS records parsed.
                  example: 5
                  type: number
              type: object
            timing:
              properties:
                end_time:
                  description: When the file parsing ended.
                  example: '2014-03-01T12:20:01Z'
                  format: date-time
                  type: string
                process_time:
                  description: Processing time of the file in seconds.
                  example: 1
                  type: number
                start_time:
                  description: When the file parsing started.
                  example: '2014-03-01T12:20:00Z'
                  format: date-time
                  type: string
              type: object
          type: object
    delete_dnssec_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              example: ''
              type: string
    dnssec_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    schemas-account_identifier:
      example: 01a7362d577a6c3019a474fd6f485823
    acl_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/acl'
              type: array
    acl:
      properties:
        id:
          $ref: '#/components/schemas/acl_components-schemas-identifier'
        ip_range:
          $ref: '#/components/schemas/ip_range'
        name:
          $ref: '#/components/schemas/acl_components-schemas-name'
      required:
        - id
        - name
        - ip_range
      type: object
    acl_components-schemas-identifier:
      example: 23ff594956f20c2a721606e94745a8aa
    ip_range:
      description: Allowed IPv4/IPv6 address range of primary or secondary nameservers. This will be applied for the entire account. The IP range is used to allow additional NOTIFY IPs for secondary zones and IPs Cloudflare allows AXFR/IXFR requests from for primary zones. CIDRs are limited to a maximum of /24 for IPv4 and /64 for IPv6 respectively.
      example: 192.0.2.53/28
      type: string
    acl_components-schemas-name:
      description: The name of the acl.
      example: my-acl-1
      type: string
    acl_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/acl'
    acl_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/acl_components-schemas-identifier'
              type: object
    peer_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/peer'
              type: array
    peer:
      properties:
        id:
          $ref: '#/components/schemas/peer_components-schemas-identifier'
        ip:
          $ref: '#/components/schemas/ip'
        ixfr_enable:
          $ref: '#/components/schemas/ixfr_enable'
        name:
          $ref: '#/components/schemas/peer_components-schemas-name'
        port:
          $ref: '#/components/schemas/port'
        tsig_id:
          $ref: '#/components/schemas/tsig_id'
      required:
        - id
        - name
      type: object
    peer_components-schemas-identifier:
      example: 23ff594956f20c2a721606e94745a8aa
    ip:
      description: 'IPv4/IPv6 address of primary or secondary nameserver, depending on what zone this peer is linked to. For primary zones this IP defines the IP of the secondary nameserver Cloudflare will NOTIFY upon zone changes. For secondary zones this IP defines the IP of the primary nameserver Cloudflare will send AXFR/IXFR requests to.'
      example: 192.0.2.53
      type: string
    ixfr_enable:
      description: 'Enable IXFR transfer protocol, default is AXFR. Only applicable to secondary zones.'
      example: false
      type: boolean
    peer_components-schemas-name:
      description: The name of the peer.
      example: my-peer-1
      type: string
    port:
      description: 'DNS port of primary or secondary nameserver, depending on what zone this peer is linked to.'
      example: 53
      type: number
    tsig_id:
      description: TSIG authentication will be used for zone transfer if configured.
      example: 69cd1e104af3e6ed3cb344f263fd0d5a
      type: string
    peer_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/peer'
    peer_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/peer_components-schemas-identifier'
              type: object
    dns-secondary-primary-zone_components-schemas-identifier:
      example: 269d8f4853475ca241c4e730be286b20
    schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
              type: object
    single_response_outgoing:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                checked_time:
                  $ref: '#/components/schemas/time'
                created_time:
                  $ref: '#/components/schemas/time'
                id:
                  $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
                last_transferred_time:
                  $ref: '#/components/schemas/time'
                name:
                  $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-name'
                peers:
                  $ref: '#/components/schemas/peers'
                soa_serial:
                  $ref: '#/components/schemas/soa_serial'
              type: object
    time:
      description: The time for a specific event.
      example: '2019-10-24T17:09:42.883908+01:00'
      type: string
    dns-secondary-primary-zone_components-schemas-name:
      description: Zone name.
      example: www.example.com.
      type: string
    peers:
      description: A list of peer tags.
      example:
        - 23ff594956f20c2a721606e94745a8aa
        - 00920f38ce07c2e2f4df50b1f61d4194
      items: {}
      type: array
    soa_serial:
      description: The serial number of the SOA for the given zone.
      example: 2019102400
      type: number
    single_request_outgoing:
      properties:
        id:
          $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-name'
        peers:
          $ref: '#/components/schemas/peers'
      required:
        - id
        - name
        - peers
    disable_transfer_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/disable_transfer_result'
    disable_transfer_result:
      description: The zone transfer status of a primary zone
      example: Disabled
      type: string
    enable_transfer_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/enable_transfer_result'
    enable_transfer_result:
      description: The zone transfer status of a primary zone
      example: Enabled
      type: string
    schemas-force_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/schemas-force_result'
    schemas-force_result:
      description: 'When force_notify query parameter is set to true, the response is a simple string'
      example: OK
      type: string
    dns-secondary-secondary-zone_components-schemas-identifier:
      example: 269d8f4853475ca241c4e730be286b20
    force_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/force_result'
    force_result:
      description: 'When force_axfr query parameter is set to true, the response is a simple string'
      example: OK
      type: string
    id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-identifier'
              type: object
    single_response_incoming:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                auto_refresh_seconds:
                  $ref: '#/components/schemas/auto_refresh_seconds'
                checked_time:
                  $ref: '#/components/schemas/time'
                created_time:
                  $ref: '#/components/schemas/time'
                id:
                  $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-identifier'
                modified_time:
                  $ref: '#/components/schemas/time'
                name:
                  $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-name'
                peers:
                  $ref: '#/components/schemas/peers'
                soa_serial:
                  $ref: '#/components/schemas/soa_serial'
              type: object
    auto_refresh_seconds:
      description: |-
        How often should a secondary zone auto refresh regardless of DNS NOTIFY.
        Not applicable for primary zones.
      example: 86400
      type: number
    dns-secondary-secondary-zone_components-schemas-name:
      description: Zone name.
      example: www.example.com.
      type: string
    dns-secondary-secondary-zone:
      properties:
        auto_refresh_seconds:
          $ref: '#/components/schemas/auto_refresh_seconds'
        id:
          $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-name'
        peers:
          $ref: '#/components/schemas/peers'
      required:
        - id
        - name
        - peers
        - auto_refresh_seconds
      type: object
    tsig_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/tsig'
              type: array
    tsig:
      properties:
        algo:
          $ref: '#/components/schemas/algo'
        id:
          $ref: '#/components/schemas/tsig_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/tsig_components-schemas-name'
        secret:
          $ref: '#/components/schemas/secret'
      required:
        - id
        - name
        - secret
        - algo
      type: object
    algo:
      description: TSIG algorithm.
      example: hmac-sha512.
      type: string
    tsig_components-schemas-identifier:
      example: 69cd1e104af3e6ed3cb344f263fd0d5a
    tsig_components-schemas-name:
      description: TSIG key name.
      example: tsig.customer.cf.
      type: string
    secret:
      description: TSIG secret.
      example: caf79a7804b04337c9c66ccd7bef9190a1e1679b5dd03d8aa10f7ad45e1a9dab92b417896c15d4d007c7c14194538d2a5d0feffdecc5a7f0e1c570cfa700837c
      type: string
    components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/tsig'
    components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/tsig_components-schemas-identifier'
              type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    zones_dns_analytics_report:
      id: cloudflare.dns.zones_dns_analytics_report
      name: zones_dns_analytics_report
      title: Zones Dns Analytics Report
      methods:
        analytics_table:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1dns_analytics~1report/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _analytics_table:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1dns_analytics~1report/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        analytics_by_time:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1dns_analytics~1report~1bytime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _analytics_by_time:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1dns_analytics~1report~1bytime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    accounts_dns_firewall:
      id: cloudflare.dns.accounts_dns_firewall
      name: accounts_dns_firewall
      title: Accounts Dns Firewall
      methods:
        firewall_list_dns_firewall_clusters:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _firewall_list_dns_firewall_clusters:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall_create_dns_firewall_cluster:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall_delete_dns_firewall_cluster:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall_dns_firewall_cluster_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _firewall_dns_firewall_cluster_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall_update_dns_firewall_cluster:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_dns_firewall/methods/firewall_list_dns_firewall_clusters'
          - $ref: '#/components/x-stackQL-resources/accounts_dns_firewall/methods/firewall_dns_firewall_cluster_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_dns_firewall/methods/firewall_create_dns_firewall_cluster'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_dns_firewall/methods/firewall_delete_dns_firewall_cluster'
    accounts_virtual_dns:
      id: cloudflare.dns.accounts_virtual_dns
      name: accounts_virtual_dns
      title: Accounts Virtual Dns
      methods:
        firewall___legacy__list_dns_firewall_clusters:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _firewall___legacy__list_dns_firewall_clusters:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall___legacy__create_dns_firewall_cluster:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall___legacy__delete_dns_firewall_cluster:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall___legacy__dns_firewall_cluster_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _firewall___legacy__dns_firewall_cluster_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall___legacy__update_dns_firewall_cluster:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_virtual_dns/methods/firewall___legacy__list_dns_firewall_clusters'
          - $ref: '#/components/x-stackQL-resources/accounts_virtual_dns/methods/firewall___legacy__dns_firewall_cluster_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_virtual_dns/methods/firewall___legacy__create_dns_firewall_cluster'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_virtual_dns/methods/firewall___legacy__delete_dns_firewall_cluster'
    accounts_dns_firewall_dns_analytics_report:
      id: cloudflare.dns.accounts_dns_firewall_dns_analytics_report
      name: accounts_dns_firewall_dns_analytics_report
      title: Accounts Dns Firewall Dns Analytics Report
      methods:
        firewall_analytics_table:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall~1{identifier}~1dns_analytics~1report/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _firewall_analytics_table:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall~1{identifier}~1dns_analytics~1report/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall_analytics_by_time:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall~1{identifier}~1dns_analytics~1report~1bytime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _firewall_analytics_by_time:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1dns_firewall~1{identifier}~1dns_analytics~1report~1bytime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    accounts_virtual_dns_dns_analytics_report:
      id: cloudflare.dns.accounts_virtual_dns_dns_analytics_report
      name: accounts_virtual_dns_dns_analytics_report
      title: Accounts Virtual Dns Dns Analytics Report
      methods:
        firewall_analytics___legacy__table:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns~1{identifier}~1dns_analytics~1report/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _firewall_analytics___legacy__table:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns~1{identifier}~1dns_analytics~1report/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        firewall_analytics___legacy__by_time:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns~1{identifier}~1dns_analytics~1report~1bytime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _firewall_analytics___legacy__by_time:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1virtual_dns~1{identifier}~1dns_analytics~1report~1bytime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_dns_records:
      id: cloudflare.dns.zones_dns_records
      name: zones_dns_records
      title: Zones Dns Records
      methods:
        records_for_a_zone_list_dns_records:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _records_for_a_zone_list_dns_records:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        records_for_a_zone_create_dns_record:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        records_for_a_zone_delete_dns_record:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        records_for_a_zone_dns_record_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _records_for_a_zone_dns_record_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        records_for_a_zone_patch_dns_record:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        records_for_a_zone_update_dns_record:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        records_for_a_zone_export_dns_records:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1export/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _records_for_a_zone_export_dns_records:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1export/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        records_for_a_zone_import_dns_records:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        records_for_a_zone_scan_dns_records:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dns_records~1scan/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_dns_records/methods/records_for_a_zone_list_dns_records'
          - $ref: '#/components/x-stackQL-resources/zones_dns_records/methods/records_for_a_zone_dns_record_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_dns_records/methods/records_for_a_zone_create_dns_record'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_dns_records/methods/records_for_a_zone_delete_dns_record'
    zones_dnssec:
      id: cloudflare.dns.zones_dnssec
      name: zones_dnssec
      title: Zones Dnssec
      methods:
        dnssec_delete_dnssec_records:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dnssec/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dnssec_dnssec_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dnssec/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _dnssec_dnssec_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dnssec/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dnssec_edit_dnssec_status:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1dnssec/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_dnssec/methods/dnssec_dnssec_details'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_dnssec/methods/dnssec_delete_dnssec_records'
    accounts_secondary_dns_acls:
      id: cloudflare.dns.accounts_secondary_dns_acls
      name: accounts_secondary_dns_acls
      title: Accounts Secondary Dns Acls
      methods:
        secondary_dns___acl__list_ac_ls:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1acls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _secondary_dns___acl__list_ac_ls:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1acls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___acl__create_acl:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1acls/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___acl__delete_acl:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1acls~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___acl__acl_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1acls~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _secondary_dns___acl__acl_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1acls~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___acl__update_acl:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1acls~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_acls/methods/secondary_dns___acl__list_ac_ls'
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_acls/methods/secondary_dns___acl__acl_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_acls/methods/secondary_dns___acl__create_acl'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_acls/methods/secondary_dns___acl__delete_acl'
    accounts_secondary_dns_peers:
      id: cloudflare.dns.accounts_secondary_dns_peers
      name: accounts_secondary_dns_peers
      title: Accounts Secondary Dns Peers
      methods:
        secondary_dns___peer__list_peers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1peers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _secondary_dns___peer__list_peers:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1peers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___peer__create_peer:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1peers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___peer__delete_peer:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1peers~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___peer__peer_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1peers~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _secondary_dns___peer__peer_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1peers~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___peer__update_peer:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1peers~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_peers/methods/secondary_dns___peer__list_peers'
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_peers/methods/secondary_dns___peer__peer_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_peers/methods/secondary_dns___peer__create_peer'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_peers/methods/secondary_dns___peer__delete_peer'
    zones_secondary_dns_outgoing:
      id: cloudflare.dns.zones_secondary_dns_outgoing
      name: zones_secondary_dns_outgoing
      title: Zones Secondary Dns Outgoing
      methods:
        secondary_dns___primary_zone__delete_primary_zone_configuration:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___primary_zone__primary_zone_configuration_details:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _secondary_dns___primary_zone__primary_zone_configuration_details:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___primary_zone__create_primary_zone_configuration:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___primary_zone__update_primary_zone_configuration:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___primary_zone__disable_outgoing_zone_transfers:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing~1disable/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___primary_zone__enable_outgoing_zone_transfers:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing~1enable/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___primary_zone__force_dns_notify:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing~1force_notify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_secondary_dns_outgoing/methods/secondary_dns___primary_zone__primary_zone_configuration_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_secondary_dns_outgoing/methods/secondary_dns___primary_zone__create_primary_zone_configuration'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_secondary_dns_outgoing/methods/secondary_dns___primary_zone__delete_primary_zone_configuration'
    zones_secondary_dns_outgoing_status:
      id: cloudflare.dns.zones_secondary_dns_outgoing_status
      name: zones_secondary_dns_outgoing_status
      title: Zones Secondary Dns Outgoing Status
      methods:
        secondary_dns___primary_zone__get_outgoing_zone_transfer_status:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing~1status/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _secondary_dns___primary_zone__get_outgoing_zone_transfer_status:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1outgoing~1status/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_secondary_dns_outgoing_status/methods/secondary_dns___primary_zone__get_outgoing_zone_transfer_status'
        insert: []
        update: []
        delete: []
    zones_secondary_dns_force_axfr:
      id: cloudflare.dns.zones_secondary_dns_force_axfr
      name: zones_secondary_dns_force_axfr
      title: Zones Secondary Dns Force Axfr
      methods:
        secondary_dns___secondary_zone__force_axfr:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1force_axfr/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    zones_secondary_dns_incoming:
      id: cloudflare.dns.zones_secondary_dns_incoming
      name: zones_secondary_dns_incoming
      title: Zones Secondary Dns Incoming
      methods:
        secondary_dns___secondary_zone__delete_secondary_zone_configuration:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1incoming/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___secondary_zone__secondary_zone_configuration_details:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1incoming/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _secondary_dns___secondary_zone__secondary_zone_configuration_details:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1incoming/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___secondary_zone__create_secondary_zone_configuration:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1incoming/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___secondary_zone__update_secondary_zone_configuration:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1secondary_dns~1incoming/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_secondary_dns_incoming/methods/secondary_dns___secondary_zone__secondary_zone_configuration_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones_secondary_dns_incoming/methods/secondary_dns___secondary_zone__create_secondary_zone_configuration'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones_secondary_dns_incoming/methods/secondary_dns___secondary_zone__delete_secondary_zone_configuration'
    accounts_secondary_dns_tsigs:
      id: cloudflare.dns.accounts_secondary_dns_tsigs
      name: accounts_secondary_dns_tsigs
      title: Accounts Secondary Dns Tsigs
      methods:
        secondary_dns___tsig__list_tsi_gs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1tsigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _secondary_dns___tsig__list_tsi_gs:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1tsigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___tsig__create_tsig:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1tsigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___tsig__delete_tsig:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1tsigs~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___tsig__tsig_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1tsigs~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _secondary_dns___tsig__tsig_details:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1tsigs~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        secondary_dns___tsig__update_tsig:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1secondary_dns~1tsigs~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_tsigs/methods/secondary_dns___tsig__list_tsi_gs'
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_tsigs/methods/secondary_dns___tsig__tsig_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_tsigs/methods/secondary_dns___tsig__create_tsig'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_secondary_dns_tsigs/methods/secondary_dns___tsig__delete_tsig'
paths:
  '/zones/{identifier}/dns_analytics/report':
    get:
      description: Retrieves a list of summarised aggregate metrics over a given time period.
      operationId: dns-analytics-table
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/result'
                    type: object
          description: Table response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/result'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Table response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Table
      tags:
        - DNS Analytics
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
  '/zones/{identifier}/dns_analytics/report/bytime':
    get:
      description: Retrieves a list of aggregate metrics grouped by time interval.
      operationId: dns-analytics-by-time
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/result'
                    type: object
          description: By Time response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/result'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: By Time response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: By Time
      tags:
        - DNS Analytics
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
  '/accounts/{account_identifier}/dns_firewall':
    get:
      description: List configured DNS Firewall clusters for an account.
      operationId: dns-firewall-list-dns-firewall-clusters
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_firewall_response_collection'
          description: List DNS Firewall Clusters response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_firewall_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List DNS Firewall Clusters response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List DNS Firewall Clusters
      tags:
        - DNS Firewall
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Create a configured DNS Firewall Cluster.
      operationId: dns-firewall-create-dns-firewall-cluster
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deprecate_any_requests:
                  $ref: '#/components/schemas/deprecate_any_requests'
                ecs_fallback:
                  $ref: '#/components/schemas/ecs_fallback'
                maximum_cache_ttl:
                  $ref: '#/components/schemas/maximum_cache_ttl'
                minimum_cache_ttl:
                  $ref: '#/components/schemas/minimum_cache_ttl'
                name:
                  $ref: '#/components/schemas/dns-firewall_components-schemas-name'
                negative_cache_ttl:
                  $ref: '#/components/schemas/negative_cache_ttl'
                origin_ips:
                  $ref: '#/components/schemas/origin_ips'
                ratelimit:
                  $ref: '#/components/schemas/ratelimit'
              required:
                - name
                - origin_ips
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_firewall_single_response'
          description: Create DNS Firewall Cluster response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_firewall_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create DNS Firewall Cluster response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create DNS Firewall Cluster
      tags:
        - DNS Firewall
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/dns_firewall/{identifier}':
    delete:
      description: Delete a configured DNS Firewall Cluster.
      operationId: dns-firewall-delete-dns-firewall-cluster
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/common_components-schemas-identifier'
          description: Delete DNS Firewall Cluster response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/common_components-schemas-identifier'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete DNS Firewall Cluster response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete DNS Firewall Cluster
      tags:
        - DNS Firewall
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Show a single configured DNS Firewall cluster for an account.
      operationId: dns-firewall-dns-firewall-cluster-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_firewall_single_response'
          description: DNS Firewall Cluster Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_firewall_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: DNS Firewall Cluster Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: DNS Firewall Cluster Details
      tags:
        - DNS Firewall
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: Modify a DNS Firewall Cluster configuration.
      operationId: dns-firewall-update-dns-firewall-cluster
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-dns-firewall'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_firewall_single_response'
          description: Update DNS Firewall Cluster response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_firewall_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update DNS Firewall Cluster response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update DNS Firewall Cluster
      tags:
        - DNS Firewall
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/virtual_dns':
    get:
      description: List configured DNS Firewall clusters for an account.
      operationId: dns-firewall-(-legacy)-list-dns-firewall-clusters
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtual_dns_response_collection'
          description: List DNS Firewall Clusters response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/virtual_dns_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List DNS Firewall Clusters response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List DNS Firewall Clusters
      tags:
        - DNS Firewall (Legacy)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Create a configured DNS Firewall Cluster.
      operationId: dns-firewall-(-legacy)-create-dns-firewall-cluster
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deprecate_any_requests:
                  $ref: '#/components/schemas/deprecate_any_requests'
                ecs_fallback:
                  $ref: '#/components/schemas/ecs_fallback'
                maximum_cache_ttl:
                  $ref: '#/components/schemas/maximum_cache_ttl'
                minimum_cache_ttl:
                  $ref: '#/components/schemas/minimum_cache_ttl'
                name:
                  $ref: '#/components/schemas/virtual-dns_components-schemas-name'
                negative_cache_ttl:
                  $ref: '#/components/schemas/schemas-negative_cache_ttl'
                origin_ips:
                  $ref: '#/components/schemas/origin_ips'
                ratelimit:
                  $ref: '#/components/schemas/schemas-ratelimit'
              required:
                - name
                - origin_ips
                - virtual_dns_ips
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtual_dns_single_response'
          description: Create DNS Firewall Cluster response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/virtual_dns_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create DNS Firewall Cluster response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create DNS Firewall Cluster
      tags:
        - DNS Firewall (Legacy)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/virtual_dns/{identifier}':
    delete:
      description: Delete a configured DNS Firewall Cluster.
      operationId: dns-firewall-(-legacy)-delete-dns-firewall-cluster
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/common_components-schemas-identifier'
          description: Delete DNS Firewall Cluster response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/common_components-schemas-identifier'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete DNS Firewall Cluster response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete DNS Firewall Cluster
      tags:
        - DNS Firewall (Legacy)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Show a single configured DNS Firewall cluster for an account.
      operationId: dns-firewall-(-legacy)-dns-firewall-cluster-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtual_dns_single_response'
          description: DNS Firewall Cluster Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/virtual_dns_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: DNS Firewall Cluster Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: DNS Firewall Cluster Details
      tags:
        - DNS Firewall (Legacy)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Modify a DNS Firewall Cluster configuration.
      operationId: dns-firewall-(-legacy)-update-dns-firewall-cluster
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-virtual-dns'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtual_dns_single_response'
          description: Update DNS Firewall Cluster response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/virtual_dns_single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update DNS Firewall Cluster response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update DNS Firewall Cluster
      tags:
        - DNS Firewall (Legacy)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/dns_firewall/{identifier}/dns_analytics/report':
    get:
      description: Retrieves a list of summarised aggregate metrics over a given time period.
      operationId: dns-firewall-analytics-table
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/result'
                    type: object
          description: Table response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/result'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Table response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Table
      tags:
        - DNS Firewall Analytics
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
  '/accounts/{account_identifier}/dns_firewall/{identifier}/dns_analytics/report/bytime':
    get:
      description: Retrieves a list of aggregate metrics grouped by time interval.
      operationId: dns-firewall-analytics-by-time
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/result'
                    type: object
          description: By Time response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/result'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: By Time response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: By Time
      tags:
        - DNS Firewall Analytics
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
  '/accounts/{account_identifier}/virtual_dns/{identifier}/dns_analytics/report':
    get:
      description: Retrieves a list of summarised aggregate metrics over a given time period.
      operationId: dns-firewall-analytics-(-legacy)-table
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/result'
                    type: object
          description: Table response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/result'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Table response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Table
      tags:
        - DNS Firewall Analytics (Legacy)
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
  '/accounts/{account_identifier}/virtual_dns/{identifier}/dns_analytics/report/bytime':
    get:
      description: Retrieves a list of aggregate metrics grouped by time interval.
      operationId: dns-firewall-analytics-(-legacy)-by-time
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/result'
                    type: object
          description: By Time response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/result'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: By Time response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: By Time
      tags:
        - DNS Firewall Analytics (Legacy)
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
  '/zones/{zone_identifier}/dns_records':
    get:
      description: 'List, search, sort, and filter a zones'' DNS records.'
      operationId: dns-records-for-a-zone-list-dns-records
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_response_collection'
          description: List DNS Records response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List DNS Records response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List DNS Records
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Create a new DNS record for a zone. See the record object definitions for required attributes for each record type.
      operationId: dns-records-for-a-zone-create-dns-record
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  $ref: '#/components/schemas/content'
                name:
                  $ref: '#/components/schemas/dns-record_components-schemas-name'
                priority:
                  $ref: '#/components/schemas/priority'
                proxied:
                  $ref: '#/components/schemas/proxied'
                ttl:
                  $ref: '#/components/schemas/ttl'
                type:
                  $ref: '#/components/schemas/dns-record_components-schemas-type'
              required:
                - type
                - name
                - content
                - ttl
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_response_single'
          description: Create DNS Record response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create DNS Record response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create DNS Record
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/dns_records/export':
    get:
      description: 'You can export your [BIND config](https://en.wikipedia.org/wiki/Zone_file "Zone file") through this endpoint.'
      operationId: dns-records-for-a-zone-export-dns-records
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Export DNS Records response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - {}
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Export DNS Records response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Export DNS Records
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/dns_records/import':
    post:
      description: 'You can upload your [BIND config](https://en.wikipedia.org/wiki/Zone_file "Zone file") through this endpoint. It assumes that cURL is called from a location with bind_config.txt (valid BIND config) present.'
      operationId: dns-records-for-a-zone-import-dns-records
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: BIND config to upload.
                  example: '@bind_config.txt'
                  type: string
                proxied:
                  description: Whether or not proxiable records should receive the performance and security benefits of Cloudflare.
                  example: false
                  type: boolean
              required:
                - file
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_response_import_scan'
          description: Import DNS Records response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_response_import_scan'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Import DNS Records response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Import DNS Records
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/dns_records/scan':
    post:
      description: Scan for common DNS records on your domain and automatically add them to your zone. Useful if you haven't updated your nameservers yet.
      operationId: dns-records-for-a-zone-scan-dns-records
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_response_import_scan'
          description: Scan DNS Records response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_response_import_scan'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Scan DNS Records response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Scan DNS Records
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/dns_records/{identifier}':
    delete:
      operationId: dns-records-for-a-zone-delete-dns-record
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-record_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        $ref: '#/components/schemas/dns-record_components-schemas-identifier'
                    type: object
                type: object
          description: Delete DNS Record response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/dns-record_components-schemas-identifier'
                    type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete DNS Record response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete DNS Record
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      operationId: dns-records-for-a-zone-dns-record-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-record_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_response_single'
          description: DNS Record Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: DNS Record Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: DNS Record Details
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      operationId: dns-records-for-a-zone-patch-dns-record
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-record_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  $ref: '#/components/schemas/content'
                name:
                  $ref: '#/components/schemas/dns-record_components-schemas-name'
                proxied:
                  $ref: '#/components/schemas/proxied'
                ttl:
                  $ref: '#/components/schemas/ttl'
                type:
                  $ref: '#/components/schemas/dns-record_components-schemas-type'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_response_single'
          description: Patch DNS Record response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Patch DNS Record response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Patch DNS Record
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      operationId: dns-records-for-a-zone-update-dns-record
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-record_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  $ref: '#/components/schemas/content'
                name:
                  $ref: '#/components/schemas/dns-record_components-schemas-name'
                proxied:
                  $ref: '#/components/schemas/proxied'
                ttl:
                  $ref: '#/components/schemas/ttl'
                type:
                  $ref: '#/components/schemas/dns-record_components-schemas-type'
              required:
                - type
                - name
                - content
                - ttl
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns_response_single'
          description: Update DNS Record response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update DNS Record response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update DNS Record
      tags:
        - DNS Records for a Zone
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/dnssec':
    delete:
      description: Delete DNSSEC.
      operationId: dnssec-delete-dnssec-records
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delete_dnssec_response_single'
          description: Delete DNSSEC records response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/delete_dnssec_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete DNSSEC records response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete DNSSEC records
      tags:
        - DNSSEC
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Details about DNSSEC status and configuration.
      operationId: dnssec-dnssec-details
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnssec_response_single'
          description: DNSSEC Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dnssec_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: DNSSEC Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: DNSSEC Details
      tags:
        - DNSSEC
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Enable or disable DNSSEC.
      operationId: dnssec-edit-dnssec-status
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: 'Status of DNSSEC, based on user-desired state and presence of necessary records.'
                  enum:
                    - active
                    - disabled
                  example: active
              required:
                - status
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnssec_response_single'
          description: Edit DNSSEC Status response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dnssec_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit DNSSEC Status response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit DNSSEC Status
      tags:
        - DNSSEC
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/accounts/{account_identifier}/secondary_dns/acls':
    get:
      description: List ACLs.
      operationId: secondary-dns-(-acl)-list-ac-ls
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl_components-schemas-response_collection'
          description: List ACLs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/acl_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List ACLs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List ACLs
      tags:
        - Secondary DNS (ACL)
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Create ACL.
      operationId: secondary-dns-(-acl)-create-acl
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - ip_range
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl_components-schemas-single_response'
          description: Create ACL response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/acl_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create ACL response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create ACL
      tags:
        - Secondary DNS (ACL)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/secondary_dns/acls/{identifier}':
    delete:
      description: Delete ACL.
      operationId: secondary-dns-(-acl)-delete-acl
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/acl_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl_components-schemas-id_response'
          description: Delete ACL response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/acl_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete ACL response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete ACL
      tags:
        - Secondary DNS (ACL)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Get ACL.
      operationId: secondary-dns-(-acl)-acl-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/acl_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl_components-schemas-single_response'
          description: ACL Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/acl_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: ACL Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: ACL Details
      tags:
        - Secondary DNS (ACL)
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Modify ACL.
      operationId: secondary-dns-(-acl)-update-acl
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/acl_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acl'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl_components-schemas-single_response'
          description: Update ACL response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/acl_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update ACL response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update ACL
      tags:
        - Secondary DNS (ACL)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/secondary_dns/peers':
    get:
      description: List Peers.
      operationId: secondary-dns-(-peer)-list-peers
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_components-schemas-response_collection'
          description: List Peers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/peer_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Peers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Peers
      tags:
        - Secondary DNS (Peer)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Create Peer.
      operationId: secondary-dns-(-peer)-create-peer
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_components-schemas-single_response'
          description: Create Peer response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/peer_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Peer response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Peer
      tags:
        - Secondary DNS (Peer)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/secondary_dns/peers/{identifier}':
    delete:
      description: Delete Peer.
      operationId: secondary-dns-(-peer)-delete-peer
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/peer_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_components-schemas-id_response'
          description: Delete Peer response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/peer_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Peer response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Peer
      tags:
        - Secondary DNS (Peer)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Get Peer.
      operationId: secondary-dns-(-peer)-peer-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/peer_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_components-schemas-single_response'
          description: Peer Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/peer_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Peer Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Peer Details
      tags:
        - Secondary DNS (Peer)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Modify Peer.
      operationId: secondary-dns-(-peer)-update-peer
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/peer_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/peer'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_components-schemas-single_response'
          description: Update Peer response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/peer_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Peer response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Peer
      tags:
        - Secondary DNS (Peer)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{identifier}/secondary_dns/outgoing':
    delete:
      description: Delete primary zone configuration for outgoing zone transfers.
      operationId: secondary-dns-(-primary-zone)-delete-primary-zone-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-id_response'
          description: Delete Primary Zone Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Primary Zone Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Primary Zone Configuration
      tags:
        - Secondary DNS (Primary Zone)
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Get primary zone configuration for outgoing zone transfers.
      operationId: secondary-dns-(-primary-zone)-primary-zone-configuration-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response_outgoing'
          description: Primary Zone Configuration Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_response_outgoing'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Primary Zone Configuration Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Primary Zone Configuration Details
      tags:
        - Secondary DNS (Primary Zone)
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Create primary zone configuration for outgoing zone transfers.
      operationId: secondary-dns-(-primary-zone)-create-primary-zone-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/single_request_outgoing'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response_outgoing'
          description: Create Primary Zone Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_response_outgoing'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Primary Zone Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Primary Zone Configuration
      tags:
        - Secondary DNS (Primary Zone)
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Update primary zone configuration for outgoing zone transfers.
      operationId: secondary-dns-(-primary-zone)-update-primary-zone-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/single_request_outgoing'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response_outgoing'
          description: Update Primary Zone Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_response_outgoing'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Primary Zone Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Primary Zone Configuration
      tags:
        - Secondary DNS (Primary Zone)
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{identifier}/secondary_dns/outgoing/disable':
    post:
      description: Disable outgoing zone transfers for primary zone and clears IXFR backlog of primary zone.
      operationId: secondary-dns-(-primary-zone)-disable-outgoing-zone-transfers
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disable_transfer_response'
          description: Disable Outgoing Zone Transfers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/disable_transfer_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Disable Outgoing Zone Transfers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Disable Outgoing Zone Transfers
      tags:
        - Secondary DNS (Primary Zone)
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{identifier}/secondary_dns/outgoing/enable':
    post:
      description: Enable outgoing zone transfers for primary zone.
      operationId: secondary-dns-(-primary-zone)-enable-outgoing-zone-transfers
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enable_transfer_response'
          description: Enable Outgoing Zone Transfers response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/enable_transfer_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Enable Outgoing Zone Transfers response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Enable Outgoing Zone Transfers
      tags:
        - Secondary DNS (Primary Zone)
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{identifier}/secondary_dns/outgoing/force_notify':
    post:
      description: Notifies the secondary nameserver(s) and clears IXFR backlog of primary zone.
      operationId: secondary-dns-(-primary-zone)-force-dns-notify
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-force_response'
          description: Force DNS NOTIFY response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-force_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Force DNS NOTIFY response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Force DNS NOTIFY
      tags:
        - Secondary DNS (Primary Zone)
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{identifier}/secondary_dns/outgoing/status':
    get:
      description: Get primary zone transfer status.
      operationId: secondary-dns-(-primary-zone)-get-outgoing-zone-transfer-status
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-primary-zone_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enable_transfer_response'
          description: Get Outgoing Zone Transfer Status response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/enable_transfer_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Outgoing Zone Transfer Status response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Outgoing Zone Transfer Status
      tags:
        - Secondary DNS (Primary Zone)
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{identifier}/secondary_dns/force_axfr':
    post:
      description: Sends AXFR zone transfer request to primary nameserver(s).
      operationId: secondary-dns-(-secondary-zone)-force-axfr
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/force_response'
          description: Force AXFR response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/force_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Force AXFR response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Force AXFR
      tags:
        - Secondary DNS (Secondary Zone)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{identifier}/secondary_dns/incoming':
    delete:
      description: Delete secondary zone configuration for incoming zone transfers.
      operationId: secondary-dns-(-secondary-zone)-delete-secondary-zone-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/id_response'
          description: Delete Secondary Zone Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Secondary Zone Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Secondary Zone Configuration
      tags:
        - Secondary DNS (Secondary Zone)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Get secondary zone configuration for incoming zone transfers.
      operationId: secondary-dns-(-secondary-zone)-secondary-zone-configuration-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response_incoming'
          description: Secondary Zone Configuration Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_response_incoming'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Secondary Zone Configuration Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Secondary Zone Configuration Details
      tags:
        - Secondary DNS (Secondary Zone)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Create secondary zone configuration for incoming zone transfers.
      operationId: secondary-dns-(-secondary-zone)-create-secondary-zone-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns-secondary-secondary-zone'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response_incoming'
          description: Create Secondary Zone Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_response_incoming'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Secondary Zone Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Secondary Zone Configuration
      tags:
        - Secondary DNS (Secondary Zone)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Update secondary zone configuration for incoming zone transfers.
      operationId: secondary-dns-(-secondary-zone)-update-secondary-zone-configuration
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/dns-secondary-secondary-zone_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns-secondary-secondary-zone'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response_incoming'
          description: Update Secondary Zone Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/single_response_incoming'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Secondary Zone Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Secondary Zone Configuration
      tags:
        - Secondary DNS (Secondary Zone)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/secondary_dns/tsigs':
    get:
      description: List TSIGs.
      operationId: secondary-dns-(-tsig)-list-tsi-gs
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tsig_components-schemas-response_collection'
          description: List TSIGs response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tsig_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List TSIGs response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List TSIGs
      tags:
        - Secondary DNS (TSIG)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: Create TSIG.
      operationId: secondary-dns-(-tsig)-create-tsig
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - algo
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-single_response'
          description: Create TSIG response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create TSIG response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create TSIG
      tags:
        - Secondary DNS (TSIG)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/accounts/{account_identifier}/secondary_dns/tsigs/{identifier}':
    delete:
      description: Delete TSIG.
      operationId: secondary-dns-(-tsig)-delete-tsig
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/tsig_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-id_response'
          description: Delete TSIG response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete TSIG response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete TSIG
      tags:
        - Secondary DNS (TSIG)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    get:
      description: Get TSIG.
      operationId: secondary-dns-(-tsig)-tsig-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/tsig_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-single_response'
          description: TSIG Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: TSIG Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: TSIG Details
      tags:
        - Secondary DNS (TSIG)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:read'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: Modify TSIG.
      operationId: secondary-dns-(-tsig)-update-tsig
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/tsig_components-schemas-identifier'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tsig'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-single_response'
          description: Update TSIG response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update TSIG response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update TSIG
      tags:
        - Secondary DNS (TSIG)
      x-cfPermissionsRequired:
        enum:
          - '#dns_records:edit'
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
