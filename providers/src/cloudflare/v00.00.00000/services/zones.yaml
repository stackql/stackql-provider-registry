openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Filters
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - zones
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    filters_components-schemas-id:
      description: The unique identifier of the filter.
      example: 372e67954025e0ba6aaa6d586b9e0b61
      maxLength: 32
      minLength: 32
      readOnly: true
      type: string
    filter-delete-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                allOf:
                  - $ref: '#/components/schemas/filter'
                  - required:
                      - id
                    type: object
              type: array
          type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    filter:
      additionalProperties: false
      properties:
        description:
          $ref: '#/components/schemas/filters_components-schemas-description'
        expression:
          $ref: '#/components/schemas/expression'
        id:
          $ref: '#/components/schemas/filters_components-schemas-id'
        paused:
          $ref: '#/components/schemas/filters_components-schemas-paused'
        ref:
          $ref: '#/components/schemas/schemas-ref'
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    filters_components-schemas-description:
      description: An informative summary of the filter.
      example: Restrict access from these browsers on this address range.
      maxLength: 500
      type: string
    expression:
      description: 'The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).'
      example: (http.request.uri.path ~ ".*wp-login.php" or http.request.uri.path ~ ".*xmlrpc.php") and ip.addr ne 172.16.22.155
      type: string
    filters_components-schemas-paused:
      description: 'When true, indicates that the filter is currently paused.'
      example: false
      type: boolean
    schemas-ref:
      description: A short reference tag. Allows you to select related filters.
      example: FIL-100
      maxLength: 50
      type: string
    schemas-filter-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                allOf:
                  - $ref: '#/components/schemas/filter'
                  - required:
                      - id
                      - expression
                      - paused
                    type: object
              type: array
          type: object
    filter-delete-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/filter'
                - required:
                    - id
                  type: object
          required:
            - result
          type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    schemas-filter-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              oneOf:
                - allOf:
                    - $ref: '#/components/schemas/filter'
                    - required:
                        - id
                        - expression
                        - paused
                      type: object
                - nullable: true
          required:
            - result
          type: object
    firewall-rules_components-schemas-id:
      description: The unique identifier of the firewall rule.
      example: 372e67954025e0ba6aaa6d586b9e0b60
      maxLength: 32
      readOnly: true
      type: string
    filter-rules-response-collection-delete:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                allOf:
                  - $ref: '#/components/schemas/filter-rule-response'
                  - required:
                      - id
                    type: object
              type: array
          required:
            - result
          type: object
    filter-rule-response:
      allOf:
        - $ref: '#/components/schemas/filter-rule-base'
        - properties:
            filter:
              oneOf:
                - $ref: '#/components/schemas/filter'
                - $ref: '#/components/schemas/deleted-filter'
    filter-rule-base:
      properties:
        action:
          $ref: '#/components/schemas/firewall-rules_components-schemas-action'
        description:
          $ref: '#/components/schemas/firewall-rules_components-schemas-description'
        id:
          $ref: '#/components/schemas/firewall-rules_components-schemas-id'
        paused:
          $ref: '#/components/schemas/firewall-rules_components-schemas-paused'
        priority:
          $ref: '#/components/schemas/firewall-rules_components-schemas-priority'
        products:
          $ref: '#/components/schemas/products'
        ref:
          $ref: '#/components/schemas/ref'
      type: object
    deleted-filter:
      additionalProperties: false
      properties:
        deleted:
          $ref: '#/components/schemas/deleted'
        id:
          $ref: '#/components/schemas/filters_components-schemas-id'
      required:
        - id
        - deleted
    firewall-rules_components-schemas-action:
      description: The action to apply to a matched request. The `log` action is only available on an Enterprise plan.
      enum:
        - block
        - challenge
        - js_challenge
        - managed_challenge
        - allow
        - log
        - bypass
      example: block
      type: string
    firewall-rules_components-schemas-description:
      description: An informative summary of the firewall rule.
      example: Blocks traffic identified during investigation for MIR-31
      maxLength: 500
      type: string
    firewall-rules_components-schemas-paused:
      description: 'When true, indicates that the firewall rule is currently paused.'
      example: false
      type: boolean
    firewall-rules_components-schemas-priority:
      description: 'The priority of the rule. Optional value used to define the processing order. A lower number indicates a higher priority. If not provided, rules with a defined priority will be processed before rules without a priority.'
      example: 50
      maximum: 2147483647
      minimum: 0
      type: number
    products:
      items:
        description: A list of products to bypass for a request when using the `bypass` action.
        enum:
          - zoneLockdown
          - uaBlock
          - bic
          - hot
          - securityLevel
          - rateLimit
          - waf
        example: waf
        type: string
      type: array
    ref:
      description: A short reference tag. Allows you to select related firewall rules.
      example: MIR-31
      maxLength: 50
      type: string
    deleted:
      description: 'When true, indicates that the firewall rule was deleted.'
      example: true
      type: boolean
    filter-rules-response-collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                allOf:
                  - $ref: '#/components/schemas/filter-rule-response'
                  - required:
                      - id
                      - filter
                      - action
                      - paused
                    type: object
              type: array
          required:
            - result
          type: object
    delete_filter_if_unused:
      description: 'When true, indicates that Cloudflare should also delete the associated filter if there are no other firewall rules referencing the filter.'
      type: boolean
    filter-rules-single-response-delete:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/filter-rule-response'
                - required:
                    - id
                  type: object
          required:
            - result
          type: object
    filter-rules-single-response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/filter-rule-response'
                - required:
                    - id
                    - filter
                    - action
                    - paused
                  type: object
          required:
            - result
          type: object
    healthchecks_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/healthchecks'
              type: array
    healthchecks:
      properties:
        address:
          $ref: '#/components/schemas/schemas-address'
        check_regions:
          $ref: '#/components/schemas/schemas-check_regions'
        consecutive_fails:
          $ref: '#/components/schemas/consecutive_fails'
        consecutive_successes:
          $ref: '#/components/schemas/consecutive_successes'
        created_on:
          $ref: '#/components/schemas/timestamp'
        description:
          $ref: '#/components/schemas/healthchecks_components-schemas-description'
        failure_reason:
          $ref: '#/components/schemas/failure_reason'
        http_config:
          $ref: '#/components/schemas/http_config'
        id:
          $ref: '#/components/schemas/healthchecks_components-schemas-identifier'
        interval:
          $ref: '#/components/schemas/components-schemas-interval'
        modified_on:
          $ref: '#/components/schemas/timestamp'
        name:
          $ref: '#/components/schemas/healthchecks_components-schemas-name'
        retries:
          $ref: '#/components/schemas/retries'
        status:
          $ref: '#/components/schemas/healthchecks_components-schemas-status'
        suspended:
          $ref: '#/components/schemas/suspended'
        tcp_config:
          $ref: '#/components/schemas/tcp_config'
        timeout:
          $ref: '#/components/schemas/schemas-timeout'
        type:
          $ref: '#/components/schemas/healthchecks_components-schemas-type'
      type: object
    schemas-address:
      description: The hostname or IP address of the origin server to run health checks on.
      example: www.example.com
      type: string
    schemas-check_regions:
      description: A list of regions from which to run health checks. Null means Cloudflare will pick a default region.
      example:
        - WEU
        - ENAM
      items:
        description: 'WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, IN: India, SEAS: South East Asia, NEAS: North East Asia, ALL_REGIONS: all regions (BUSINESS and ENTERPRISE customers only).'
        enum:
          - WNAM
          - ENAM
          - WEU
          - EEU
          - NSAM
          - SSAM
          - OC
          - ME
          - NAF
          - SAF
          - IN
          - SEAS
          - NEAS
          - ALL_REGIONS
        type: string
      nullable: true
      type: array
    consecutive_fails:
      default: 1
      description: The number of consecutive fails required from a health check before changing the health to unhealthy.
      type: integer
    consecutive_successes:
      default: 1
      description: The number of consecutive successes required from a health check before changing the health to healthy.
      type: integer
    timestamp:
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    healthchecks_components-schemas-description:
      description: A human-readable description of the health check.
      example: Health check for www.example.com
      type: string
    failure_reason:
      description: The current failure reason if status is unhealthy.
      example: ''
      readOnly: true
      type: string
    http_config:
      description: Parameters specific to an HTTP or HTTPS health check.
      nullable: true
      properties:
        allow_insecure:
          default: false
          description: Do not validate the certificate when the health check uses HTTPS.
          type: boolean
        expected_body:
          description: 'A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.'
          example: success
          type: string
        expected_codes:
          default: '200'
          description: The expected HTTP response codes (e.g. "200") or code ranges (e.g. "2xx" for all codes starting with 2) of the health check.
          example:
            - 2xx
            - '302'
          items:
            type: string
          nullable: true
          type: array
        follow_redirects:
          default: false
          description: Follow redirects if the origin returns a 3xx status code.
          type: boolean
        header:
          description: The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden.
          example:
            Host:
              - example.com
            X-App-ID:
              - abc123
          nullable: true
          type: object
        method:
          default: GET
          description: The HTTP method to use for the health check.
          enum:
            - GET
            - HEAD
          type: string
        path:
          default: /
          description: The endpoint path to health check against.
          example: /health
          type: string
        port:
          default: 80
          description: Port number to connect to for the health check. Defaults to 80 if type is HTTP or 443 if type is HTTPS.
          type: integer
      type: object
    healthchecks_components-schemas-identifier:
      example: 699d98642c564d2e855e9661899b7252
    components-schemas-interval:
      default: 60
      description: 'The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations.'
      type: integer
    healthchecks_components-schemas-name:
      description: 'A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.'
      example: server-1
      type: string
    retries:
      default: 2
      description: The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.
      type: integer
    healthchecks_components-schemas-status:
      description: The current status of the origin server according to the health check.
      enum:
        - unknown
        - healthy
        - unhealthy
        - suspended
      example: healthy
      readOnly: true
      type: string
    suspended:
      default: false
      description: 'If suspended, no health checks are sent to the origin.'
      type: boolean
    tcp_config:
      description: Parameters specific to TCP health check.
      nullable: true
      properties:
        method:
          default: connection_established
          description: The TCP connection method to use for the health check.
          enum:
            - connection_established
          type: string
        port:
          default: 80
          description: Port number to connect to for the health check. Defaults to 80.
          type: integer
      type: object
    schemas-timeout:
      default: 5
      description: The timeout (in seconds) before marking the health check as failed.
      type: integer
    healthchecks_components-schemas-type:
      default: HTTP
      description: 'The protocol to use for the health check. Currently supported protocols are ''HTTP'', ''HTTPS'' and ''TCP''.'
      example: HTTPS
      type: string
    query_healthcheck:
      properties:
        address:
          $ref: '#/components/schemas/schemas-address'
        check_regions:
          $ref: '#/components/schemas/schemas-check_regions'
        consecutive_fails:
          $ref: '#/components/schemas/consecutive_fails'
        consecutive_successes:
          $ref: '#/components/schemas/consecutive_successes'
        description:
          $ref: '#/components/schemas/healthchecks_components-schemas-description'
        http_config:
          $ref: '#/components/schemas/http_config'
        interval:
          $ref: '#/components/schemas/components-schemas-interval'
        name:
          $ref: '#/components/schemas/healthchecks_components-schemas-name'
        retries:
          $ref: '#/components/schemas/retries'
        suspended:
          $ref: '#/components/schemas/suspended'
        tcp_config:
          $ref: '#/components/schemas/tcp_config'
        timeout:
          $ref: '#/components/schemas/schemas-timeout'
        type:
          $ref: '#/components/schemas/healthchecks_components-schemas-type'
      required:
        - name
        - address
      type: object
    healthchecks_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/healthchecks'
    healthchecks_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/healthchecks_components-schemas-identifier'
              type: object
    request_list:
      items:
        $ref: '#/components/schemas/request_model'
      type: array
    request_model:
      properties:
        enabled:
          $ref: '#/components/schemas/managed_headers_components-schemas-enabled'
        id:
          $ref: '#/components/schemas/managed_headers_components-schemas-id'
      type: object
    managed_headers_components-schemas-enabled:
      description: 'When true, the Managed Transform is enabled.'
      example: true
      type: boolean
    managed_headers_components-schemas-id:
      description: Human-readable identifier of the Managed Transform.
      example: add_cf-bot-score_header
      type: string
    response_list:
      items:
        $ref: '#/components/schemas/response_model'
      type: array
    response_model:
      properties:
        available:
          $ref: '#/components/schemas/available'
        enabled:
          $ref: '#/components/schemas/managed_headers_components-schemas-enabled'
        id:
          $ref: '#/components/schemas/managed_headers_components-schemas-id'
      type: object
    available:
      description: 'When true, the Managed Transform is available in the current Cloudflare plan.'
      example: true
      type: boolean
    ratelimit_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/rate-limits'
              type: array
          type: object
    rate-limits:
      allOf:
        - $ref: '#/components/schemas/components-schemas-ratelimit'
    components-schemas-ratelimit:
      properties:
        action:
          $ref: '#/components/schemas/components-schemas-action'
        bypass:
          $ref: '#/components/schemas/bypass'
        description:
          $ref: '#/components/schemas/components-schemas-description'
        disabled:
          $ref: '#/components/schemas/disabled'
        id:
          $ref: '#/components/schemas/rate-limits_components-schemas-id'
        match:
          $ref: '#/components/schemas/match'
        period:
          $ref: '#/components/schemas/period'
        threshold:
          $ref: '#/components/schemas/threshold'
    components-schemas-action:
      anyOf:
        - properties:
            mode:
              $ref: '#/components/schemas/mode'
            response:
              $ref: '#/components/schemas/custom_response'
            timeout:
              $ref: '#/components/schemas/timeout'
          type: object
      description: The action to perform when the threshold of matched traffic within the configured period is exceeded.
      type: object
    bypass:
      description: Criteria specifying when the current rate limit should be bypassed. You can specify that the rate limit should not apply to one or more URLs.
      items:
        properties:
          name:
            enum:
              - url
            example: url
            type: string
          value:
            description: The URL to bypass.
            example: api.example.com/*
            type: string
        type: object
      type: array
    components-schemas-description:
      description: An informative summary of the rate limit. This value is sanitized and any tags will be removed.
      example: Prevent multiple login failures to mitigate brute force attacks
      maxLength: 1024
      type: string
    disabled:
      description: 'When true, indicates that the rate limit is currently disabled.'
      example: false
      type: boolean
    rate-limits_components-schemas-id:
      description: The unique identifier of the rate limit.
      example: 372e67954025e0ba6aaa6d586b9e0b59
      maxLength: 32
      readOnly: true
      type: string
    match:
      description: Determines which traffic the rate limit counts towards the threshold.
      oneOf:
        - properties:
            headers:
              items:
                properties:
                  name:
                    $ref: '#/components/schemas/header_name'
                  op:
                    $ref: '#/components/schemas/header_op'
                  value:
                    $ref: '#/components/schemas/header_value'
                type: object
              type: array
            request:
              properties:
                methods:
                  $ref: '#/components/schemas/methods'
                schemes:
                  $ref: '#/components/schemas/schemes'
                url:
                  $ref: '#/components/schemas/schemas-url'
              type: object
            response:
              properties:
                origin_traffic:
                  $ref: '#/components/schemas/origin_traffic'
              type: object
          type: object
      type: object
    period:
      description: 'The time in seconds (an integer value) to count matching traffic. If the count exceeds the configured threshold within this period, Cloudflare will perform the configured action.'
      example: 900
      maximum: 86400
      minimum: 10
      type: number
    threshold:
      description: The threshold that will trigger the configured mitigation action. Configure this value along with the `period` property to establish a threshold per period.
      example: 60
      minimum: 1
      type: number
    mode:
      description: The action to perform.
      enum:
        - simulate
        - ban
        - challenge
        - js_challenge
        - managed_challenge
      example: challenge
      type: string
    custom_response:
      anyOf:
        - properties:
            body:
              $ref: '#/components/schemas/body'
            content_type:
              $ref: '#/components/schemas/content_type'
          type: object
      description: |-
        A custom content type and reponse to return when the threshold is exceeded. The custom response configured in this object will override the custom error for the zone. This object is optional.
        Notes: If you omit this object, Cloudflare will use the default HTML error page. If "mode" is "challenge", "managed_challenge", or "js_challenge", Cloudflare will use the zone challenge pages and you should not provide the "response" object.
      type: object
    timeout:
      description: |-
        The time in seconds during which Cloudflare will perform the mitigation action. Must be an integer value greater than or equal to the period.
        Notes: If "mode" is "challenge", "managed_challenge", or "js_challenge", Cloudflare will use the zone's Challenge Passage time and you should not provide this value.
      example: 86400
      maximum: 86400
      minimum: 1
      type: number
    header_name:
      description: The name of the response header to match.
      example: Cf-Cache-Status
      type: string
    header_op:
      description: 'The operator used when matching: `eq` means "equal" and `ne` means "not equal".'
      enum:
        - eq
        - ne
      example: ne
      type: string
    header_value:
      description: 'The value of the response header, which must match exactly.'
      example: HIT
      type: string
    methods:
      description: 'The HTTP methods to match. You can specify a subset (for example, `[''POST'',''PUT'']`) or all methods (`[''_ALL_'']`). This field is optional when creating a rate limit.'
      example:
        - GET
        - POST
      items:
        description: An HTTP method or `_ALL_` to indicate all methods.
        enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - HEAD
          - _ALL_
        example: GET
        type: string
      type: array
    schemes:
      description: 'The HTTP schemes to match. You can specify one scheme (`[''HTTPS'']`), both schemes (`[''HTTP'',''HTTPS'']`), or all schemes (`[''_ALL_'']`). This field is optional.'
      example:
        - HTTP
        - HTTPS
      items:
        description: An HTTP scheme or `_ALL_` to indicate all schemes.
        example: HTTPS
        type: string
      type: array
    schemas-url:
      description: 'The URL pattern to match, composed of a host and a path such as `example.org/path*`. Normalization is applied before the pattern is matched. `*` wildcards are expanded to match applicable traffic. Query strings are not matched. Set the value to `*` to match all traffic to your zone.'
      example: '*.example.org/path*'
      maxLength: 1024
      type: string
    origin_traffic:
      description: |-
        When true, only the uncached traffic served from your origin servers will count towards rate limiting. In this case, any cached traffic served by Cloudflare will not count towards rate limiting. This field is optional.
        Notes: This field is deprecated. Instead, use response headers and set "origin_traffic" to "false" to avoid legacy behaviour interacting with the "response_headers" property.
      type: boolean
    body:
      description: The response body to return. The value must conform to the configured content type.
      example: <error>This request has been rate-limited.</error>
      maxLength: 10240
      type: string
    content_type:
      description: 'The content type of the body. Must be one of the following: `text/plain`, `text/xml`, or `application/json`.'
      example: text/xml
      maxLength: 50
      type: string
    ratelimit_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    schemas-phase:
      description: The phase where the ruleset is executed.
      enum:
        - http_request_transform
        - http_request_late_transform
        - http_response_headers_transform
      type: string
    schemas-ruleset:
      properties:
        description:
          example: ''
        id:
          example: 2f2feab2026849078ba485f918791bdc
        kind:
          example: zone
        name:
          example: default
        phase:
          example: http_request_transform
        rules:
          description: The rules in the ruleset.
          items:
            $ref: '#/components/schemas/transform-rules_components-schemas-rule'
          type: array
    transform-rules_components-schemas-rule:
      properties:
        action:
          example: rewrite
        action_parameters:
          $ref: '#/components/schemas/schemas-action_parameters'
        description:
          example: change request based on ip location
        expression:
          example: ip.geoip.country eq "AL"
        id:
          example: 3a03d665bac047339bb530ecb439a90d
        version:
          example: '1'
    schemas-action_parameters:
      description: The parameters configuring the action.
      oneOf:
        - $ref: '#/components/schemas/action_parameters_rewrite'
      type: object
    action_parameters_rewrite:
      description: The configuration parameters for the rewrite action.
      properties:
        uri:
          description: 'The URI rewrite configuration to rewrite the URI path, the query string, or both.'
          properties:
            path:
              description: The new URI path sent to the origin.
            query:
              description: The new query string sent to the origin.
          type: object
    update_ruleset:
      description: A ruleset object.
      properties:
        description:
          $ref: '#/components/schemas/rulesets_components-schemas-description'
        rules:
          $ref: '#/components/schemas/create_update_rules'
      required:
        - rules
      type: object
    rulesets_components-schemas-description:
      default: ''
      description: An informative description of the ruleset.
      example: My ruleset to execute managed rulesets
      type: string
    create_update_rules:
      description: The list of rules in the ruleset.
      items:
        anyOf:
          - $ref: '#/components/schemas/create_update_rule'
          - description: The unique ID of a rule.
      type: array
    create_update_rule:
      description: A rule object.
      properties:
        action:
          $ref: '#/components/schemas/rules_components-schemas-action'
        action_parameters:
          $ref: '#/components/schemas/action_parameters'
        description:
          $ref: '#/components/schemas/rules_components-schemas-description'
        enabled:
          $ref: '#/components/schemas/rules_components-schemas-enabled-2'
        expression:
          $ref: '#/components/schemas/schemas-expression'
        logging:
          $ref: '#/components/schemas/logging'
        ref:
          $ref: '#/components/schemas/components-schemas-ref'
      required:
        - expression
        - action
      type: object
    rules_components-schemas-action:
      description: The action to perform when the rule matches.
      example: execute
      pattern: '^[a-z_]+$'
      type: string
    action_parameters:
      description: The parameters configuring the rule action.
      example:
        id: 4814384a9e5d4991b9815dcfc25d2f1f
      type: object
    rules_components-schemas-description:
      default: ''
      description: An informative description of the rule.
      example: Execute the OWASP ruleset when the IP address is not 1.1.1.1
      type: string
    rules_components-schemas-enabled-2:
      default: 'true'
      description: Whether the rule should be executed.
      example: true
      type: boolean
    schemas-expression:
      description: The expression defining which traffic will match the rule.
      example: ip.src ne 1.1.1.1
      type: string
    logging:
      description: An object configuring the rule's logging behavior.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether to generate a log when the rule matches.
          example: true
          type: boolean
      type: object
    components-schemas-ref:
      description: The reference of the rule (the rule ID by default).
      example: my_ref
      type: string
    schemas-response_model:
      properties:
        scope:
          $ref: '#/components/schemas/scope'
        type:
          $ref: '#/components/schemas/url_normalization_components-schemas-type'
      type: object
    scope:
      description: The scope of the URL normalization.
      example: incoming
      type: string
    url_normalization_components-schemas-type:
      description: The type of URL normalization performed by Cloudflare.
      example: cloudflare
      type: string
    schemas-request_model:
      properties:
        scope:
          $ref: '#/components/schemas/scope'
        type:
          $ref: '#/components/schemas/url_normalization_components-schemas-type'
      type: object
    components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/zone_components-schemas-zone'
              type: array
    zone_components-schemas-zone:
      allOf:
        - $ref: '#/components/schemas/components-schemas-zone'
    components-schemas-zone:
      properties:
        activated_on:
          description: |-
            The last time proof of ownership was detected and the zone was made
            active
          example: '2014-01-02T00:01:00.12345Z'
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_on:
          description: When the zone was created
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        development_mode:
          description: |-
            The interval (in seconds) from when development mode expires
            (positive integer) or last expired (negative integer) for the
            domain. If development mode has never been enabled, this value is 0.
          example: 7200
          readOnly: true
          type: number
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        modified_on:
          description: When the zone was last modified
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          readOnly: true
          type: string
        name:
          description: The domain name
          example: example.com
          maxLength: 253
          pattern: '^([a-zA-Z0-9][\-a-zA-Z0-9]*\.)+[\-a-zA-Z0-9]{2,20}$'
          readOnly: true
          type: string
        original_dnshost:
          description: DNS host at the time of switching to Cloudflare
          example: NameCheap
          maxLength: 50
          nullable: true
          readOnly: true
          type: string
        original_name_servers:
          description: |-
            Original name servers before moving to Cloudflare
            Notes: Is this only available for full zones?
          example:
            - ns1.originaldnshost.com
            - ns2.originaldnshost.com
          items:
            format: hostname
            type: string
          nullable: true
          readOnly: true
          type: array
        original_registrar:
          description: Registrar for the domain at the time of switching to Cloudflare
          example: GoDaddy
          nullable: true
          readOnly: true
          type: string
      required:
        - id
        - name
        - development_mode
        - owner
        - account
        - meta
        - original_name_servers
        - original_registrar
        - original_dnshost
        - created_on
        - modified_on
        - activated_on
      type: object
    schemas-create:
      properties:
        account:
          description: Account in which the zone was created.
          properties:
            id:
              $ref: '#/components/schemas/common_components-schemas-identifier'
          type: object
        name:
          $ref: '#/components/schemas/properties-name'
        type:
          $ref: '#/components/schemas/components-schemas-type'
      required:
        - name
        - account
      type: object
    components-schemas-response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    properties-name:
      description: The domain name
      example: example.com
      maxLength: 253
      pattern: '^([a-zA-Z0-9][\-a-zA-Z0-9]*\.)+[\-a-zA-Z0-9]{2,20}$'
      readOnly: true
      type: string
    components-schemas-type:
      description: A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup.
      enum:
        - full
        - partial
      example: full
      type: string
    schemas-identifier: {}
    api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                id:
                  $ref: '#/components/schemas/common_components-schemas-identifier'
              required:
                - id
              type: object
    schemas-patch:
      example:
        paused: true
      properties:
        paused:
          $ref: '#/components/schemas/paused'
        plan:
          description: 'The desired plan for the zone. Changing this value will create/cancel associated subscriptions. To view available plans for this zone, see Zone Plans.'
          properties:
            id:
              $ref: '#/components/schemas/common_components-schemas-identifier'
          type: object
        type:
          description: A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup. This parameter is only available to Enterprise customers or if it has been explicitly enabled on a zone.
          enum:
            - full
            - partial
          example: full
          type: string
        vanity_name_servers:
          $ref: '#/components/schemas/vanity_name_servers'
      type: object
    paused:
      default: false
      description: Indicates whether the zone is only using Cloudflare DNS services. A true value means the zone will not receive security or performance benefits.
      readOnly: true
      type: boolean
    vanity_name_servers:
      description: |-
        An array of domains used for custom name servers. This is only
        available for Business and Enterprise plans.
      example:
        - ns1.example.com
        - ns2.example.com
      items:
        format: hostname
        maxLength: 253
        type: string
      type: array
    purge_by_cache_tags_or_hosts_or_prefixes:
      properties:
        hosts:
          description: Any assets at URLs with a host that matches one of the provided values will be purged from the Cloudflare cache.
          example:
            - www.example.com
            - images.example.com
          items:
            type: string
          maxLength: 30
          type: array
        prefixes:
          description: 'Any assets at URLs that match the prefix will be purged from the Cloudflare cache. For example, a.com/b will purge a.com/b/c/d.png but not a.com/bc.png. The prefixes a.com/b and a.com/b/c are redundant.'
          example:
            - www.example.com/foo
            - images.example.com/bar/baz
          items:
            type: string
          maxLength: 30
          type: array
        tags:
          description: Any assets served with a Cache-Tag header that matches one of the provided values will be purged from the Cloudflare cache.
          example:
            - some-tag
            - another-tag
          items:
            type: string
          maxLength: 30
          type: array
    colo_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            query:
              $ref: '#/components/schemas/query_response'
            result:
              $ref: '#/components/schemas/datacenters'
    analytics:
      properties:
        id:
          default: 1
          type: integer
        origins:
          example:
            - address: 198.51.100.4
              changed: true
              enabled: true
              failure_reason: No failures
              healthy: true
              ip: 198.51.100.4
              name: some-origin
          items: {}
          type: array
        pool:
          example:
            changed: true
            healthy: true
            id: 74bc6a8b9b0dda3d651707a2928bad0c
            minimum_origins: 1
            name: some-pool
          type: object
        timestamp:
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          type: string
      type: object
    query_response:
      description: The exact parameters/timestamps the analytics service used to return data.
      properties:
        since:
          $ref: '#/components/schemas/since'
        time_delta:
          description: The amount of time (in minutes) that each data point in the timeseries represents. The granularity of the time-series returned (e.g. each bucket in the time series representing 1-minute vs 1-day) is calculated by the API based on the time-range provided to the API.
          type: integer
        until:
          $ref: '#/components/schemas/until'
      readOnly: true
      type: object
    datacenters:
      description: A breakdown of all dashboard analytics data by co-locations. This is limited to Enterprise zones only.
      items:
        properties:
          colo_id:
            description: The airport code identifer for the co-location.
            example: SFO
            type: string
          timeseries:
            $ref: '#/components/schemas/timeseries_by_colo'
          totals:
            $ref: '#/components/schemas/totals_by_colo'
        type: object
      title: Analytics data by datacenter
      type: array
    since:
      anyOf:
        - type: string
        - type: integer
      default: -10080
      description: |-
        The (inclusive) beginning of the requested time frame. This value can be a negative integer representing the number of minutes in the past relative to time the request is made, or can be an absolute timestamp that conforms to RFC 3339. At this point in time, it cannot exceed a time in the past greater than one year.

        Ranges that the Cloudflare web application provides will provide the following period length for each point:
        - Last 60 minutes (from -59 to -1): 1 minute resolution
        - Last 7 hours (from -419 to -60): 15 minutes resolution
        - Last 15 hours (from -899 to -420): 30 minutes resolution
        - Last 72 hours (from -4320 to -900): 1 hour resolution
        - Older than 3 days (-525600 to -4320): 1 day resolution.
      example: '2015-01-01T12:23:00Z'
    until:
      anyOf:
        - type: string
        - type: integer
      default: 0
      description: 'The (exclusive) end of the requested time frame. This value can be a negative integer representing the number of minutes in the past relative to time the request is made, or can be an absolute timestamp that conforms to RFC 3339. If omitted, the time of the request is used.'
      example: '2015-01-02T12:23:00Z'
    timeseries_by_colo:
      description: Time deltas containing metadata about each bucket of time. The number of buckets (resolution) is determined by the amount of time between the since and until parameters.
      items:
        properties:
          bandwidth:
            $ref: '#/components/schemas/bandwidth_by_colo'
          requests:
            $ref: '#/components/schemas/requests_by_colo'
          since:
            $ref: '#/components/schemas/since'
          threats:
            $ref: '#/components/schemas/threats'
          until:
            $ref: '#/components/schemas/until'
        type: object
      type: array
    totals_by_colo:
      description: Breakdown of totals by data type.
      properties:
        bandwidth:
          $ref: '#/components/schemas/bandwidth_by_colo'
        requests:
          $ref: '#/components/schemas/requests_by_colo'
        since:
          $ref: '#/components/schemas/since'
        threats:
          $ref: '#/components/schemas/threats'
        until:
          $ref: '#/components/schemas/until'
      type: object
    bandwidth_by_colo:
      description: Breakdown of totals for bandwidth in the form of bytes.
      properties:
        all:
          description: The total number of bytes served within the time frame.
          type: integer
        cached:
          description: The number of bytes that were cached (and served) by Cloudflare.
          type: integer
        uncached:
          description: The number of bytes that were fetched and served from the origin server.
          type: integer
      type: object
    requests_by_colo:
      description: Breakdown of totals for requests.
      properties:
        all:
          description: Total number of requests served.
          type: integer
        cached:
          description: Total number of cached requests served.
          type: integer
        country:
          additionalProperties: true
          description: Key/value pairs where the key is a two-digit country code and the value is the number of requests served to that country.
          example:
            AG: 37298
            GI: 293846
            US: 4181364
          type: object
        http_status:
          description: A variable list of key/value pairs where the key is a HTTP status code and the value is the number of requests with that code served.
          example:
            '200': 13496983
            '301': 283
            '400': 187936
            '402': 1828
            '404': 1293
          type: object
        uncached:
          description: Total number of requests served from the origin.
          type: integer
      type: object
    threats:
      description: Breakdown of totals for threats.
      properties:
        all:
          description: The total number of identifiable threats received over the time frame.
          type: integer
        country:
          description: A list of key/value pairs where the key is a two-digit country code and the value is the number of malicious requests received from that country.
          example:
            AU: 91
            CN: 523423
            US: 123
          type: object
        type:
          description: The list of key/value pairs where the key is a threat category and the value is the number of requests.
          example:
            hot.ban.unknown: 5324
            macro.chl.captchaErr: 1341
            macro.chl.jschlErr: 5323
            user.ban.ip: 123
          type: object
      type: object
    dashboard_response:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            query:
              $ref: '#/components/schemas/query_response'
            result:
              $ref: '#/components/schemas/dashboard'
    dashboard:
      description: Totals and timeseries data.
      properties:
        timeseries:
          $ref: '#/components/schemas/timeseries'
        totals:
          $ref: '#/components/schemas/totals'
      title: Dashboard response
      type: object
    timeseries:
      description: Time deltas containing metadata about each bucket of time. The number of buckets (resolution) is determined by the amount of time between the since and until parameters.
      items:
        properties:
          bandwidth:
            $ref: '#/components/schemas/bandwidth'
          pageviews:
            $ref: '#/components/schemas/pageviews'
          requests:
            $ref: '#/components/schemas/schemas-requests'
          since:
            $ref: '#/components/schemas/since'
          threats:
            $ref: '#/components/schemas/threats'
          uniques:
            $ref: '#/components/schemas/uniques'
          until:
            $ref: '#/components/schemas/until'
        type: object
      type: array
    totals:
      description: Breakdown of totals by data type.
      properties:
        bandwidth:
          $ref: '#/components/schemas/bandwidth'
        pageviews:
          $ref: '#/components/schemas/pageviews'
        requests:
          $ref: '#/components/schemas/schemas-requests'
        since:
          $ref: '#/components/schemas/since'
        threats:
          $ref: '#/components/schemas/threats'
        uniques:
          $ref: '#/components/schemas/uniques'
        until:
          $ref: '#/components/schemas/until'
      type: object
    bandwidth:
      description: Breakdown of totals for bandwidth in the form of bytes.
      properties:
        all:
          description: The total number of bytes served within the time frame.
          type: integer
        cached:
          description: The number of bytes that were cached (and served) by Cloudflare.
          type: integer
        content_type:
          description: 'A variable list of key/value pairs where the key represents the type of content served, and the value is the number in bytes served.'
          example:
            css: 237421
            gif: 1234242
            html: 1231290
            javascript: 123245
            jpeg: 784278
          type: object
        country:
          description: A variable list of key/value pairs where the key is a two-digit country code and the value is the number of bytes served to that country.
          example:
            AG: 2342483
            GI: 984753
            US: 123145433
          type: object
        ssl:
          description: A break down of bytes served over HTTPS.
          properties:
            encrypted:
              description: The number of bytes served over HTTPS.
              type: integer
            unencrypted:
              description: The number of bytes served over HTTP.
              type: integer
          type: object
        ssl_protocols:
          description: A breakdown of requests by their SSL protocol.
          properties:
            TLSv1:
              description: The number of requests served over TLS v1.0.
              type: integer
            TLSv1.1:
              description: The number of requests served over TLS v1.1.
              type: integer
            TLSv1.2:
              description: The number of requests served over TLS v1.2.
              type: integer
            TLSv1.3:
              description: The number of requests served over TLS v1.3.
              type: integer
            none:
              description: The number of requests served over HTTP.
              type: integer
          type: object
        uncached:
          description: The number of bytes that were fetched and served from the origin server.
          type: integer
      type: object
    pageviews:
      description: Breakdown of totals for pageviews.
      properties:
        all:
          description: The total number of pageviews served within the time range.
          type: integer
        search_engine:
          description: A variable list of key/value pairs representing the search engine and number of hits.
          example:
            baidubot: 1345
            bingbot: 5372
            googlebot: 35272
            pingdom: 13435
          type: object
      type: object
    schemas-requests:
      description: Breakdown of totals for requests.
      properties:
        all:
          description: Total number of requests served.
          type: integer
        cached:
          description: Total number of cached requests served.
          type: integer
        content_type:
          description: 'A variable list of key/value pairs where the key represents the type of content served, and the value is the number of requests.'
          example:
            css: 15343
            gif: 23178
            html: 1234213
            javascript: 318236
            jpeg: 1982048
          type: object
        country:
          description: A variable list of key/value pairs where the key is a two-digit country code and the value is the number of requests served to that country.
          example:
            AG: 37298
            GI: 293846
            US: 4181364
          type: object
        http_status:
          additionalProperties: true
          description: Key/value pairs where the key is a HTTP status code and the value is the number of requests served with that code.
          example:
            '200': 13496983
            '301': 283
            '400': 187936
            '402': 1828
            '404': 1293
          type: object
        ssl:
          description: A break down of requests served over HTTPS.
          properties:
            encrypted:
              description: The number of requests served over HTTPS.
              type: integer
            unencrypted:
              description: The number of requests served over HTTP.
              type: integer
          type: object
        ssl_protocols:
          description: A breakdown of requests by their SSL protocol.
          properties:
            TLSv1:
              description: The number of requests served over TLS v1.0.
              type: integer
            TLSv1.1:
              description: The number of requests served over TLS v1.1.
              type: integer
            TLSv1.2:
              description: The number of requests served over TLS v1.2.
              type: integer
            TLSv1.3:
              description: The number of requests served over TLS v1.3.
              type: integer
            none:
              description: The number of requests served over HTTP.
              type: integer
          type: object
        uncached:
          description: Total number of requests served from the origin.
          type: integer
      type: object
    uniques:
      properties:
        all:
          description: Total number of unique IP addresses within the time range.
          type: integer
      type: object
    zone_cache_settings_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    cache_reserve_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/cache_reserve'
            - properties:
                value:
                  $ref: '#/components/schemas/cache_reserve_value'
              required:
                - value
    cache_reserve:
      allOf:
        - $ref: '#/components/schemas/components-schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - cache_reserve
              example: cache_reserve
      description: 'Increase cache lifetimes by automatically storing all cacheable files into Cloudflare''s persistent object storage buckets. Requires Cache Reserve subscription. Note: using Tiered Cache with Cache Reserve is highly recommended to reduce Reserve operations costs. See the [developer docs](https://developers.cloudflare.com/cache/about/cache-reserve) for more information.'
      title: Cache Reserve
    cache_reserve_value:
      default: 'off'
      description: Value of the Cache Reserve zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    components-schemas-base:
      properties:
        id:
          description: Identifier of the zone setting.
          example: development_mode
          type: string
        modified_on:
          description: last time this setting was modified.
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
        - id
        - modified_on
    variants:
      allOf:
        - $ref: '#/components/schemas/components-schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - variants
              example: variants
      description: 'Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the ''Vary: Accept'' response header. If the origin server sends ''Vary: Accept'' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.'
      title: Variants Caching
    variants_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/variants'
            - properties:
                value:
                  $ref: '#/components/schemas/variants_value'
              required:
                - value
    variants_value:
      description: Value of the zone setting.
      properties:
        avif:
          description: List of strings with the MIME types of all the variants that should be served for avif.
          example:
            - image/webp
            - image/jpeg
          items: {}
          type: array
          uniqueItems: true
        bmp:
          description: List of strings with the MIME types of all the variants that should be served for bmp.
          example:
            - image/webp
            - image/jpeg
          items: {}
          type: array
          uniqueItems: true
        gif:
          description: List of strings with the MIME types of all the variants that should be served for gif.
          example:
            - image/webp
            - image/jpeg
          items: {}
          type: array
          uniqueItems: true
        jp2:
          description: List of strings with the MIME types of all the variants that should be served for jp2.
          example:
            - image/webp
            - image/avif
          items: {}
          type: array
          uniqueItems: true
        jpeg:
          description: List of strings with the MIME types of all the variants that should be served for jpeg.
          example:
            - image/webp
            - image/avif
          items: {}
          type: array
          uniqueItems: true
        jpg:
          description: List of strings with the MIME types of all the variants that should be served for jpg.
          example:
            - image/webp
            - image/avif
          items: {}
          type: array
          uniqueItems: true
        jpg2:
          description: List of strings with the MIME types of all the variants that should be served for jpg2.
          example:
            - image/webp
            - image/avif
          items: {}
          type: array
          uniqueItems: true
        png:
          description: List of strings with the MIME types of all the variants that should be served for png.
          example:
            - image/webp
            - image/avif
          items: {}
          type: array
          uniqueItems: true
        tif:
          description: List of strings with the MIME types of all the variants that should be served for tif.
          example:
            - image/webp
            - image/avif
          items: {}
          type: array
          uniqueItems: true
        tiff:
          description: List of strings with the MIME types of all the variants that should be served for tiff.
          example:
            - image/webp
            - image/avif
          items: {}
          type: array
          uniqueItems: true
        webp:
          description: List of strings with the MIME types of all the variants that should be served for webp.
          example:
            - image/jpeg
            - image/avif
          items: {}
          type: array
          uniqueItems: true
      type: object
    zonelockdown_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/zonelockdown'
              type: array
          required:
            - result
          type: object
    zonelockdown:
      additionalProperties: false
      properties:
        configurations:
          $ref: '#/components/schemas/configurations'
        created_on:
          $ref: '#/components/schemas/schemas-created_on'
        description:
          $ref: '#/components/schemas/lockdowns_components-schemas-description'
        id:
          $ref: '#/components/schemas/lockdowns_components-schemas-id'
        modified_on:
          $ref: '#/components/schemas/lockdowns_components-schemas-modified_on'
        paused:
          $ref: '#/components/schemas/components-schemas-paused'
        urls:
          $ref: '#/components/schemas/schemas-urls'
      required:
        - id
        - created_on
        - modified_on
        - paused
        - description
        - urls
        - configurations
    configurations:
      anyOf:
        - $ref: '#/components/schemas/schemas-ip_configuration'
        - $ref: '#/components/schemas/schemas-cidr_configuration'
      description: A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `ip` or `ip_range` configurations.
      items:
        anyOf:
          - $ref: '#/components/schemas/schemas-ip_configuration'
          - $ref: '#/components/schemas/schemas-cidr_configuration'
      type: array
    schemas-created_on:
      description: The timestamp of when the rule was created.
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    lockdowns_components-schemas-description:
      description: An informative summary of the rule.
      example: Restrict access to these endpoints to requests from a known IP address
      maxLength: 1024
      type: string
    lockdowns_components-schemas-id:
      description: The unique identifier of the Zone Lockdown rule.
      example: 372e67954025e0ba6aaa6d586b9e0b59
      maxLength: 32
      readOnly: true
      type: string
    lockdowns_components-schemas-modified_on:
      description: The timestamp of when the rule was last modified.
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      readOnly: true
      type: string
    components-schemas-paused:
      description: 'When true, indicates that the rule is currently paused.'
      example: false
      type: boolean
    schemas-urls:
      description: 'The URLs to include in the rule definition. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.'
      items:
        example: api.mysite.com/some/endpoint*
        type: string
      type: array
    schemas-ip_configuration:
      properties:
        target:
          description: The configuration target. You must set the target to `ip` when specifying an IP address in the Zone Lockdown rule.
          enum:
            - ip
          example: ip
        value:
          description: The IP address to match. This address will be compared to the IP address of incoming requests.
          example: 198.51.100.4
          type: string
      title: An IP address configuration.
    schemas-cidr_configuration:
      properties:
        target:
          description: The configuration target. You must set the target to `ip_range` when specifying an IP address range in the Zone Lockdown rule.
          enum:
            - ip_range
          example: ip_range
        value:
          description: The IP address range to match. You can only use prefix lengths `/16` and `/24`.
          example: 198.51.100.4/16
          type: string
      title: An IP address range configuration.
    zonelockdown_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/zonelockdown'
          required:
            - result
          type: object
    available-rate-plan:
      properties:
        can_subscribe:
          $ref: '#/components/schemas/can_subscribe'
        currency:
          $ref: '#/components/schemas/currency'
        externally_managed:
          $ref: '#/components/schemas/externally_managed'
        frequency:
          $ref: '#/components/schemas/schemas-frequency'
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        is_subscribed:
          $ref: '#/components/schemas/is_subscribed'
        legacy_discount:
          $ref: '#/components/schemas/legacy_discount'
        legacy_id:
          $ref: '#/components/schemas/legacy_id'
        name:
          $ref: '#/components/schemas/rate-plan_components-schemas-name'
        price:
          $ref: '#/components/schemas/schemas-price'
      type: object
    can_subscribe:
      default: false
      description: Indicates whether you can subscribe to this plan.
      example: true
      type: boolean
    currency:
      description: The monetary unit in which pricing information is displayed.
      example: USD
      readOnly: true
      type: string
    externally_managed:
      default: false
      description: Indicates whether this plan is managed externally.
      example: false
      type: boolean
    schemas-frequency:
      description: The frequency at which you will be billed for this plan.
      enum:
        - weekly
        - monthly
        - quarterly
        - yearly
      example: monthly
      readOnly: true
      type: string
    is_subscribed:
      default: false
      description: Indicates whether you are currently subscribed to this plan.
      example: false
      type: boolean
    legacy_discount:
      default: false
      description: Indicates whether this plan has a legacy discount applied.
      example: false
      type: boolean
    legacy_id:
      description: 'The legacy identifier for this rate plan, if any.'
      example: free
      readOnly: true
      type: string
    rate-plan_components-schemas-name:
      description: The plan name.
      example: Free Plan
      maxLength: 80
      readOnly: true
      type: string
    schemas-price:
      description: The amount you will be billed for this plan.
      example: 0
      type: number
    plan_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/schemas-rate-plan'
              type: array
          type: object
    schemas-rate-plan:
      allOf:
        - $ref: '#/components/schemas/rate-plan'
    rate-plan:
      properties:
        components:
          $ref: '#/components/schemas/schemas-component_values'
        currency:
          $ref: '#/components/schemas/currency'
        duration:
          $ref: '#/components/schemas/duration'
        frequency:
          $ref: '#/components/schemas/schemas-frequency'
        id:
          $ref: '#/components/schemas/rate-plan_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/rate-plan_components-schemas-name'
      type: object
    schemas-component_values:
      description: Array of available components values for the plan.
      items:
        $ref: '#/components/schemas/component-value'
      type: array
    duration:
      description: The duration of the plan subscription.
      example: 1
      type: number
    rate-plan_components-schemas-identifier:
      description: Plan identifier tag.
      example: free
      readOnly: true
      type: string
    component-value:
      properties:
        default:
          $ref: '#/components/schemas/default'
        name:
          $ref: '#/components/schemas/component-value_components-schemas-name'
        unit_price:
          $ref: '#/components/schemas/unit_price'
      type: object
    default:
      description: The default amount allocated.
      example: 5
      type: number
    component-value_components-schemas-name:
      description: The unique component.
      enum:
        - zones
        - page_rules
        - dedicated_certificates
        - dedicated_certificates_custom
      example: page_rules
    unit_price:
      description: The unit price of the addon.
      example: 1
      readOnly: true
      type: number
    zone_settings_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              anyOf:
                - items: {}
                  type: array
                - type: object
              items:
                $ref: '#/components/schemas/setting'
    setting:
      oneOf:
        - $ref: '#/components/schemas/always_online'
        - $ref: '#/components/schemas/advanced_ddos'
        - $ref: '#/components/schemas/brotli'
        - $ref: '#/components/schemas/browser_cache_ttl'
        - $ref: '#/components/schemas/browser_check'
        - $ref: '#/components/schemas/cname_flattening'
        - $ref: '#/components/schemas/cache_level'
        - $ref: '#/components/schemas/challenge_ttl'
        - $ref: '#/components/schemas/development_mode'
        - $ref: '#/components/schemas/early_hints'
        - $ref: '#/components/schemas/edge_cache_ttl'
        - $ref: '#/components/schemas/origin_error_page_pass_thru'
        - $ref: '#/components/schemas/sort_query_string_for_cache'
        - $ref: '#/components/schemas/email_obfuscation'
        - $ref: '#/components/schemas/hotlink_protection'
        - $ref: '#/components/schemas/ip_geolocation'
        - $ref: '#/components/schemas/ipv6'
        - $ref: '#/components/schemas/websockets'
        - $ref: '#/components/schemas/sha1_support'
        - $ref: '#/components/schemas/tls_1_2_only'
        - $ref: '#/components/schemas/minify'
        - $ref: '#/components/schemas/max_upload'
        - $ref: '#/components/schemas/mobile_redirect'
        - $ref: '#/components/schemas/mirage'
        - $ref: '#/components/schemas/nel'
        - $ref: '#/components/schemas/polish'
        - $ref: '#/components/schemas/webp'
        - $ref: '#/components/schemas/prefetch_preload'
        - $ref: '#/components/schemas/privacy_pass'
        - $ref: '#/components/schemas/response_buffering'
        - $ref: '#/components/schemas/rocket_loader'
        - $ref: '#/components/schemas/security_header'
        - $ref: '#/components/schemas/security_level'
        - $ref: '#/components/schemas/server_side_exclude'
        - $ref: '#/components/schemas/ssl'
        - $ref: '#/components/schemas/ssl_recommender'
        - $ref: '#/components/schemas/tls_client_auth'
        - $ref: '#/components/schemas/true_client_ip_header'
        - $ref: '#/components/schemas/proxy_read_timeout'
        - $ref: '#/components/schemas/waf'
        - $ref: '#/components/schemas/min_tls_version'
        - $ref: '#/components/schemas/ciphers'
        - $ref: '#/components/schemas/tls_1_3'
        - $ref: '#/components/schemas/opportunistic_encryption'
        - $ref: '#/components/schemas/automatic_https_rewrites'
        - $ref: '#/components/schemas/http2'
        - $ref: '#/components/schemas/http3'
        - $ref: '#/components/schemas/origin_max_http_version'
        - $ref: '#/components/schemas/0rtt'
        - $ref: '#/components/schemas/pseudo_ipv4'
        - $ref: '#/components/schemas/always_use_https'
        - $ref: '#/components/schemas/opportunistic_onion'
        - $ref: '#/components/schemas/orange_to_orange'
        - $ref: '#/components/schemas/image_resizing'
        - $ref: '#/components/schemas/h2_prioritization'
        - $ref: '#/components/schemas/schemas-automatic_platform_optimization'
      type: object
    always_online:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - always_online
              example: always_online
            value:
              $ref: '#/components/schemas/always_online_value'
      description: 'When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive''s Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.'
      title: Always Online Mode
    advanced_ddos:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - advanced_ddos
              example: advanced_ddos
            value:
              $ref: '#/components/schemas/advanced_ddos_value'
      description: Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones.
      title: Advanced DDoS Protection
    brotli:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - brotli
              example: brotli
            value:
              $ref: '#/components/schemas/brotli_value'
      description: 'When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.'
      title: Brotli Compression
    browser_cache_ttl:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - browser_cache_ttl
              example: browser_cache_ttl
            value:
              $ref: '#/components/schemas/browser_cache_ttl_value'
      description: 'Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors'' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).'
      title: Browser Cache TTL
    browser_check:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - browser_check
              example: browser_check
            value:
              $ref: '#/components/schemas/browser_check_value'
      description: 'Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).'
      title: Browser Check
    cname_flattening:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: How to flatten the cname destination.
              enum:
                - cname_flattening
              example: flatten_at_root
            value:
              $ref: '#/components/schemas/cname_flattening_value'
      description: Whether or not cname flattening is on.
      title: Cloudflare CNAME Flattening
    cache_level:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - cache_level
              example: cache_level
            value:
              $ref: '#/components/schemas/cache_level_value'
      description: 'Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).'
      title: Cloudflare Cache Level
    challenge_ttl:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - challenge_ttl
              example: challenge_ttl
            value:
              $ref: '#/components/schemas/challenge_ttl_value'
      description: 'Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).'
      title: Challenge Page TTL
    development_mode:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - development_mode
              example: development_mode
            time_remaining:
              description: |-
                Value of the zone setting.
                Notes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.
              example: 3600
              readOnly: true
              type: number
            value:
              $ref: '#/components/schemas/development_mode_value'
      description: 'Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare''s accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.'
      title: Development Mode
    early_hints:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - early_hints
              example: early_hints
            value:
              $ref: '#/components/schemas/early_hints_value'
      description: 'When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.'
      title: Early Hints
    edge_cache_ttl:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - edge_cache_ttl
              example: edge_cache_ttl
            value:
              $ref: '#/components/schemas/edge_cache_ttl_value'
      description: Time (in seconds) that a resource will be ensured to remain on Cloudflare's cache servers.
      title: Edge Cache TTL
    origin_error_page_pass_thru:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - origin_error_page_pass_thru
              example: origin_error_page_pass_thru
            value:
              $ref: '#/components/schemas/origin_error_page_pass_thru_value'
      default: 'off'
      description: 'Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.'
      title: Error Pages On
    sort_query_string_for_cache:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - sort_query_string_for_cache
              example: sort_query_string_for_cache
            value:
              $ref: '#/components/schemas/sort_query_string_for_cache_value'
      default: 'off'
      description: 'Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.'
      title: Get String Sort
    email_obfuscation:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - email_obfuscation
              example: email_obfuscation
            value:
              $ref: '#/components/schemas/email_obfuscation_value'
      description: 'Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).'
      title: Email Obfuscation
    hotlink_protection:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - hotlink_protection
              example: hotlink_protection
            value:
              $ref: '#/components/schemas/hotlink_protection_value'
      description: 'When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it''s not another site requesting them. People will still be able to download and view images from your page, but other sites won''t be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).'
      title: Hotlink Protection
    ip_geolocation:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - ip_geolocation
              example: ip_geolocation
            value:
              $ref: '#/components/schemas/ip_geolocation_value'
      description: 'Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).'
      title: IP Geolocation
    ipv6:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - ipv6
              example: ipv6
            value:
              $ref: '#/components/schemas/ipv6_value'
      description: 'Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).'
      title: IPv6
    websockets:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - websockets
              example: websockets
            value:
              $ref: '#/components/schemas/websockets_value'
      description: 'WebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming. For more information refer to [Can I use Cloudflare with Websockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Can-I-use-Cloudflare-with-WebSockets-).'
      title: WebSockets
    sha1_support:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: Zone setting identifier.
              enum:
                - sha1_support
              example: sha1_support
            value:
              $ref: '#/components/schemas/sha1_support_value'
      description: Allow SHA1 support.
      title: Toggle SHA1 support
    tls_1_2_only:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: Zone setting identifier.
              enum:
                - tls_1_2_only
              example: tls_1_2_only
            value:
              $ref: '#/components/schemas/tls_1_2_only_value'
      description: Only allows TLS1.2.
      title: TLS1.2 only
    minify:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: Zone setting identifier.
              enum:
                - minify
              example: minify
            value:
              $ref: '#/components/schemas/minify_value'
      description: 'Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.'
      title: Auto-Minify Assets
    max_upload:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: identifier of the zone setting.
              enum:
                - max_upload
              example: max_upload
            value:
              $ref: '#/components/schemas/max_upload_value'
      description: Maximum size of an allowable upload.
      title: Max Upload
    mobile_redirect:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: Identifier of the zone setting.
              enum:
                - mobile_redirect
              example: mobile_redirect
            value:
              $ref: '#/components/schemas/mobile_redirect_value'
      description: 'Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.'
      title: Mobile Redirect
    mirage:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - mirage
              example: mirage
            value:
              $ref: '#/components/schemas/mirage_value'
      description: 'Automatically optimize image loading for website visitors on mobile devices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more information.'
      title: Mirage Image Optimization
    nel:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: Zone setting identifier.
              enum:
                - nel
              example: nel
            value:
              $ref: '#/components/schemas/nel_value'
      description: 'Enable Network Error Logging reporting on your zone. (Beta) '
      title: Network Error Logging
    polish:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - polish
              example: polish
            value:
              $ref: '#/components/schemas/polish_value'
      description: 'Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.'
      title: Polish Image Optimization
    webp:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - webp
              example: webp
            value:
              $ref: '#/components/schemas/webp_value'
      description: 'When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.'
      title: Polish WebP Conversion
    prefetch_preload:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - prefetch_preload
              example: prefetch_preload
            value:
              $ref: '#/components/schemas/prefetch_preload_value'
      default: 'off'
      description: Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.
      title: Prefetch preload
    privacy_pass:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - privacy_pass
              example: privacy_pass
            value:
              $ref: '#/components/schemas/privacy_pass_value'
      description: 'Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).'
      title: Privacy Pass
    response_buffering:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - response_buffering
              example: response_buffering
            value:
              $ref: '#/components/schemas/response_buffering_value'
      default: 'off'
      description: 'Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.'
      title: Response Buffering
    rocket_loader:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - rocket_loader
              example: rocket_loader
            value:
              $ref: '#/components/schemas/rocket_loader_value'
      description: 'Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site''s Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page''s rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.'
      title: Rocket Loader
    security_header:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone's security header.
              enum:
                - security_header
              example: security_header
            value:
              $ref: '#/components/schemas/security_header_value'
      description: Cloudflare security header for a zone.
      title: Security Header
    security_level:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - security_level
              example: security_level
            value:
              $ref: '#/components/schemas/security_level_value'
      description: 'Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).'
      title: Security Level
    server_side_exclude:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - server_side_exclude
              example: server_side_exclude
            value:
              $ref: '#/components/schemas/server_side_exclude_value'
      description: 'If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won''t see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won''t see the SSE tags in your HTML source when it''s served through Cloudflare. SSE will still function in this case, as Cloudflare''s HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor''s computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).'
      title: Server Side Exclude
    ssl:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - ssl
              example: ssl
            value:
              $ref: '#/components/schemas/ssl_value'
      description: 'SSL encrypts your visitor''s connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don''t need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You''ll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You''ll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).'
      title: SSL
    ssl_recommender:
      allOf:
        - properties:
            enabled:
              $ref: '#/components/schemas/ssl_recommender_enabled'
            id:
              description: Enrollment value for SSL/TLS Recommender.
              enum:
                - ssl_recommender
              example: ssl_recommender
        - properties:
            editable:
              $ref: '#/components/schemas/editable'
            modified_on:
              $ref: '#/components/schemas/properties-modified_on'
      description: Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.
      title: SSL/TLS Recommender
    tls_client_auth:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - tls_client_auth
              example: tls_client_auth
            value:
              $ref: '#/components/schemas/tls_client_auth_value'
      description: TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).
      title: TLS Client Authentication
    true_client_ip_header:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - true_client_ip_header
              example: true_client_ip_header
            value:
              $ref: '#/components/schemas/true_client_ip_header_value'
      default: 'off'
      description: Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.
      title: True Client IP Header
    proxy_read_timeout:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - proxy_read_timeout
              example: proxy_read_timeout
            value:
              $ref: '#/components/schemas/proxy_read_timeout_value'
      description: Maximum time between two read operations from origin.
      title: Proxy Read Timeout
    waf:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - waf
              example: waf
            value:
              $ref: '#/components/schemas/waf_value'
      description: 'The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will ''challenge'' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare''s WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).'
      title: Web Application Firewall
    min_tls_version:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - min_tls_version
              example: min_tls_version
            value:
              $ref: '#/components/schemas/min_tls_version_value'
      default: '1.0'
      description: 'Only accepts HTTPS requests that use at least the TLS protocol version specified. For example, if TLS 1.1 is selected, TLS 1.0 connections will be rejected, while 1.1, 1.2, and 1.3 (if enabled) will be permitted.'
      title: Zone Minimum TLS Version value
    ciphers:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - ciphers
              example: ciphers
            value:
              $ref: '#/components/schemas/ciphers_value'
      default: []
      description: An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
      title: Zone ciphers allowed for TLS termination
    tls_1_3:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - tls_1_3
              example: tls_1_3
            value:
              $ref: '#/components/schemas/tls_1_3_value'
      default: 'off'
      description: Enables Crypto TLS 1.3 feature for a zone.
      title: Enable TLS 1.3 value for a zone
    opportunistic_encryption:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - opportunistic_encryption
              example: opportunistic_encryption
            value:
              $ref: '#/components/schemas/opportunistic_encryption_value'
      description: Enables the Opportunistic Encryption feature for a zone.
      title: Enable Opportunistic Encryption for a zone
    automatic_https_rewrites:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - automatic_https_rewrites
              example: automatic_https_rewrites
            value:
              $ref: '#/components/schemas/automatic_https_rewrites_value'
      default: 'off'
      description: Enable the Automatic HTTPS Rewrites feature for this zone.
      title: Zone Enable Automatic HTTPS Rewrites
    http2:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - http2
              example: http2
            value:
              $ref: '#/components/schemas/http2_value'
      description: HTTP2 enabled for this zone.
      title: HTTP2 Value
    http3:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - http3
              example: http3
            value:
              $ref: '#/components/schemas/http3_value'
      description: HTTP3 enabled for this zone.
      title: HTTP3 Value
    origin_max_http_version:
      allOf:
        - properties:
            id:
              description: Identifier of the zone setting.
              enum:
                - origin_max_http_version
              example: origin_max_http_version
            modified_on:
              description: last time this setting was modified.
              example: '2014-01-01T05:20:00.12345Z'
              format: date-time
              nullable: true
              readOnly: true
              type: string
          required:
            - id
      description: 'The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.).'
      title: Origin Max HTTP version
    0rtt:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - 0rtt
              example: 0rtt
            value:
              $ref: '#/components/schemas/0rtt_value'
      description: 0-RTT session resumption enabled for this zone.
      title: 0-RTT Value
    pseudo_ipv4:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              default: pseudo_ipv4
              description: Value of the Pseudo IPv4 setting.
              enum:
                - pseudo_ipv4
            value:
              $ref: '#/components/schemas/pseudo_ipv4_value'
      description: The value set for the Pseudo IPv4 setting.
      title: Pseudo IPv4 Value
    always_use_https:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - always_use_https
              example: always_use_https
            value:
              $ref: '#/components/schemas/always_use_https_value'
      default: 'off'
      description: 'Reply to all requests for URLs that use "http" with a 301 redirect to the equivalent "https" URL. If you only want to redirect for a subset of requests, consider creating an "Always use HTTPS" page rule.'
      title: Zone Enable Always Use HTTPS
    opportunistic_onion:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - opportunistic_onion
              example: opportunistic_onion
            value:
              $ref: '#/components/schemas/opportunistic_onion_value'
      default: 'off'
      description: 'Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.'
      title: Zone Enable Onion Routing
    orange_to_orange:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - orange_to_orange
              example: orange_to_orange
            value:
              $ref: '#/components/schemas/orange_to_orange_value'
      description: Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.
      title: Orange to Orange
    image_resizing:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - image_resizing
              example: image_resizing
            value:
              $ref: '#/components/schemas/image_resizing_value'
      description: 'Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare''s network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.'
      title: Image Resizing
    h2_prioritization:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - h2_prioritization
              example: h2_prioritization
            value:
              $ref: '#/components/schemas/h2_prioritization_value'
      description: HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.
      title: HTTP/2 Edge Prioritization
    schemas-automatic_platform_optimization:
      allOf:
        - $ref: '#/components/schemas/schemas-base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - automatic_platform_optimization
              example: automatic_platform_optimization
            value:
              $ref: '#/components/schemas/automatic_platform_optimization'
      description: '[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare''s edge network and caches third-party fonts.'
      title: Automatic Platform Optimization for WordPress
    schemas-base:
      properties:
        editable:
          default: true
          description: Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).
          enum:
            - true
            - false
          readOnly: true
          type: boolean
        id:
          description: Identifier of the zone setting.
          example: development_mode
          type: string
        modified_on:
          description: last time this setting was modified.
          example: '2014-01-01T05:20:00.12345Z'
          format: date-time
          nullable: true
          readOnly: true
          type: string
        value:
          anyOf:
            - type: string
            - type: number
            - type: object
            - items: {}
              type: array
          description: Current value of the zone setting.
          example: 'on'
      required:
        - id
        - value
    always_online_value:
      default: 'on'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    advanced_ddos_value:
      default: 'off'
      description: |-
        Value of the zone setting.
        Notes: Defaults to on for Business+ plans
      enum:
        - 'on'
        - 'off'
      type: string
    brotli_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'off'
        - 'on'
      type: string
    browser_cache_ttl_value:
      default: 14400
      description: |-
        Value of the zone setting.
        Notes: Setting a TTL of 0 is equivalent to selecting `Respect Existing Headers`
      enum:
        - 0
        - 30
        - 60
        - 120
        - 300
        - 1200
        - 1800
        - 3600
        - 7200
        - 10800
        - 14400
        - 18000
        - 28800
        - 43200
        - 57600
        - 72000
        - 86400
        - 172800
        - 259200
        - 345600
        - 432000
        - 691200
        - 1382400
        - 2073600
        - 2678400
        - 5356800
        - 16070400
        - 31536000
      type: number
    browser_check_value:
      default: 'on'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    cname_flattening_value:
      default: flatten_at_root
      description: Value of the cname flattening setting.
      enum:
        - flatten_at_root
        - flatten_all
      type: string
    cache_level_value:
      default: aggressive
      description: Value of the zone setting.
      enum:
        - aggressive
        - basic
        - simplified
      type: string
    challenge_ttl_value:
      default: 1800
      description: Value of the zone setting.
      enum:
        - 300
        - 900
        - 1800
        - 2700
        - 3600
        - 7200
        - 10800
        - 14400
        - 28800
        - 57600
        - 86400
        - 604800
        - 2592000
        - 31536000
      type: number
    development_mode_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    early_hints_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    edge_cache_ttl_value:
      default: 7200
      description: |-
        Value of the zone setting.
        Notes: The minimum TTL available depends on the plan level of the zone. (Enterprise = 30, Business = 1800, Pro = 3600, Free = 7200)
      enum:
        - 30
        - 60
        - 300
        - 1200
        - 1800
        - 3600
        - 7200
        - 10800
        - 14400
        - 18000
        - 28800
        - 43200
        - 57600
        - 72000
        - 86400
        - 172800
        - 259200
        - 345600
        - 432000
        - 518400
        - 604800
      type: number
    origin_error_page_pass_thru_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    sort_query_string_for_cache_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    email_obfuscation_value:
      default: 'on'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    hotlink_protection_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    ip_geolocation_value:
      default: 'on'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    ipv6_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'off'
        - 'on'
      type: string
    websockets_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'off'
        - 'on'
      type: string
    sha1_support_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'off'
        - 'on'
      type: string
    tls_1_2_only_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'off'
        - 'on'
      type: string
    minify_value:
      description: Value of the zone setting.
      properties:
        css:
          default: 'off'
          description: Automatically minify all CSS files for your website.
          enum:
            - 'on'
            - 'off'
        html:
          default: 'off'
          description: Automatically minify all HTML files for your website.
          enum:
            - 'on'
            - 'off'
        js:
          default: 'off'
          description: Automatically minify all JavaScript files for your website.
          enum:
            - 'on'
            - 'off'
      type: object
    max_upload_value:
      default: 100
      description: |-
        Value of the zone setting.
        Notes: The size depends on the plan level of the zone. (Enterprise = 500, Business = 200, Pro = 100, Free = 100)
      enum:
        - 100
        - 200
        - 500
      type: number
    mobile_redirect_value:
      description: Value of the zone setting.
      properties:
        mobile_subdomain:
          description: Which subdomain prefix you wish to redirect visitors on mobile devices to (subdomain must already exist).
          example: m
          minLength: 1
          nullable: true
          type: string
        status:
          default: 'off'
          description: Whether or not mobile redirect is enabled.
          enum:
            - 'on'
            - 'off'
        strip_uri:
          default: false
          description: 'Whether to drop the current page path and redirect to the mobile subdomain URL root, or keep the path and redirect to the same page on the mobile subdomain.'
          example: false
          type: boolean
      type: object
    mirage_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    nel_value:
      description: Value of the zone setting.
      properties:
        enabled:
          default: false
          example: false
          type: boolean
      type: object
    polish_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'off'
        - lossless
        - lossy
      type: string
    webp_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'off'
        - 'on'
      type: string
    prefetch_preload_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    privacy_pass_value:
      default: 'on'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    response_buffering_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    rocket_loader_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    security_header_value:
      properties:
        strict_transport_security:
          description: Strict Transport Security.
          properties:
            enabled:
              description: Whether or not strict transport security is enabled.
              example: true
              type: boolean
            include_subdomains:
              description: Include all subdomains for strict transport security.
              example: true
              type: boolean
            max_age:
              description: Max age in seconds of the strict transport security.
              example: 86400
              type: number
            nosniff:
              description: 'Whether or not to include ''X-Content-Type-Options: nosniff'' header.'
              example: true
              type: boolean
          type: object
      type: object
    security_level_value:
      default: medium
      description: Value of the zone setting.
      enum:
        - 'off'
        - essentially_off
        - low
        - medium
        - high
        - under_attack
      type: string
    server_side_exclude_value:
      default: 'on'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    ssl_value:
      default: 'off'
      description: |-
        Value of the zone setting.
        Notes: Depends on the zone's plan level
      enum:
        - 'off'
        - flexible
        - full
        - strict
      type: string
    ssl_recommender_enabled:
      default: false
      description: ssl-recommender enrollment setting.
      type: boolean
    editable:
      default: true
      description: Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).
      enum:
        - true
        - false
      readOnly: true
      type: boolean
    properties-modified_on:
      description: last time this setting was modified.
      example: '2014-01-01T05:20:00.12345Z'
      format: date-time
      nullable: true
      readOnly: true
      type: string
    tls_client_auth_value:
      default: 'on'
      description: value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    true_client_ip_header_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    proxy_read_timeout_value:
      default: 100
      description: |-
        Value of the zone setting.
        Notes: Value must be between 1 and 6000
      type: number
    waf_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    min_tls_version_value:
      default: '1.0'
      description: Value of the zone setting.
      enum:
        - '1.0'
        - '1.1'
        - '1.2'
        - '1.3'
      type: string
    ciphers_value:
      default: []
      description: Value of the zone setting.
      example:
        - ECDHE-RSA-AES128-GCM-SHA256
        - AES128-SHA
      items:
        type: string
      type: array
      uniqueItems: true
    tls_1_3_value:
      default: 'off'
      description: |-
        Value of the zone setting.
        Notes: Default value depends on the zone's plan level.
      enum:
        - 'on'
        - 'off'
        - zrt
      type: string
    opportunistic_encryption_value:
      default: 'on'
      description: |-
        Value of the zone setting.
        Notes: Default value depends on the zone's plan level.
      enum:
        - 'on'
        - 'off'
      type: string
    automatic_https_rewrites_value:
      default: 'on'
      description: |-
        Value of the zone setting.
        Notes: Default value depends on the zone's plan level.
      enum:
        - 'on'
        - 'off'
      type: string
    http2_value:
      default: 'off'
      description: Value of the HTTP2 setting.
      enum:
        - 'on'
        - 'off'
      type: string
    http3_value:
      default: 'off'
      description: Value of the HTTP3 setting.
      enum:
        - 'on'
        - 'off'
      type: string
    0rtt_value:
      default: 'off'
      description: Value of the 0-RTT setting.
      enum:
        - 'on'
        - 'off'
      type: string
    pseudo_ipv4_value:
      default: 'off'
      description: Value of the Pseudo IPv4 setting.
      enum:
        - 'off'
        - add_header
        - overwrite_header
      type: string
    always_use_https_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    opportunistic_onion_value:
      default: 'off'
      description: |-
        Value of the zone setting.
        Notes: Default value depends on the zone's plan level.
      enum:
        - 'on'
        - 'off'
      type: string
    orange_to_orange_value:
      default: 'on'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
    image_resizing_value:
      default: 'off'
      description: 'Whether the feature is enabled, disabled, or enabled in `open proxy` mode.'
      enum:
        - 'on'
        - 'off'
        - open
      type: string
    h2_prioritization_value:
      default: 'off'
      description: Value of the zone setting.
      enum:
        - 'on'
        - 'off'
        - custom
      type: string
    automatic_platform_optimization:
      properties:
        cache_by_device_type:
          description: 'Indicates whether or not [cache by device type](https://developers.cloudflare.com/automatic-platform-optimization/reference/cache-device-type/) is enabled.'
          example: false
          type: boolean
        cf:
          default: false
          description: Indicates whether or not Cloudflare proxy is enabled.
          example: true
          type: boolean
        enabled:
          default: false
          description: Indicates whether or not Automatic Platform Optimization is enabled.
          example: true
          type: boolean
        hostnames:
          description: An array of hostnames where Automatic Platform Optimization for WordPress is activated.
          example:
            - www.example.com
            - example.com
            - shop.example.com
          items:
            format: hostname
            type: string
          type: array
        wordpress:
          default: false
          description: Indicates whether or not site is powered by WordPress.
          example: true
          type: boolean
        wp_plugin:
          default: false
          description: 'Indicates whether or not [Cloudflare for WordPress plugin](https://wordpress.org/plugins/cloudflare/) is installed.'
          example: true
          type: boolean
      required:
        - enabled
        - cf
        - wordpress
        - wp_plugin
        - hostnames
        - cache_by_device_type
      type: object
    zone_settings_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
    origin_max_http_version_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/origin_max_http_version'
            - properties:
                value:
                  $ref: '#/components/schemas/origin_max_http_version_value'
              required:
                - value
    origin_max_http_version_value:
      default: '2'
      description: Value of the Origin Max HTTP version setting (Note that the default value for Enterprise is "1").
      enum:
        - '1'
        - '2'
      type: string
    subscription-v2_components-schemas-identifier:
      description: Subscription identifier tag.
      example: 506e3185e9c882d175a2d0cb0093d9f2
      maxLength: 32
      readOnly: true
      type: string
    zone_subscription_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
    subscription-v2:
      properties:
        app:
          properties:
            install_id:
              $ref: '#/components/schemas/install_id'
        component_values:
          $ref: '#/components/schemas/component_values'
        currency:
          $ref: '#/components/schemas/currency'
        current_period_end:
          $ref: '#/components/schemas/current_period_end'
        current_period_start:
          $ref: '#/components/schemas/current_period_start'
        frequency:
          $ref: '#/components/schemas/frequency'
        id:
          $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
        price:
          $ref: '#/components/schemas/price'
        rate_plan:
          $ref: '#/components/schemas/rate_plan'
        state:
          $ref: '#/components/schemas/state'
        zone:
          $ref: '#/components/schemas/zone'
      type: object
    install_id:
      description: app install id.
      type: string
    component_values:
      description: The list of add-ons subscribed to.
      items:
        $ref: '#/components/schemas/component_value'
      type: array
    current_period_end:
      description: The end of the current period and also when the next billing is due.
      example: '2014-03-31T12:20:00Z'
      format: date-time
      readOnly: true
      type: string
    current_period_start:
      description: When the current billing period started. May match initial_period_start if this is the first period.
      example: '2014-05-11T12:20:00Z'
      format: date-time
      readOnly: true
      type: string
    frequency:
      description: How often the subscription is renewed automatically.
      enum:
        - weekly
        - monthly
        - quarterly
        - yearly
      example: monthly
      type: string
    price:
      description: 'The price of the subscription that will be billed, in US dollars.'
      example: 20
      readOnly: true
      type: number
    rate_plan:
      description: The rate plan applied to the subscription.
      properties:
        currency:
          description: The currency applied to the rate plan subscription.
          example: USD
          type: string
        externally_managed:
          description: Whether this rate plan is managed externally from Cloudflare.
          example: false
          type: boolean
        id:
          description: The ID of the rate plan.
          example: free
        is_contract:
          description: Whether a rate plan is enterprise-based (or newly adopted term contract).
          example: false
          type: boolean
        public_name:
          description: The full name of the rate plan.
          example: Business Plan
          type: string
        scope:
          description: The scope that this rate plan applies to.
          example: zone
          type: string
        sets:
          description: The list of sets this rate plan applies to.
          items:
            type: string
          type: array
      type: object
    state:
      description: The state that the subscription is in.
      enum:
        - Trial
        - Provisioned
        - Paid
        - AwaitingPayment
        - Cancelled
        - Failed
        - Expired
      example: Paid
      readOnly: true
      type: string
    zone:
      description: A simple zone object. May have null properties if not a zone subscription.
      properties:
        id:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        name:
          $ref: '#/components/schemas/properties-name'
      type: object
    component_value:
      description: A component value for a subscription.
      properties:
        default:
          description: The default amount assigned.
          example: 5
          type: number
        name:
          description: The name of the component value.
          example: page_rules
          type: string
        price:
          description: The unit price for the component value.
          example: 5
          type: number
        value:
          description: The amount of the component value assigned.
          example: 20
          type: number
      type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    filters:
      id: cloudflare.zones.filters
      name: filters
      title: Filters
      methods:
        delete_filters:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_filters:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _list_filters:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_filters:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_filters:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_a_filter:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_a_filter:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_a_filter:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_a_filter:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1filters~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/filters/methods/list_filters'
          - $ref: '#/components/x-stackQL-resources/filters/methods/get_a_filter'
        insert:
          - $ref: '#/components/x-stackQL-resources/filters/methods/create_filters'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/filters/methods/delete_filters'
          - $ref: '#/components/x-stackQL-resources/filters/methods/delete_a_filter'
    firewall_rules:
      id: cloudflare.zones.firewall_rules
      name: firewall_rules
      title: Firewall Rules
      methods:
        delete_firewall_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_firewall_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _list_firewall_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_priority_of_firewall_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_firewall_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_firewall_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_a_firewall_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_a_firewall_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_a_firewall_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_priority_of_a_firewall_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_a_firewall_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1rules~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list_firewall_rules'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_firewall_rules'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete_firewall_rules'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete_a_firewall_rule'
    healthchecks:
      id: cloudflare.zones.healthchecks
      name: healthchecks
      title: Healthchecks
      methods:
        health_checks_list_health_checks:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _health_checks_list_health_checks:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        health_checks_create_health_check:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        health_checks_delete_health_check:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        health_checks_health_check_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _health_checks_health_check_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        health_checks_patch_health_check:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        health_checks_update_health_check:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1{identifier}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/healthchecks/methods/health_checks_list_health_checks'
          - $ref: '#/components/x-stackQL-resources/healthchecks/methods/health_checks_health_check_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/healthchecks/methods/health_checks_create_health_check'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/healthchecks/methods/health_checks_delete_health_check'
    healthchecks_preview:
      id: cloudflare.zones.healthchecks_preview
      name: healthchecks_preview
      title: Healthchecks Preview
      methods:
        health_checks_create_preview_health_check:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        health_checks_delete_preview_health_check:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1preview~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        health_checks_health_check_preview_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1preview~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _health_checks_health_check_preview_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1healthchecks~1preview~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/healthchecks_preview/methods/health_checks_health_check_preview_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/healthchecks_preview/methods/health_checks_create_preview_health_check'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/healthchecks_preview/methods/health_checks_delete_preview_health_check'
    managed_headers:
      id: cloudflare.zones.managed_headers
      name: managed_headers
      title: Managed Headers
      methods:
        managed_transforms_list_managed_transforms:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1managed_headers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _managed_transforms_list_managed_transforms:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1managed_headers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        managed_transforms_update_status_of_managed_transforms:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1managed_headers/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_headers/methods/managed_transforms_list_managed_transforms'
        insert: []
        update: []
        delete: []
    rate_limits:
      id: cloudflare.zones.rate_limits
      name: rate_limits
      title: Rate Limits
      methods:
        for_a_zone_list_rate_limits:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1rate_limits/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _for_a_zone_list_rate_limits:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1rate_limits/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        for_a_zone_create_a_rate_limit:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1rate_limits/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        for_a_zone_delete_a_rate_limit:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1rate_limits~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        for_a_zone_get_a_rate_limit:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1rate_limits~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _for_a_zone_get_a_rate_limit:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1rate_limits~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        for_a_zone_update_a_rate_limit:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1rate_limits~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rate_limits/methods/for_a_zone_list_rate_limits'
          - $ref: '#/components/x-stackQL-resources/rate_limits/methods/for_a_zone_get_a_rate_limit'
        insert:
          - $ref: '#/components/x-stackQL-resources/rate_limits/methods/for_a_zone_create_a_rate_limit'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rate_limits/methods/for_a_zone_delete_a_rate_limit'
    rulesets_phases_entrypoint:
      id: cloudflare.zones.rulesets_phases_entrypoint
      name: rulesets_phases_entrypoint
      title: Rulesets Phases Entrypoint
      methods:
        transform_rules_list_transform_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{phase}~1entrypoint/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _transform_rules_list_transform_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{phase}~1entrypoint/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        transform_rules_update_transform_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1rulesets~1phases~1{phase}~1entrypoint/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    url_normalization:
      id: cloudflare.zones.url_normalization
      name: url_normalization
      title: Url Normalization
      methods:
        get_url_normalization_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1url_normalization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _get_url_normalization_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1url_normalization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_url_normalization_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_id}~1url_normalization/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/url_normalization/methods/get_url_normalization_settings'
        insert: []
        update: []
        delete: []
    zones:
      id: cloudflare.zones.zones
      name: zones
      title: Zones
      methods:
        zone_list_zones:
          operation:
            $ref: '#/paths/~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_list_zones:
          operation:
            $ref: '#/paths/~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_create_zone:
          operation:
            $ref: '#/paths/~1zones/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_delete_zone:
          operation:
            $ref: '#/paths/~1zones~1{identifier}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_zone_details:
          operation:
            $ref: '#/paths/~1zones~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_zone_details:
          operation:
            $ref: '#/paths/~1zones~1{identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_edit_zone:
          operation:
            $ref: '#/paths/~1zones~1{identifier}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones/methods/zone_list_zones'
          - $ref: '#/components/x-stackQL-resources/zones/methods/zone_zone_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones/methods/zone_create_zone'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones/methods/zone_delete_zone'
    activation_check:
      id: cloudflare.zones.activation_check
      name: activation_check
      title: Activation Check
      methods:
        zone_zone_activation_check:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1activation_check/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    purge_cache:
      id: cloudflare.zones.purge_cache
      name: purge_cache
      title: Purge Cache
      methods:
        'zone_purge_files_by_cache_tags,_host,_or_prefix':
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1purge_cache/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    analytics_colos:
      id: cloudflare.zones.analytics_colos
      name: analytics_colos
      title: Analytics Colos
      methods:
        zone_analytics___deprecated__get_analytics_by_co_locations:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1analytics~1colos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_analytics___deprecated__get_analytics_by_co_locations:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1analytics~1colos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analytics_colos/methods/zone_analytics___deprecated__get_analytics_by_co_locations'
        insert: []
        update: []
        delete: []
    analytics_dashboard:
      id: cloudflare.zones.analytics_dashboard
      name: analytics_dashboard
      title: Analytics Dashboard
      methods:
        zone_analytics___deprecated__get_dashboard:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1analytics~1dashboard/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_analytics___deprecated__get_dashboard:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1analytics~1dashboard/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analytics_dashboard/methods/zone_analytics___deprecated__get_dashboard'
        insert: []
        update: []
        delete: []
    cache_reserve:
      id: cloudflare.zones.cache_reserve
      name: cache_reserve
      title: Cache Reserve
      methods:
        zone_cache_settings_get_cache_reserve_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1cache~1cache_reserve/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_cache_settings_get_cache_reserve_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1cache~1cache_reserve/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_cache_settings_change_cache_reserve_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1cache~1cache_reserve/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cache_reserve/methods/zone_cache_settings_get_cache_reserve_setting'
        insert: []
        update: []
        delete: []
    cache_variants:
      id: cloudflare.zones.cache_variants
      name: cache_variants
      title: Cache Variants
      methods:
        zone_cache_settings_delete_variants_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1cache~1variants/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_cache_settings_get_variants_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1cache~1variants/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result.value
        _zone_cache_settings_get_variants_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1cache~1variants/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_cache_settings_change_variants_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1cache~1variants/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cache_variants/methods/zone_cache_settings_get_variants_setting'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cache_variants/methods/zone_cache_settings_delete_variants_setting'
    firewall_lockdown_rules:
      id: cloudflare.zones.firewall_lockdown_rules
      name: firewall_lockdown_rules
      title: Firewall Lockdown Rules
      methods:
        zone_lockdown_list_zone_lockdown_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1lockdowns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_lockdown_list_zone_lockdown_rules:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1lockdowns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_lockdown_create_a_zone_lockdown_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1lockdowns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_lockdown_delete_a_zone_lockdown_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1lockdowns~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_lockdown_get_a_zone_lockdown_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1lockdowns~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_lockdown_get_a_zone_lockdown_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1lockdowns~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_lockdown_update_a_zone_lockdown_rule:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1firewall~1lockdowns~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_lockdown_rules/methods/zone_lockdown_list_zone_lockdown_rules'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_lockdown_rules/methods/zone_lockdown_create_a_zone_lockdown_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_lockdown_rules/methods/zone_lockdown_delete_a_zone_lockdown_rule'
    available_plans:
      id: cloudflare.zones.available_plans
      name: available_plans
      title: Available Plans
      methods:
        zone_rate_plan_list_available_plans:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1available_plans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_rate_plan_list_available_plans:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1available_plans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_rate_plan_available_plan_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1available_plans~1{plan_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_rate_plan_available_plan_details:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1available_plans~1{plan_identifier}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_plans/methods/zone_rate_plan_list_available_plans'
          - $ref: '#/components/x-stackQL-resources/available_plans/methods/zone_rate_plan_available_plan_details'
        insert: []
        update: []
        delete: []
    available_rate_plans:
      id: cloudflare.zones.available_rate_plans
      name: available_rate_plans
      title: Available Rate Plans
      methods:
        zone_rate_plan_list_available_rate_plans:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1available_rate_plans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_rate_plan_list_available_rate_plans:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1available_rate_plans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_rate_plans/methods/zone_rate_plan_list_available_rate_plans'
        insert: []
        update: []
        delete: []
    settings:
      id: cloudflare.zones.settings
      name: settings
      title: Settings
      methods:
        zone_settings_get_all_zone_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_settings_get_all_zone_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_edit_zone_settings_info:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_get_0_rtt_session_resumption_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~10rtt/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_0_rtt_session_resumption_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~10rtt/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_0_rtt_session_resumption_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~10rtt/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_get_i_pv6_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ipv6/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_i_pv6_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ipv6/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_i_pv6_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ipv6/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_get_pseudo_i_pv4_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1pseudo_ipv4/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_pseudo_i_pv4_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1pseudo_ipv4/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_pseudo_i_pv4_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1pseudo_ipv4/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/zone_settings_get_all_zone_settings'
        insert: []
        update: []
        delete: []
    settings_advanced_ddos:
      id: cloudflare.zones.settings_advanced_ddos
      name: settings_advanced_ddos
      title: Settings Advanced Ddos
      methods:
        zone_settings_get_advanced_ddos_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1advanced_ddos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_advanced_ddos_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1advanced_ddos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_advanced_ddos/methods/zone_settings_get_advanced_ddos_setting'
        insert: []
        update: []
        delete: []
    settings_always_online:
      id: cloudflare.zones.settings_always_online
      name: settings_always_online
      title: Settings Always Online
      methods:
        zone_settings_get_always_online_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1always_online/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_always_online_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1always_online/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_always_online_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1always_online/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_always_online/methods/zone_settings_get_always_online_setting'
        insert: []
        update: []
        delete: []
    settings_always_use_https:
      id: cloudflare.zones.settings_always_use_https
      name: settings_always_use_https
      title: Settings Always Use Https
      methods:
        zone_settings_get_always_use_https_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1always_use_https/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_always_use_https_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1always_use_https/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_always_use_https_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1always_use_https/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_always_use_https/methods/zone_settings_get_always_use_https_setting'
        insert: []
        update: []
        delete: []
    settings_automatic_https_rewrites:
      id: cloudflare.zones.settings_automatic_https_rewrites
      name: settings_automatic_https_rewrites
      title: Settings Automatic Https Rewrites
      methods:
        zone_settings_get_automatic_https_rewrites_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1automatic_https_rewrites/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_automatic_https_rewrites_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1automatic_https_rewrites/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_automatic_https_rewrites_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1automatic_https_rewrites/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_automatic_https_rewrites/methods/zone_settings_get_automatic_https_rewrites_setting'
        insert: []
        update: []
        delete: []
    settings_automatic_platform_optimization:
      id: cloudflare.zones.settings_automatic_platform_optimization
      name: settings_automatic_platform_optimization
      title: Settings Automatic Platform Optimization
      methods:
        zone_settings_get_automatic_platform_optimization_for_word_press_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1automatic_platform_optimization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_automatic_platform_optimization_for_word_press_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1automatic_platform_optimization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_automatic_platform_optimization_for_word_press_settings:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1automatic_platform_optimization/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_automatic_platform_optimization/methods/zone_settings_get_automatic_platform_optimization_for_word_press_settings'
        insert: []
        update: []
        delete: []
    settings_brotli:
      id: cloudflare.zones.settings_brotli
      name: settings_brotli
      title: Settings Brotli
      methods:
        zone_settings_get_brotli_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1brotli/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_brotli_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1brotli/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_brotli_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1brotli/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_brotli/methods/zone_settings_get_brotli_setting'
        insert: []
        update: []
        delete: []
    settings_browser_cache_ttl:
      id: cloudflare.zones.settings_browser_cache_ttl
      name: settings_browser_cache_ttl
      title: Settings Browser Cache Ttl
      methods:
        zone_settings_get_browser_cache_ttl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1browser_cache_ttl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_browser_cache_ttl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1browser_cache_ttl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_browser_cache_ttl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1browser_cache_ttl/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_browser_cache_ttl/methods/zone_settings_get_browser_cache_ttl_setting'
        insert: []
        update: []
        delete: []
    settings_browser_check:
      id: cloudflare.zones.settings_browser_check
      name: settings_browser_check
      title: Settings Browser Check
      methods:
        zone_settings_get_browser_check_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1browser_check/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_browser_check_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1browser_check/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_browser_check_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1browser_check/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_browser_check/methods/zone_settings_get_browser_check_setting'
        insert: []
        update: []
        delete: []
    settings_cache_level:
      id: cloudflare.zones.settings_cache_level
      name: settings_cache_level
      title: Settings Cache Level
      methods:
        zone_settings_get_cache_level_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1cache_level/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_cache_level_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1cache_level/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_cache_level_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1cache_level/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_cache_level/methods/zone_settings_get_cache_level_setting'
        insert: []
        update: []
        delete: []
    settings_challenge_ttl:
      id: cloudflare.zones.settings_challenge_ttl
      name: settings_challenge_ttl
      title: Settings Challenge Ttl
      methods:
        zone_settings_get_challenge_ttl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1challenge_ttl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_challenge_ttl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1challenge_ttl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_challenge_ttl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1challenge_ttl/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_challenge_ttl/methods/zone_settings_get_challenge_ttl_setting'
        insert: []
        update: []
        delete: []
    settings_ciphers:
      id: cloudflare.zones.settings_ciphers
      name: settings_ciphers
      title: Settings Ciphers
      methods:
        zone_settings_get_ciphers_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ciphers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_ciphers_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ciphers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_ciphers_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ciphers/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_ciphers/methods/zone_settings_get_ciphers_setting'
        insert: []
        update: []
        delete: []
    settings_development_mode:
      id: cloudflare.zones.settings_development_mode
      name: settings_development_mode
      title: Settings Development Mode
      methods:
        zone_settings_get_development_mode_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1development_mode/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_development_mode_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1development_mode/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_development_mode_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1development_mode/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_development_mode/methods/zone_settings_get_development_mode_setting'
        insert: []
        update: []
        delete: []
    settings_early_hints:
      id: cloudflare.zones.settings_early_hints
      name: settings_early_hints
      title: Settings Early Hints
      methods:
        zone_settings_get_early_hints_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1early_hints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_early_hints_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1early_hints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_early_hints_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1early_hints/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_early_hints/methods/zone_settings_get_early_hints_setting'
        insert: []
        update: []
        delete: []
    settings_email_obfuscation:
      id: cloudflare.zones.settings_email_obfuscation
      name: settings_email_obfuscation
      title: Settings Email Obfuscation
      methods:
        zone_settings_get_email_obfuscation_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1email_obfuscation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_email_obfuscation_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1email_obfuscation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_email_obfuscation_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1email_obfuscation/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_email_obfuscation/methods/zone_settings_get_email_obfuscation_setting'
        insert: []
        update: []
        delete: []
    settings_h2_prioritization:
      id: cloudflare.zones.settings_h2_prioritization
      name: settings_h2_prioritization
      title: Settings H2 Prioritization
      methods:
        zone_settings_get_http__2_edge_prioritization_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1h2_prioritization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_http__2_edge_prioritization_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1h2_prioritization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_http__2_edge_prioritization_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1h2_prioritization/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_h2_prioritization/methods/zone_settings_get_http__2_edge_prioritization_setting'
        insert: []
        update: []
        delete: []
    settings_hotlink_protection:
      id: cloudflare.zones.settings_hotlink_protection
      name: settings_hotlink_protection
      title: Settings Hotlink Protection
      methods:
        zone_settings_get_hotlink_protection_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1hotlink_protection/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_hotlink_protection_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1hotlink_protection/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_hotlink_protection_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1hotlink_protection/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_hotlink_protection/methods/zone_settings_get_hotlink_protection_setting'
        insert: []
        update: []
        delete: []
    settings_http2:
      id: cloudflare.zones.settings_http2
      name: settings_http2
      title: Settings Http2
      methods:
        zone_settings_get_h_t_t_p_2_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1http2/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_h_t_t_p_2_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1http2/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_h_t_t_p_2_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1http2/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_http2/methods/zone_settings_get_h_t_t_p_2_setting'
        insert: []
        update: []
        delete: []
    settings_http3:
      id: cloudflare.zones.settings_http3
      name: settings_http3
      title: Settings Http3
      methods:
        zone_settings_get_h_t_t_p_3_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1http3/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_h_t_t_p_3_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1http3/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_h_t_t_p_3_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1http3/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_http3/methods/zone_settings_get_h_t_t_p_3_setting'
        insert: []
        update: []
        delete: []
    settings_image_resizing:
      id: cloudflare.zones.settings_image_resizing
      name: settings_image_resizing
      title: Settings Image Resizing
      methods:
        zone_settings_get_image_resizing_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1image_resizing/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_image_resizing_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1image_resizing/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_image_resizing_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1image_resizing/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_image_resizing/methods/zone_settings_get_image_resizing_setting'
        insert: []
        update: []
        delete: []
    settings_ip_geolocation:
      id: cloudflare.zones.settings_ip_geolocation
      name: settings_ip_geolocation
      title: Settings Ip Geolocation
      methods:
        zone_settings_get_ip_geolocation_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ip_geolocation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_ip_geolocation_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ip_geolocation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_ip_geolocation_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ip_geolocation/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_ip_geolocation/methods/zone_settings_get_ip_geolocation_setting'
        insert: []
        update: []
        delete: []
    settings_min_tls_version:
      id: cloudflare.zones.settings_min_tls_version
      name: settings_min_tls_version
      title: Settings Min Tls Version
      methods:
        zone_settings_get_minimum_tls_version_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1min_tls_version/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_minimum_tls_version_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1min_tls_version/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_minimum_tls_version_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1min_tls_version/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_min_tls_version/methods/zone_settings_get_minimum_tls_version_setting'
        insert: []
        update: []
        delete: []
    settings_minify:
      id: cloudflare.zones.settings_minify
      name: settings_minify
      title: Settings Minify
      methods:
        zone_settings_get_minify_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1minify/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_minify_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1minify/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_minify_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1minify/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_minify/methods/zone_settings_get_minify_setting'
        insert: []
        update: []
        delete: []
    settings_mirage:
      id: cloudflare.zones.settings_mirage
      name: settings_mirage
      title: Settings Mirage
      methods:
        zone_settings_get_mirage_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1mirage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_mirage_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1mirage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_mirage_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1mirage/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_mirage/methods/zone_settings_get_mirage_setting'
        insert: []
        update: []
        delete: []
    settings_mobile_redirect:
      id: cloudflare.zones.settings_mobile_redirect
      name: settings_mobile_redirect
      title: Settings Mobile Redirect
      methods:
        zone_settings_get_mobile_redirect_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1mobile_redirect/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_mobile_redirect_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1mobile_redirect/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_mobile_redirect_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1mobile_redirect/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_mobile_redirect/methods/zone_settings_get_mobile_redirect_setting'
        insert: []
        update: []
        delete: []
    settings_nel:
      id: cloudflare.zones.settings_nel
      name: settings_nel
      title: Settings Nel
      methods:
        zone_settings_get_network_error_logging_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1nel/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_network_error_logging_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1nel/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_network_error_logging_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1nel/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_nel/methods/zone_settings_get_network_error_logging_setting'
        insert: []
        update: []
        delete: []
    settings_opportunistic_encryption:
      id: cloudflare.zones.settings_opportunistic_encryption
      name: settings_opportunistic_encryption
      title: Settings Opportunistic Encryption
      methods:
        zone_settings_get_opportunistic_encryption_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1opportunistic_encryption/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_opportunistic_encryption_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1opportunistic_encryption/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_opportunistic_encryption_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1opportunistic_encryption/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_opportunistic_encryption/methods/zone_settings_get_opportunistic_encryption_setting'
        insert: []
        update: []
        delete: []
    settings_opportunistic_onion:
      id: cloudflare.zones.settings_opportunistic_onion
      name: settings_opportunistic_onion
      title: Settings Opportunistic Onion
      methods:
        zone_settings_get_opportunistic_onion_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1opportunistic_onion/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_opportunistic_onion_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1opportunistic_onion/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_opportunistic_onion_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1opportunistic_onion/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_opportunistic_onion/methods/zone_settings_get_opportunistic_onion_setting'
        insert: []
        update: []
        delete: []
    settings_orange_to_orange:
      id: cloudflare.zones.settings_orange_to_orange
      name: settings_orange_to_orange
      title: Settings Orange To Orange
      methods:
        zone_settings_get_orange_to_orange___o_2_o_:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1orange_to_orange/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_orange_to_orange___o_2_o_:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1orange_to_orange/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_orange_to_orange___o_2_o_:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1orange_to_orange/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_orange_to_orange/methods/zone_settings_get_orange_to_orange___o_2_o_'
        insert: []
        update: []
        delete: []
    settings_origin_error_page_pass_thru:
      id: cloudflare.zones.settings_origin_error_page_pass_thru
      name: settings_origin_error_page_pass_thru
      title: Settings Origin Error Page Pass Thru
      methods:
        zone_settings_get_enable_error_pages_on_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1origin_error_page_pass_thru/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_enable_error_pages_on_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1origin_error_page_pass_thru/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_enable_error_pages_on_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1origin_error_page_pass_thru/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_origin_error_page_pass_thru/methods/zone_settings_get_enable_error_pages_on_setting'
        insert: []
        update: []
        delete: []
    settings_origin_max_http_version:
      id: cloudflare.zones.settings_origin_max_http_version
      name: settings_origin_max_http_version
      title: Settings Origin Max Http Version
      methods:
        zone_settings_get_origin_max_http_version_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1origin_max_http_version/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_origin_max_http_version_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1origin_max_http_version/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_origin_max_http_version_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1origin_max_http_version/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_origin_max_http_version/methods/zone_settings_get_origin_max_http_version_setting'
        insert: []
        update: []
        delete: []
    settings_polish:
      id: cloudflare.zones.settings_polish
      name: settings_polish
      title: Settings Polish
      methods:
        zone_settings_get_polish_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1polish/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_polish_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1polish/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_polish_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1polish/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_polish/methods/zone_settings_get_polish_setting'
        insert: []
        update: []
        delete: []
    settings_prefetch_preload:
      id: cloudflare.zones.settings_prefetch_preload
      name: settings_prefetch_preload
      title: Settings Prefetch Preload
      methods:
        zone_settings_get_prefetch_preload_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1prefetch_preload/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_prefetch_preload_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1prefetch_preload/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_prefetch_preload_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1prefetch_preload/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_prefetch_preload/methods/zone_settings_get_prefetch_preload_setting'
        insert: []
        update: []
        delete: []
    settings_privacy_pass:
      id: cloudflare.zones.settings_privacy_pass
      name: settings_privacy_pass
      title: Settings Privacy Pass
      methods:
        zone_settings_get_privacy_pass_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1privacy_pass/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_privacy_pass_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1privacy_pass/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_privacy_pass_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1privacy_pass/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_privacy_pass/methods/zone_settings_get_privacy_pass_setting'
        insert: []
        update: []
        delete: []
    settings_proxy_read_timeout:
      id: cloudflare.zones.settings_proxy_read_timeout
      name: settings_proxy_read_timeout
      title: Settings Proxy Read Timeout
      methods:
        zone_settings_get_proxy_read_timeout_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1proxy_read_timeout/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_proxy_read_timeout_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1proxy_read_timeout/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_proxy_read_timeout_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1proxy_read_timeout/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_proxy_read_timeout/methods/zone_settings_get_proxy_read_timeout_setting'
        insert: []
        update: []
        delete: []
    settings_response_buffering:
      id: cloudflare.zones.settings_response_buffering
      name: settings_response_buffering
      title: Settings Response Buffering
      methods:
        zone_settings_get_response_buffering_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1response_buffering/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_response_buffering_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1response_buffering/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_response_buffering_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1response_buffering/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_response_buffering/methods/zone_settings_get_response_buffering_setting'
        insert: []
        update: []
        delete: []
    settings_rocket_loader:
      id: cloudflare.zones.settings_rocket_loader
      name: settings_rocket_loader
      title: Settings Rocket Loader
      methods:
        zone_settings_get_rocket_loader_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1rocket_loader/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_rocket_loader_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1rocket_loader/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_rocket_loader_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1rocket_loader/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_rocket_loader/methods/zone_settings_get_rocket_loader_setting'
        insert: []
        update: []
        delete: []
    settings_security_header:
      id: cloudflare.zones.settings_security_header
      name: settings_security_header
      title: Settings Security Header
      methods:
        zone_settings_get_security_header___hsts__setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1security_header/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_security_header___hsts__setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1security_header/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_security_header___hsts__setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1security_header/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_security_header/methods/zone_settings_get_security_header___hsts__setting'
        insert: []
        update: []
        delete: []
    settings_security_level:
      id: cloudflare.zones.settings_security_level
      name: settings_security_level
      title: Settings Security Level
      methods:
        zone_settings_get_security_level_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1security_level/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_security_level_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1security_level/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_security_level_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1security_level/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_security_level/methods/zone_settings_get_security_level_setting'
        insert: []
        update: []
        delete: []
    settings_server_side_exclude:
      id: cloudflare.zones.settings_server_side_exclude
      name: settings_server_side_exclude
      title: Settings Server Side Exclude
      methods:
        zone_settings_get_server_side_exclude_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1server_side_exclude/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_server_side_exclude_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1server_side_exclude/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_server_side_exclude_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1server_side_exclude/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_server_side_exclude/methods/zone_settings_get_server_side_exclude_setting'
        insert: []
        update: []
        delete: []
    settings_sort_query_string_for_cache:
      id: cloudflare.zones.settings_sort_query_string_for_cache
      name: settings_sort_query_string_for_cache
      title: Settings Sort Query String For Cache
      methods:
        zone_settings_get_enable_query_string_sort_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1sort_query_string_for_cache/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_enable_query_string_sort_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1sort_query_string_for_cache/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_enable_query_string_sort_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1sort_query_string_for_cache/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_sort_query_string_for_cache/methods/zone_settings_get_enable_query_string_sort_setting'
        insert: []
        update: []
        delete: []
    settings_ssl:
      id: cloudflare.zones.settings_ssl
      name: settings_ssl
      title: Settings Ssl
      methods:
        zone_settings_get_ssl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ssl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_ssl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ssl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_ssl_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ssl/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_ssl/methods/zone_settings_get_ssl_setting'
        insert: []
        update: []
        delete: []
    settings_ssl_recommender:
      id: cloudflare.zones.settings_ssl_recommender
      name: settings_ssl_recommender
      title: Settings Ssl Recommender
      methods:
        zone_settings_get_ssl__tls_recommender_enrollment:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ssl_recommender/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_ssl__tls_recommender_enrollment:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ssl_recommender/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_ssl__tls_recommender_enrollment:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1ssl_recommender/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_ssl_recommender/methods/zone_settings_get_ssl__tls_recommender_enrollment'
        insert: []
        update: []
        delete: []
    settings_tls_1_3:
      id: cloudflare.zones.settings_tls_1_3
      name: settings_tls_1_3
      title: Settings Tls 1 3
      methods:
        zone_settings_get_tls_1__3_setting_enabled_for_a_zone:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1tls_1_3/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_tls_1__3_setting_enabled_for_a_zone:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1tls_1_3/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_tls_1__3_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1tls_1_3/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_tls_1_3/methods/zone_settings_get_tls_1__3_setting_enabled_for_a_zone'
        insert: []
        update: []
        delete: []
    settings_tls_client_auth:
      id: cloudflare.zones.settings_tls_client_auth
      name: settings_tls_client_auth
      title: Settings Tls Client Auth
      methods:
        zone_settings_get_tls_client_auth_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1tls_client_auth/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_tls_client_auth_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1tls_client_auth/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_tls_client_auth_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1tls_client_auth/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_tls_client_auth/methods/zone_settings_get_tls_client_auth_setting'
        insert: []
        update: []
        delete: []
    settings_true_client_ip_header:
      id: cloudflare.zones.settings_true_client_ip_header
      name: settings_true_client_ip_header
      title: Settings True Client Ip Header
      methods:
        zone_settings_get_true_client_ip_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1true_client_ip_header/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_true_client_ip_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1true_client_ip_header/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_true_client_ip_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1true_client_ip_header/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_true_client_ip_header/methods/zone_settings_get_true_client_ip_setting'
        insert: []
        update: []
        delete: []
    settings_waf:
      id: cloudflare.zones.settings_waf
      name: settings_waf
      title: Settings Waf
      methods:
        zone_settings_get_web_application_firewall___waf__setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1waf/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_web_application_firewall___waf__setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1waf/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_web_application_firewall___waf__setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1waf/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_waf/methods/zone_settings_get_web_application_firewall___waf__setting'
        insert: []
        update: []
        delete: []
    settings_webp:
      id: cloudflare.zones.settings_webp
      name: settings_webp
      title: Settings Webp
      methods:
        zone_settings_get_web_p_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1webp/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_web_p_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1webp/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_web_p_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1webp/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_webp/methods/zone_settings_get_web_p_setting'
        insert: []
        update: []
        delete: []
    settings_websockets:
      id: cloudflare.zones.settings_websockets
      name: settings_websockets
      title: Settings Websockets
      methods:
        zone_settings_get_web_sockets_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1websockets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _zone_settings_get_web_sockets_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1websockets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_settings_change_web_sockets_setting:
          operation:
            $ref: '#/paths/~1zones~1{zone_identifier}~1settings~1websockets/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_websockets/methods/zone_settings_get_web_sockets_setting'
        insert: []
        update: []
        delete: []
    subscription:
      id: cloudflare.zones.subscription
      name: subscription
      title: Subscription
      methods:
        zone_subscription_zone_subscription_details:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1subscription/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _zone_subscription_zone_subscription_details:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1subscription/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_subscription_create_zone_subscription:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1subscription/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        zone_subscription_update_zone_subscription:
          operation:
            $ref: '#/paths/~1zones~1{identifier}~1subscription/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscription/methods/zone_subscription_zone_subscription_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/subscription/methods/zone_subscription_create_zone_subscription'
        update: []
        delete: []
paths:
  '/zones/{zone_identifier}/filters':
    delete:
      description: Deletes one or more existing filters.
      operationId: filters-delete-filters
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  $ref: '#/components/schemas/filters_components-schemas-id'
              required:
                - id
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-delete-response-collection'
          description: Delete filters response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-delete-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete filters response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete filters
      tags:
        - Filters
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches filters in a zone. You can filter the results using several optional parameters.
      operationId: filters-list-filters
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-filter-response-collection'
          description: List filters response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-filter-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List filters response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List filters
      tags:
        - Filters
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates one or more filters.
      operationId: filters-create-filters
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - expression
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-filter-response-collection'
          description: Create filters response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-filter-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create filters response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create filters
      tags:
        - Filters
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates one or more existing filters.
      operationId: filters-update-filters
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-filter-response-collection'
          description: Update filters response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-filter-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update filters response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update filters
      tags:
        - Filters
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/filters/{id}':
    delete:
      description: Deletes an existing filter.
      operationId: filters-delete-a-filter
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/filters_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-delete-response-single'
          description: Delete a filter response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-delete-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a filter response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a filter
      tags:
        - Filters
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the details of a filter.
      operationId: filters-get-a-filter
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/filters_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-filter-response-single'
          description: Get a filter response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-filter-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a filter response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a filter
      tags:
        - Filters
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates an existing filter.
      operationId: filters-update-a-filter
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/filters_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-filter-response-single'
          description: Update a filter response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-filter-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a filter response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a filter
      tags:
        - Filters
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/firewall/rules':
    delete:
      description: Deletes existing firewall rules.
      operationId: firewall-rules-delete-firewall-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  $ref: '#/components/schemas/firewall-rules_components-schemas-id'
              required:
                - id
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-response-collection-delete'
          description: Delete firewall rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-response-collection-delete'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete firewall rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete firewall rules
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches firewall rules in a zone. You can filter the results using several optional parameters.
      operationId: firewall-rules-list-firewall-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-response-collection'
          description: List firewall rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List firewall rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List firewall rules
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates the priority of existing firewall rules.
      operationId: firewall-rules-update-priority-of-firewall-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-response-collection'
          description: Update priority of firewall rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update priority of firewall rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update priority of firewall rules
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Create one or more firewall rules.
      operationId: firewall-rules-create-firewall-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - filter
                - action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-response-collection'
          description: Create firewall rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create firewall rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create firewall rules
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates one or more existing firewall rules.
      operationId: firewall-rules-update-firewall-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-response-collection'
          description: Update firewall rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update firewall rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update firewall rules
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/firewall/rules/{id}':
    delete:
      description: Deletes an existing firewall rule.
      operationId: firewall-rules-delete-a-firewall-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/firewall-rules_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_filter_if_unused:
                  $ref: '#/components/schemas/delete_filter_if_unused'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-single-response-delete'
          description: Delete a firewall rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-single-response-delete'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a firewall rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a firewall rule
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the details of a firewall rule.
      operationId: firewall-rules-get-a-firewall-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/firewall-rules_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-single-response'
          description: Get a firewall rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-single-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a firewall rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a firewall rule
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates the priority of an existing firewall rule.
      operationId: firewall-rules-update-priority-of-a-firewall-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/firewall-rules_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-response-collection'
          description: Update priority of a firewall rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-response-collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update priority of a firewall rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update priority of a firewall rule
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates an existing firewall rule.
      operationId: firewall-rules-update-a-firewall-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/firewall-rules_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
                - filter
                - action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filter-rules-single-response'
          description: Update a firewall rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/filter-rules-single-response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a firewall rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a firewall rule
      tags:
        - Firewall rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/healthchecks':
    get:
      description: List configured health checks.
      operationId: health-checks-list-health-checks
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-response_collection'
          description: List Health Checks response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Health Checks response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Health Checks
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    post:
      description: Create a new health check.
      operationId: health-checks-create-health-check
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_healthcheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
          description: Create Health Check response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Health Check response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Health Check
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/healthchecks/preview':
    post:
      description: Create a new preview health check.
      operationId: health-checks-create-preview-health-check
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_healthcheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
          description: Create Preview Health Check response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Preview Health Check response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Preview Health Check
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/healthchecks/preview/{identifier}':
    delete:
      description: Delete a health check.
      operationId: health-checks-delete-preview-health-check
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-id_response'
          description: Delete Preview Health Check response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Preview Health Check response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Preview Health Check
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    get:
      description: Fetch a single configured health check preview.
      operationId: health-checks-health-check-preview-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
          description: Health Check Preview Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Health Check Preview Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Health Check Preview Details
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/healthchecks/{identifier}':
    delete:
      description: Delete a health check.
      operationId: health-checks-delete-health-check
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-id_response'
          description: Delete Health Check response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-id_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Health Check response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Health Check
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    get:
      description: Fetch a single configured health check.
      operationId: health-checks-health-check-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
          description: Health Check Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Health Check Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Health Check Details
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: Patch a configured health check.
      operationId: health-checks-patch-health-check
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_healthcheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
          description: Patch Health Check response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Patch Health Check response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Patch Health Check
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    put:
      description: Update a configured health check.
      operationId: health-checks-update-health-check
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_healthcheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
          description: Update Health Check response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_components-schemas-single_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Health Check response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Health Check
      tags:
        - Health Checks
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_id}/managed_headers':
    get:
      description: Fetches a list of all Managed Transforms.
      operationId: managed-transforms-list-managed-transforms
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  managed_request_headers:
                    $ref: '#/components/schemas/request_list'
                  managed_response_headers:
                    $ref: '#/components/schemas/request_list'
                type: object
          description: List Managed Transforms response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      managed_request_headers:
                        $ref: '#/components/schemas/request_list'
                      managed_response_headers:
                        $ref: '#/components/schemas/request_list'
                    type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Managed Transforms response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Managed Transforms
      tags:
        - Managed Transforms
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates the status of one or more Managed Transforms.
      operationId: managed-transforms-update-status-of-managed-transforms
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                managed_request_headers:
                  $ref: '#/components/schemas/request_list'
                managed_response_headers:
                  $ref: '#/components/schemas/request_list'
              required:
                - managed_request_headers
                - managed_response_headers
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  managed_request_headers:
                    $ref: '#/components/schemas/response_list'
                  managed_response_headers:
                    $ref: '#/components/schemas/response_list'
                type: object
          description: Update status of Managed Transforms response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      managed_request_headers:
                        $ref: '#/components/schemas/response_list'
                      managed_response_headers:
                        $ref: '#/components/schemas/response_list'
                    type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update status of Managed Transforms response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update status of Managed Transforms
      tags:
        - Managed Transforms
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/rate_limits':
    get:
      description: Fetches the rate limits for a zone.
      operationId: rate-limits-for-a-zone-list-rate-limits
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ratelimit_response_collection'
          description: List rate limits response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ratelimit_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List rate limits response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List rate limits
      tags:
        - Rate limits for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates a new rate limit for a zone. Refer to the object definition for a list of required attributes.
      operationId: rate-limits-for-a-zone-create-a-rate-limit
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - match
                - threshold
                - period
                - action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ratelimit_response_single'
          description: Create a rate limit response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ratelimit_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a rate limit response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a rate limit
      tags:
        - Rate limits for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/rate_limits/{id}':
    delete:
      description: Deletes an existing rate limit.
      operationId: rate-limits-for-a-zone-delete-a-rate-limit
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/rate-limits_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ratelimit_response_single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/rate-limits_components-schemas-id'
                    type: object
          description: Delete a rate limit response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/ratelimit_response_single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/rate-limits_components-schemas-id'
                        type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a rate limit response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a rate limit
      tags:
        - Rate limits for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      description: Fetches the details of a rate limit.
      operationId: rate-limits-for-a-zone-get-a-rate-limit
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/rate-limits_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ratelimit_response_single'
          description: Get a rate limit response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ratelimit_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a rate limit response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a rate limit
      tags:
        - Rate limits for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates an existing rate limit.
      operationId: rate-limits-for-a-zone-update-a-rate-limit
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/rate-limits_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
                - match
                - threshold
                - period
                - action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ratelimit_response_single'
          description: Update a rate limit response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ratelimit_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a rate limit response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a rate limit
      tags:
        - Rate limits for a zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/rulesets/phases/{phase}/entrypoint':
    get:
      description: Fetches all Transform Rules in a zone.
      operationId: transform-rules-list-transform-rules
      parameters:
        - in: path
          name: phase
          required: true
          schema:
            $ref: '#/components/schemas/schemas-phase'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-ruleset'
          description: List Transform Rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-ruleset'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Transform Rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Transform Rules
      tags:
        - Transform Rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates the Transform Rules of a zone.
      operationId: transform-rules-update-transform-rules
      parameters:
        - in: path
          name: phase
          required: true
          schema:
            $ref: '#/components/schemas/schemas-phase'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ruleset'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single'
          description: Update Transform Rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Transform Rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Transform Rules
      tags:
        - Transform Rules
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_id}/url_normalization':
    get:
      description: Fetches the current URL normalization settings.
      operationId: url-normalization-get-url-normalization-settings
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-response_model'
          description: Get URL normalization settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-response_model'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get URL normalization settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get URL normalization settings
      tags:
        - URL Normalization
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Updates the URL normalization settings.
      operationId: url-normalization-update-url-normalization-settings
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-request_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-response_model'
          description: Update URL normalization settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-response_model'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update URL normalization settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update URL normalization settings
      tags:
        - URL Normalization
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /zones:
    get:
      description: 'Lists, searches, sorts, and filters your zones.'
      operationId: zone-list-zones
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-response_collection'
          description: List Zones response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Zones response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Zones
      tags:
        - Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      operationId: zone-create-zone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-create'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-response_single'
          description: Create Zone response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Zone response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Zone
      tags:
        - Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{identifier}':
    delete:
      description: Deletes an existing zone.
      operationId: zone-delete-zone
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Delete Zone response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Zone response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Zone
      tags:
        - Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    get:
      operationId: zone-zone-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-response_single'
          description: Zone Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Zone Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Zone Details
      tags:
        - Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Editz a zone. Only one zone property can be changed at a time.
      operationId: zone-edit-zone
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas-patch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/components-schemas-response_single'
          description: Edit Zone response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/components-schemas-response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit Zone response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit Zone
      tags:
        - Zone
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{identifier}/activation_check':
    put:
      description: Initiates another zone activation check.
      operationId: zone-zone-activation-check
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: Zone Activation Check response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Zone Activation Check response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Zone Activation Check
      tags:
        - Zone
      x-cfPermissionsRequired:
        enum:
          - '#zone:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{identifier}/purge_cache':
    post:
      description: |-
        Granularly removes one or more files from Cloudflare's cache either by specifying the host, the associated Cache-Tag, or a Prefix.

        **NB:** Cache-Tag, host, and prefix purging each have a rate limit of 30,000 purge API calls in every 24 hour period. You may purge up to 30 tags, hosts, or prefixes in one API call. This rate limit can be raised for customers who need to purge at higher volume.
      operationId: 'zone-purge-files-by-cache-tags,-host,-or-prefix'
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purge_by_cache_tags_or_hosts_or_prefixes'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-response-single-id'
          description: 'Purge Files by Cache-Tags, Host, or Prefix response'
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single-id'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: 'Purge Files by Cache-Tags, Host, or Prefix response failure'
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: 'Purge Files by Cache-Tags, Host, or Prefix'
      tags:
        - Zone
      x-cfPermissionsRequired:
        enum:
          - '#cache_purge:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/analytics/colos':
    get:
      deprecated: true
      description: 'This view provides a breakdown of analytics data by datacenter. Note: This is available to Enterprise customers only.'
      operationId: zone-analytics-(-deprecated)-get-analytics-by-co-locations
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/colo_response'
          description: Get analytics by Co-locations response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/colo_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get analytics by Co-locations response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get analytics by Co-locations
      tags:
        - Zone Analytics (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/analytics/x-cfDeprecations/zone_analytics_deprecation'
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/analytics/dashboard':
    get:
      deprecated: true
      description: The dashboard view provides both totals and timeseries data for the given zone and time period across the entire Cloudflare network.
      operationId: zone-analytics-(-deprecated)-get-dashboard
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboard_response'
          description: Get dashboard response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dashboard_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get dashboard response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get dashboard
      tags:
        - Zone Analytics (Deprecated)
      x-cfDeprecation:
        $ref: '#/components/schemas/analytics/x-cfDeprecations/zone_analytics_deprecation'
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/cache/cache_reserve':
    get:
      description: 'Increase cache lifetimes by automatically storing all cacheable files into Cloudflare''s persistent object storage buckets. Requires Cache Reserve subscription. Note: using Tiered Cache with Cache Reserve is highly recommended to reduce Reserve operations costs. See the [developer docs](https://developers.cloudflare.com/cache/about/cache-reserve) for more information.'
      operationId: zone-cache-settings-get-cache-reserve-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_cache_settings_response_single'
                  - $ref: '#/components/schemas/cache_reserve_response_value'
          description: Get Cache Reserve setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_cache_settings_response_single'
                      - $ref: '#/components/schemas/cache_reserve_response_value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Cache Reserve setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Cache Reserve setting
      tags:
        - Zone Cache Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Increase cache lifetimes by automatically storing all cacheable files into Cloudflare''s persistent object storage buckets. Requires Cache Reserve subscription. Note: using Tiered Cache with Cache Reserve is highly recommended to reduce Reserve operations costs. See the [developer docs](https://developers.cloudflare.com/cache/about/cache-reserve) for more information.'
      operationId: zone-cache-settings-change-cache-reserve-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/cache_reserve_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_cache_settings_response_single'
                  - $ref: '#/components/schemas/cache_reserve_response_value'
          description: Change Cache Reserve setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_cache_settings_response_single'
                      - $ref: '#/components/schemas/cache_reserve_response_value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Cache Reserve setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Cache Reserve setting
      tags:
        - Zone Cache Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/cache/variants':
    delete:
      description: 'Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the ''Vary: Accept'' response header. If the origin server sends ''Vary: Accept'' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.'
      operationId: zone-cache-settings-delete-variants-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_cache_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/variants'
          description: Delete variants setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_cache_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/variants'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete variants setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete variants setting
      tags:
        - Zone Cache Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    get:
      description: 'Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the ''Vary: Accept'' response header. If the origin server sends ''Vary: Accept'' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.'
      operationId: zone-cache-settings-get-variants-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_cache_settings_response_single'
                  - $ref: '#/components/schemas/variants_response_value'
          description: Get variants setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_cache_settings_response_single'
                      - $ref: '#/components/schemas/variants_response_value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get variants setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get variants setting
      tags:
        - Zone Cache Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: 'Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the ''Vary: Accept'' response header. If the origin server sends ''Vary: Accept'' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.'
      operationId: zone-cache-settings-change-variants-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/variants_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_cache_settings_response_single'
                  - $ref: '#/components/schemas/variants_response_value'
          description: Change variants setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_cache_settings_response_single'
                      - $ref: '#/components/schemas/variants_response_value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change variants setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change variants setting
      tags:
        - Zone Cache Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/firewall/lockdowns':
    get:
      description: Fetches Zone Lockdown rules. You can filter the results using several optional parameters.
      operationId: zone-lockdown-list-zone-lockdown-rules
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zonelockdown_response_collection'
          description: List Zone Lockdown rules response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zonelockdown_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Zone Lockdown rules response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Zone Lockdown rules
      tags:
        - Zone Lockdown
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    post:
      description: Creates a new Zone Lockdown rule.
      operationId: zone-lockdown-create-a-zone-lockdown-rule
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - urls
                - configurations
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zonelockdown_response_single'
          description: Create a Zone Lockdown rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zonelockdown_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create a Zone Lockdown rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create a Zone Lockdown rule
      tags:
        - Zone Lockdown
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/firewall/lockdowns/{id}':
    delete:
      description: Deletes an existing Zone Lockdown rule.
      operationId: zone-lockdown-delete-a-zone-lockdown-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/lockdowns_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        $ref: '#/components/schemas/lockdowns_components-schemas-id'
                    type: object
                type: object
          description: Delete a Zone Lockdown rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/lockdowns_components-schemas-id'
                    type: object
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete a Zone Lockdown rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete a Zone Lockdown rule
      tags:
        - Zone Lockdown
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    get:
      description: Fetches the details of a Zone Lockdown rule.
      operationId: zone-lockdown-get-a-zone-lockdown-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/lockdowns_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zonelockdown_response_single'
          description: Get a Zone Lockdown rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zonelockdown_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get a Zone Lockdown rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get a Zone Lockdown rule
      tags:
        - Zone Lockdown
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    put:
      description: Updates an existing Zone Lockdown rule.
      operationId: zone-lockdown-update-a-zone-lockdown-rule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/lockdowns_components-schemas-id'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - urls
                - configurations
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zonelockdown_response_single'
          description: Update a Zone Lockdown rule response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zonelockdown_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update a Zone Lockdown rule response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update a Zone Lockdown rule
      tags:
        - Zone Lockdown
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/available_plans':
    get:
      description: Lists available plans the zone can subscribe to.
      operationId: zone-rate-plan-list-available-plans
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-collection'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/available-rate-plan'
                        type: array
          description: List Available Plans response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-collection'
                      - properties:
                          result:
                            items:
                              $ref: '#/components/schemas/available-rate-plan'
                            type: array
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Available Plans response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Available Plans
      tags:
        - Zone Rate Plan
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/available_plans/{plan_identifier}':
    get:
      description: Details of the available plan that the zone can subscribe to.
      operationId: zone-rate-plan-available-plan-details
      parameters:
        - in: path
          name: plan_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/available-rate-plan'
          description: Available Plan Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/available-rate-plan'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Available Plan Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Available Plan Details
      tags:
        - Zone Rate Plan
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/available_rate_plans':
    get:
      description: Lists all rate plans the zone can subscribe to.
      operationId: zone-rate-plan-list-available-rate-plans
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plan_response_collection'
          description: List Available Rate Plans response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/plan_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Available Rate Plans response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Available Rate Plans
      tags:
        - Zone Rate Plan
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings':
    get:
      description: Available settings for your user in relation to a zone.
      operationId: zone-settings-get-all-zone-settings
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone_settings_response_collection'
          description: Get all Zone settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get all Zone settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get all Zone settings
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Edit settings for a zone.
      operationId: zone-settings-edit-zone-settings-info
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                items:
                  description: One or more zone setting objects. Must contain an ID and a value.
                  example:
                    - id: always_online
                      value: 'on'
                    - id: browser_cache_ttl
                      value: 18000
                    - id: ip_geolocation
                      value: 'off'
                  items:
                    $ref: '#/components/schemas/setting'
                  minItems: 1
                  type: array
              required:
                - items
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone_settings_response_collection'
          description: Edit zone settings info response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Edit zone settings info response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Edit zone settings info
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/0rtt':
    get:
      description: Gets 0-RTT session resumption setting.
      operationId: zone-settings-get-0-rtt-session-resumption-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/0rtt'
          description: Get 0-RTT session resumption setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/0rtt'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get 0-RTT session resumption setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get 0-RTT session resumption setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Changes the 0-RTT session resumption setting.
      operationId: zone-settings-change-0-rtt-session-resumption-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/0rtt_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/0rtt'
          description: Change 0-RTT session resumption setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/0rtt'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change 0-RTT session resumption setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change 0-RTT session resumption setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/advanced_ddos':
    get:
      description: Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones.
      operationId: zone-settings-get-advanced-ddos-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/advanced_ddos'
          description: Get Advanced DDOS setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/advanced_ddos'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Advanced DDOS setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Advanced DDOS setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/always_online':
    get:
      description: 'When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive''s Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.'
      operationId: zone-settings-get-always-online-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/always_online'
          description: Get Always Online setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/always_online'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Always Online setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Always Online setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive''s Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.'
      operationId: zone-settings-change-always-online-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/always_online_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/always_online'
          description: Change Always Online setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/always_online'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Always Online setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Always Online setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/always_use_https':
    get:
      description: 'Reply to all requests for URLs that use "http" with a 301 redirect to the equivalent "https" URL. If you only want to redirect for a subset of requests, consider creating an "Always use HTTPS" page rule.'
      operationId: zone-settings-get-always-use-https-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/always_use_https'
          description: Get Always Use HTTPS setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/always_use_https'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Always Use HTTPS setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Always Use HTTPS setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Reply to all requests for URLs that use "http" with a 301 redirect to the equivalent "https" URL. If you only want to redirect for a subset of requests, consider creating an "Always use HTTPS" page rule.'
      operationId: zone-settings-change-always-use-https-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/always_use_https_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/always_use_https'
          description: Change Always Use HTTPS setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/always_use_https'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Always Use HTTPS setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Always Use HTTPS setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/automatic_https_rewrites':
    get:
      description: Enable the Automatic HTTPS Rewrites feature for this zone.
      operationId: zone-settings-get-automatic-https-rewrites-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/automatic_https_rewrites'
          description: Get Automatic HTTPS Rewrites setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/automatic_https_rewrites'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Automatic HTTPS Rewrites setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Automatic HTTPS Rewrites setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Enable the Automatic HTTPS Rewrites feature for this zone.
      operationId: zone-settings-change-automatic-https-rewrites-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/automatic_https_rewrites_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/automatic_https_rewrites'
          description: Change Automatic HTTPS Rewrites setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/automatic_https_rewrites'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Automatic HTTPS Rewrites setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Automatic HTTPS Rewrites setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/automatic_platform_optimization':
    get:
      description: '[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare''s edge network and caches third-party fonts.'
      operationId: zone-settings-get-automatic-platform-optimization-for-word-press-settings
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/automatic_platform_optimization'
          description: Get Automatic Platform Optimization for WordPress settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/automatic_platform_optimization'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Automatic Platform Optimization for WordPress settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Automatic Platform Optimization for WordPress settings
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: '[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare''s edge network and caches third-party fonts.'
      operationId: zone-settings-change-automatic-platform-optimization-for-word-press-settings
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/automatic_platform_optimization'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/automatic_platform_optimization'
          description: Change Automatic Platform Optimization for WordPress settings response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/automatic_platform_optimization'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Automatic Platform Optimization for WordPress settings response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Automatic Platform Optimization for WordPress settings
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/brotli':
    get:
      description: 'When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.'
      operationId: zone-settings-get-brotli-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/brotli'
          description: Get Brotli setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/brotli'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Brotli setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Brotli setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.'
      operationId: zone-settings-change-brotli-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/brotli_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/brotli'
          description: Change Brotli setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/brotli'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Brotli setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Brotli setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/browser_cache_ttl':
    get:
      description: 'Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors'' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).'
      operationId: zone-settings-get-browser-cache-ttl-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/browser_cache_ttl'
          description: Get Browser Cache TTL setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/browser_cache_ttl'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Browser Cache TTL setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Browser Cache TTL setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors'' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).'
      operationId: zone-settings-change-browser-cache-ttl-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/browser_cache_ttl_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/browser_cache_ttl'
          description: Change Browser Cache TTL setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/browser_cache_ttl'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Browser Cache TTL setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Browser Cache TTL setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/browser_check':
    get:
      description: 'Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).'
      operationId: zone-settings-get-browser-check-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/browser_check'
          description: Get Browser Check setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/browser_check'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Browser Check setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Browser Check setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).'
      operationId: zone-settings-change-browser-check-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/browser_check_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/browser_check'
          description: Change Browser Check setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/browser_check'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Browser Check setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Browser Check setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/cache_level':
    get:
      description: 'Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).'
      operationId: zone-settings-get-cache-level-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cache_level'
          description: Get Cache Level setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/cache_level'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Cache Level setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Cache Level setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).'
      operationId: zone-settings-change-cache-level-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/cache_level_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cache_level'
          description: Change Cache Level setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/cache_level'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Cache Level setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Cache Level setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/challenge_ttl':
    get:
      description: 'Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).'
      operationId: zone-settings-get-challenge-ttl-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/challenge_ttl'
          description: Get Challenge TTL setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/challenge_ttl'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Challenge TTL setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Challenge TTL setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).'
      operationId: zone-settings-change-challenge-ttl-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/challenge_ttl_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/challenge_ttl'
          description: Change Challenge TTL setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/challenge_ttl'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Challenge TTL setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Challenge TTL setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/ciphers':
    get:
      description: Gets ciphers setting.
      operationId: zone-settings-get-ciphers-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ciphers'
          description: Get ciphers setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ciphers'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get ciphers setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get ciphers setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Changes ciphers setting.
      operationId: zone-settings-change-ciphers-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/ciphers_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ciphers'
          description: Change ciphers setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ciphers'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change ciphers setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change ciphers setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/development_mode':
    get:
      description: 'Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare''s accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.'
      operationId: zone-settings-get-development-mode-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/development_mode'
          description: Get Development Mode setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/development_mode'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Development Mode setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Development Mode setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare''s accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.'
      operationId: zone-settings-change-development-mode-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/development_mode_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/development_mode'
          description: Change Development Mode setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/development_mode'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Development Mode setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Development Mode setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/early_hints':
    get:
      description: 'When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.'
      operationId: zone-settings-get-early-hints-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/early_hints'
          description: Get Early Hints setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/early_hints'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Early Hints setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Early Hints setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.'
      operationId: zone-settings-change-early-hints-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/early_hints_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/early_hints'
          description: Change Early Hints setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/early_hints'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Early Hints setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Early Hints setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/email_obfuscation':
    get:
      description: 'Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).'
      operationId: zone-settings-get-email-obfuscation-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/email_obfuscation'
          description: Get Email Obfuscation setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/email_obfuscation'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Email Obfuscation setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Email Obfuscation setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).'
      operationId: zone-settings-change-email-obfuscation-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/email_obfuscation_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/email_obfuscation'
          description: Change Email Obfuscation setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/email_obfuscation'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Email Obfuscation setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Email Obfuscation setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/h2_prioritization':
    get:
      description: Gets HTTP/2 Edge Prioritization setting.
      operationId: zone-settings-get-http/-2-edge-prioritization-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/h2_prioritization'
          description: Get HTTP/2 Edge Prioritization setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/h2_prioritization'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get HTTP/2 Edge Prioritization setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get HTTP/2 Edge Prioritization setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: Changes HTTP/2 Edge Prioritization setting.
      operationId: zone-settings-change-http/-2-edge-prioritization-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/h2_prioritization_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/h2_prioritization'
          description: Change HTTP/2 Edge Prioritization setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/h2_prioritization'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change HTTP/2 Edge Prioritization setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change HTTP/2 Edge Prioritization setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/hotlink_protection':
    get:
      description: 'When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it''s not another site requesting them. People will still be able to download and view images from your page, but other sites won''t be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).'
      operationId: zone-settings-get-hotlink-protection-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/hotlink_protection'
          description: Get Hotlink Protection setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/hotlink_protection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Hotlink Protection setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Hotlink Protection setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it''s not another site requesting them. People will still be able to download and view images from your page, but other sites won''t be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).'
      operationId: zone-settings-change-hotlink-protection-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/hotlink_protection_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/hotlink_protection'
          description: Change Hotlink Protection setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/hotlink_protection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Hotlink Protection setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Hotlink Protection setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/http2':
    get:
      description: Value of the HTTP2 setting.
      operationId: zone-settings-get-h-t-t-p-2-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/http2'
          description: Get HTTP2 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/http2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get HTTP2 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get HTTP2 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Value of the HTTP2 setting.
      operationId: zone-settings-change-h-t-t-p-2-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/http2_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/http2'
          description: Change HTTP2 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/http2'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change HTTP2 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change HTTP2 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/http3':
    get:
      description: Value of the HTTP3 setting.
      operationId: zone-settings-get-h-t-t-p-3-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/http3'
          description: Get HTTP3 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/http3'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get HTTP3 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get HTTP3 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Value of the HTTP3 setting.
      operationId: zone-settings-change-h-t-t-p-3-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/http3_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/http3'
          description: Change HTTP3 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/http3'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change HTTP3 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change HTTP3 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/image_resizing':
    get:
      description: 'Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare''s network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.'
      operationId: zone-settings-get-image-resizing-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/image_resizing'
          description: Get Image Resizing setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/image_resizing'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Image Resizing setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Image Resizing setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
    patch:
      description: 'Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare''s network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.'
      operationId: zone-settings-change-image-resizing-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/image_resizing_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/image_resizing'
          description: Change Image Resizing setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/image_resizing'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Image Resizing setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Image Resizing setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/ip_geolocation':
    get:
      description: 'Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).'
      operationId: zone-settings-get-ip-geolocation-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ip_geolocation'
          description: Get IP Geolocation setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ip_geolocation'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get IP Geolocation setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get IP Geolocation setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).'
      operationId: zone-settings-change-ip-geolocation-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/ip_geolocation_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ip_geolocation'
          description: Change IP Geolocation setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ip_geolocation'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change IP Geolocation setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change IP Geolocation setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/ipv6':
    get:
      description: 'Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).'
      operationId: zone-settings-get-i-pv6-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ipv6'
          description: Get IPv6 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ipv6'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get IPv6 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get IPv6 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).'
      operationId: zone-settings-change-i-pv6-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/ipv6_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ipv6'
          description: Change IPv6 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ipv6'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change IPv6 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change IPv6 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/min_tls_version':
    get:
      description: Gets Minimum TLS Version setting.
      operationId: zone-settings-get-minimum-tls-version-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/min_tls_version'
          description: Get Minimum TLS Version setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/min_tls_version'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Minimum TLS Version setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Minimum TLS Version setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Changes Minimum TLS Version setting.
      operationId: zone-settings-change-minimum-tls-version-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/min_tls_version_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/min_tls_version'
          description: Change Minimum TLS Version setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/min_tls_version'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Minimum TLS Version setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Minimum TLS Version setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/minify':
    get:
      description: 'Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.'
      operationId: zone-settings-get-minify-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/minify'
          description: Get Minify setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/minify'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Minify setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Minify setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.'
      operationId: zone-settings-change-minify-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/minify_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/minify'
          description: Change Minify setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/minify'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Minify setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Minify setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/mirage':
    get:
      description: 'Automatically optimize image loading for website visitors on mobile devices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more information.'
      operationId: zone-settings-get-mirage-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mirage'
          description: Get Mirage setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/mirage'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Mirage setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Mirage setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Automatically optimize image loading for website visitors on mobile devices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more information.'
      operationId: zone-settings-change-mirage-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/mirage_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mirage'
          description: Change Mirage setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/mirage'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Mirage setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Mirage setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/mobile_redirect':
    get:
      description: 'Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.'
      operationId: zone-settings-get-mobile-redirect-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mobile_redirect'
          description: Get Mobile Redirect setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/mobile_redirect'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Mobile Redirect setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Mobile Redirect setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.'
      operationId: zone-settings-change-mobile-redirect-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/mobile_redirect_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mobile_redirect'
          description: Change Mobile Redirect setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/mobile_redirect'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Mobile Redirect setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Mobile Redirect setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/nel':
    get:
      description: 'Enable Network Error Logging reporting on your zone. (Beta) '
      operationId: zone-settings-get-network-error-logging-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/nel'
          description: Get Network Error Logging setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/nel'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Network Error Logging setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Network Error Logging setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Enable Network Error Logging reporting on your zone. (Beta) '
      operationId: zone-settings-change-network-error-logging-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/nel_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/nel'
          description: Change Network Error Logging setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/nel'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Network Error Logging setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Network Error Logging setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/opportunistic_encryption':
    get:
      description: Gets Opportunistic Encryption setting.
      operationId: zone-settings-get-opportunistic-encryption-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/opportunistic_encryption'
          description: Get Opportunistic Encryption setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/opportunistic_encryption'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Opportunistic Encryption setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Opportunistic Encryption setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Changes Opportunistic Encryption setting.
      operationId: zone-settings-change-opportunistic-encryption-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/opportunistic_encryption_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/opportunistic_encryption'
          description: Change Opportunistic Encryption setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/opportunistic_encryption'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Opportunistic Encryption setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Opportunistic Encryption setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/opportunistic_onion':
    get:
      description: 'Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.'
      operationId: zone-settings-get-opportunistic-onion-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/opportunistic_onion'
          description: Get Opportunistic Onion setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/opportunistic_onion'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Opportunistic Onion setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Opportunistic Onion setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.'
      operationId: zone-settings-change-opportunistic-onion-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/opportunistic_onion_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/opportunistic_onion'
          description: Change Opportunistic Onion setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/opportunistic_onion'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Opportunistic Onion setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Opportunistic Onion setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/orange_to_orange':
    get:
      description: Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.
      operationId: zone-settings-get-orange-to-orange-(-o-2-o)
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/orange_to_orange'
          description: Get Orange to Orange (O2O) response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/orange_to_orange'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Orange to Orange (O2O) response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Orange to Orange (O2O)
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.
      operationId: zone-settings-change-orange-to-orange-(-o-2-o)
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/orange_to_orange_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/orange_to_orange'
          description: Change Orange to Orange (O2O) response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/orange_to_orange'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Orange to Orange (O2O) response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Orange to Orange (O2O)
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/origin_error_page_pass_thru':
    get:
      description: 'Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.'
      operationId: zone-settings-get-enable-error-pages-on-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/origin_error_page_pass_thru'
          description: Get Enable Error Pages On setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/origin_error_page_pass_thru'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Enable Error Pages On setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Enable Error Pages On setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: 'Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.'
      operationId: zone-settings-change-enable-error-pages-on-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/origin_error_page_pass_thru_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/origin_error_page_pass_thru'
          description: Change Enable Error Pages On setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/origin_error_page_pass_thru'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Enable Error Pages On setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Enable Error Pages On setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/origin_max_http_version':
    get:
      description: Value of the Origin Max HTTP version setting (Note that the default value for Enterprise is "1").
      operationId: zone-settings-get-origin-max-http-version-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - $ref: '#/components/schemas/origin_max_http_version_response_value'
          description: Get Origin Max HTTP version setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - $ref: '#/components/schemas/origin_max_http_version_response_value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Origin Max HTTP version setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Origin Max HTTP version setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.).'
      operationId: zone-settings-change-origin-max-http-version-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/origin_max_http_version_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - $ref: '#/components/schemas/origin_max_http_version_response_value'
          description: Change Origin Max HTTP version setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - $ref: '#/components/schemas/origin_max_http_version_response_value'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Origin Max HTTP version setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Origin Max HTTP version setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/polish':
    get:
      description: 'Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.'
      operationId: zone-settings-get-polish-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/polish'
          description: Get Polish setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/polish'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Polish setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Polish setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.'
      operationId: zone-settings-change-polish-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/polish_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/polish'
          description: Change Polish setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/polish'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Polish setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Polish setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/prefetch_preload':
    get:
      description: Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.
      operationId: zone-settings-get-prefetch-preload-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/prefetch_preload'
          description: Get prefetch preload setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/prefetch_preload'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get prefetch preload setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get prefetch preload setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.
      operationId: zone-settings-change-prefetch-preload-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/prefetch_preload_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/prefetch_preload'
          description: Change prefetch preload setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/prefetch_preload'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change prefetch preload setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change prefetch preload setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/privacy_pass':
    get:
      description: 'Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).'
      operationId: zone-settings-get-privacy-pass-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/privacy_pass'
          description: Get Privacy Pass setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/privacy_pass'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Privacy Pass setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Privacy Pass setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).'
      operationId: zone-settings-change-privacy-pass-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/privacy_pass_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/privacy_pass'
          description: Change Privacy Pass setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/privacy_pass'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Privacy Pass setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Privacy Pass setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/proxy_read_timeout':
    get:
      description: Maximum time between two read operations from origin.
      operationId: zone-settings-get-proxy-read-timeout-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/proxy_read_timeout'
          description: Get Proxy Read Timeout setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/proxy_read_timeout'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Proxy Read Timeout setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Proxy Read Timeout setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: Maximum time between two read operations from origin.
      operationId: zone-settings-change-proxy-read-timeout-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/proxy_read_timeout_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/proxy_read_timeout'
          description: Change Proxy Read Timeout setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/proxy_read_timeout'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Proxy Read Timeout setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Proxy Read Timeout setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/pseudo_ipv4':
    get:
      description: Value of the Pseudo IPv4 setting.
      operationId: zone-settings-get-pseudo-i-pv4-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/pseudo_ipv4'
          description: Get Pseudo IPv4 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/pseudo_ipv4'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Pseudo IPv4 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Pseudo IPv4 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Value of the Pseudo IPv4 setting.
      operationId: zone-settings-change-pseudo-i-pv4-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/pseudo_ipv4_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/pseudo_ipv4'
          description: Change Pseudo IPv4 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/pseudo_ipv4'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Pseudo IPv4 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Pseudo IPv4 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/response_buffering':
    get:
      description: 'Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.'
      operationId: zone-settings-get-response-buffering-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/response_buffering'
          description: Get Response Buffering setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/response_buffering'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Response Buffering setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Response Buffering setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: 'Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.'
      operationId: zone-settings-change-response-buffering-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/response_buffering_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/response_buffering'
          description: Change Response Buffering setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/response_buffering'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Response Buffering setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Response Buffering setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/rocket_loader':
    get:
      description: 'Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site''s Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page''s rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.'
      operationId: zone-settings-get-rocket-loader-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rocket_loader'
          description: Get Rocket Loader setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/rocket_loader'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Rocket Loader setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Rocket Loader setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site''s Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page''s rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.'
      operationId: zone-settings-change-rocket-loader-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/rocket_loader_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rocket_loader'
          description: Change Rocket Loader setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/rocket_loader'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Rocket Loader setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Rocket Loader setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/security_header':
    get:
      description: Cloudflare security header for a zone.
      operationId: zone-settings-get-security-header-(-hsts)-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/security_header'
          description: Get Security Header (HSTS) setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/security_header'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Security Header (HSTS) setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Security Header (HSTS) setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Cloudflare security header for a zone.
      operationId: zone-settings-change-security-header-(-hsts)-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/security_header_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/security_header'
          description: Change Security Header (HSTS) setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/security_header'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Security Header (HSTS) setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Security Header (HSTS) setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/security_level':
    get:
      description: 'Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).'
      operationId: zone-settings-get-security-level-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/security_level'
          description: Get Security Level setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/security_level'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Security Level setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Security Level setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).'
      operationId: zone-settings-change-security-level-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/security_level_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/security_level'
          description: Change Security Level setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/security_level'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Security Level setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Security Level setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/server_side_exclude':
    get:
      description: 'If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won''t see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won''t see the SSE tags in your HTML source when it''s served through Cloudflare. SSE will still function in this case, as Cloudflare''s HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor''s computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).'
      operationId: zone-settings-get-server-side-exclude-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/server_side_exclude'
          description: Get Server Side Exclude setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/server_side_exclude'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Server Side Exclude setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Server Side Exclude setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won''t see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won''t see the SSE tags in your HTML source when it''s served through Cloudflare. SSE will still function in this case, as Cloudflare''s HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor''s computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).'
      operationId: zone-settings-change-server-side-exclude-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/server_side_exclude_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/server_side_exclude'
          description: Change Server Side Exclude setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/server_side_exclude'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Server Side Exclude setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Server Side Exclude setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/sort_query_string_for_cache':
    get:
      description: 'Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.'
      operationId: zone-settings-get-enable-query-string-sort-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/sort_query_string_for_cache'
          description: Get Enable Query String Sort setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/sort_query_string_for_cache'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Enable Query String Sort setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Enable Query String Sort setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: 'Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.'
      operationId: zone-settings-change-enable-query-string-sort-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/sort_query_string_for_cache_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/sort_query_string_for_cache'
          description: Change Enable Query String Sort setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/sort_query_string_for_cache'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Enable Query String Sort setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Enable Query String Sort setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/ssl':
    get:
      description: 'SSL encrypts your visitor''s connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don''t need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You''ll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You''ll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).'
      operationId: zone-settings-get-ssl-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ssl'
          description: Get SSL setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ssl'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get SSL setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get SSL setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'SSL encrypts your visitor''s connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don''t need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You''ll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You''ll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).'
      operationId: zone-settings-change-ssl-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/ssl_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ssl'
          description: Change SSL setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ssl'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change SSL setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change SSL setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/ssl_recommender':
    get:
      description: Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.
      operationId: zone-settings-get-ssl/-tls-recommender-enrollment
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ssl_recommender'
          description: Get SSL/TLS Recommender enrollment response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ssl_recommender'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get SSL/TLS Recommender enrollment response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get SSL/TLS Recommender enrollment
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.
      operationId: zone-settings-change-ssl/-tls-recommender-enrollment
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enabled:
                  $ref: '#/components/schemas/ssl_recommender_enabled'
              required:
                - enabled
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/ssl_recommender'
          description: Change SSL/TLS Recommender enrollment response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/ssl_recommender'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change SSL/TLS Recommender enrollment response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change SSL/TLS Recommender enrollment
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/tls_1_3':
    get:
      description: Gets TLS 1.3 setting enabled for a zone.
      operationId: zone-settings-get-tls-1.-3-setting-enabled-for-a-zone
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/tls_1_3'
          description: Get TLS 1.3 setting enabled for a zone response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/tls_1_3'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get TLS 1.3 setting enabled for a zone response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get TLS 1.3 setting enabled for a zone
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Changes TLS 1.3 setting.
      operationId: zone-settings-change-tls-1.-3-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/tls_1_3_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/tls_1_3'
          description: Change TLS 1.3 setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/tls_1_3'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change TLS 1.3 setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change TLS 1.3 setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{zone_identifier}/settings/tls_client_auth':
    get:
      description: TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).
      operationId: zone-settings-get-tls-client-auth-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/tls_client_auth'
          description: Get TLS Client Auth setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/tls_client_auth'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get TLS Client Auth setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get TLS Client Auth setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).
      operationId: zone-settings-change-tls-client-auth-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/tls_client_auth_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/tls_client_auth'
          description: Change TLS Client Auth setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/tls_client_auth'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change TLS Client Auth setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change TLS Client Auth setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/true_client_ip_header':
    get:
      description: Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.
      operationId: zone-settings-get-true-client-ip-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/true_client_ip_header'
          description: Get True Client IP setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/true_client_ip_header'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get True Client IP setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get True Client IP setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.
      operationId: zone-settings-change-true-client-ip-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/true_client_ip_header_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/true_client_ip_header'
          description: Change True Client IP setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/true_client_ip_header'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change True Client IP setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change True Client IP setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  '/zones/{zone_identifier}/settings/waf':
    get:
      description: 'The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will ''challenge'' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare''s WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).'
      operationId: zone-settings-get-web-application-firewall-(-waf)-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/waf'
          description: Get Web Application Firewall (WAF) setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/waf'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Web Application Firewall (WAF) setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Web Application Firewall (WAF) setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: 'The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will ''challenge'' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare''s WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).'
      operationId: zone-settings-change-web-application-firewall-(-waf)-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/waf_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/waf'
          description: Change Web Application Firewall (WAF) setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/waf'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change Web Application Firewall (WAF) setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change Web Application Firewall (WAF) setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/webp':
    get:
      description: 'When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.'
      operationId: zone-settings-get-web-p-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/webp'
          description: Get WebP setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/webp'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get WebP setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get WebP setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.'
      operationId: zone-settings-change-web-p-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/webp_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/webp'
          description: Change WebP setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/webp'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change WebP setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change WebP setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  '/zones/{zone_identifier}/settings/websockets':
    get:
      description: 'Gets Websockets setting. For more information about Websockets, please refer to [Using Cloudflare with WebSockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Using-Cloudflare-with-WebSockets).'
      operationId: zone-settings-get-web-sockets-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/websockets'
          description: Get WebSockets setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/websockets'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get WebSockets setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get WebSockets setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: 'Changes Websockets setting. For more information about Websockets, please refer to [Using Cloudflare with WebSockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Using-Cloudflare-with-WebSockets).'
      operationId: zone-settings-change-web-sockets-setting
      parameters:
        - in: path
          name: zone_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/websockets_value'
              required:
                - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/websockets'
          description: Change WebSockets setting response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/zone_settings_response_single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/websockets'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Change WebSockets setting response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Change WebSockets setting
      tags:
        - Zone Settings
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  '/zones/{identifier}/subscription':
    get:
      description: Lists zone subscription details.
      operationId: zone-subscription-zone-subscription-details
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone_subscription_response_single'
          description: Zone Subscription Details response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_subscription_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Zone Subscription Details response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Zone Subscription Details
      tags:
        - Zone Subscription
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: 'Create a zone subscription, either plan or add-ons.'
      operationId: zone-subscription-create-zone-subscription
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription-v2'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone_subscription_response_single'
          description: Create Zone Subscription response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_subscription_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Zone Subscription response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Zone Subscription
      tags:
        - Zone Subscription
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
          - '#billing:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: 'Updates zone subscriptions, either plan or add-ons.'
      operationId: zone-subscription-update-zone-subscription
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/subscription-v2_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription-v2'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone_subscription_response_single'
          description: Update Zone Subscription response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone_subscription_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Zone Subscription response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Zone Subscription
      tags:
        - Zone Subscription
      x-cfPermissionsRequired:
        enum:
          - '#billing:read'
          - '#billing:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
