openapi: 3.0.3
servers:
  - description: Client API
    url: 'https://api.cloudflare.com/client/v4'
info:
  description: Cloudflare Tunnel
  license:
    name: BSD-3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  title: Cloudflare API - cloudflare_tunnel
  version: 4.0.0
components:
  schemas:
    common_components-schemas-identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    schemas-tunnel_response_collection:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/tunnel'
              type: array
          type: object
    api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/messages'
          example: []
        result:
          enum:
            - null
          nullable: true
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    api-response-collection:
      anyOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              items: {}
              nullable: true
              type: array
            result_info:
              $ref: '#/components/schemas/result_info'
      type: object
    tunnel:
      description: Indicates the cloudflared enabled features for this Cloudflare Tunnel connection.
      properties:
        account_tag:
          $ref: '#/components/schemas/common_components-schemas-identifier'
        connections:
          $ref: '#/components/schemas/connections'
        conns_active_at:
          $ref: '#/components/schemas/conns_active_at'
        conns_inactive_at:
          $ref: '#/components/schemas/conns_inactive_at'
        created_at:
          $ref: '#/components/schemas/cloudflare-tunnel_components-schemas-created_at'
        deleted_at:
          $ref: '#/components/schemas/schemas-deleted_at'
        id:
          $ref: '#/components/schemas/tunnel_id'
        name:
          $ref: '#/components/schemas/tunnel_name'
        remote_config:
          $ref: '#/components/schemas/remote_config'
        status:
          $ref: '#/components/schemas/cloudflare-tunnel_components-schemas-status'
      type: object
    messages:
      example: []
      items:
        properties:
          code:
            minimum: 1000
            type: integer
          message:
            type: string
        required:
          - code
          - message
        type: object
        uniqueItems: true
      type: array
    api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/messages'
        messages:
          $ref: '#/components/schemas/messages'
        result:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    result_info:
      properties:
        count:
          description: Total number of results for the requested service
          example: 1
          type: number
        page:
          description: Current page within paginated list of results
          example: 1
          type: number
        per_page:
          description: Number of results per page of results
          example: 20
          type: number
        total_count:
          description: Total results available without any search parameters
          example: 2000
          type: number
      type: object
    connections:
      description: Connections between cloudflared and the Cloudflare edge that are serving this tunnel.
      items:
        $ref: '#/components/schemas/cloudflare-tunnel_components-schemas-connection'
      type: array
    conns_active_at:
      description: 'If present, indicates the timestamp since the tunnel had at least 1 connection active (formatted in RFC 3339). If absent, tunnel is inactive.'
      example: '2009-11-10T23:00:00Z'
      format: date-time
      nullable: true
      type: string
    conns_inactive_at:
      description: 'If present, indicates since when the tunnel is without any connection established to the edge (formatted in RFC 3339). If absent, tunnel is active.'
      example: '2009-11-10T23:00:00Z'
      format: date-time
      nullable: true
      type: string
    cloudflare-tunnel_components-schemas-created_at:
      description: 'Timestamps when the resource was created, formatted in RFC 3339.'
      example: '2021-01-25T18:22:34.317854Z'
      format: date-time
      type: string
    schemas-deleted_at:
      description: 'If present, indicates tunnel was deleted at the given date (formatted in RFC 3339). If absent, tunnel has not been deleted.'
      example: '2009-11-10T23:00:00Z'
      format: date-time
      nullable: true
      type: string
    tunnel_id:
      description: UUID of the tunnel.
      example: f70ff985-a4ef-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      readOnly: true
      type: string
    tunnel_name:
      description: A user-friendly name chosen when the tunnel is created. Cannot be empty.
      example: blog
      type: string
    remote_config:
      description: If the Cloudflare Tunnel's configuration is configured remotely (true) or locally on the origin machine (false).
      example: true
      type: boolean
    cloudflare-tunnel_components-schemas-status:
      description: 'The status of the tunnel. Could be "active", "inactive" or "degraded" (Active but not all connectors have 4 connections to the edge).'
      example: active
      type: string
    cloudflare-tunnel_components-schemas-connection:
      properties:
        client_id:
          description: UUID of the cloudflared instance.
        client_version:
          $ref: '#/components/schemas/cloudflare-tunnel_components-schemas-version'
        colo_name:
          description: Short ID for the colo this connection is connected to.
          example: DFW
          type: string
        id:
          $ref: '#/components/schemas/connection_id'
        is_pending_reconnect:
          description: 'Cloudflare continues to track connections for several minutes after they disconnect. This is an optimization to improve latency and reliability of reconnecting. If this field is true, the connection has disconnected but is still being tracked for these optimized reconnects. If false, the connection is still actively serving.'
          example: false
          type: boolean
        opened_at:
          description: 'Timestamp when the connection was established, formatted in RFC 3339.'
          example: '2021-01-25T18:22:34.317854Z'
          format: date-time
          type: string
        origin_ip:
          description: The publicly perceived IP of the host running the cloudflared instance.
          example: 85.12.78.6
          type: string
    cloudflare-tunnel_components-schemas-version:
      description: Indicates the cloudflared version used to establish this Cloudflare Tunnel connection.
      example: 2022.7.1
      type: string
    connection_id:
      description: UUID of the tunnel's connection.
      example: 1bedc50d-42b3-473c-b108-ff3d10c0d925
      maxLength: 36
      readOnly: true
      type: string
    schemas-tunnel_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/tunnel'
          type: object
    api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
    cloudflare-tunnel_components-schemas-empty_response:
      allOf:
        - $ref: '#/components/schemas/api-response-common'
        - properties:
            result:
              type: object
          type: object
    tunnel_connections_response:
      allOf:
        - $ref: '#/components/schemas/api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/tunnel_connection'
              type: array
          type: object
    tunnel_connection:
      description: Indicates the cloudflared enabled features for this Cloudflare Tunnel connection.
      properties:
        arch:
          $ref: '#/components/schemas/arch'
        conns:
          $ref: '#/components/schemas/connections'
        features:
          $ref: '#/components/schemas/schemas-features'
        id:
          $ref: '#/components/schemas/connection_id'
        run_at:
          $ref: '#/components/schemas/run_at'
        version:
          $ref: '#/components/schemas/cloudflare-tunnel_components-schemas-version'
      type: object
    arch:
      description: Indicates the cloudflared OS architecture used to establish this Cloudflare Tunnel connection.
      example: linux_amd64
      type: string
    schemas-features:
      description: Contents of a Cloudflare Tunnel.
      items:
        example: ha-origin
        type: string
      type: array
    run_at:
      description: Indicates when the tunnel connection was started (formatted in RFC 3339).
      example: '2009-11-10T23:00:00Z'
      format: date-time
      type: string
    tunnel_response_token:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: string
          type: object
    config_response_single:
      allOf:
        - $ref: '#/components/schemas/api-response-single'
        - properties:
            result:
              type: object
          type: object
  responses: {}
  securitySchemes:
    api_email:
      in: header
      name: X-Auth-Email
      type: apiKey
    api_key:
      in: header
      name: X-Auth-Key
      type: apiKey
    api_token:
      scheme: bearer
      type: http
    user_service_key:
      in: header
      name: X-Auth-User-Service-Key
      type: apiKey
  x-stackQL-resources:
    accounts_cfd_tunnel:
      id: cloudflare.cloudflare_tunnel.accounts_cfd_tunnel
      name: accounts_cfd_tunnel
      title: Accounts Cfd Tunnel
      methods:
        list_cloudflare_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _list_cloudflare_tunnels:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_cloudflare_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_cloudflare_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_cloudflare_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _get_cloudflare_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_cloudflare_tunnel:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_cfd_tunnel/methods/list_cloudflare_tunnels'
          - $ref: '#/components/x-stackQL-resources/accounts_cfd_tunnel/methods/get_cloudflare_tunnel'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts_cfd_tunnel/methods/create_cloudflare_tunnel'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts_cfd_tunnel/methods/delete_cloudflare_tunnel'
    accounts_cfd_tunnel_connections:
      id: cloudflare.cloudflare_tunnel.accounts_cfd_tunnel_connections
      name: accounts_cfd_tunnel_connections
      title: Accounts Cfd Tunnel Connections
      methods:
        clean_up_cloudflare_tunnel_connections:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}~1connections/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_cloudflare_tunnel_connections:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}~1connections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.result
        _list_cloudflare_tunnel_connections:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}~1connections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_cfd_tunnel_connections/methods/list_cloudflare_tunnel_connections'
        insert: []
        update: []
        delete: []
    accounts_cfd_tunnel_token:
      id: cloudflare.cloudflare_tunnel.accounts_cfd_tunnel_token
      name: accounts_cfd_tunnel_token
      title: Accounts Cfd Tunnel Token
      methods:
        get_cloudflare_tunnel_token:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}~1token/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _get_cloudflare_tunnel_token:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}~1token/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_cfd_tunnel_token/methods/get_cloudflare_tunnel_token'
        insert: []
        update: []
        delete: []
    accounts_cfd_tunnel_configurations:
      id: cloudflare.cloudflare_tunnel.accounts_cfd_tunnel_configurations
      name: accounts_cfd_tunnel_configurations
      title: Accounts Cfd Tunnel Configurations
      methods:
        configuration_get_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}~1configurations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _configuration_get_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}~1configurations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        configuration_put_configuration:
          operation:
            $ref: '#/paths/~1accounts~1{account_identifier}~1cfd_tunnel~1{tunnel_id}~1configurations/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_cfd_tunnel_configurations/methods/configuration_get_configuration'
        insert: []
        update: []
        delete: []
paths:
  '/accounts/{account_identifier}/cfd_tunnel':
    get:
      description: 'List, search and filter an account''s Cloudflare Tunnels.'
      operationId: cloudflare-tunnel-list-cloudflare-tunnels
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnel_response_collection'
          description: List Cloudflare Tunnels response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnel_response_collection'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Cloudflare Tunnels response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Cloudflare Tunnels
      tags:
        - Cloudflare Tunnel
    post:
      description: Create a Cloudflare Tunnel in an account.
      operationId: cloudflare-tunnel-create-cloudflare-tunnel
      parameters:
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/tunnel_name'
                tunnel_secret:
                  description: A secret encoded as a base64 string. The Create Cloudflare Tunnel endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password.
                  example: AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg=
                  type: string
              required:
                - name
                - tunnel_secret
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnel_response_single'
          description: Create Cloudflare Tunnel response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnel_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Create Cloudflare Tunnel response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Create Cloudflare Tunnel
      tags:
        - Cloudflare Tunnel
  '/accounts/{account_identifier}/cfd_tunnel/{tunnel_id}':
    delete:
      description: Delete a Cloudflare Tunnel from an account.
      operationId: cloudflare-tunnel-delete-cloudflare-tunnel
      parameters:
        - in: path
          name: tunnel_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnel_response_single'
          description: Delete Cloudflare Tunnel response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnel_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Delete Cloudflare Tunnel response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Delete Cloudflare Tunnel
      tags:
        - Cloudflare Tunnel
    get:
      description: Get the details of a Cloudflare Tunnel from an account.
      operationId: cloudflare-tunnel-get-cloudflare-tunnel
      parameters:
        - in: path
          name: tunnel_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnel_response_single'
          description: Get Cloudflare Tunnel response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnel_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Cloudflare Tunnel response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Cloudflare Tunnel
      tags:
        - Cloudflare Tunnel
    patch:
      description: Updates a Cloudflare Tunnel in an account.
      operationId: cloudflare-tunnel-update-cloudflare-tunnel
      parameters:
        - in: path
          name: tunnel_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/tunnel_name'
                tunnel_secret:
                  description: A secret encoded as a base64 string. The endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password.
                  example: AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg=
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-tunnel_response_single'
          description: Update Cloudflare Tunnel response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/schemas-tunnel_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Update Cloudflare Tunnel response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Update Cloudflare Tunnel
      tags:
        - Cloudflare Tunnel
  '/accounts/{account_identifier}/cfd_tunnel/{tunnel_id}/connections':
    delete:
      description: Remove stale connection resources from a Cloudflare Tunnel.
      operationId: cloudflare-tunnel-clean-up-cloudflare-tunnel-connections
      parameters:
        - in: path
          name: tunnel_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloudflare-tunnel_components-schemas-empty_response'
          description: Clean Up Cloudflare Tunnel Connections response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudflare-tunnel_components-schemas-empty_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Clean Up Cloudflare Tunnel Connections response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Clean Up Cloudflare Tunnel Connections
      tags:
        - Cloudflare Tunnel
    get:
      description: List all of the connection resources for a Cloudflare Tunnel.
      operationId: cloudflare-tunnel-list-cloudflare-tunnel-connections
      parameters:
        - in: path
          name: tunnel_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_connections_response'
          description: List Cloudflare Tunnel Connections response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_connections_response'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: List Cloudflare Tunnel Connections response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: List Cloudflare Tunnel Connections
      tags:
        - Cloudflare Tunnel
  '/accounts/{account_identifier}/cfd_tunnel/{tunnel_id}/token':
    get:
      description: Gets the Tunnel for a previously created Cloudflare Tunnel.
      operationId: cloudflare-tunnel-get-cloudflare-tunnel-token
      parameters:
        - in: path
          name: tunnel_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_response_token'
          description: Get Cloudflare Tunnel Token response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_response_token'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Cloudflare Tunnel Token response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Cloudflare Tunnel Token
      tags:
        - Cloudflare Tunnel
  '/accounts/{account_identifier}/cfd_tunnel/{tunnel_id}/configurations':
    get:
      description: Get the configuration of a specific Cloudflare Tunnel.
      operationId: cloudflare-tunnel-configuration-get-configuration
      parameters:
        - in: path
          name: tunnel_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/config_response_single'
          description: Get Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/config_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Get Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Get Configuration
      tags:
        - Cloudflare Tunnel configuration
    put:
      description: Add or update a configuration for a cloudflared tunnel.
      operationId: cloudflare-tunnel-configuration-put-configuration
      parameters:
        - in: path
          name: tunnel_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_id'
        - in: path
          name: account_identifier
          required: true
          schema:
            $ref: '#/components/schemas/common_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                config:
                  description: This is a json that conforms to the same syntax rules as the config.yaml.
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/config_response_single'
          description: Put Configuration response
        4xx:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/config_response_single'
                  - $ref: '#/components/schemas/api-response-common-failure'
          description: Put Configuration response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
      summary: Put Configuration
      tags:
        - Cloudflare Tunnel configuration
