openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureStack Infrastructure Insights Management Client
  description: The AzureStack Admin Infrastructure Insights Management Client.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client API Version.
      required: false
      schema:
        default: '2016-05-01'
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: OData filter parameter.
      x-ms-parameter-location: method
      schema:
        type: string
    LocationParameter:
      name: location
      in: path
      description: Name of the region
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceRegistrationIdParameter:
      name: resourceRegistrationId
      in: path
      description: Resource registration ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ServiceRegistrationIdParameter:
      name: serviceRegistrationId
      in: path
      description: Service registration ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AlertNameParameter:
      name: alertName
      in: path
      description: Name of the alert.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    UserParameter:
      name: user
      in: query
      description: The username used to perform the operation.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ServiceHealthParameter:
      name: serviceHealth
      in: path
      description: Service Health name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Dictionary:
      description: Dictionary of string key-value pairs.
      additionalProperties:
        type: string
      properties: {}
      type: object
    BaseHealth:
      description: Models the base properties for health resource.
      properties:
        alertSummary:
          description: Alert summary.
          $ref: '#/components/schemas/AlertSummary'
        healthState:
          description: Health state.
          type: string
        namespace:
          description: Namespace of the health resource.
          type: string
        registrationId:
          description: Registration ID.
          type: string
        routePrefix:
          description: Route prefix.
          type: string
      type: object
    Resource:
      description: The core properties of ARM resources
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource.
      x-ms-azure-resource: true
      type: object
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The Azure Region where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource.
      type: object
    AlertSummary:
      description: Summary of the alerts.
      properties:
        criticalAlertCount:
          description: The number of critical alerts for the service.
          type: integer
        warningAlertCount:
          description: The number of warning alerts for the service.
          type: integer
      type: object
    Metrics:
      description: Metrics for a source.
      properties:
        name:
          description: Name of the usage metric.
          type: string
        maCounterName:
          description: Name of the counter.
          type: string
        observedTimestamp:
          description: Time counter was observed.
          type: string
          format: date-time
        sourceType:
          description: Type of the source.
          type: string
        sourceName:
          description: Name of the source.
          $ref: '#/components/schemas/MetricsSourceType'
        unit:
          description: Unit for the metric.
          $ref: '#/components/schemas/MetricsUnit'
        value:
          description: Name of the usage metric.
          type: number
          format: double
      type: object
    MetricsSourceType:
      type: string
      description: The origin of the metric.
      enum:
        - PhysicalNode
        - VirtualMachine
        - ResourceProvider
      x-ms-enum:
        name: MetricsSourceType
        modelAsString: true
    MetricsUnit:
      type: string
      description: The unit of the metric.
      enum:
        - One
        - Percentage
        - B
        - KB
        - MB
        - GB
        - TB
      x-ms-enum:
        name: MetricsUnit
        modelAsString: true
    UsageMetrics:
      description: Metrics of resource usage.
      properties:
        name:
          description: Name of the usage metric.
          type: string
        metricsValue:
          description: List of usage metrics.
          type: array
          items:
            $ref: '#/components/schemas/Metrics'
          x-ms-identifiers:
            - name
      type: object
    Operation:
      description: Describes the supported REST operation.
      properties:
        name:
          description: The name of the operation performed on the object. The name should match the action name that appears in RBAC or the event service.
          type: string
        display:
          description: Contains the localized display information for this particular operation or action.
          $ref: '#/components/schemas/Display'
      type: object
    Display:
      description: Contains the localized display information for this particular operation / action.
      properties:
        provider:
          description: The localized, friendly version of the resource provider name. The provider name is expected to include the name of the publisher or company responsible. The provider name format should use title case and begin with "Microsoft" for first-party services. For example, the provider name may be"Microsoft Monitoring Insights" or "Microsoft Compute".
          type: string
        resource:
          description: The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
          type: string
        operation:
          description: The localized, friendly name for the operation. Use the name as it will be displayed to the user.
          type: string
        description:
          description: The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
          type: string
      type: object
    OperationList:
      description: List of Operations
      properties:
        value:
          description: Array of operations
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: URI to the next page of operations.
          type: string
      type: object
    Alert:
      description: This object represents an alert resource.
      properties:
        properties:
          description: Contains information related to alerts.
          $ref: '#/components/schemas/AlertModel'
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The Azure Region where the resource lives
      type: object
    AlertModel:
      description: Contains alert data.
      properties:
        closedTimestamp:
          description: Timestamp when the alert was closed.
          type: string
        createdTimestamp:
          description: Timestamp when the alert was created.
          type: string
        description:
          description: Description of the alert.
          type: array
          items:
            $ref: '#/components/schemas/Dictionary'
          x-ms-identifiers: []
        faultId:
          description: Gets or sets the fault ID of the alert.
          type: string
        alertId:
          description: Gets or sets the ID of the alert.
          type: string
        faultTypeId:
          description: Gets or sets the fault type ID of the alert.
          type: string
        lastUpdatedTimestamp:
          description: Timestamp when the alert was last updated.
          type: string
        alertProperties:
          description: Properties of the alert.
          type: object
          additionalProperties:
            type: string
        remediation:
          description: Gets or sets the admin friendly remediation instructions for the alert.
          type: array
          items:
            $ref: '#/components/schemas/Dictionary'
          x-ms-identifiers: []
        resourceRegistrationId:
          description: Gets or sets the registration ID of the resource associated with the alert. If the alert is not associated with a resource, the resource registration ID is null.
          type: string
        resourceProviderRegistrationId:
          description: Gets or sets the registration ID of the service the alert belongs to.
          type: string
        severity:
          description: Severity of the alert.
          type: string
        state:
          description: State of the alert.
          type: string
        title:
          description: Gets or sets the Resource ID for the impacted item.
          type: string
        impactedResourceId:
          description: Gets or sets the Resource ID for the impacted item.
          type: string
        impactedResourceDisplayName:
          description: Display name for the impacted item.
          type: string
        closedByUserAlias:
          description: User alias who closed the alert.
          type: string
        hasValidRemediationAction:
          description: Indicates if the alert can be remediated.
          type: boolean
      type: object
    AlertList:
      description: A pageable list of alerts
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          description: List of alerts.
        nextLink:
          type: string
          description: URI to the next page.
      type: object
    ResourceHealth:
      description: Health information related to a resource.
      properties:
        properties:
          description: Health information related to a resource.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ResourceHealthModel'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The Azure Region where the resource lives
      type: object
    ResourceHealthModel:
      description: Health information related to a resource.
      properties:
        resourceLocation:
          description: Resource location.
          type: string
        resourceName:
          description: Resource name.
          type: string
        resourceDisplayName:
          description: Resource display name.
          type: string
        resourceType:
          description: Resource type.
          type: string
        resourceURI:
          description: Gets or sets the resource URI.
          type: string
        rpRegistrationId:
          description: Gets or sets the resource provider registration ID.
          type: string
        usageMetrics:
          description: Usage metrics.
          type: array
          items:
            $ref: '#/components/schemas/UsageMetrics'
          x-ms-identifiers:
            - name
        alertSummary:
          description: Alert summary.
          $ref: '#/components/schemas/AlertSummary'
        healthState:
          description: Health state.
          type: string
        namespace:
          description: Namespace of the health resource.
          type: string
        registrationId:
          description: Registration ID.
          type: string
        routePrefix:
          description: Route prefix.
          type: string
      type: object
    ResourceHealthList:
      description: Pageable list of resource health objects.
      properties:
        value:
          description: List of resource health objects.
          type: array
          items:
            $ref: '#/components/schemas/ResourceHealth'
        nextLink:
          description: URI to next page.
          type: string
      type: object
    RegionHealth:
      description: Contains information related to the health of a region.
      properties:
        properties:
          description: Contains information related to the health of a region.
          $ref: '#/components/schemas/RegionHealthModel'
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The Azure Region where the resource lives
      type: object
    RegionHealthModel:
      description: Contains information related to the health of a region.
      properties:
        alertSummary:
          description: Summary of alerts.
          $ref: '#/components/schemas/AlertSummary'
        usageMetrics:
          description: List of usage metrics for the region.
          type: array
          items:
            $ref: '#/components/schemas/UsageMetrics'
          x-ms-identifiers:
            - name
      type: object
    RegionHealthList:
      description: Pageable list of region health items.
      properties:
        value:
          description: Array of region health items
          type: array
          items:
            $ref: '#/components/schemas/RegionHealth'
        nextLink:
          description: URI to next page.
          type: string
      type: object
    ServiceHealth:
      description: Holds information about the health of a service.
      properties:
        properties:
          description: Holds information about the health of a service.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ServiceHealthModel'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The Azure Region where the resource lives
      type: object
    ServiceHealthModel:
      description: Holds information about the health of a service.
      properties:
        displayName:
          description: Name of the service.
          type: string
        serviceLocation:
          description: Location of the service.
          type: string
        infraURI:
          description: The route prefix to the service.
          type: string
        alertSummary:
          description: Alert summary.
          $ref: '#/components/schemas/AlertSummary'
        healthState:
          description: Health state.
          type: string
        namespace:
          description: Namespace of the health resource.
          type: string
        registrationId:
          description: Registration ID.
          type: string
        routePrefix:
          description: Route prefix.
          type: string
      type: object
    ServiceHealthList:
      description: Pageable list of service health objects.
      properties:
        value:
          description: List of service health objects.
          type: array
          items:
            $ref: '#/components/schemas/ServiceHealth'
        nextLink:
          description: URI of the next page.
          type: string
      type: object
  x-stackQL-resources:
    operations:
      id: azure_stack.infrastructure_insights_admin.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.InfrastructureInsights.Admin~1operations?api-version=2016-05-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    alerts:
      id: azure_stack.infrastructure_insights_admin.alerts
      name: alerts
      title: alerts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}~1alerts?api-version=2016-05-01/get'
            operationId: Alerts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AlertList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}~1alerts~1{alertName}?api-version=2016-05-01/get'
            operationId: Alerts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Alert
        close:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}~1alerts~1{alertName}?api-version=2016-05-01/put'
            operationId: Alerts_Close
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Alert
        repair:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}~1alerts~1{alertName}~1repair?api-version=2016-05-01/post'
            operationId: Alerts_Repair
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/get'
          - $ref: '#/components/x-stackQL-resources/alerts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    resource_healths:
      id: azure_stack.infrastructure_insights_admin.resource_healths
      name: resource_healths
      title: resource_healths
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}~1serviceHealths~1{serviceRegistrationId}~1resourceHealths?api-version=2016-05-01/get'
            operationId: ResourceHealths_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceHealthList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}~1serviceHealths~1{serviceRegistrationId}~1resourceHealths~1{resourceRegistrationId}?api-version=2016-05-01/get'
            operationId: ResourceHealths_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceHealth
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_healths/methods/get'
          - $ref: '#/components/x-stackQL-resources/resource_healths/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    region_healths:
      id: azure_stack.infrastructure_insights_admin.region_healths
      name: region_healths
      title: region_healths
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths?api-version=2016-05-01/get'
            operationId: RegionHealths_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegionHealthList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}?api-version=2016-05-01/get'
            operationId: RegionHealths_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegionHealth
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/region_healths/methods/get'
          - $ref: '#/components/x-stackQL-resources/region_healths/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    service_healths:
      id: azure_stack.infrastructure_insights_admin.service_healths
      name: service_healths
      title: service_healths
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}~1serviceHealths?api-version=2016-05-01/get'
            operationId: ServiceHealths_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceHealthList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.InfrastructureInsights.Admin~1regionHealths~1{location}~1serviceHealths~1{serviceHealth}?api-version=2016-05-01/get'
            operationId: ServiceHealths_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceHealth
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_healths/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_healths/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_alerts:
      id: azure_stack.infrastructure_insights_admin.vw_alerts
      name: vw_alerts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.closedTimestamp') as "closed_timestamp",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.faultId') as "fault_id",
              JSON_EXTRACT(properties, '$.alertId') as "alert_id",
              JSON_EXTRACT(properties, '$.faultTypeId') as "fault_type_id",
              JSON_EXTRACT(properties, '$.lastUpdatedTimestamp') as "last_updated_timestamp",
              JSON_EXTRACT(properties, '$.alertProperties') as "alert_properties",
              JSON_EXTRACT(properties, '$.remediation') as "remediation",
              JSON_EXTRACT(properties, '$.resourceRegistrationId') as "resource_registration_id",
              JSON_EXTRACT(properties, '$.resourceProviderRegistrationId') as "resource_provider_registration_id",
              JSON_EXTRACT(properties, '$.severity') as "severity",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.impactedResourceId') as "impacted_resource_id",
              JSON_EXTRACT(properties, '$.impactedResourceDisplayName') as "impacted_resource_display_name",
              JSON_EXTRACT(properties, '$.closedByUserAlias') as "closed_by_user_alias",
              JSON_EXTRACT(properties, '$.hasValidRemediationAction') as "has_valid_remediation_action",
              subscriptionId,
              resourceGroupName,
              location,
              alertName
              FROM azure_stack.infrastructure_insights_admin.alerts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.closedTimestamp') as "closed_timestamp",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.faultId') as "fault_id",
                json_extract_path_text(properties, '$.alertId') as "alert_id",
                json_extract_path_text(properties, '$.faultTypeId') as "fault_type_id",
                json_extract_path_text(properties, '$.lastUpdatedTimestamp') as "last_updated_timestamp",
                json_extract_path_text(properties, '$.alertProperties') as "alert_properties",
                json_extract_path_text(properties, '$.remediation') as "remediation",
                json_extract_path_text(properties, '$.resourceRegistrationId') as "resource_registration_id",
                json_extract_path_text(properties, '$.resourceProviderRegistrationId') as "resource_provider_registration_id",
                json_extract_path_text(properties, '$.severity') as "severity",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.impactedResourceId') as "impacted_resource_id",
                json_extract_path_text(properties, '$.impactedResourceDisplayName') as "impacted_resource_display_name",
                json_extract_path_text(properties, '$.closedByUserAlias') as "closed_by_user_alias",
                json_extract_path_text(properties, '$.hasValidRemediationAction') as "has_valid_remediation_action",
                subscriptionId,
                resourceGroupName,
                location,
                alertName
                FROM azure_stack.infrastructure_insights_admin.alerts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me';
    vw_resource_healths:
      id: azure_stack.infrastructure_insights_admin.vw_resource_healths
      name: vw_resource_healths
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.resourceLocation') as "resource_location",
              JSON_EXTRACT(properties, '$.resourceName') as "resource_name",
              JSON_EXTRACT(properties, '$.resourceDisplayName') as "resource_display_name",
              JSON_EXTRACT(properties, '$.resourceType') as "resource_type",
              JSON_EXTRACT(properties, '$.resourceURI') as "resource_uri",
              JSON_EXTRACT(properties, '$.rpRegistrationId') as "rp_registration_id",
              JSON_EXTRACT(properties, '$.usageMetrics') as "usage_metrics",
              JSON_EXTRACT(properties, '$.alertSummary') as "alert_summary",
              JSON_EXTRACT(properties, '$.healthState') as "health_state",
              JSON_EXTRACT(properties, '$.namespace') as "namespace",
              JSON_EXTRACT(properties, '$.registrationId') as "registration_id",
              JSON_EXTRACT(properties, '$.routePrefix') as "route_prefix",
              subscriptionId,
              resourceGroupName,
              location,
              serviceRegistrationId,
              resourceRegistrationId
              FROM azure_stack.infrastructure_insights_admin.resource_healths
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me' AND serviceRegistrationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.resourceLocation') as "resource_location",
                json_extract_path_text(properties, '$.resourceName') as "resource_name",
                json_extract_path_text(properties, '$.resourceDisplayName') as "resource_display_name",
                json_extract_path_text(properties, '$.resourceType') as "resource_type",
                json_extract_path_text(properties, '$.resourceURI') as "resource_uri",
                json_extract_path_text(properties, '$.rpRegistrationId') as "rp_registration_id",
                json_extract_path_text(properties, '$.usageMetrics') as "usage_metrics",
                json_extract_path_text(properties, '$.alertSummary') as "alert_summary",
                json_extract_path_text(properties, '$.healthState') as "health_state",
                json_extract_path_text(properties, '$.namespace') as "namespace",
                json_extract_path_text(properties, '$.registrationId') as "registration_id",
                json_extract_path_text(properties, '$.routePrefix') as "route_prefix",
                subscriptionId,
                resourceGroupName,
                location,
                serviceRegistrationId,
                resourceRegistrationId
                FROM azure_stack.infrastructure_insights_admin.resource_healths
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me' AND serviceRegistrationId = 'replace-me';
    vw_region_healths:
      id: azure_stack.infrastructure_insights_admin.vw_region_healths
      name: vw_region_healths
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.alertSummary') as "alert_summary",
              JSON_EXTRACT(properties, '$.usageMetrics') as "usage_metrics",
              subscriptionId,
              resourceGroupName,
              location
              FROM azure_stack.infrastructure_insights_admin.region_healths
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.alertSummary') as "alert_summary",
                json_extract_path_text(properties, '$.usageMetrics') as "usage_metrics",
                subscriptionId,
                resourceGroupName,
                location
                FROM azure_stack.infrastructure_insights_admin.region_healths
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
    vw_service_healths:
      id: azure_stack.infrastructure_insights_admin.vw_service_healths
      name: vw_service_healths
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.serviceLocation') as "service_location",
              JSON_EXTRACT(properties, '$.infraURI') as "infra_uri",
              JSON_EXTRACT(properties, '$.alertSummary') as "alert_summary",
              JSON_EXTRACT(properties, '$.healthState') as "health_state",
              JSON_EXTRACT(properties, '$.namespace') as "namespace",
              JSON_EXTRACT(properties, '$.registrationId') as "registration_id",
              JSON_EXTRACT(properties, '$.routePrefix') as "route_prefix",
              subscriptionId,
              resourceGroupName,
              location,
              serviceHealth
              FROM azure_stack.infrastructure_insights_admin.service_healths
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.serviceLocation') as "service_location",
                json_extract_path_text(properties, '$.infraURI') as "infra_uri",
                json_extract_path_text(properties, '$.alertSummary') as "alert_summary",
                json_extract_path_text(properties, '$.healthState') as "health_state",
                json_extract_path_text(properties, '$.namespace') as "namespace",
                json_extract_path_text(properties, '$.registrationId') as "registration_id",
                json_extract_path_text(properties, '$.routePrefix') as "route_prefix",
                subscriptionId,
                resourceGroupName,
                location,
                serviceHealth
                FROM azure_stack.infrastructure_insights_admin.service_healths
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me';
paths:
  /providers/Microsoft.InfrastructureInsights.Admin/operations?api-version=2016-05-01:
    get:
      description: Returns a list of support REST operations.
      tags:
        - InfrastructureInsights
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths/{location}/alerts?api-version=2016-05-01:
    get:
      tags:
        - Alerts
      description: Returns the list of all alerts in a given region.
      operationId: Alerts_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertList'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Alert'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths/{location}/alerts/{alertName}?api-version=2016-05-01:
    get:
      tags:
        - Alerts
      description: Returns the requested an alert.
      operationId: Alerts_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/AlertNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
    put:
      tags:
        - Alerts
      description: Closes the given alert.
      operationId: Alerts_Close
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/AlertNameParameter'
        - $ref: '#/components/parameters/UserParameter'
      requestBody:
        description: Updated alert parameter.
        required: true
        x-ms-requestBody-name: alert
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths/{location}/alerts/{alertName}/repair?api-version=2016-05-01:
    post:
      tags:
        - Alerts
      x-ms-long-running-operation: true
      description: Repairs an alert.
      operationId: Alerts_Repair
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/AlertNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: ACCEPTED
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths/{location}/serviceHealths/{serviceRegistrationId}/resourceHealths?api-version=2016-05-01:
    get:
      tags:
        - Resources
      description: Returns a list of each resource's health under a service.
      operationId: ResourceHealths_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ServiceRegistrationIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceHealthList'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/ResourceHealth'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths/{location}/serviceHealths/{serviceRegistrationId}/resourceHealths/{resourceRegistrationId}?api-version=2016-05-01:
    get:
      tags:
        - Resources
      description: Returns the requested health information about a resource.
      operationId: ResourceHealths_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ServiceRegistrationIdParameter'
        - $ref: '#/components/parameters/ResourceRegistrationIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceHealth'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths?api-version=2016-05-01:
    get:
      tags:
        - RegionHealths
      description: Returns the list of all health status for the region.
      operationId: RegionHealths_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionHealthList'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Alert'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths/{location}?api-version=2016-05-01:
    get:
      tags:
        - RegionHealths
      description: Returns the requested health status of a region.
      operationId: RegionHealths_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionHealth'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths/{location}/serviceHealths?api-version=2016-05-01:
    get:
      tags:
        - ServiceHealths
      description: Returns the list of all resource provider health states.
      operationId: ServiceHealths_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHealthList'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/ServiceHealth'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.InfrastructureInsights.Admin/regionHealths/{location}/serviceHealths/{serviceHealth}?api-version=2016-05-01:
    get:
      tags:
        - ServiceHealths
      description: Returns the requested service health object.
      operationId: ServiceHealths_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ServiceHealthParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHealth'
