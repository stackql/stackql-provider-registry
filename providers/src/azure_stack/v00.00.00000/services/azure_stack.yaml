openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureStack Client
  description: Build and run hybrid apps across datacenters, edge locations, remote offices, and the cloud.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ProductNameParameter:
      name: productName
      in: path
      description: Name of the product.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    CustomerSubscriptionNameParameter:
      name: customerSubscriptionName
      in: path
      description: Name of the product.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client API Version.
      required: true
      schema:
        default: '2017-06-01'
        type: string
    ResourceGroupNameParameter:
      name: resourceGroup
      in: path
      description: Name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RegistrationNameParameter:
      name: registrationName
      in: path
      description: Name of the Azure Stack registration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ComputeRole:
      description: Compute role type (IaaS or PaaS).
      type: string
      enum:
        - None
        - IaaS
        - PaaS
      x-ms-enum:
        name: ComputeRole
        modelAsString: true
    OperatingSystem:
      description: Operating system type (Windows or Linux).
      type: string
      enum:
        - None
        - Windows
        - Linux
      x-ms-enum:
        name: OperatingSystem
        modelAsString: true
    Uri:
      description: The URI.
      type: object
      properties:
        uri:
          description: The URI.
          type: string
          readOnly: true
    ExtendedProduct:
      description: Extended description about the product required for installing it into Azure Stack.
      properties:
        galleryPackageBlobSasUri:
          description: The URI to the .azpkg file that provides information required for showing product in the gallery.
          type: string
          readOnly: true
        productKind:
          description: Specifies the kind of the product (virtualMachine or virtualMachineExtension).
          type: string
          readOnly: true
        properties:
          description: Specifies additional properties describing the product.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ExtendedProductProperties'
          readOnly: true
      type: object
    ExtendedProductProperties:
      description: Product information.
      properties:
        computeRole:
          description: Specifies kind of compute role included in the package.
          $ref: '#/components/schemas/ComputeRole'
          readOnly: true
        isSystemExtension:
          description: Specifies if product is a Virtual Machine Extension.
          type: boolean
          readOnly: true
        sourceBlob:
          description: Specifies a download location where content can be downloaded from.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Uri'
          readOnly: true
        supportMultipleExtensions:
          description: Indicates if specified product supports multiple extensions.
          type: boolean
          readOnly: true
        version:
          description: Specifies product version.
          type: string
          readOnly: true
        vmOsType:
          description: Specifies operating system used by the product.
          $ref: '#/components/schemas/OperatingSystem'
          readOnly: true
        vmScaleSetEnabled:
          description: Indicates if virtual machine Scale Set is enabled in the specified product.
          type: boolean
          readOnly: true
        osDiskImage:
          description: OS disk image used by product.
          $ref: '#/components/schemas/OsDiskImage'
          readOnly: true
        dataDiskImages:
          description: List of attached data disks.
          type: array
          items:
            $ref: '#/components/schemas/DataDiskImage'
          x-ms-identifiers:
            - lun
          readOnly: true
      type: object
    VirtualMachineExtensionProductProperties:
      description: Product information.
      type: object
      properties:
        computeRole:
          description: Specifies kind of compute role included in the package.
          $ref: '#/components/schemas/ComputeRole'
          readOnly: true
        isSystemExtension:
          description: Specifies if product is a Virtual Machine Extension.
          type: boolean
          readOnly: true
        sourceBlob:
          description: Specifies a download location where content can be downloaded from.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Uri'
          readOnly: true
        supportMultipleExtensions:
          description: Indicates if specified product supports multiple extensions.
          type: boolean
          readOnly: true
        version:
          description: Specifies product version.
          type: string
          readOnly: true
        vmOsType:
          description: Specifies operating system used by the product.
          $ref: '#/components/schemas/OperatingSystem'
          readOnly: true
        vmScaleSetEnabled:
          description: Indicates if virtual machine Scale Set is enabled in the specified product.
          type: boolean
          readOnly: true
    VirtualMachineProductProperties:
      description: Product information.
      type: object
      properties:
        version:
          description: Specifies product version.
          type: string
          readOnly: true
        osDiskImage:
          description: OS disk image used by product.
          $ref: '#/components/schemas/OsDiskImage'
          readOnly: true
        dataDiskImages:
          description: List of attached data disks.
          type: array
          items:
            $ref: '#/components/schemas/DataDiskImage'
          x-ms-identifiers:
            - lun
          readOnly: true
    OsDiskImage:
      description: OS disk image.
      type: object
      properties:
        operatingSystem:
          description: OS operating system type.
          $ref: '#/components/schemas/OperatingSystem'
          readOnly: true
        sourceBlobSasUri:
          description: SAS key for source blob.
          type: string
          readOnly: true
    DataDiskImage:
      description: Data disk image.
      type: object
      properties:
        lun:
          description: The LUN.
          type: integer
          format: int32
          readOnly: true
        sourceBlobSasUri:
          description: SAS key for source blob.
          type: string
          readOnly: true
    Product:
      description: Product information.
      properties:
        properties:
          description: Properties of the product resource.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProductNestedProperties'
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        etag:
          description: The entity tag used for optimistic concurrency when modifying the resource.
          type: string
      type: object
    ProductNestedProperties:
      description: Properties portion of the product resource.
      type: object
      properties:
        displayName:
          description: The display name of the product.
          type: string
        description:
          description: The description of the product.
          type: string
        publisherDisplayName:
          description: The user-friendly name of the product publisher.
          type: string
        publisherIdentifier:
          description: Publisher identifier.
          type: string
        offer:
          description: The offer representing the product.
          type: string
        offerVersion:
          description: The version of the product offer.
          type: string
        sku:
          description: The product SKU.
          type: string
        billingPartNumber:
          description: The part number used for billing purposes.
          type: string
        vmExtensionType:
          description: The type of the Virtual Machine Extension.
          type: string
        galleryItemIdentity:
          description: The identifier of the gallery item corresponding to the product.
          type: string
        iconUris:
          description: Additional links available for this product.
          $ref: '#/components/schemas/IconUris'
        links:
          description: Additional links available for this product.
          type: array
          items:
            $ref: '#/components/schemas/ProductLink'
          x-ms-identifiers:
            - uri
        legalTerms:
          description: The legal terms.
          type: string
        privacyPolicy:
          description: The privacy policy.
          type: string
        payloadLength:
          description: The length of product content.
          type: integer
          format: int64
        productKind:
          description: The kind of the product (virtualMachine or virtualMachineExtension)
          type: string
        productProperties:
          description: Additional properties for the product.
          $ref: '#/components/schemas/ProductProperties'
        compatibility:
          description: Product compatibility with current device.
          $ref: '#/components/schemas/Compatibility'
    Compatibility:
      description: Product compatibility
      type: object
      properties:
        isCompatible:
          description: Tells if product is compatible with current device
          type: boolean
        message:
          description: Short error message if any compatibility issues are found
          type: string
        description:
          description: Full error message if any compatibility issues are found
          type: string
        issues:
          description: List of all issues found
          type: array
          items:
            $ref: '#/components/schemas/CompatibilityIssue'
    CompatibilityIssue:
      description: Compatibility issue
      type: string
      enum:
        - HigherDeviceVersionRequired
        - LowerDeviceVersionRequired
        - CapacityBillingModelRequired
        - PayAsYouGoBillingModelRequired
        - DevelopmentBillingModelRequired
        - AzureADIdentitySystemRequired
        - ADFSIdentitySystemRequired
        - ConnectionToInternetRequired
        - ConnectionToAzureRequired
        - DisconnectedEnvironmentRequired
      x-ms-enum:
        name: CompatibilityIssue
        modelAsString: true
    IconUris:
      description: Links to product icons.
      type: object
      properties:
        large:
          description: URI to large icon.
          type: string
        wide:
          description: URI to wide icon.
          type: string
        medium:
          description: URI to medium icon.
          type: string
        small:
          description: URI to small icon.
          type: string
        hero:
          description: URI to hero icon.
          type: string
    ProductProperties:
      description: Additional properties of the product
      type: object
      properties:
        version:
          description: The version.
          type: string
    ProductLink:
      description: Link with additional information about a product.
      type: object
      properties:
        displayName:
          description: The description of the link.
          type: string
        uri:
          description: The URI corresponding to the link.
          type: string
    ProductList:
      description: Pageable list of products.
      type: object
      properties:
        nextLink:
          description: URI to the next page.
          type: string
        value:
          description: List of products.
          type: array
          items:
            $ref: '#/components/schemas/Product'
    DeviceConfiguration:
      description: Device Configuration.
      properties:
        deviceVersion:
          description: Version of the device.
          type: string
          readOnly: true
        identitySystem:
          description: Identity system of the device.
          enum:
            - AzureAD
            - ADFS
          type: string
          x-ms-enum:
            name: category
            modelAsString: true
          readOnly: true
      type: object
    MarketplaceProductLogUpdate:
      description: Update details for product log.
      properties:
        operation:
          description: Operation to log.
          type: string
          readOnly: true
        status:
          description: Operation status to log.
          type: string
          readOnly: true
        error:
          description: Error related to the operation.
          type: string
          readOnly: true
        details:
          description: Error details related to operation.
          type: string
          readOnly: true
      type: object
    ProductLog:
      description: Product action log.
      properties:
        id:
          description: Log ID.
          type: string
          readOnly: true
        productId:
          description: Logged product ID.
          type: string
          readOnly: true
        subscriptionId:
          description: Logged subscription ID.
          type: string
          readOnly: true
        registrationName:
          description: Logged registration name.
          type: string
          readOnly: true
        resourceGroupName:
          description: Logged resource group name.
          type: string
          readOnly: true
        operation:
          description: Logged operation.
          type: string
          readOnly: true
        startDate:
          description: Operation start datetime.
          type: string
          readOnly: true
        endDate:
          description: Operation end datetime.
          type: string
          readOnly: true
        status:
          description: Operation status.
          type: string
          readOnly: true
        error:
          description: Operation error data.
          type: string
          readOnly: true
        details:
          description: Operation error details.
          type: string
          readOnly: true
      type: object
    Registration:
      description: Registration information.
      properties:
        properties:
          description: Registration resource.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RegistrationProperties'
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
          enum:
            - global
          x-ms-enum:
            name: Location
            modelAsString: true
          x-ms-mutability:
            - create
            - read
        tags:
          description: Custom tags for the resource.
          type: object
          additionalProperties:
            type: string
        etag:
          description: The entity tag used for optimistic concurrency when modifying the resource.
          type: string
      type: object
    RegistrationProperties:
      description: Properties portion of the registration resource.
      type: object
      properties:
        objectId:
          description: The object identifier associated with the Azure Stack connecting to Azure.
          type: string
        cloudId:
          description: The identifier of the registered Azure Stack.
          type: string
        billingModel:
          description: Specifies the billing mode for the Azure Stack registration.
          type: string
    RegistrationList:
      description: Pageable list of registrations.
      type: object
      properties:
        nextLink:
          description: URI to the next page.
          type: string
        value:
          description: List of Registrations
          type: array
          items:
            $ref: '#/components/schemas/Registration'
    ActivationKeyResult:
      description: The resource containing the Azure Stack activation key.
      type: object
      properties:
        activationKey:
          description: Azure Stack activation key.
          type: string
    RegistrationParameter:
      description: Registration resource
      required:
        - properties
        - location
      properties:
        properties:
          description: Properties of the Azure Stack registration resource
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RegistrationParameterProperties'
        location:
          description: Location of the resource.
          type: string
          enum:
            - global
          x-ms-enum:
            name: Location
            modelAsString: true
          x-ms-mutability:
            - create
            - read
      type: object
    RegistrationParameterProperties:
      description: Properties of the Azure Stack registration resource
      type: object
      properties:
        registrationToken:
          description: The token identifying registered Azure Stack
          type: string
      required:
        - registrationToken
    CustomerSubscription:
      description: Customer subscription.
      properties:
        properties:
          description: Customer subscription properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CustomerSubscriptionProperties'
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        etag:
          description: The entity tag used for optimistic concurrency when modifying the resource.
          type: string
      type: object
    CustomerSubscriptionProperties:
      description: Customer subscription properties.
      type: object
      properties:
        tenantId:
          description: Tenant Id.
          type: string
    CustomerSubscriptionList:
      description: Pageable list of customer subscriptions.
      type: object
      properties:
        nextLink:
          description: URI to the next page.
          type: string
        value:
          description: List of customer subscriptions.
          type: array
          items:
            $ref: '#/components/schemas/CustomerSubscription'
    Resource:
      description: Base resource object.
      type: object
      properties:
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        etag:
          description: The entity tag used for optimistic concurrency when modifying the resource.
          type: string
      x-ms-azure-resource: true
    TrackedResource:
      description: Base resource object.
      type: object
      properties:
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
          enum:
            - global
          x-ms-enum:
            name: Location
            modelAsString: true
          x-ms-mutability:
            - create
            - read
        tags:
          description: Custom tags for the resource.
          type: object
          additionalProperties:
            type: string
        etag:
          description: The entity tag used for optimistic concurrency when modifying the resource.
          type: string
      required:
        - location
      x-ms-azure-resource: true
    ProvisioningState:
      description: The provisioning state of the resource.
      enum:
        - Creating
        - Failed
        - Succeeded
        - Canceled
      type: string
      x-ms-enum:
        name: ProvisioningState
    Operation:
      description: Describes the supported REST operation.
      properties:
        name:
          description: The name of the operation being performed on this particular object.
          type: string
        display:
          description: Contains the localized display information for this particular operation or action.
          $ref: '#/components/schemas/Display'
        origin:
          description: The intended executor of the operation.
          type: string
      type: object
    Display:
      description: Contains the localized display information for this particular operation or action.
      properties:
        provider:
          description: The localized, friendly version of the resource provider name.
          type: string
        resource:
          description: The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
          type: string
        operation:
          description: The localized, friendly name for the operation. Use the name as it will displayed to the user.
          type: string
        description:
          description: The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
          type: string
      type: object
    OperationList:
      description: List of Operations
      properties:
        value:
          description: Array of operations
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: URI to the next page of operations.
          type: string
      type: object
    CloudManifestFileResponse:
      description: Cloud specific manifest GET response.
      properties:
        properties:
          description: Cloud specific manifest data.
          $ref: '#/components/schemas/CloudManifestFileProperties'
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        etag:
          description: The entity tag used for optimistic concurrency when modifying the resource.
          type: string
      type: object
    CloudManifestFileProperties:
      description: Cloud specific manifest JSON properties.
      type: object
      properties:
        deploymentData:
          description: Cloud specific manifest data.
          $ref: '#/components/schemas/CloudManifestFileDeploymentData'
        signature:
          description: Signature of the cloud specific manifest data.
          type: string
    CloudManifestFileDeploymentData:
      description: Cloud specific manifest data for AzureStack deployment.
      type: object
      properties:
        externalDsmsCertificates:
          description: Dsms external certificates.
          type: string
        customCloudVerificationKey:
          description: Signing verification public key.
          type: string
        customEnvironmentEndpoints:
          description: Environment endpoints.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CloudManifestFileEnvironmentEndpoints'
    CloudManifestFileEnvironmentEndpoints:
      description: Cloud specific environment endpoints for AzureStack deployment.
      type: object
      properties:
        customCloudArmEndpoint:
          description: ARM endpoint.
          type: string
        externalDsmsEndpoint:
          description: Dsms endpoint.
          type: string
    DeploymentLicenseRequest:
      description: Request details for generating a deployment license.
      type: object
      properties:
        verificationVersion:
          description: Signing verification public key version.
          type: string
    DeploymentLicenseResponse:
      description: A license that can be used to deploy an Azure Stack device.
      type: object
      properties:
        temporaryLicenseChain:
          description: A license chain that can be used to temporarily activate an Azure Stack device.
          type: array
          items:
            description: An intermediate or leaf license item.
            type: string
        signature:
          description: Signature of the license chain.
          type: string
    ErrorDetails:
      description: The details of the error.
      properties:
        code:
          description: Error code.
          type: string
          readOnly: true
        message:
          description: Error message indicating why the operation failed.
          type: string
          readOnly: true
        target:
          description: The target of the particular error.
          type: string
          readOnly: true
      type: object
    ErrorResponse:
      description: Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        error:
          description: The details of the error.
          $ref: '#/components/schemas/ErrorDetails'
  x-stackQL-resources:
    products:
      id: azure_stack.azure_stack.products
      name: products
      title: products
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1products~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_product_name:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1products~1{productName}~1listProducts~1?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        exec_get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1products~1{productName}~1getProducts~1?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_log:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1products~1{productName}~1uploadProductLog~1?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/products/methods/list_by_product_name'
          - $ref: '#/components/x-stackQL-resources/products/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    product:
      id: azure_stack.azure_stack.product
      name: product
      title: product
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1products~1{productName}~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exec_get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1products~1{productName}~1getProduct~1?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/product/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    products_details:
      id: azure_stack.azure_stack.products_details
      name: products_details
      title: products_details
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1products~1{productName}~1listDetails~1?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/products_details/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    registrations:
      id: azure_stack.azure_stack.registrations
      name: registrations
      title: registrations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStack~1registrations~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1?api-version=2022-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1?api-version=2022-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1?api-version=2022-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable_remote_management:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1enableRemoteManagement~1?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registrations/methods/get'
          - $ref: '#/components/x-stackQL-resources/registrations/methods/list'
          - $ref: '#/components/x-stackQL-resources/registrations/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/registrations/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/registrations/methods/delete'
    registrations_activation_key:
      id: azure_stack.azure_stack.registrations_activation_key
      name: registrations_activation_key
      title: registrations_activation_key
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1getactivationkey~1?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registrations_activation_key/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    customer_subscriptions:
      id: azure_stack.azure_stack.customer_subscriptions
      name: customer_subscriptions
      title: customer_subscriptions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1customerSubscriptions~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1customerSubscriptions~1{customerSubscriptionName}~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1customerSubscriptions~1{customerSubscriptionName}~1?api-version=2022-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.AzureStack~1registrations~1{registrationName}~1customerSubscriptions~1{customerSubscriptionName}~1?api-version=2022-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customer_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/customer_subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/customer_subscriptions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/customer_subscriptions/methods/delete'
    operations:
      id: azure_stack.azure_stack.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureStack~1operations~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cloud_manifest_file:
      id: azure_stack.azure_stack.cloud_manifest_file
      name: cloud_manifest_file
      title: cloud_manifest_file
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureStack~1cloudManifestFiles~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureStack~1cloudManifestFiles~1{verificationVersion}~1?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_manifest_file/methods/get'
          - $ref: '#/components/x-stackQL-resources/cloud_manifest_file/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    deployment_license:
      id: azure_stack.azure_stack.deployment_license
      name: deployment_license
      title: deployment_license
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStack~1generateDeploymentLicense~1?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/deployment_license/methods/create'
        update: []
        replace: []
        delete: []
    vw_product:
      id: azure_stack.azure_stack.vw_product
      name: vw_product
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.publisherDisplayName') as publisher_display_name,
              JSON_EXTRACT(properties, '$.publisherIdentifier') as publisher_identifier,
              JSON_EXTRACT(properties, '$.offer') as offer,
              JSON_EXTRACT(properties, '$.offerVersion') as offer_version,
              JSON_EXTRACT(properties, '$.sku') as sku,
              JSON_EXTRACT(properties, '$.billingPartNumber') as billing_part_number,
              JSON_EXTRACT(properties, '$.vmExtensionType') as vm_extension_type,
              JSON_EXTRACT(properties, '$.galleryItemIdentity') as gallery_item_identity,
              JSON_EXTRACT(properties, '$.iconUris') as icon_uris,
              JSON_EXTRACT(properties, '$.links') as links,
              JSON_EXTRACT(properties, '$.legalTerms') as legal_terms,
              JSON_EXTRACT(properties, '$.privacyPolicy') as privacy_policy,
              JSON_EXTRACT(properties, '$.payloadLength') as payload_length,
              JSON_EXTRACT(properties, '$.productKind') as product_kind,
              JSON_EXTRACT(properties, '$.productProperties') as product_properties,
              JSON_EXTRACT(properties, '$.compatibility') as compatibility,
              subscriptionId,
              resourceGroup,
              registrationName,
              productName
              FROM azure_stack.azure_stack.product
              WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND registrationName = 'replace-me' AND productName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                json_extract_path_text(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.publisherDisplayName') as publisher_display_name,
                JSON_EXTRACT(properties, '$.publisherIdentifier') as publisher_identifier,
                JSON_EXTRACT(properties, '$.offer') as offer,
                JSON_EXTRACT(properties, '$.offerVersion') as offer_version,
                JSON_EXTRACT(properties, '$.sku') as sku,
                JSON_EXTRACT(properties, '$.billingPartNumber') as billing_part_number,
                JSON_EXTRACT(properties, '$.vmExtensionType') as vm_extension_type,
                JSON_EXTRACT(properties, '$.galleryItemIdentity') as gallery_item_identity,
                JSON_EXTRACT(properties, '$.iconUris') as icon_uris,
                JSON_EXTRACT(properties, '$.links') as links,
                JSON_EXTRACT(properties, '$.legalTerms') as legal_terms,
                JSON_EXTRACT(properties, '$.privacyPolicy') as privacy_policy,
                JSON_EXTRACT(properties, '$.payloadLength') as payload_length,
                JSON_EXTRACT(properties, '$.productKind') as product_kind,
                JSON_EXTRACT(properties, '$.productProperties') as product_properties,
                JSON_EXTRACT(properties, '$.compatibility') as compatibility,
                subscriptionId,
                resourceGroup,
                registrationName,
                productName
                FROM azure_stack.azure_stack.product
                WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND registrationName = 'replace-me' AND productName = 'replace-me';
    vw_products_details:
      id: azure_stack.azure_stack.vw_products_details
      name: vw_products_details
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              galleryPackageBlobSasUri as gallery_package_blob_sas_uri,
              productKind as product_kind,
              JSON_EXTRACT(properties, '$.computeRole') as compute_role,
              JSON_EXTRACT(properties, '$.isSystemExtension') as is_system_extension,
              JSON_EXTRACT(properties, '$.sourceBlob') as source_blob,
              JSON_EXTRACT(properties, '$.supportMultipleExtensions') as support_multiple_extensions,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.vmOsType') as vm_os_type,
              JSON_EXTRACT(properties, '$.vmScaleSetEnabled') as vm_scale_set_enabled,
              JSON_EXTRACT(properties, '$.osDiskImage') as os_disk_image,
              JSON_EXTRACT(properties, '$.dataDiskImages') as data_disk_images,
              subscriptionId,
              resourceGroup,
              registrationName,
              productName
              FROM azure_stack.azure_stack.products_details
              WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND registrationName = 'replace-me' AND productName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                galleryPackageBlobSasUri as gallery_package_blob_sas_uri,
                productKind as product_kind,
                json_extract_path_text(properties, '$.computeRole') as compute_role,
                JSON_EXTRACT(properties, '$.isSystemExtension') as is_system_extension,
                JSON_EXTRACT(properties, '$.sourceBlob') as source_blob,
                JSON_EXTRACT(properties, '$.supportMultipleExtensions') as support_multiple_extensions,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.vmOsType') as vm_os_type,
                JSON_EXTRACT(properties, '$.vmScaleSetEnabled') as vm_scale_set_enabled,
                JSON_EXTRACT(properties, '$.osDiskImage') as os_disk_image,
                JSON_EXTRACT(properties, '$.dataDiskImages') as data_disk_images,
                subscriptionId,
                resourceGroup,
                registrationName,
                productName
                FROM azure_stack.azure_stack.products_details
                WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND registrationName = 'replace-me' AND productName = 'replace-me';
    vw_registrations:
      id: azure_stack.azure_stack.vw_registrations
      name: vw_registrations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              etag as etag,
              JSON_EXTRACT(properties, '$.objectId') as object_id,
              JSON_EXTRACT(properties, '$.cloudId') as cloud_id,
              JSON_EXTRACT(properties, '$.billingModel') as billing_model,
              subscriptionId,
              resourceGroup,
              registrationName
              FROM azure_stack.azure_stack.registrations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                etag as etag,
                json_extract_path_text(properties, '$.objectId') as object_id,
                JSON_EXTRACT(properties, '$.cloudId') as cloud_id,
                JSON_EXTRACT(properties, '$.billingModel') as billing_model,
                subscriptionId,
                resourceGroup,
                registrationName
                FROM azure_stack.azure_stack.registrations
                WHERE subscriptionId = 'replace-me';
    vw_customer_subscriptions:
      id: azure_stack.azure_stack.vw_customer_subscriptions
      name: vw_customer_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              subscriptionId,
              resourceGroup,
              registrationName,
              customerSubscriptionName
              FROM azure_stack.azure_stack.customer_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND registrationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                json_extract_path_text(properties, '$.tenantId') as tenant_id,
                subscriptionId,
                resourceGroup,
                registrationName,
                customerSubscriptionName
                FROM azure_stack.azure_stack.customer_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND registrationName = 'replace-me';
    vw_cloud_manifest_file:
      id: azure_stack.azure_stack.vw_cloud_manifest_file
      name: vw_cloud_manifest_file
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              JSON_EXTRACT(properties, '$.deploymentData') as deployment_data,
              JSON_EXTRACT(properties, '$.signature') as signature,
              verificationVersion
              FROM azure_stack.azure_stack.cloud_manifest_file
              WHERE ;
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                json_extract_path_text(properties, '$.deploymentData') as deployment_data,
                JSON_EXTRACT(properties, '$.signature') as signature,
                verificationVersion
                FROM azure_stack.azure_stack.cloud_manifest_file
                WHERE ;
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/?api-version=2022-06-01:
    get:
      tags:
        - Product
      description: Returns a list of products.
      operationId: Products_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/?api-version=2022-06-01:
    get:
      tags:
        - Product
      description: Returns the specified product.
      operationId: Products_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/ProductNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/listDetails/?api-version=2022-06-01:
    post:
      tags:
        - Product
      description: Returns the extended properties of a product.
      operationId: Products_ListDetails
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/ProductNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedProduct'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/listProducts/?api-version=2022-06-01:
    post:
      tags:
        - Product
      description: Returns a list of products.
      operationId: Products_ListProducts
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/ProductNameParameter'
      requestBody:
        description: Device configuration.
        required: false
        x-ms-requestBody-name: deviceConfiguration
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/getProducts/?api-version=2022-06-01:
    post:
      tags:
        - Product
      description: Returns a list of products.
      operationId: Products_GetProducts
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/ProductNameParameter'
      requestBody:
        description: Device configuration.
        required: false
        x-ms-requestBody-name: deviceConfiguration
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/getProduct/?api-version=2022-06-01:
    post:
      tags:
        - Product
      description: Returns the specified product.
      operationId: Products_GetProduct
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/ProductNameParameter'
      requestBody:
        description: Device configuration.
        required: false
        x-ms-requestBody-name: deviceConfiguration
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/uploadProductLog/?api-version=2022-06-01:
    post:
      tags:
        - Product
      description: Returns the specified product.
      operationId: Products_UploadLog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/ProductNameParameter'
      requestBody:
        description: Update details for product log.
        required: false
        x-ms-requestBody-name: marketplaceProductLogUpdate
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceProductLogUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/?api-version=2022-06-01:
    get:
      tags:
        - Registrations
      description: Returns a list of all registrations.
      operationId: Registrations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStack/registrations/?api-version=2022-06-01:
    get:
      tags:
        - Registrations
      description: Returns a list of all registrations under current subscription.
      operationId: Registrations_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/?api-version=2022-06-01:
    get:
      tags:
        - Registrations
      description: Returns the properties of an Azure Stack registration.
      operationId: Registrations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Registrations
      description: Delete the requested Azure Stack registration.
      operationId: Registrations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: NO CONTENT
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Registrations
      description: Create or update an Azure Stack registration.
      operationId: Registrations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
      requestBody:
        description: Registration token
        required: true
        x-ms-requestBody-name: token
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Registrations
      description: Patch an Azure Stack registration.
      operationId: Registrations_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
      requestBody:
        description: Registration token
        required: true
        x-ms-requestBody-name: token
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/getactivationkey/?api-version=2022-06-01:
    post:
      tags:
        - Registrations
      description: Returns Azure Stack Activation Key.
      operationId: Registrations_GetActivationKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationKeyResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/enableRemoteManagement/?api-version=2022-06-01:
    post:
      tags:
        - Registrations
      description: Enables remote management for device under the Azure Stack registration.
      operationId: Registrations_EnableRemoteManagement
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/?api-version=2022-06-01:
    get:
      tags:
        - CustomerSubscription
      description: Returns a list of products.
      operationId: CustomerSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSubscriptionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/{customerSubscriptionName}/?api-version=2022-06-01:
    get:
      tags:
        - CustomerSubscription
      description: Returns the specified product.
      operationId: CustomerSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/CustomerSubscriptionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSubscription'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - CustomerSubscription
      description: Deletes a customer subscription under a registration.
      operationId: CustomerSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/CustomerSubscriptionNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: NO CONTENT
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - CustomerSubscription
      description: Creates a new customer subscription under a registration.
      operationId: CustomerSubscriptions_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistrationNameParameter'
        - $ref: '#/components/parameters/CustomerSubscriptionNameParameter'
      requestBody:
        description: Parameters use to create a customer subscription.
        required: true
        x-ms-requestBody-name: customerCreationParameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSubscription'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AzureStack/operations/?api-version=2022-06-01:
    get:
      description: Returns the list of supported REST operations.
      tags:
        - AzureStack
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AzureStack/cloudManifestFiles/?api-version=2022-06-01:
    get:
      tags:
        - AzureStack
      description: Returns a cloud specific manifest JSON file with latest version.
      operationId: CloudManifestFile_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudManifestFileResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AzureStack/cloudManifestFiles/{verificationVersion}/?api-version=2022-06-01:
    get:
      tags:
        - AzureStack
      description: Returns a cloud specific manifest JSON file.
      operationId: CloudManifestFile_Get
      parameters:
        - name: verificationVersion
          in: path
          description: Signing verification key version.
          required: true
          schema:
            type: string
        - name: versionCreationDate
          in: query
          description: Signing verification key version creation date.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudManifestFileResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStack/generateDeploymentLicense/?api-version=2022-06-01:
    post:
      tags:
        - AzureStack
      description: Creates a license that can be used to deploy an Azure Stack device.
      operationId: DeploymentLicense_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Request body for creating a deployment license.
        required: true
        x-ms-requestBody-name: deploymentLicenseRequest
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentLicenseRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentLicenseResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
