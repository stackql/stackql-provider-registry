openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureStack Container Registry Management Client
  description: The AzureStack Admin Container Registry Management Client.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    CapacityNameParameter:
      name: capacityName
      in: path
      description: The name of the capacity parameter.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QuotaNameParameter:
      name: quotaName
      in: path
      description: The name of the container registry quota.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    ContainerRegistrySetupProperty:
      description: Container registry setup properties.
      type: object
      properties:
        password:
          description: Ssl certificate password.
          type: string
          format: password
        sslCertBase64:
          description: Ssl certificate in base64 format.
          type: string
          format: byte
      required:
        - password
        - sslCertBase64
    ContainerRegistrySetup:
      description: Container registry start setup return.
      properties:
        properties:
          description: Container registry start setup return properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SetupProperty'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    SetupProperty:
      description: Container registry start setup return property.
      type: object
      properties:
        statusUri:
          description: The uri to poll status of the container registry setup.
          type: string
    SetupResult:
      description: Container registry setup result.
      properties:
        properties:
          description: Container registry setup result properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SetupResultProperties'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    SetupResultProperties:
      description: Container registry setup result properties.
      type: object
      properties:
        status:
          description: The status of the container registry setup.
          $ref: '#/components/schemas/SetupStatus'
          readOnly: true
        errorMessage:
          description: Error message if previous setup was failed.
          type: string
    SetupStatus:
      description: The status of the container registry setup.
      type: string
      enum:
        - ReadyToSetup
        - Running
        - Failed
        - Cancelled
        - Completed
      x-ms-enum:
        name: SetupStatus
        modelAsString: true
    ContainerRegistryCapacity:
      description: Container registry capacity property.
      properties:
        properties:
          description: Container registry capacity property.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ContainerRegistryCapacityProperty'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ContainerRegistryCapacityProperty:
      description: Container registry capacity property.
      type: object
      properties:
        maximumCapacityInGiB:
          description: Total storage capacity (GiB) which can used by the registry.
          type: integer
          format: int32
        allowPush:
          description: Flag denotes if pushes are blocked for all registries.
          type: boolean
        registriesConsumptionInGiB:
          description: Total storage capacity (GiB) consumed by the registry.
          type: number
          format: float
    ContainerRegistryCapacityList:
      description: List of capacity property.
      type: object
      properties:
        value:
          description: List of capacity property.
          type: array
          items:
            $ref: '#/components/schemas/ContainerRegistryCapacity'
    ContainerRegistryConfiguration:
      description: Container registry configuration property.
      required:
        - properties
      properties:
        properties:
          description: Container registry configuration property.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ContainerRegistryConfigurationProperty'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ContainerRegistryConfigurationProperty:
      description: Container registry configuration property.
      type: object
      properties:
        maximumCapacityInGiB:
          description: Total storage capacity (GiB) which can used by the registry.
          type: integer
          format: int32
      required:
        - maximumCapacityInGiB
    ContainerRegistryConfigurationList:
      description: List of configuration.
      type: object
      properties:
        value:
          description: List of configuration.
          type: array
          items:
            $ref: '#/components/schemas/ContainerRegistryConfiguration'
    ContainerRegistryQuota:
      description: Container registry quota.
      properties:
        properties:
          description: Container registry quota properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ContainerRegistryQuotaProperties'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ContainerRegistryQuotaProperties:
      description: Container registry quota properties.
      type: object
      properties:
        numberOfRegistries:
          description: Total number of container registry accounts.
          type: integer
          format: int32
          default: 20
        capacityPerRegistryInGiB:
          description: Storage capacity (GiB) of each registry.
          type: integer
          format: int32
          default: 100
    ContainerRegistryQuotaList:
      description: List of container registry quotas.
      type: object
      properties:
        value:
          description: List of container registry quotas.
          type: array
          items:
            $ref: '#/components/schemas/ContainerRegistryQuota'
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    Display:
      description: Contains the localized display information for this particular operation / action.
      type: object
      properties:
        provider:
          description: The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute."
          type: string
          readOnly: true
        resource:
          description: The localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider.
          type: string
          readOnly: true
        operation:
          description: The localized friendly name for the operation, as it should be shown to the user.
          type: string
          readOnly: true
        description:
          description: The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views.
          type: string
          readOnly: true
    OperationList:
      description: Pageable list of supported operations.
      type: object
      properties:
        value:
          description: List of operations
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ContainerRegistry:
      description: Container registry properties.
      properties:
        properties:
          description: Container registry properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ContainerRegistryProperties'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ContainerRegistryProperties:
      description: Container registry properties.
      type: object
      properties:
        registryId:
          description: Container registry id.
          type: string
          readOnly: true
        name:
          description: Container registry name.
          type: string
          readOnly: true
        location:
          description: Container registry location.
          type: string
          readOnly: true
        subscriptionId:
          description: SubscriptionId where container registry is present.
          type: string
          readOnly: true
        resourceGroup:
          description: ResourceGroup where container registry is present.
          type: string
          readOnly: true
        creationDate:
          format: date-time
          description: The time at which the registry created.
          type: string
        registrySizeInBytes:
          description: Total storage capacity (GiB) used by the registry.
          type: integer
          format: int64
    ContainerRegistriesList:
      description: List of container registries.
      type: object
      properties:
        nextLink:
          description: URI to the next page.
          type: string
        value:
          description: List of container registries.
          type: array
          items:
            $ref: '#/components/schemas/ContainerRegistry'
  x-stackQL-resources:
    container_registries:
      id: azure_stack.container_registry_admin.container_registries
      name: container_registries
      title: container_registries
      methods:
        start_setup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Setup~1locations~1{location}~1setup?api-version=2019-11-01-preview/post'
            operationId: ContainerRegistry_StartSetup
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: ContainerRegistrySetup
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    container_registry_setup_status:
      id: azure_stack.container_registry_admin.container_registry_setup_status
      name: container_registry_setup_status
      title: container_registry_setup_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Setup~1locations~1{location}~1setup?api-version=2019-11-01-preview/get'
            operationId: ContainerRegistrySetupStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SetupResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/container_registry_setup_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    container_registry_capacities:
      id: azure_stack.container_registry_admin.container_registry_capacities
      name: container_registry_capacities
      title: container_registry_capacities
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1capacities~1{capacityName}?api-version=2019-11-01-preview/get'
            operationId: ContainerRegistryCapacity_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistryCapacity
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1capacities?api-version=2019-11-01-preview/get'
            operationId: ContainerRegistryCapacity_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistryCapacityList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/container_registry_capacities/methods/get'
          - $ref: '#/components/x-stackQL-resources/container_registry_capacities/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    container_registry_configurations:
      id: azure_stack.container_registry_admin.container_registry_configurations
      name: container_registry_configurations
      title: container_registry_configurations
      methods:
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1configurations~1{configurationName}?api-version=2019-11-01-preview/put'
            operationId: ContainerRegistryConfiguration_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistryConfiguration
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1configurations~1{configurationName}?api-version=2019-11-01-preview/delete'
            operationId: ContainerRegistryConfiguration_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1configurations~1{configurationName}?api-version=2019-11-01-preview/get'
            operationId: ContainerRegistryConfiguration_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistryConfiguration
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1configurations?api-version=2019-11-01-preview/get'
            operationId: ContainerRegistryConfiguration_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistryConfigurationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/container_registry_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/container_registry_configurations/methods/list'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/container_registry_configurations/methods/put'
        delete:
          - $ref: '#/components/x-stackQL-resources/container_registry_configurations/methods/delete'
    quotas:
      id: azure_stack.container_registry_admin.quotas
      name: quotas
      title: quotas
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1quotas~1{quotaName}?api-version=2019-11-01-preview/put'
            operationId: Quota_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistryQuota
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1quotas~1{quotaName}?api-version=2019-11-01-preview/delete'
            operationId: Quotas_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1quotas~1{quotaName}?api-version=2019-11-01-preview/get'
            operationId: Quotas_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistryQuota
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1quotas?api-version=2019-11-01-preview/get'
            operationId: Quotas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistryQuotaList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/get'
          - $ref: '#/components/x-stackQL-resources/quotas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/delete'
    operations:
      id: azure_stack.container_registry_admin.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ContainerRegistry.Admin~1operations?api-version=2019-11-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    container_registry_registries:
      id: azure_stack.container_registry_admin.container_registry_registries
      name: container_registry_registries
      title: container_registry_registries
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry.Admin~1locations~1{location}~1registries?api-version=2019-11-01-preview/get'
            operationId: ContainerRegistryRegistries_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerRegistriesList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/container_registry_registries/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_container_registry_setup_status:
      id: azure_stack.container_registry_admin.vw_container_registry_setup_status
      name: vw_container_registry_setup_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.errorMessage') as "error_message",
              subscriptionId,
              location
              FROM azure_stack.container_registry_admin.container_registry_setup_status
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.errorMessage') as "error_message",
                subscriptionId,
                location
                FROM azure_stack.container_registry_admin.container_registry_setup_status
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_container_registry_capacities:
      id: azure_stack.container_registry_admin.vw_container_registry_capacities
      name: vw_container_registry_capacities
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.maximumCapacityInGiB') as "maximum_capacity_in_gib",
              JSON_EXTRACT(properties, '$.allowPush') as "allow_push",
              JSON_EXTRACT(properties, '$.registriesConsumptionInGiB') as "registries_consumption_in_gib",
              subscriptionId,
              location,
              capacityName
              FROM azure_stack.container_registry_admin.container_registry_capacities
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.maximumCapacityInGiB') as "maximum_capacity_in_gib",
                json_extract_path_text(properties, '$.allowPush') as "allow_push",
                json_extract_path_text(properties, '$.registriesConsumptionInGiB') as "registries_consumption_in_gib",
                subscriptionId,
                location,
                capacityName
                FROM azure_stack.container_registry_admin.container_registry_capacities
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_container_registry_configurations:
      id: azure_stack.container_registry_admin.vw_container_registry_configurations
      name: vw_container_registry_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.maximumCapacityInGiB') as "maximum_capacity_in_gib",
              subscriptionId,
              location,
              configurationName
              FROM azure_stack.container_registry_admin.container_registry_configurations
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.maximumCapacityInGiB') as "maximum_capacity_in_gib",
                subscriptionId,
                location,
                configurationName
                FROM azure_stack.container_registry_admin.container_registry_configurations
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_quotas:
      id: azure_stack.container_registry_admin.vw_quotas
      name: vw_quotas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.numberOfRegistries') as "number_of_registries",
              JSON_EXTRACT(properties, '$.capacityPerRegistryInGiB') as "capacity_per_registry_in_gib",
              subscriptionId,
              location,
              quotaName
              FROM azure_stack.container_registry_admin.quotas
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.numberOfRegistries') as "number_of_registries",
                json_extract_path_text(properties, '$.capacityPerRegistryInGiB') as "capacity_per_registry_in_gib",
                subscriptionId,
                location,
                quotaName
                FROM azure_stack.container_registry_admin.quotas
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry.Setup/locations/{location}/setup?api-version=2019-11-01-preview:
    post:
      tags:
        - ContainerRegistrySetupStart
      description: Invokes container registry certificate uploading and service deployment.
      operationId: ContainerRegistry_StartSetup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The object containing information for the configuration request.
        required: true
        x-ms-requestBody-name: startSetupRequest
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRegistrySetupProperty'
      responses:
        '201':
          description: Created -- Container registry certificate was uploaded successfully and deployment started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistrySetup'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ContainerRegistrySetupStatus
      description: Returns the status of the container registry setup.
      operationId: ContainerRegistrySetupStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- The status of the container registry setup has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupResult'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ContainerRegistry_GetSetupStatus
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry.Admin/locations/{location}/capacities/{capacityName}?api-version=2019-11-01-preview:
    get:
      tags:
        - ContainerRegistryCapacity
      description: Returns container registry capacity property.
      operationId: ContainerRegistryCapacity_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/CapacityNameParameter'
      responses:
        '200':
          description: OK -- Container registry capacity property is being returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryCapacity'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry.Admin/locations/{location}/capacities?api-version=2019-11-01-preview:
    get:
      tags:
        - ContainerRegistryCapacities
      description: Returns a list of container registry capacity properties.
      operationId: ContainerRegistryCapacity_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- Container registry capacity properties are being returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryCapacityList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry.Admin/locations/{location}/configurations/{configurationName}?api-version=2019-11-01-preview:
    put:
      tags:
        - ContainerRegistryConfiguration
      description: Configure container registry overall configuration properties.
      operationId: ContainerRegistryConfiguration_Put
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The properties of configuration being created or updated.
        required: true
        x-ms-requestBody-name: configurationObject
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRegistryConfiguration'
      responses:
        '200':
          description: OK -- Container registry overall configuration properties is being returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryConfiguration'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ContainerRegistryConfiguration
      description: Delete an existing container registry configuration
      operationId: ContainerRegistryConfiguration_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK -- The container registry configuration has been deleted.
        '204':
          description: NotFound -- The container registry configuration not found.
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ContainerRegistryConfiguration
      description: Returns the specified configuration details.
      operationId: ContainerRegistryConfiguration_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK -- The configuration has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryConfiguration'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry.Admin/locations/{location}/configurations?api-version=2019-11-01-preview:
    get:
      tags:
        - ContainerRegistryConfiguration
      description: Returns a list of configuration at the given location.
      operationId: ContainerRegistryConfiguration_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- The list of configuration has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryConfigurationList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry.Admin/locations/{location}/quotas/{quotaName}?api-version=2019-11-01-preview:
    put:
      tags:
        - ContainerRegistryQuotas
      description: Create or update an existing container registry quota.
      operationId: Quota_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaNameParameter'
      requestBody:
        description: The properties of quota being created or updated.
        required: true
        x-ms-requestBody-name: quotaObject
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRegistryQuota'
      responses:
        '200':
          description: OK -- The container registry quota has been created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryQuota'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ContainerRegistryQuotas
      description: Delete an existing container registry quota
      operationId: Quotas_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaNameParameter'
      responses:
        '200':
          description: OK -- The container registry quota has been deleted.
        '204':
          description: NotFound -- The container registry quota not found.
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ContainerRegistryQuotas
      description: Returns the specified container registry quota.
      operationId: Quotas_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaNameParameter'
      responses:
        '200':
          description: OK -- The container registry quota has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryQuota'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry.Admin/locations/{location}/quotas?api-version=2019-11-01-preview:
    get:
      tags:
        - ContainerRegistryQuotas
      description: Returns a list of container registry quotas at the given location.
      operationId: Quotas_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- The list of container registry quotas has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryQuotaList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.ContainerRegistry.Admin/operations?api-version=2019-11-01-preview:
    get:
      description: Get the list of supported admin container registry rest operations.
      tags:
        - Operations
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK -- The list of operations has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry.Admin/locations/{location}/registries?api-version=2019-11-01-preview:
    get:
      tags:
        - ContainerRegistries
      description: Returns a list of container registries present in all tenant location.
      operationId: ContainerRegistryRegistries_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- The list of container registries has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistriesList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
