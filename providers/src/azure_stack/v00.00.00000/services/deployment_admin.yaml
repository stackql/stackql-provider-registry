openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureStack Deployment Admin Client
  description: The AzureStack Deployment Admin Client.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    PlanIdParameter:
      name: planId
      in: path
      description: Identifier of the action plan.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: Identifier of the action plan operation.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SecretNameParameter:
      name: secretName
      in: path
      description: The secret name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationResultIdParameter:
      name: operationResultId
      in: path
      description: The operation result identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client API Version.
      required: false
      schema:
        default: '2019-01-01'
        type: string
    LocationParameter:
      name: location
      in: path
      description: Location of the resource.
      required: true
      x-ms-parameter-location: method
      schema:
        default: '2019-01-01'
        type: string
    ProductIdParameter:
      name: productId
      in: path
      description: The product identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PackageIdParameter:
      name: packageId
      in: path
      description: The package identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FileContainerIdParameter:
      name: fileContainerId
      in: path
      description: The file container identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupParameter:
      name: resourceGroup
      in: path
      description: The resource group the resource is located under.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    LocationList:
      description: List of locations
      properties:
        value:
          description: Array of locations.
          type: array
          items:
            $ref: '#/components/schemas/LocationsResourceEntity'
        nextLink:
          type: string
          description: Continuation token
      type: object
    LocationsResourceEntity:
      description: Location Resource Entity
      properties:
        properties:
          description: Location Properties
          $ref: '#/components/schemas/LocationAdminProperties'
          x-ms-client-flatten: true
        eTag:
          description: Entity tag of the resource
          type: string
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    LocationAdminProperties:
      description: Location Admin Properties
      type: object
      properties:
        location:
          description: the location name
          title: location
          type: string
    ActionPlanOperationsList:
      description: List of action plan operations
      properties:
        value:
          description: Array of action plan operations.
          type: array
          items:
            $ref: '#/components/schemas/ActionPlanOperationResourceEntity'
        nextLink:
          type: string
          description: Continuation token
      type: object
    ActionPlanOperationResourceEntity:
      description: Action Plan Operation Resource Entity
      properties:
        properties:
          description: Action Plan Properties
          $ref: '#/components/schemas/ActionPlanOperationAdminProperties'
          x-ms-client-flatten: true
        eTag:
          description: Entity tag of the resource
          type: string
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    ActionPlanOperationAdminProperties:
      description: Action Plan Operation Properties
      type: object
      properties:
        title:
          description: The operation title
          type: string
        description:
          description: The operation description
          type: string
        type:
          description: The action plan operation type
          $ref: '#/components/schemas/ActionType'
        subscriptionId:
          description: The target subscription identifier
          type: string
        parameters:
          description: The deployment parameters in JToken format
          type: object
        startTime:
          description: The deployment start time
          type: string
          format: date-time
        endTime:
          description: The deployment end time
          type: string
          format: date-time
        outputs:
          description: The action plan operation outputs in JToken format
          type: object
        error:
          description: Error Information
          $ref: '#/components/schemas/ExtendedErrorInfo'
        provisioningState:
          description: The provisioning state
          type: string
        actionPlanInstanceId:
          description: Action plan instance identifier
          type: string
        actionPlanOperationId:
          description: Action plan operation identifier
          type: string
        blobContainerName:
          description: Blob container name storing the deployment data
          type: string
    ActionType:
      description: Action plan operation type
      type: string
    ProductSecret:
      description: Properties for a product secret.
      properties:
        properties:
          description: Properties of a product secret.
          $ref: '#/components/schemas/ProductSecretProperties'
          x-ms-client-flatten: true
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    ProductSecretsList:
      description: List of product secrets.
      properties:
        value:
          description: List of product secrets.
          type: array
          items:
            $ref: '#/components/schemas/ProductSecret'
        nextLink:
          description: URI to the next page.
          type: string
      type: object
    ProductSecretProperties:
      type: object
      description: Properties of product secret.
      properties:
        secretState:
          description: The secret state.
          $ref: '#/components/schemas/SecretState'
        secretDescriptor:
          description: The secret type-specific descriptor.
          $ref: '#/components/schemas/SecretDescriptor'
        expiresAfter:
          description: The expiration period of the secret (in ISO8601 format).
          type: string
        description:
          description: The secret description.
          type: string
        provisioningState:
          description: Provisioning state of the resource.
          type: string
        secretKind:
          description: Specifies the secret kind.
          type: string
          enum:
            - AdHoc
            - Certificate
            - Password
            - StorageAccount
            - SymmetricKey
          x-ms-enum:
            modelAsString: true
            name: SecretKind
    SecretDescriptor:
      description: The secret type-specific descriptor.
      type: object
      properties:
        keyLength:
          description: The key length.
          type: integer
        alternativeDnsNames:
          description: Alternative DNS Names.
          type: array
          items:
            $ref: '#/components/schemas/AlternativeDnsNames'
        secondaryKeyIsActive:
          description: A value indicating whether the secondary or primary storage account key is active as a secret.
          type: boolean
        rotationStatus:
          description: The storage account key secret rotation status.
          type: string
          enum:
            - None
            - PlantNewSak
            - RotateInactiveSak
            - Complete
          x-ms-enum:
            modelAsString: true
            name: RotationStatus
        passwordLength:
          description: The minimum password length is 8 characters, and the maximum password length is 128 characters.
          type: integer
        allowedCharacters:
          description: The allowed characters in the password
          type: string
        passwordValidationRegex:
          description: Password validation regular expression.
          type: string
        subject:
          description: Certificate's subject
          type: string
        alternativeIpAddresses:
          description: The list of alternative IP addresses.
          type: array
          items:
            $ref: '#/components/schemas/AlternativeIpAddresses'
    AlternativeDnsNames:
      description: List of alternative DNS names.
      type: string
    AlternativeIpAddresses:
      description: List of alternative IP Addresses.
      type: string
    SecretState:
      description: Represents the secret state.
      type: object
      properties:
        status:
          description: The secret status.
          $ref: '#/components/schemas/SecretStatus'
        rotationStatus:
          description: the secret rotation status.
          $ref: '#/components/schemas/SecretRotationStatus'
        expirationDate:
          description: The secret expiration date.
          type: string
          format: date-time
    SecretStatus:
      description: Specifies the secret status.
      type: string
      enum:
        - NotUploaded
        - Uploaded
        - Deployed
      x-ms-enum:
        modelAsString: true
        name: SecretStatus
    SecretRotationStatus:
      description: Specifies the secret rotation status.
      type: string
      enum:
        - None
        - InProgress
        - Complete
      x-ms-enum:
        modelAsString: true
        name: SecretRotationStatus
    value:
      description: The secret value in a secure string format.
      type: string
    data:
      description: The converted Base64 String from a certificate pfx file.
      type: string
    key:
      description: The symmetric key as a secure string.
      type: string
    password:
      description: The password as a secure string.
      type: string
    SecretParameters:
      description: Parameters required for creating/updating a product secret.
      type: object
      properties:
        value:
          description: The secret value in a secure string format.
          $ref: '#/components/schemas/value'
        data:
          description: The pfx certificate converted Base64 data.
          $ref: '#/components/schemas/data'
        password:
          description: The pfx certificate file password.
          $ref: '#/components/schemas/password'
        key:
          description: The symmetric key.
          $ref: '#/components/schemas/key'
    OperationResult:
      description: Operation Result Entity.
      type: object
      properties:
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        status:
          description: status of the Operation result.
          $ref: '#/components/schemas/Status'
        startTime:
          description: The deployment start time
          type: string
          format: date-time
        endTime:
          description: The deployment end time
          type: string
          format: date-time
        percentComplete:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: Percentage completed.
    Status:
      description: Specifies the state of the Operation result.
      type: string
      enum:
        - Bootstrapping
        - Creating
        - ExecutingRunner
        - Updating
        - Deleting
        - Deploying
        - Removing
        - RotatingSecrets
        - Canceled
        - Failed
        - Succeeded
      x-ms-enum:
        modelAsString: true
        name: Status
    ActionPlanList:
      description: List of action plans
      properties:
        value:
          description: Array of action plans.
          type: array
          items:
            $ref: '#/components/schemas/ActionPlanResourceEntity'
        nextLink:
          type: string
          description: Continuation token
      type: object
    ActionPlanResourceEntity:
      description: Action Plan Resource Entity
      properties:
        properties:
          description: Action Plan Properties
          $ref: '#/components/schemas/ActionPlanAdminProperties'
          x-ms-client-flatten: true
        eTag:
          description: Entity tag of the resource
          type: string
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    ActionPlanAdminProperties:
      type: object
      description: Action Plan Properties
      properties:
        actionPlanUri:
          description: Action plan uri
          type: string
        resourceGroupName:
          description: The target resource group name
          type: string
        subscriptionId:
          description: The target subscription identifier
          type: string
        parameters:
          description: The deployment parameters in JToken format
          type: object
          $ref: '#/components/schemas/JTokenString'
        startTime:
          description: The deployment start time
          type: string
          format: date-time
        endTime:
          description: The deployment end time
          type: string
          format: date-time
        error:
          description: Error Information
          $ref: '#/components/schemas/ExtendedErrorInfo'
        provisioningState:
          description: The provisioning state
          type: string
        actionPlanInstanceId:
          description: Action plan instance identifier
          type: string
        blobContainerName:
          description: Blob container name storing the deployment data
          type: string
    Resource:
      description: Object model of azure resource manager base.
      type: object
      properties:
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      x-ms-azure-resource: true
    ExtendedErrorInfo:
      type: object
      description: Error response.
      properties:
        error:
          $ref: '#/components/schemas/ErrorDefinition'
          description: The error details.
    ErrorDefinition:
      type: object
      description: Error definition.
      properties:
        code:
          description: Service specific error code which serves as the substatus for the HTTP error code.
          type: string
          readOnly: true
        message:
          description: Description of the error.
          type: string
          readOnly: true
        details:
          description: Internal error details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDefinition'
          x-ms-identifiers: []
          readOnly: true
    JTokenString:
      description: Error information
      type: object
      properties:
        value:
          description: Parameters as JToken string
          type: string
    Operation:
      description: Describes the supported REST operation.
      properties:
        name:
          description: The name of the operation being performed on this particular object. This name should match the name that appears in RBAC or the event service.
          type: string
        display:
          description: Contains the localized display information for this particular operation or action.
          $ref: '#/components/schemas/Display'
        origin:
          description: Origin for the operation. Eg. User, System
          type: string
      type: object
    Display:
      description: Contains the localized display information for this particular operation or action.
      properties:
        provider:
          description: The localized, friendly version of the resource provider name. The provider name is expected to include the name of the publisher or company responsible. The provider name format should use title case and begin with "Microsoft" for first-party services. For example, the provider name may be"Microsoft Monitoring Insights" or "Microsoft Compute."
          type: string
        resource:
          description: The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
          type: string
        operation:
          description: The localized, friendly name for the operation. Use the name as it will displayed to the user.
          type: string
        description:
          description: The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
          type: string
      type: object
    OperationList:
      description: List of Operations
      properties:
        value:
          description: Array of operations
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: URI to the next page of operations.
          type: string
      type: object
    FileContainer:
      description: File container entity.
      properties:
        properties:
          description: File Container properties
          $ref: '#/components/schemas/FileContainerAdminProperties'
          x-ms-client-flatten: true
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    FileContainerAdminProperties:
      description: File Container Properties.
      type: object
      properties:
        fileContainerId:
          description: File container resource identifier containing product manifest.
          $ref: '#/components/schemas/FileContainerId'
        sourceUri:
          description: The remote file location. This is write-only property, DRP never returns it back to a user.
          $ref: '#/components/schemas/SourceUri'
        uri:
          description: The file or container Uri. This is read-only property; a user cannot set it.
          type: string
        postCopyAction:
          description: Specifies the file post copy action.
          $ref: '#/components/schemas/PostCopyAction'
        error:
          description: The error response message.
          $ref: '#/components/schemas/ErrorInfo'
        provisioningState:
          description: Provisioning state of the resource.
          type: string
    FileContainersList:
      description: List of file containers.
      properties:
        value:
          description: List of file containers.
          type: array
          items:
            $ref: '#/components/schemas/FileContainer'
        nextLink:
          description: Continuation token.
          type: string
      type: object
    ErrorInfo:
      description: Extended Error Information.
      type: object
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
        details:
          description: The detailed error messages.
          type: array
          items:
            $ref: '#/components/schemas/ErrorInfo'
          x-ms-identifiers: []
    PostCopyAction:
      description: Specifies the file post copy action.
      type: string
      enum:
        - None
        - Unzip
      x-ms-enum:
        modelAsString: true
        name: PostCopyAction
    SourceUri:
      description: Specifies The remote file location.
      type: string
    FileContainerId:
      description: File container resource identifier containing product manifest.
      type: string
    FileContainerParameters:
      description: Parameters for creating a new file container.
      properties:
        properties:
          description: Specifies the file container body
          $ref: '#/components/schemas/FileContainerBody'
      type: object
    FileContainerBody:
      description: Body for creating a new file container.
      type: object
      properties:
        postCopyAction:
          description: Specifies the file post copy action.
          $ref: '#/components/schemas/PostCopyAction'
        sourceUri:
          description: Specifies The remote file location.
          $ref: '#/components/schemas/SourceUri'
    ProductPackage:
      description: Properties for a product package.
      properties:
        properties:
          description: Properties of a product package.
          $ref: '#/components/schemas/ProductPackageProperties'
          x-ms-client-flatten: true
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    ProductPackagesList:
      description: List of product packages.
      properties:
        value:
          description: List of product packages.
          type: array
          items:
            $ref: '#/components/schemas/ProductPackage'
        nextLink:
          description: Continuation Token.
          type: string
      type: object
    ProductPackageProperties:
      type: object
      description: Properties for Product package.
      properties:
        fileContainerId:
          description: File container resource identifier containing product manifest.
          $ref: '#/components/schemas/FileContainerId'
        isDeployable:
          description: Value indicating whether the package is applicable for deployment.
          type: boolean
        isUpdatable:
          description: Value indicating whether the package is applicable for update.
          type: boolean
        productDeploymentId:
          description: The identifier of product deployment; null if this version is not installed.
          type: string
        provisioningState:
          description: Provisioning state of the resource.
          type: string
    ProductProperties:
      description: Additional properties of the product
      type: object
      properties:
        version:
          description: The version of the product
          type: string
    ProductLink:
      description: Link to a product.
      type: object
      properties:
        displayName:
          description: Displayed name of product.
          type: string
        uri:
          description: URI to product.
          type: string
    ProductLinks:
      description: List of product links.
      type: array
      items:
        $ref: '#/components/schemas/ProductLink'
      x-ms-identifiers:
        - uri
    ProductPackageParameters:
      description: Parameters for creating a new product package.
      properties:
        properties:
          description: Specifies the product package
          $ref: '#/components/schemas/ProductPackageBody'
      type: object
    ProductPackageBody:
      description: Body for creating a new product package.
      type: object
      properties:
        fileContainerId:
          description: Specifies the file container.
          $ref: '#/components/schemas/FileContainerId'
    OperationAttemptResult:
      description: Result of an Operation Attempt.
      properties:
        properties:
          description: Result of an Operation Attempt.
          $ref: '#/components/schemas/OperationAttemptProperties'
          x-ms-client-flatten: true
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    OperationAttemptProperties:
      type: object
      description: Operation Attempt Properties.
      properties:
        startTime:
          description: The deployment start time
          type: string
          format: date-time
        endTime:
          description: The deployment end time
          type: string
          format: date-time
        provisioningState:
          description: Provisioning state of the resource.
          type: string
    ProductDeploymentsList:
      description: List of Product Deployments.
      properties:
        value:
          description: List of Product Deployments.
          type: array
          items:
            $ref: '#/components/schemas/ProductDeploymentResourceEntity'
        nextLink:
          description: URI to the next page.
          type: string
      type: object
    ProductDeploymentResourceEntity:
      description: Product deployment entity
      properties:
        properties:
          description: Product deployment resource properties
          $ref: '#/components/schemas/ProductDeploymentsProperties'
          x-ms-client-flatten: true
        eTag:
          description: entity tag
          type: string
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    ProductDeploymentsProperties:
      type: object
      description: Product deployment resource properties
      properties:
        status:
          description: Status of the product deployment.
          $ref: '#/components/schemas/DeploymentStatus'
        subscriptionId:
          description: The product subscription identifier
          type: string
        deployment:
          description: The current deployment information
          $ref: '#/components/schemas/DeploymentInfo'
        lastSuccessfulDeployment:
          description: The last successful deployment information
          $ref: '#/components/schemas/DeploymentInfo'
        secretRotation:
          description: Resource provider secret rotation information
          $ref: '#/components/schemas/SecretRotationInfo'
        internalState:
          description: Product deployment resource internal state
          $ref: '#/components/schemas/ProductDeploymentsInternalState'
        error:
          description: Error Information
          $ref: '#/components/schemas/ExtendedErrorInfo'
        externalAccess:
          description: Resource provider secret rotation information
          $ref: '#/components/schemas/ExternalAccessInfo'
        provisioningState:
          description: The provisioning state
          type: string
        productId:
          description: The product identifier
          type: string
    DeploymentStatus:
      description: Status of an operation.
      type: string
      enum:
        - None
        - Bootstrapping
        - BootstrapSucceeded
        - BootstrapFailed
        - Deploying
        - DeploymentSucceeded
        - DeploymentFailed
        - Updating
        - UpdateSucceeded
        - UpdateFailed
        - Removing
        - RemoveFailed
        - SecretRotationInProgress
        - SecretRotationSucceeded
        - SecretRotationFailed
        - Migrated
      x-ms-enum:
        name: DeploymentStatus
        modelAsString: true
    DeploymentInfo:
      type: object
      description: Resource provider deployment information
      properties:
        version:
          description: The product version
          type: string
        parameters:
          description: The latest deployment parameters as JToken
          type: string
        actionPlanInstanceResourceId:
          description: The identifier of the latest action plan instance resource.
          type: string
        eTag:
          description: entity tag
          type: string
    SecretRotationInfo:
      type: object
      description: Resource provider deployment information
      properties:
        secretRotationPlanInstanceResourceId:
          description: The identifier of the latest secret rotation plan instance resource.
          type: string
    ExternalAccessInfo:
      type: object
      description: Resource provider deployment information
      properties:
        principalId:
          description: The object identifier of the user, group or service principal that have access to resource provider subscription.
          type: string
        expirationTime:
          description: The deployment start time
          type: string
          format: date-time
    ProductDeploymentsInternalState:
      type: object
      description: Resource type internal state
      properties:
        jobId:
          description: The latest deployment job identifier
          type: string
        intermediateVaultId:
          description: The intermediate vault resource identifier
          type: string
        intermediateVaultUri:
          description: The intermediate vault Uri.
          type: string
        externalAccessRoleAssignmentId:
          description: The current external access role assignment identifier
          type: string
    DeployActionParameters:
      description: Parameters for deploy action
      type: object
      properties:
        version:
          description: Generic Version object
          type: string
        parameters:
          description: Deployment parameters, value in JToken
          type: object
    BootStrapActionParameters:
      description: Parameters for bootstrap action
      type: object
      properties:
        version:
          description: Generic Version object
          type: string
    ExecuteRunnerActionParameters:
      description: Parameters for execute runner action
      type: object
      properties:
        parameters:
          description: Execute Runner parameters, value in JToken
          type: object
  x-stackQL-resources:
    locations:
      id: azure_stack.deployment_admin.locations
      name: locations
      title: locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global?api-version=2019-01-01/get'
            operationId: Locations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocationsResourceEntity
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations?api-version=2019-01-01/get'
            operationId: Locations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    action_plan_operations:
      id: azure_stack.deployment_admin.action_plan_operations
      name: action_plan_operations
      title: action_plan_operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1actionPlans~1{planId}~1operations?api-version=2019-01-01/get'
            operationId: ActionPlanOperations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActionPlanOperationsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1actionPlans~1{planId}~1operations~1{operationId}?api-version=2019-01-01/get'
            operationId: ActionPlanOperations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActionPlanOperationResourceEntity
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/action_plan_operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/action_plan_operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    product_secrets:
      id: azure_stack.deployment_admin.product_secrets
      name: product_secrets
      title: product_secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productPackages~1{packageId}~1secrets?api-version=2019-01-01/get'
            operationId: ProductSecrets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProductSecretsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productPackages~1{packageId}~1secrets~1{secretName}?api-version=2019-01-01/get'
            operationId: ProductSecrets_GET
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProductSecret
        set:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productPackages~1{packageId}~1secrets~1{secretName}~1import?api-version=2019-01-01/post'
            operationId: ProductSecrets_Set
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productPackages~1{packageId}~1secrets~1{secretName}~1validate?api-version=2019-01-01/post'
            operationId: ProductSecrets_Validate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/product_secrets/methods/get'
          - $ref: '#/components/x-stackQL-resources/product_secrets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operation_results:
      id: azure_stack.deployment_admin.operation_results
      name: operation_results
      title: operation_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1{location}~1operationresults~1{operationResultId}?api-version=2019-01-01/get'
            operationId: OperationResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    action_plans:
      id: azure_stack.deployment_admin.action_plans
      name: action_plans
      title: action_plans
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1actionPlans?api-version=2019-01-01/get'
            operationId: ActionPlans_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActionPlanList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1actionPlans~1{planId}?api-version=2019-01-01/get'
            operationId: ActionPlans_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActionPlanResourceEntity
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/action_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/action_plans/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure_stack.deployment_admin.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Deployment.Admin~1operations?api-version=2019-01-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    file_containers:
      id: azure_stack.deployment_admin.file_containers
      name: file_containers
      title: file_containers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1fileContainers?api-version=2019-01-01/get'
            operationId: FileContainers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileContainersList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1fileContainers~1{fileContainerId}?api-version=2019-01-01/get'
            operationId: FileContainers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileContainer
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1fileContainers~1{fileContainerId}?api-version=2019-01-01/put'
            operationId: FileContainers_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileContainer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1fileContainers~1{fileContainerId}?api-version=2019-01-01/delete'
            operationId: FileContainers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_containers/methods/get'
          - $ref: '#/components/x-stackQL-resources/file_containers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/file_containers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/file_containers/methods/delete'
    product_packages:
      id: azure_stack.deployment_admin.product_packages
      name: product_packages
      title: product_packages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productPackages?api-version=2019-01-01/get'
            operationId: ProductPackages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProductPackagesList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productPackages~1{packageId}?api-version=2019-01-01/get'
            operationId: ProductPackages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProductPackage
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productPackages~1{packageId}?api-version=2019-01-01/put'
            operationId: ProductPackages_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProductPackage
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productPackages~1{packageId}?api-version=2019-01-01/delete'
            operationId: ProductPackages_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/product_packages/methods/get'
          - $ref: '#/components/x-stackQL-resources/product_packages/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/product_packages/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/product_packages/methods/delete'
    action_plan_operation_attempts:
      id: azure_stack.deployment_admin.action_plan_operation_attempts
      name: action_plan_operation_attempts
      title: action_plan_operation_attempts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1{location}~1actionplans~1{planId}~1operations~1{operationId}~1attempts?api-version=2019-01-01/get'
            operationId: ActionPlanOperationAttempt_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationAttemptResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/action_plan_operation_attempts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    product_deployments:
      id: azure_stack.deployment_admin.product_deployments
      name: product_deployments
      title: product_deployments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productDeployments?api-version=2019-01-01/get'
            operationId: ProductDeployments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProductDeploymentsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productDeployments~1{productId}?api-version=2019-01-01/get'
            operationId: ProductDeployments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProductDeploymentResourceEntity
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/product_deployments/methods/get'
          - $ref: '#/components/x-stackQL-resources/product_deployments/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    bootstrap_actions:
      id: azure_stack.deployment_admin.bootstrap_actions
      name: bootstrap_actions
      title: bootstrap_actions
      methods:
        product:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productDeployments~1{productId}~1bootstrap?api-version=2019-01-01/post'
            operationId: BootstrapAction_Product
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    deploy_actions:
      id: azure_stack.deployment_admin.deploy_actions
      name: deploy_actions
      title: deploy_actions
      methods:
        product:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productDeployments~1{productId}~1deploy?api-version=2019-01-01/post'
            operationId: DeployAction_Product
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    remove_actions:
      id: azure_stack.deployment_admin.remove_actions
      name: remove_actions
      title: remove_actions
      methods:
        product:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productDeployments~1{productId}~1remove?api-version=2019-01-01/post'
            operationId: RemoveAction_Product
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    rotate_secrets_actions:
      id: azure_stack.deployment_admin.rotate_secrets_actions
      name: rotate_secrets_actions
      title: rotate_secrets_actions
      methods:
        product:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productDeployments~1{productId}~1rotateSecrets?api-version=2019-01-01/post'
            operationId: RotateSecretsAction_Product
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    execute_runner_actions:
      id: azure_stack.deployment_admin.execute_runner_actions
      name: execute_runner_actions
      title: execute_runner_actions
      methods:
        product:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Deployment.Admin~1locations~1global~1productDeployments~1{productId}~1executeRunner?api-version=2019-01-01/post'
            operationId: ExecuteRunnerAction_Product
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vw_locations:
      id: azure_stack.deployment_admin.vw_locations
      name: vw_locations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              eTag as e_tag,
              type as type,
              JSON_EXTRACT(properties, '$.location') as "location",
              subscriptionId
              FROM azure_stack.deployment_admin.locations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                eTag as e_tag,
                type as type,
                json_extract_path_text(properties, '$.location') as "location",
                subscriptionId
                FROM azure_stack.deployment_admin.locations
                WHERE subscriptionId = 'replace-me';
    vw_action_plan_operations:
      id: azure_stack.deployment_admin.vw_action_plan_operations
      name: vw_action_plan_operations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              eTag as e_tag,
              type as type,
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.subscriptionId') as "subscription_id",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.actionPlanInstanceId') as "action_plan_instance_id",
              JSON_EXTRACT(properties, '$.actionPlanOperationId') as "action_plan_operation_id",
              JSON_EXTRACT(properties, '$.blobContainerName') as "blob_container_name",
              subscriptionId,
              planId,
              operationId
              FROM azure_stack.deployment_admin.action_plan_operations
              WHERE subscriptionId = 'replace-me' AND planId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                eTag as e_tag,
                type as type,
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.subscriptionId') as "subscription_id",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.actionPlanInstanceId') as "action_plan_instance_id",
                json_extract_path_text(properties, '$.actionPlanOperationId') as "action_plan_operation_id",
                json_extract_path_text(properties, '$.blobContainerName') as "blob_container_name",
                subscriptionId,
                planId,
                operationId
                FROM azure_stack.deployment_admin.action_plan_operations
                WHERE subscriptionId = 'replace-me' AND planId = 'replace-me';
    vw_product_secrets:
      id: azure_stack.deployment_admin.vw_product_secrets
      name: vw_product_secrets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.secretState') as "secret_state",
              JSON_EXTRACT(properties, '$.secretDescriptor') as "secret_descriptor",
              JSON_EXTRACT(properties, '$.expiresAfter') as "expires_after",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.secretKind') as "secret_kind",
              subscriptionId,
              packageId,
              secretName
              FROM azure_stack.deployment_admin.product_secrets
              WHERE subscriptionId = 'replace-me' AND packageId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.secretState') as "secret_state",
                json_extract_path_text(properties, '$.secretDescriptor') as "secret_descriptor",
                json_extract_path_text(properties, '$.expiresAfter') as "expires_after",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.secretKind') as "secret_kind",
                subscriptionId,
                packageId,
                secretName
                FROM azure_stack.deployment_admin.product_secrets
                WHERE subscriptionId = 'replace-me' AND packageId = 'replace-me';
    vw_action_plans:
      id: azure_stack.deployment_admin.vw_action_plans
      name: vw_action_plans
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              eTag as e_tag,
              type as type,
              JSON_EXTRACT(properties, '$.actionPlanUri') as "action_plan_uri",
              JSON_EXTRACT(properties, '$.resourceGroupName') as "resource_group_name",
              JSON_EXTRACT(properties, '$.subscriptionId') as "subscription_id",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.actionPlanInstanceId') as "action_plan_instance_id",
              JSON_EXTRACT(properties, '$.blobContainerName') as "blob_container_name",
              subscriptionId,
              planId
              FROM azure_stack.deployment_admin.action_plans
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                eTag as e_tag,
                type as type,
                json_extract_path_text(properties, '$.actionPlanUri') as "action_plan_uri",
                json_extract_path_text(properties, '$.resourceGroupName') as "resource_group_name",
                json_extract_path_text(properties, '$.subscriptionId') as "subscription_id",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.actionPlanInstanceId') as "action_plan_instance_id",
                json_extract_path_text(properties, '$.blobContainerName') as "blob_container_name",
                subscriptionId,
                planId
                FROM azure_stack.deployment_admin.action_plans
                WHERE subscriptionId = 'replace-me';
    vw_file_containers:
      id: azure_stack.deployment_admin.vw_file_containers
      name: vw_file_containers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.fileContainerId') as "file_container_id",
              JSON_EXTRACT(properties, '$.sourceUri') as "source_uri",
              JSON_EXTRACT(properties, '$.uri') as "uri",
              JSON_EXTRACT(properties, '$.postCopyAction') as "post_copy_action",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              fileContainerId
              FROM azure_stack.deployment_admin.file_containers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.fileContainerId') as "file_container_id",
                json_extract_path_text(properties, '$.sourceUri') as "source_uri",
                json_extract_path_text(properties, '$.uri') as "uri",
                json_extract_path_text(properties, '$.postCopyAction') as "post_copy_action",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                fileContainerId
                FROM azure_stack.deployment_admin.file_containers
                WHERE subscriptionId = 'replace-me';
    vw_product_packages:
      id: azure_stack.deployment_admin.vw_product_packages
      name: vw_product_packages
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.fileContainerId') as "file_container_id",
              JSON_EXTRACT(properties, '$.isDeployable') as "is_deployable",
              JSON_EXTRACT(properties, '$.isUpdatable') as "is_updatable",
              JSON_EXTRACT(properties, '$.productDeploymentId') as "product_deployment_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              packageId
              FROM azure_stack.deployment_admin.product_packages
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.fileContainerId') as "file_container_id",
                json_extract_path_text(properties, '$.isDeployable') as "is_deployable",
                json_extract_path_text(properties, '$.isUpdatable') as "is_updatable",
                json_extract_path_text(properties, '$.productDeploymentId') as "product_deployment_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                packageId
                FROM azure_stack.deployment_admin.product_packages
                WHERE subscriptionId = 'replace-me';
    vw_action_plan_operation_attempts:
      id: azure_stack.deployment_admin.vw_action_plan_operation_attempts
      name: vw_action_plan_operation_attempts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              location,
              planId,
              operationId
              FROM azure_stack.deployment_admin.action_plan_operation_attempts
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me' AND planId = 'replace-me' AND operationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                location,
                planId,
                operationId
                FROM azure_stack.deployment_admin.action_plan_operation_attempts
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me' AND planId = 'replace-me' AND operationId = 'replace-me';
    vw_product_deployments:
      id: azure_stack.deployment_admin.vw_product_deployments
      name: vw_product_deployments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              eTag as e_tag,
              type as type,
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.subscriptionId') as "subscription_id",
              JSON_EXTRACT(properties, '$.deployment') as "deployment",
              JSON_EXTRACT(properties, '$.lastSuccessfulDeployment') as "last_successful_deployment",
              JSON_EXTRACT(properties, '$.secretRotation') as "secret_rotation",
              JSON_EXTRACT(properties, '$.internalState') as "internal_state",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.externalAccess') as "external_access",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.productId') as "product_id",
              subscriptionId,
              productId
              FROM azure_stack.deployment_admin.product_deployments
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                eTag as e_tag,
                type as type,
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.subscriptionId') as "subscription_id",
                json_extract_path_text(properties, '$.deployment') as "deployment",
                json_extract_path_text(properties, '$.lastSuccessfulDeployment') as "last_successful_deployment",
                json_extract_path_text(properties, '$.secretRotation') as "secret_rotation",
                json_extract_path_text(properties, '$.internalState') as "internal_state",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.externalAccess') as "external_access",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.productId') as "product_id",
                subscriptionId,
                productId
                FROM azure_stack.deployment_admin.product_deployments
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global?api-version=2019-01-01:
    get:
      description: Gets the location
      tags:
        - Locations
      operationId: Locations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsResourceEntity'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations?api-version=2019-01-01:
    get:
      description: Gets the list of locations
      tags:
        - Locations
      operationId: Locations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationList'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/actionPlans/{planId}/operations?api-version=2019-01-01:
    get:
      description: Lists the action plan operations
      tags:
        - ActionPlanOperations
      operationId: ActionPlanOperations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPlanOperationsList'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/actionPlans/{planId}/operations/{operationId}?api-version=2019-01-01:
    get:
      description: Gets the specified action plan operation
      tags:
        - ActionPlanOperations
      operationId: ActionPlanOperations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPlanOperationResourceEntity'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}/secrets?api-version=2019-01-01:
    get:
      description: Returns an array of product secrets.
      tags:
        - ProductSecrets
      operationId: ProductSecrets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PackageIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSecretsList'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}/secrets/{secretName}?api-version=2019-01-01:
    get:
      description: Returns the specific product secret.
      tags:
        - ProductSecrets
      operationId: ProductSecrets_GET
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PackageIdParameter'
        - $ref: '#/components/parameters/SecretNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSecret'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}/secrets/{secretName}/import?api-version=2019-01-01:
    post:
      description: Imports a product secret.
      tags:
        - ProductSecrets
      operationId: ProductSecrets_Set
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PackageIdParameter'
        - $ref: '#/components/parameters/SecretNameParameter'
      requestBody:
        description: The parameters required for creating/updating a product secret.
        required: true
        x-ms-requestBody-name: secretParameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretParameters'
      responses:
        '200':
          description: Accepted
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}/secrets/{secretName}/validate?api-version=2019-01-01:
    post:
      description: Validates a product secret.
      tags:
        - ProductSecrets
      operationId: ProductSecrets_Validate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PackageIdParameter'
        - $ref: '#/components/parameters/SecretNameParameter'
      requestBody:
        description: The parameters required for creating/updating a product secret.
        required: true
        x-ms-requestBody-name: secretParameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretParameters'
      responses:
        '200':
          description: Accepted
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/{location}/operationresults/{operationResultId}?api-version=2019-01-01:
    get:
      description: Retrieves the specific operation results.
      tags:
        - OperationResults
      operationId: OperationResults_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationResultIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/actionPlans?api-version=2019-01-01:
    get:
      description: Gets the list of action plans
      tags:
        - ActionPlans
      operationId: ActionPlans_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPlanList'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/actionPlans/{planId}?api-version=2019-01-01:
    get:
      description: Gets the specified action plan
      tags:
        - ActionPlans
      operationId: ActionPlans_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPlanResourceEntity'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
  /providers/Microsoft.Deployment.Admin/operations?api-version=2019-01-01:
    get:
      description: Returns the list of supported REST operations.
      tags:
        - Deployment
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/fileContainers?api-version=2019-01-01:
    get:
      description: Returns an array of file containers.
      tags:
        - FileContainers
      operationId: FileContainers_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileContainersList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/fileContainers/{fileContainerId}?api-version=2019-01-01:
    get:
      description: Retrieves the specific file container details.
      tags:
        - FileContainers
      operationId: FileContainers_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FileContainerIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileContainer'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
    put:
      description: Creates a new file container.
      tags:
        - FileContainers
      operationId: FileContainers_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FileContainerIdParameter'
      requestBody:
        description: The parameters required to create a new file container.
        required: true
        x-ms-requestBody-name: fileContainerParameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileContainerParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileContainer'
        '202':
          description: Accepted
      x-ms-long-running-operation: true
    delete:
      tags:
        - FileContainers
      summary: Deletes specified file container.
      description: Delete an existing file container.
      operationId: FileContainers_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FileContainerIdParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages?api-version=2019-01-01:
    get:
      description: Returns an array of product packages.
      tags:
        - ProductPackages
      operationId: ProductPackages_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPackagesList'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}?api-version=2019-01-01:
    get:
      description: Retrieves the specific product package details.
      tags:
        - ProductPackages
      operationId: ProductPackages_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PackageIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPackage'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
    put:
      description: Creates a new product package.
      tags:
        - ProductPackages
      operationId: ProductPackages_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PackageIdParameter'
      requestBody:
        description: The parameters required to create a new product package.
        required: true
        x-ms-requestBody-name: ProductPackageParameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPackageParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPackage'
        '202':
          description: Accepted
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
    delete:
      description: Deletes a product package.
      tags:
        - ProductPackages
      operationId: ProductPackages_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PackageIdParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/{location}/actionplans/{planId}/operations/{operationId}/attempts?api-version=2019-01-01:
    get:
      description: Returns the information about action plan operation attempt.
      tags:
        - ActionPlanOperationAttempt
      operationId: ActionPlanOperationAttempt_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationAttemptResult'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments?api-version=2019-01-01:
    get:
      description: Invokes bootstrap action on the product deployment
      tags:
        - ProductDeployments
      operationId: ProductDeployments_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDeploymentsList'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}?api-version=2019-01-01:
    get:
      description: Invokes bootstrap action on the product deployment
      tags:
        - ProductDeployments
      operationId: ProductDeployments_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDeploymentResourceEntity'
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/bootstrap?api-version=2019-01-01:
    post:
      description: Invokes bootstrap action on the product deployment
      tags:
        - ProductDeployments
      operationId: BootstrapAction_Product
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
      requestBody:
        description: Represents bootstrap action parameter
        required: true
        x-ms-requestBody-name: bootstrapActionParameter
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BootStrapActionParameters'
      responses:
        '200':
          description: Ok
        '202':
          description: ACCEPTED
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/deploy?api-version=2019-01-01:
    post:
      description: Invokes deploy action on the product
      tags:
        - ProductDeployments
      operationId: DeployAction_Product
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
      requestBody:
        description: Represents bootstrap action parameter
        required: true
        x-ms-requestBody-name: deployActionParameter
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployActionParameters'
      responses:
        '200':
          description: Ok
        '202':
          description: ACCEPTED
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/remove?api-version=2019-01-01:
    post:
      description: Invokes remove action on the product deployment
      tags:
        - ProductDeployments
      operationId: RemoveAction_Product
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
      responses:
        '200':
          description: Ok
        '202':
          description: ACCEPTED
        '204':
          description: No Content
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/rotateSecrets?api-version=2019-01-01:
    post:
      description: Invokes rotate secrets action on the product deployment
      tags:
        - ProductDeployments
      operationId: RotateSecretsAction_Product
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: ACCEPTED
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/executeRunner?api-version=2019-01-01:
    post:
      description: Invokes execute runner action on the product deployment
      tags:
        - ProductDeployments
      operationId: ExecuteRunnerAction_Product
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
      requestBody:
        description: Represents execute runner action parameter
        required: true
        x-ms-requestBody-name: executeRunnerActionParameter
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteRunnerActionParameters'
      responses:
        '200':
          description: OK
        '202':
          description: ACCEPTED
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorInfo'
      x-ms-long-running-operation: true
