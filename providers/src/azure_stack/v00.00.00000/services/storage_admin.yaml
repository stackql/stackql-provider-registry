openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureStack Storage Admin Management Client
  description: The AzureStack Admin Storage Management Client.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ApiVersionParameter:
      name: api-version
      in: query
      description: REST Api Version.
      required: true
      schema:
        type: string
    LocationParameter:
      name: location
      in: path
      description: Resource location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription Id.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AsyncOperationIdParameter:
      name: asyncOperationId
      in: path
      description: Async Operation Id.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroup
      in: path
      description: Resource group name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    StorageServiceNameParameter:
      name: serviceName
      in: path
      description: Storage service name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QuotaNameParameter:
      name: quotaName
      in: path
      description: The name of the storage quota.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AccountIdParameter:
      name: accountId
      in: path
      description: Internal storage account ID, which is not visible to tenant.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NewAccountNameParameter:
      name: newAccountName
      in: query
      description: New storage account name when doing undelete storage account operation.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    SummaryParameter:
      name: summary
      in: query
      description: Switch for whether summary or detailed information is returned.
      required: false
      x-ms-parameter-location: method
      schema:
        default: false
        type: boolean
    FilterParameter:
      name: $filter
      in: query
      description: Filter string
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Operation:
      description: Describes the supported REST operation.
      properties:
        name:
          description: The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service.
          type: string
          readOnly: true
        display:
          description: Contains the localized display information for this particular operation / action.
          $ref: '#/components/schemas/Display'
          readOnly: true
      type: object
    Display:
      description: Contains the localized display information for this particular operation / action.
      properties:
        provider:
          description: The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute."
          type: string
          readOnly: true
        resource:
          description: The localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider.
          type: string
          readOnly: true
        operation:
          description: The localized friendly name for the operation, as it should be shown to the user.
          type: string
          readOnly: true
        description:
          description: The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views.
          type: string
          readOnly: true
      type: object
    OperationList:
      description: Pageable list of supported operations.
      properties:
        value:
          description: List of operations
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
      type: object
    ServiceNameProperties:
      description: The properties for service name.
      type: object
      properties:
        serviceName:
          description: Service Name for Storage Service.
          type: string
          readOnly: true
    StorageService:
      description: MDM storage service resource.
      properties:
        properties:
          description: Properties for service name.
          $ref: '#/components/schemas/ServiceNameProperties'
          x-ms-client-flatten: true
          readOnly: true
        id:
          description: Resource ID.
          type: string
          readOnly: true
        name:
          description: Resource Name.
          type: string
          readOnly: true
        type:
          description: Resource Type.
          type: string
          readOnly: true
        location:
          description: Resource Location.
          type: string
          readOnly: true
      type: object
    StorageServiceList:
      description: List for storage services.
      type: array
      items:
        $ref: '#/components/schemas/StorageService'
    AsyncOperationModel:
      description: The async operation body for srp request.
      type: object
      properties:
        id:
          description: The operation id.
          type: string
          readOnly: true
        operationStartTime:
          description: Operation start time.
          type: string
          readOnly: true
        operationEndTime:
          description: Operation end time.
          type: string
          readOnly: true
        subscriptionId:
          description: Subscription id for async operation.
          type: string
          readOnly: true
        locationHeader:
          description: Location header for async operation.
          type: string
          readOnly: true
        httpStatus:
          description: Http status for the async operation.
          type: string
          readOnly: true
        response:
          description: Response for the async operation.
          type: string
          readOnly: true
        context:
          description: Operation context.
          $ref: '#/components/schemas/OperationRequestContext'
          x-ms-client-flatten: true
          readOnly: true
        operation:
          description: Async operation content.
          $ref: '#/components/schemas/AsyncOperation'
          x-ms-client-flatten: true
          readOnly: true
    OperationRequestContext:
      description: Operation request context.
      type: object
      properties:
        apiVersion:
          description: Operation api version.
          type: string
          readOnly: true
        activityId:
          description: Activity id for the operation.
          type: string
          readOnly: true
        operationName:
          description: Async operation name.
          type: string
          readOnly: true
        errorCode:
          description: Async operation error code if operation failed.
          type: string
          readOnly: true
        runtimeException:
          description: Runtime exception if operation failed.
          type: string
          readOnly: true
        startTime:
          description: Start time for the operation.
          type: string
          readOnly: true
    AsyncOperation:
      description: Async operation content
      type: object
      properties:
        name:
          description: Async operation name
          type: string
          readOnly: true
    ErrorResponse:
      description: The error response for request which failed.
      type: object
      properties:
        code:
          description: The error description code.
          type: string
          readOnly: true
        message:
          description: The error description message.
          type: string
          readOnly: true
        target:
          description: The error target description.
          type: string
          readOnly: true
        details:
          description: The error details information.
          type: array
          items:
            type: string
          readOnly: true
    Resource:
      description: Base resource object.
      type: object
      properties:
        id:
          description: Resource ID.
          type: string
          readOnly: true
        name:
          description: Resource Name.
          type: string
          readOnly: true
        type:
          description: Resource Type.
          type: string
          readOnly: true
        location:
          description: Resource Location.
          type: string
          readOnly: true
      x-ms-azure-resource: true
    StorageQuota:
      description: Storage quota.
      properties:
        properties:
          description: Storage quota properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageQuotaProperties'
        id:
          description: Resource ID.
          type: string
          readOnly: true
        name:
          description: Resource Name.
          type: string
          readOnly: true
        type:
          description: Resource Type.
          type: string
          readOnly: true
        location:
          description: Resource Location.
          type: string
          readOnly: true
      type: object
    StorageQuotaProperties:
      description: Storage quota properties.
      type: object
      properties:
        numberOfStorageAccounts:
          description: Total number of storage accounts.
          type: integer
          format: int32
          default: 20
        capacityInGb:
          description: Maximum capacity (GB).
          type: integer
          format: int32
          default: 500
    StorageQuotaList:
      description: Pageable list of storage quotas.
      type: object
      properties:
        value:
          description: List of storage quotas.
          type: array
          items:
            $ref: '#/components/schemas/StorageQuota'
    SettingProperties:
      description: Properties of storage setting.
      type: object
      properties:
        retentionPeriodForDeletedStorageAccountsInDays:
          description: The number of days a deleted storage account is kept before being permanently deleted.
          type: integer
          format: int32
    Settings:
      description: Storage resource provider settings
      properties:
        properties:
          description: Properties of the storage account.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SettingProperties'
        id:
          description: Resource ID.
          type: string
          readOnly: true
        name:
          description: Resource Name.
          type: string
          readOnly: true
        type:
          description: Resource Type.
          type: string
          readOnly: true
        location:
          description: Resource Location.
          type: string
          readOnly: true
      type: object
    StorageAccountState:
      readOnly: true
      description: Storage account state.
      type: string
      enum:
        - Creating
        - Succeeded
      x-ms-enum:
        name: StorageAccountState
        modelAsString: true
    StorageAccountType:
      description: Storage account type.
      type: string
      enum:
        - Standard_LRS
        - Standard_GRS
        - Standard_ZRS
        - Standard_RAGRS
        - Premium_LRS
      x-ms-enum:
        name: StorageAccountType
        modelAsString: true
    LocationStatus:
      readOnly: true
      type: string
      description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
      enum:
        - Available
        - Unavailable
      x-ms-enum:
        name: LocationStatus
        modelAsString: true
    StorageAccountStatus:
      description: The state of storage account in WAC.
      type: string
      enum:
        - Active
        - Deleted
      x-ms-enum:
        name: StorageAccountStatus
        modelAsString: true
    StorageAccountKind:
      description: The kind of storage account
      type: string
      enum:
        - Storage
        - StorageV2
        - BlobStorage
      x-ms-enum:
        name: StorageAccountKind
        modelAsString: true
    StorageAccountAccessTier:
      description: Access tier for storage account
      type: string
      enum:
        - Hot
        - Cool
      x-ms-enum:
        name: StorageAccountAccessTier
        modelAsString: true
    StorageAccountHealthState:
      description: Health state for storage account
      type: string
      enum:
        - Healthy
        - Suspended
        - OverQuota
        - SuspendedAndOverQuota
      x-ms-enum:
        name: StorageAccountHealthState
        modelAsString: true
    StorageEncryptionSetting:
      description: Storage Encryption setting
      type: object
      properties:
        enabled:
          description: Bool to indicate whether enabled or not.
          type: boolean
          readOnly: true
        lastEnabledTime:
          description: A rough estimate of the date/time when the encryption was last enabled by the user.
          type: string
          readOnly: true
    StorageEncryptionServices:
      description: Services for which encryption setting is mentioned.
      type: object
      properties:
        blob:
          description: Blob service.
          $ref: '#/components/schemas/StorageEncryptionSetting'
          readOnly: true
        table:
          description: Table service.
          $ref: '#/components/schemas/StorageEncryptionSetting'
          readOnly: true
        queue:
          description: Queue service
          $ref: '#/components/schemas/StorageEncryptionSetting'
          readOnly: true
    EncryptionKeySource:
      description: Encryption Key Source
      type: string
      enum:
        - Microsoft.Storage
      x-ms-enum:
        name: EncryptionKeySource
        modelAsString: true
    StorageEncryption:
      description: Storage encryption setting
      type: object
      properties:
        services:
          description: Services for which encryption setting is mentioned
          $ref: '#/components/schemas/StorageEncryptionServices'
          readOnly: true
        keySource:
          description: Encryption keySource
          $ref: '#/components/schemas/EncryptionKeySource'
          readOnly: true
    StorageAccountProperties:
      description: Properties of a storage account.
      type: object
      properties:
        tenantViewId:
          description: Resource URI of storage account from tenant view.
          type: string
          readOnly: true
        accountType:
          description: Storage account type.
          $ref: '#/components/schemas/StorageAccountType'
          readOnly: true
        provisioningState:
          description: The provisioning state of storage account.
          $ref: '#/components/schemas/StorageAccountState'
          readOnly: true
        primaryEndpoints:
          description: The URLs that are used to perform a retrieval of a public BLOB, queue, or table object.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        creationTime:
          description: The creation date and time of storage account in UTC.
          type: string
          readOnly: true
        primaryLocation:
          description: The primary location for the storage account.
          type: string
          readOnly: true
        faultDomain:
          description: The fault domain for the storage account.
          type: string
          readOnly: true
        statusOfPrimary:
          description: The status of primary location of storage account.
          $ref: '#/components/schemas/LocationStatus'
          readOnly: true
        tenantSubscriptionId:
          description: Subscription ID of the subscription under which the storage account locates.
          type: string
          readOnly: true
        tenantStorageAccountName:
          description: Storage account name from tenant view.
          type: string
          readOnly: true
        tenantResourceGroupName:
          description: The name of resource group under which the storage account locates.
          type: string
          readOnly: true
        deletedTime:
          description: The date-time when the storage account was deleted.
          type: string
          format: date-time
          readOnly: true
        accountStatus:
          $ref: '#/components/schemas/StorageAccountStatus'
          description: The status of storage account.
        accountId:
          description: Internal storage account ID, which is not visible to tenant.
          type: string
          readOnly: true
        encryption:
          description: The storage encryption setting
          $ref: '#/components/schemas/StorageEncryption'
          readOnly: true
        supportsHttpsTrafficOnly:
          description: Storage account supports https traffic only or not
          type: boolean
          readOnly: true
        accessTier:
          description: Required for storage accounts where kind = BlobStorage.
          $ref: '#/components/schemas/StorageAccountAccessTier'
          readOnly: true
        healthState:
          description: The internal health state for storage account.
          $ref: '#/components/schemas/StorageAccountHealthState'
          readOnly: true
    StorageAccount:
      description: Properties of the storage account.
      properties:
        properties:
          description: Properties of the storage account.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageAccountProperties'
          readOnly: true
        kind:
          description: Indicates the type of storage account
          $ref: '#/components/schemas/StorageAccountKind'
          readOnly: true
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        id:
          description: Resource ID.
          type: string
          readOnly: true
        name:
          description: Resource Name.
          type: string
          readOnly: true
        type:
          description: Resource Type.
          type: string
          readOnly: true
        location:
          description: Resource Location.
          type: string
          readOnly: true
      type: object
    StorageAccountList:
      description: Pageable list of storage accounts.
      type: object
      properties:
        value:
          description: List of storage accounts.
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          readOnly: true
        '@odata.nextLink':
          description: URI to the next page.
          type: string
          readOnly: true
    UndeleteStorageAccount:
      description: Undelete storage account information.
      type: object
      properties:
        accountId:
          description: The internal wac id for storage account.
          type: string
          readOnly: true
        newAccountName:
          description: The new account name for the restored account if defined.
          type: string
          readOnly: true
    AcquisitionStatus:
      description: The status of page BLOB acquisition.
      type: string
      enum:
        - Unknown
        - NotAcquired
        - Pending
        - Success
        - Failed
      x-ms-enum:
        name: AcquisitionStatus
        modelAsString: true
    Acquisition:
      description: The acquisition of the page BLOB.
      type: object
      properties:
        susbcriptionid:
          description: ID of the subscription associated with the page BLOB.
          type: string
          readOnly: true
        storageaccount:
          description: The storage account that holds the page BLOB.
          type: string
          readOnly: true
        container:
          description: The container associated with the page BLOB.
          type: string
          readOnly: true
        blob:
          description: The name of the page BLOB.
          type: string
          readOnly: true
        acquisitionid:
          description: The ID of page BLOB acquisition.
          type: string
          readOnly: true
        filePath:
          description: The file path of the page BLOB file on storage cluster.
          type: string
          readOnly: true
        filePathUnc:
          description: The file path unc of the page BLOB file on storage cluster.
          type: string
          readOnly: true
        maximumblobsize:
          description: The maximum size of the page BLOB.
          type: integer
          format: int64
          readOnly: true
        status:
          description: The status of the page BLOB acquisition.
          $ref: '#/components/schemas/AcquisitionStatus'
          readOnly: true
      x-ms-azure-resource: true
    AcquisitionList:
      description: The list of page BLOB acquisitions.
      type: object
      properties:
        value:
          description: List of acquisitions.
          type: array
          items:
            $ref: '#/components/schemas/Acquisition'
          x-ms-identifiers:
            - acquisitionid
          readOnly: true
  x-stackQL-resources:
    operations:
      id: azure_stack.storage_admin.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Storage.Admin~1operations~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    async_operations:
      id: azure_stack.storage_admin.async_operations
      name: async_operations
      title: async_operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1asyncOperations~1{asyncOperationId}~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/async_operations/methods/get'
        insert: []
        update: []
        delete: []
    storage_services_rg:
      id: azure_stack.storage_admin.storage_services_rg
      name: storage_services_rg
      title: storage_services_rg
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Storage.Admin~1storageServices~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_services_rg/methods/list'
        insert: []
        update: []
        delete: []
    storage_services_sub:
      id: azure_stack.storage_admin.storage_services_sub
      name: storage_services_sub
      title: storage_services_sub
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1storageServices~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_services_sub/methods/list'
        insert: []
        update: []
        delete: []
    storage_services:
      id: azure_stack.storage_admin.storage_services
      name: storage_services
      title: storage_services
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Storage.Admin~1storageServices~1{serviceName}~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Storage.Admin~1storageServices~1{serviceName}~1?api-version=2019-08-08-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_services/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_services/methods/create'
        update: []
        delete: []
    storage_quotas:
      id: azure_stack.storage_admin.storage_quotas
      name: storage_quotas
      title: storage_quotas
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1quotas~1{quotaName}~1?api-version=2019-08-08-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1quotas~1{quotaName}~1?api-version=2019-08-08-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1quotas~1{quotaName}~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1quotas~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_quotas/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_quotas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_quotas/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_quotas/methods/delete'
    storage_settings:
      id: azure_stack.storage_admin.storage_settings
      name: storage_settings
      title: storage_settings
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1settings~1?api-version=2019-08-08-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1settings~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_settings/methods/get'
        insert: []
        update: []
        delete: []
    storage_accounts:
      id: azure_stack.storage_admin.storage_accounts
      name: storage_accounts
      title: storage_accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1storageAccounts~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1storageAccounts~1{accountId}~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1storageAccounts~1{accountId}~1undelete~1?api-version=2019-08-08-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reclaim_storage_capacity:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1reclaimStorageCapacity~1?api-version=2019-08-08-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/list'
        insert: []
        update: []
        delete: []
    acquisitions:
      id: azure_stack.storage_admin.acquisitions
      name: acquisitions
      title: acquisitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage.Admin~1locations~1{location}~1acquisitions~1?api-version=2019-08-08-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/acquisitions/methods/list'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.Storage.Admin/operations/?api-version=2019-08-08-preview:
    get:
      description: Get the list of support rest operations.
      tags:
        - Commerce
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK -- The list of operations has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/asyncOperations/{asyncOperationId}/?api-version=2019-08-08-preview:
    get:
      tags:
        - AsyncOperations
      operationId: AsyncOperations_Get
      description: Returns the async operation specified by asyncOperationId.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/AsyncOperationIdParameter'
      responses:
        '200':
          description: OK -- The async operation has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationModel'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Storage.Admin/storageServices/?api-version=2019-08-08-preview:
    get:
      tags:
        - StorageServices
      operationId: StorageServices_ListRG
      description: Returns the storage services list under the specified resource group and subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK -- The list of storage services has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageServiceList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/storageServices/?api-version=2019-08-08-preview:
    get:
      tags:
        - StorageServices
      operationId: StorageServices_ListSub
      description: Returns the storage services list under the specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- The list of storage services has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageServiceList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Storage.Admin/storageServices/{serviceName}/?api-version=2019-08-08-preview:
    get:
      tags:
        - StorageServices
      operationId: StorageServices_Get
      description: Returns the specified storage service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageServiceNameParameter'
      responses:
        '200':
          description: OK -- The specified storage service has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageService'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - StorageServices
      operationId: StorageServices_Create
      description: Create the specified storage resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageServiceNameParameter'
      responses:
        '200':
          description: OK -- The specified storage service has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageService'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/quotas/{quotaName}/?api-version=2019-08-08-preview:
    put:
      tags:
        - StorageQuotas
      description: Create or update an existing storage quota.
      operationId: StorageQuotas_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaNameParameter'
      requestBody:
        description: The properties of quota being created or updated.
        required: true
        x-ms-requestBody-name: quotaObject
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageQuota'
      responses:
        '200':
          description: OK -- The storage quota has been created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageQuota'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - StorageQuotas
      description: Delete an existing quota
      operationId: StorageQuotas_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaNameParameter'
      responses:
        '200':
          description: OK -- The storage quota has been deleted.
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - StorageQuotas
      description: Returns the specified storage quota.
      operationId: StorageQuotas_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaNameParameter'
      responses:
        '200':
          description: OK -- The storage quota has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageQuota'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/quotas/?api-version=2019-08-08-preview:
    get:
      tags:
        - StorageQuotas
      description: Returns a list of storage quotas at the given location.
      operationId: StorageQuotas_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- The list of storage quotas has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageQuotaList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/settings/?api-version=2019-08-08-preview:
    put:
      tags:
        - Settings
      description: Update storage resource provider settings.
      operationId: StorageSettings_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: Parameters used to update storage resource provider settings
        required: true
        x-ms-requestBody-name: settingsObject
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        '200':
          description: OK -- The new storage resource provider setting is updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Settings
      description: Returns the storage resource provider settings.
      operationId: StorageSettings_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- The settings has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageAccounts/?api-version=2019-08-08-preview:
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_List
      description: Returns a list of storage accounts.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/SummaryParameter'
      responses:
        '200':
          description: OK -- The list of storage accounts has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageAccounts/{accountId}/?api-version=2019-08-08-preview:
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Get
      description: Returns the requested storage account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          description: OK -- The storage account has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccount'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageAccounts/{accountId}/undelete/?api-version=2019-08-08-preview:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Undelete
      description: Undelete a deleted storage account with new account name if the a new name is provided.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/NewAccountNameParameter'
      responses:
        '200':
          description: OK -- Undelete either has been performed or account was not deleted.
        '202':
          description: Accepted -- undelete operation trigged; operation will complete asynchronously.
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/reclaimStorageCapacity/?api-version=2019-08-08-preview:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_ReclaimStorageCapacity
      description: Start reclaim storage capacity on deleted storage objects.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- Reclaim storage capacity has completed.
        '202':
          description: Accepted -- reclaim storage capacity operation triggered; operation will complete asynchronously.
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/acquisitions/?api-version=2019-08-08-preview:
    get:
      tags:
        - Acquisitions
      operationId: Acquisitions_List
      description: Returns a list of BLOB acquisitions.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK -- The list of acquisitions has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquisitionList'
        default:
          description: Error Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
