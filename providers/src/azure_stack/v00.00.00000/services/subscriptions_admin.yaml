openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureStack Subscriptions Management Client
  description: The AzureStack Subscription administrator module. This module provides functionality for administrators to manage plans, offers and subscriptions
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    DirectoryTenantParameter:
      name: tenant
      in: path
      description: Directory tenant name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManifestParameter:
      name: manifestName
      in: path
      description: The manifest name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TargetSubscriptionIdParameter:
      name: targetSubscriptionId
      in: path
      description: The target subscription ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PlanAcquisitionIdParameter:
      name: planAcquisitionId
      in: path
      description: The plan acquisition Identifier
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QuotaParameter:
      name: quota
      in: path
      description: Name of the quota.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: false
      schema:
        default: '2015-11-01'
        type: string
    ResourceGroupParameter:
      name: resourceGroupName
      in: path
      description: The resource group the resource is located under.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationsStatusParameter:
      name: operationsStatusName
      in: path
      description: The operation status name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    LocationParameter:
      name: location
      in: path
      description: The AzureStack location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OfferParameter:
      name: offer
      in: path
      description: Name of an offer.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PlanParameter:
      name: plan
      in: path
      description: Name of the plan.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DelegatedProviderParameter:
      name: delegatedProvider
      in: path
      description: DelegatedProvider identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DelegatedProviderSubscriptionIdParameter:
      name: delegatedProviderSubscriptionId
      in: path
      description: Delegated provider subscription identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: OData filter parameter.
      x-ms-parameter-location: method
      schema:
        type: string
    OfferDelegationParameter:
      name: offerDelegationName
      in: path
      description: Name of a offer delegation.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Plan:
      description: A plan represents a package of quotas and capabilities that are offered tenants. A tenant can acquire this plan through an offer to upgrade his access to underlying cloud services.
      properties:
        properties:
          description: Properties of a plan.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PlanProperties'
        id:
          readOnly: true
          description: URI of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of resource.
          type: string
        location:
          description: Location of the resource
          type: string
        tags:
          readOnly: true
          description: List of key-value pairs.
          type: object
          additionalProperties:
            type: string
      type: object
    PlanProperties:
      description: Properties of a plan.
      type: object
      properties:
        description:
          description: Description of the plan.
          type: string
        displayName:
          description: Display name.
          type: string
        externalReferenceId:
          description: External reference identifier.
          type: string
        quotaIds:
          description: Quota identifiers under the plan.
          type: array
          items:
            type: string
        name:
          description: Name of the plan.
          type: string
        subscriptionCount:
          description: Subscription count.
          type: integer
          format: int32
        skuIds:
          description: SKU identifiers.
          type: array
          items:
            type: string
    PlanList:
      description: List of plans
      properties:
        value:
          description: Array of plans.
          type: array
          items:
            $ref: '#/components/schemas/Plan'
        nextLink:
          type: string
          description: Continuation token
      type: object
    DirectoryTenant:
      description: Directory tenant.
      properties:
        properties:
          description: Directory tenant.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DirectoryTenantProperties'
        id:
          readOnly: true
          description: URI of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of resource.
          type: string
        location:
          description: Location of the resource
          type: string
        tags:
          readOnly: true
          description: List of key-value pairs.
          type: object
          additionalProperties:
            type: string
      type: object
    DirectoryTenantProperties:
      description: Directory tenant.
      type: object
      properties:
        tenantId:
          description: Tenant unique identifier.
          type: string
    DirectoryTenantList:
      description: List of directory tenants.
      type: object
      properties:
        value:
          description: List of directory tenants.
          type: array
          items:
            $ref: '#/components/schemas/DirectoryTenant'
        nextLink:
          type: string
          description: Continuation token
    Manifest:
      description: The manifest.
      type: object
      properties:
        name:
          description: The unique identifier of the registration.
          type: string
        displayName:
          description: The display name.
          type: string
        resourceTags:
          description: The resource tags.
          type: object
        namespace:
          description: The namespace.
          type: string
        providerLocation:
          description: The location of the provider.
          type: string
        providerType:
          description: The type of the provider.
          $ref: '#/components/schemas/ResourceProviderType'
        enabled:
          description: A value indicating whether this resource provider is enabled.
          type: boolean
        extensionCollection:
          description: The extensions.
          $ref: '#/components/schemas/ExtensionCollectionDefinition'
        resourceTypes:
          description: The resource types
          $ref: '#/components/schemas/ResourceTypeList'
        providerAuthorization:
          description: The resource provider authorization.
          $ref: '#/components/schemas/ResourceProviderAuthorization'
        resourceHydrationAccounts:
          description: The resource hydration accounts.
          $ref: '#/components/schemas/AzureResourceHydrationAccountList'
        linkedNotificationRules:
          description: The linked notification rules.
          $ref: '#/components/schemas/FanoutLinkedNotificationRuleList'
        provisioningState:
          description: The provisioning state.
          $ref: '#/components/schemas/ManifestProvisioningState'
        resourceGroupName:
          description: The name of the resource group.
          type: string
        resourceLocation:
          description: The location of the resource.
          type: string
        subscriptionId:
          description: The subscription ID under which RP is registered.
          type: string
        alwaysRoutable:
          description: A value indicating whether the manifest is always routable by all subscriptions.
          type: boolean
        routingResourceManagerType:
          description: The routing resource manager type.
          $ref: '#/components/schemas/ResourceManagerType'
        metadata:
          description: The metadata.
          type: object
    ManifestList:
      description: List of manifests.
      properties:
        value:
          description: List of manifests.
          type: array
          items:
            $ref: '#/components/schemas/Manifest'
          x-ms-identifiers:
            - name
        nextLink:
          description: URI to next page.
          type: string
      type: object
    ResourceProviderType:
      description: The resource provider type.
      type: string
      enum:
        - NotSpecified
        - Internal
        - External
        - RegistrationFree
        - TenantOnly
        - AlwaysRoutable
      x-ms-enum:
        name: ResourceProviderType
        modelAsString: true
        values:
          - description: The resource provider type is not specified.
            name: NotSpecified
            value: NotSpecified
          - description: The resource provider type is internal.
            name: Internal
            value: Internal
          - description: The resource provider type is external. This is used for 3rd party resource providers.
            name: External
            value: External
          - description: The resource provider doesn't require subscription registrations.
            name: RegistrationFree
            value: RegistrationFree
          - description: The resource provider operates only at tenant level.
            name: TenantOnly
            value: TenantOnly
          - description: The resource provider can always be routed to without explicit access via plan.
            name: AlwaysRoutable
            value: AlwaysRoutable
    ExtensionCollectionDefinition:
      description: The manifest extension collection definition.
      type: object
      properties:
        version:
          description: The version of the format a.b[.c[.d]]. see System.Version documentation for more details.
          type: string
        extensions:
          description: The extensions.
          $ref: '#/components/schemas/ExtensionList'
    ExtensionList:
      description: List of the extensions.
      properties:
        value:
          description: List of the extensions.
          type: array
          items:
            $ref: '#/components/schemas/ExtensionDefinition'
          x-ms-identifiers:
            - name
        nextLink:
          description: URI to next page.
          type: string
      type: object
    ExtensionDefinition:
      description: The data contract for specifying extensions in resource provider manifests.
      properties:
        name:
          description: The name.
          type: string
        uri:
          description: The Uri
          type: string
        properties:
          description: The extension properties.
          $ref: '#/components/schemas/ExtensionPropertiesDefinition'
        obsoleteBundlesBitmask:
          description: The obsolete bundles bitmask.
          type: integer
          format: int32
        resourceAccess:
          description: The resource access.
          $ref: '#/components/schemas/ResourceAccessList'
      type: object
    ExtensionPropertiesDefinition:
      description: The extension properties definition.
      type: object
      properties:
        quotaCreateBladeName:
          description: The quota create blade.
          type: string
        resourceProviderDashboardBladeName:
          description: The resource provider dashboard blade.
          type: string
    ResourceAccessList:
      description: List of the resource access.
      properties:
        value:
          description: List of the resource access.
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccess'
          x-ms-identifiers:
            - name
        nextLink:
          description: URI to next page.
          type: string
      type: object
    ResourceAccess:
      description: Extension Client Access Section.
      type: object
      properties:
        name:
          description: The name.
          type: string
        resource:
          description: The resource.
          type: string
    ResourceTypeList:
      description: List of the resource types.
      properties:
        value:
          description: List of the resource types.
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          x-ms-identifiers:
            - name
        nextLink:
          description: URI to next page.
          type: string
      type: object
    ResourceType:
      description: The resource type definition.
      type: object
      properties:
        name:
          description: The name.
          type: string
        routingType:
          description: The resource routing type.
          $ref: '#/components/schemas/RoutingType'
        resourceDeletionPolicy:
          description: The resource deletion policy.
          $ref: '#/components/schemas/ResourceDeletionPolicy'
        allowedUnauthorizedActions:
          description: The allowed unauthorized actions.
          type: array
          items:
            type: string
        authorizationActionMappings:
          description: The read-only actions.
          $ref: '#/components/schemas/AuthorizationActionMappingList'
        linkedAccessChecks:
          description: The linked access checks.
          $ref: '#/components/schemas/LinkedAccessCheckList'
        linkedNotificationRules:
          description: The linked notification rules.
          $ref: '#/components/schemas/LinkedNotificationRuleList'
        linkedOperationRules:
          description: The linked operation rules.
          $ref: '#/components/schemas/LinkedOperationRuleList'
        apiProfiles:
          description: The API profiles.
          $ref: '#/components/schemas/ApiProfileList'
        endpoints:
          description: The resource provider endpoints.
          $ref: '#/components/schemas/ResourceProviderEndpointList'
        marketplaceType:
          description: The resource type behavior in the marketplace.
          $ref: '#/components/schemas/MarketplaceType'
        inGlobalLocation:
          description: A value indicating whether the resource type is in global location.
          type: boolean
        meteredResourceIds:
          description: The metered resource ids.
          type: array
          items:
            type: string
    RoutingType:
      description: The resource routing type.
      type: string
      enum:
        - Default
        - ProxyOnly
        - HostBased
        - Extension
        - Tenant
        - Fanout
        - LocationBased
      x-ms-enum:
        name: RoutingType
        modelAsString: true
        values:
          - description: The resource routing type is default.
            name: Default
            value: Default
          - description: The resource routing type is proxy only.
            name: ProxyOnly
            value: ProxyOnly
          - description: The resource routing type is host based.
            name: HostBased
            value: HostBased
          - description: The resource routing type is extension.
            name: Extension
            value: Extension
          - description: The resource routing type is tenant.
            name: Tenant
            value: Tenant
          - description: The resource routing type is fan out.
            name: Fanout
            value: Fanout
          - description: The resource routing type is Location based.
            name: LocationBased
            value: LocationBased
    ResourceDeletionPolicy:
      description: The resource deletion policy.
      type: string
      enum:
        - NotSpecified
        - Cascade
      x-ms-enum:
        name: ResourceDeletionPolicy
        modelAsString: true
        values:
          - description: The resource deletion policy is not specified.
            name: NotSpecified
            value: NotSpecified
          - description: The resource deletion policy is cascade.
            name: Cascade
            value: Cascade
    AuthorizationActionMappingList:
      description: List of the read-only actions.
      properties:
        value:
          description: List of the read-only actions.
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationActionMapping'
          x-ms-identifiers: []
        nextLink:
          description: URI to next page.
          type: string
      type: object
    AuthorizationActionMapping:
      description: The linked resource access checks.
      properties:
        original:
          description: The original action name.
          type: string
        desired:
          description: The desired action name.
          type: string
      type: object
    LinkedAccessCheckList:
      description: List of the linked access checks.
      properties:
        value:
          description: List of the linked access checks.
          type: array
          items:
            $ref: '#/components/schemas/LinkedAccessCheck'
          x-ms-identifiers:
            - actionName
            - linkedType
        nextLink:
          description: URI to next page.
          type: string
      type: object
    LinkedAccessCheck:
      description: The linked resource access checks.
      properties:
        actionName:
          description: The action name.
          type: string
        linkedProperty:
          description: The linked property.
          type: string
        linkedAction:
          description: The linked action.
          type: string
        linkedActionVerb:
          description: The linked action verb.
          type: string
        linkedType:
          description: The linked type.
          type: string
      type: object
    LinkedNotificationRuleList:
      description: List of the linked notification rules.
      properties:
        value:
          description: List of the linked notification rules.
          type: array
          items:
            $ref: '#/components/schemas/LinkedNotificationRule'
          x-ms-identifiers: []
        nextLink:
          description: URI to next page.
          type: string
      type: object
    LinkedNotificationRule:
      description: The linked notification rule.
      properties:
        actions:
          description: List of actions.
          type: array
          items:
            type: string
      type: object
    LinkedOperationRuleList:
      description: List of the linked operation rules.
      properties:
        value:
          description: List of the linked operation rules.
          type: array
          items:
            $ref: '#/components/schemas/LinkedOperationRule'
          x-ms-identifiers: []
        nextLink:
          description: URI to next page.
          type: string
      type: object
    LinkedOperationRule:
      description: The linked resource access checks.
      properties:
        linkedOperation:
          description: The linked operation.
          $ref: '#/components/schemas/LinkedOperation'
        linkedAction:
          description: The linked action.
          $ref: '#/components/schemas/LinkedAction'
        dependsOnTypes:
          description: The list of resource types this rule depends on.
          type: array
          items:
            type: string
      type: object
    LinkedOperation:
      description: The linked operation.
      type: string
      enum:
        - None
        - CrossResourceGroupResourceMove
        - CrossSubscriptionResourceMove
      x-ms-enum:
        name: LinkedOperation
        modelAsString: true
        values:
          - description: The operation is none.
            name: None
            value: None
          - description: Move resources between resource groups within the same subscription.
            name: CrossResourceGroupResourceMove
            value: CrossResourceGroupResourceMove
          - description: Move resources across subscriptions.
            name: CrossSubscriptionResourceMove
            value: CrossSubscriptionResourceMove
    LinkedAction:
      description: The resource type linked action.
      type: string
      enum:
        - NotSpecified
        - Blocked
        - Validate
        - Enabled
      x-ms-enum:
        name: LinkedAction
        modelAsString: true
        values:
          - description: The action is not specified.
            name: NotSpecified
            value: NotSpecified
          - description: The operation is blocked.
            name: Blocked
            value: Blocked
          - description: The operation must be validated.
            name: Validate
            value: Validate
          - description: The operation must be Enabled.
            name: Enabled
            value: Enabled
    ApiProfileList:
      description: List of the API profiles.
      properties:
        value:
          description: List of the API profiles.
          type: array
          items:
            $ref: '#/components/schemas/ApiProfile'
          x-ms-identifiers:
            - apiVersion
            - profileVersion
        nextLink:
          description: URI to next page.
          type: string
      type: object
    ApiProfile:
      description: Represents the API profile.
      properties:
        profileVersion:
          description: The profile version.
          type: string
        apiVersion:
          description: The API version.
          type: string
      type: object
    ResourceProviderEndpointList:
      description: List of the resource provider endpoints.
      properties:
        value:
          description: List of the resource provider endpoints.
          type: array
          items:
            $ref: '#/components/schemas/ResourceProviderEndpoint'
          x-ms-identifiers:
            - endpointUri
        nextLink:
          description: URI to next page.
          type: string
      type: object
    ResourceProviderEndpoint:
      description: The API versions supported by the endpoint.
      properties:
        apiVersions:
          description: The API versions supported by the endpoint.
          type: array
          items:
            type: string
        enabled:
          description: The enabled.
          type: boolean
        endpointUri:
          description: The endpoint uri.
          type: string
        timeout:
          description: The timeout.
          type: string
      type: object
    MarketplaceType:
      description: The type of marketplace behavior for the resource type.
      type: string
      enum:
        - NotSpecified
        - AddOn
      x-ms-enum:
        name: MarketplaceType
        modelAsString: true
        values:
          - description: The marketplace type is not specified.
            name: NotSpecified
            value: NotSpecified
          - description: The marketplace offer is an add-on to a resource.
            name: AddOn
            value: AddOn
    ResourceProviderAuthorization:
      description: The resource provider authorization information.
      properties:
        applicationId:
          description: The application id of resource provider in AAD.
          type: string
        roleDefinitionId:
          description: The role definition identifier against which a role assignment is created.
          type: string
      type: object
    AzureResourceHydrationAccountList:
      description: List of the resource hydration accounts.
      properties:
        value:
          description: List of the resource hydration accounts.
          type: array
          items:
            $ref: '#/components/schemas/AzureResourceHydrationAccount'
          x-ms-identifiers:
            - accountName
        nextLink:
          description: URI to next page.
          type: string
      type: object
    AzureResourceHydrationAccount:
      description: The API versions supported by the endpoint.
      properties:
        subscriptionId:
          description: The subscription identifier.
          type: string
        accountName:
          description: The account name.
          type: string
        encryptedKey:
          description: The encrypted key.
          type: string
        maxChildResourceConsistencyJobLimit:
          description: The next child resource consistency job limit.
          type: integer
          format: int32
      type: object
    FanoutLinkedNotificationRuleList:
      description: List of the linked notification rules.
      properties:
        value:
          description: List of the linked notification rules.
          type: array
          items:
            $ref: '#/components/schemas/FanoutLinkedNotificationRule'
          x-ms-identifiers: []
        nextLink:
          description: URI to next page.
          type: string
      type: object
    FanoutLinkedNotificationRule:
      description: The fan-out linked notification rule.
      properties:
        actions:
          description: The list of actions.
          type: array
          items:
            type: string
        endpoints:
          description: The list of endpoint uris.
          $ref: '#/components/schemas/ResourceProviderEndpointList'
      type: object
    ManifestProvisioningState:
      description: The provisioning state.
      type: string
      enum:
        - Accepted
        - Creating
        - Deleting
        - Moving
        - Failed
        - Succeeded
      x-ms-enum:
        name: ManifestProvisioningState
        modelAsString: true
        values:
          - description: The accepted provisioning state.
            name: Accepted
            value: Accepted
          - description: The creating provisioning state.
            name: Creating
            value: Creating
          - description: The deleting provisioning state.
            name: Deleting
            value: Deleting
          - description: The moving provisioning state.
            name: Moving
            value: Moving
          - description: The failed provisioning state.
            name: Failed
            value: Failed
          - description: The succeeded provisioning state.
            name: Succeeded
            value: Succeeded
    Location:
      description: Contains information about a geographical location where resource providers can be deployed.
      type: object
      properties:
        displayName:
          description: Display name of the location.
          type: string
        id:
          description: Location identifier.
          type: string
        latitude:
          description: Latitude of the location.
          type: string
        longitude:
          description: Longitude of the location.
          type: string
        name:
          description: Location name.
          type: string
    LocationList:
      description: List of locations.
      properties:
        value:
          description: List of locations.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextLink:
          description: URI to next page.
          type: string
      type: object
    OperationsStatus:
      description: A long running operation status.
      properties:
        id:
          description: The operation status identifier.
          $ref: '#/components/schemas/OperationsStatusIdentifier'
        status:
          description: The status of the operation.
          type: string
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        percentComplete:
          description: The completion percentage of the operation.
          type: number
        properties:
          description: The internal operation properties.
          type: object
        error:
          description: The operation error.
          $ref: '#/components/schemas/ExtendedErrorInfo'
        retryAfter:
          description: The amount of time clients should wait..
          type: string
        terminalHttpStatusCode:
          description: The terminal http status code for the operation.
          type: string
        responseContent:
          description: The content of the response.
          type: object
      type: object
    OperationsStatusIdentifier:
      description: The admin offer identifier for the location wide SubscriptionsAdminResourceTypes.OperationsStatus resource type.
      properties:
        location:
          description: The location of the operations status.
          type: string
        name:
          description: The name of the operations status.
          type: string
        subscriptionId:
          description: The subscription identifier..
          type: string
      type: object
    ExtendedErrorInfo:
      description: The extended error information.
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
        details:
          description: The detailed error message details.
          $ref: '#/components/schemas/ExtendedErrorInfoList'
      type: object
    ExtendedErrorInfoList:
      description: List of the extended error information.
      properties:
        value:
          description: List of the extended error information.
          type: array
          items:
            $ref: '#/components/schemas/ExtendedErrorInfo'
          x-ms-identifiers: []
        nextLink:
          description: URI to next page.
          type: string
      type: object
    PlanAcquisition:
      description: Represents the acquisition of an add-on plan for a subscription.
      type: object
      properties:
        acquisitionId:
          description: Acquisition identifier.
          type: string
        id:
          description: Identifier in the tenant subscription context.
          type: string
        planId:
          description: Plan identifier in the tenant subscription context.
          type: string
        externalReferenceId:
          description: External reference identifier.
          type: string
        provisioningState:
          description: State of the provisioning.
          $ref: '#/components/schemas/ProvisioningState'
        acquisitionTime:
          description: Acquisition time.
          type: string
          format: date-time
    ProvisioningState:
      description: Provisioning state for subscriptions service resources, for example, resource provider registration.
      type: string
      enum:
        - NotSpecified
        - Accepted
        - Failed
        - Succeeded
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - description: The provisioning state is not specified.
            name: NotSpecified
            value: NotSpecified
          - description: The provisioning state is accepted, and indicates provisioning is ongoing.
            name: Accepted
            value: Accepted
          - description: The provisioning state is failed, and indicates the data is potentially out-of-sync with third parties.
            name: Failed
            value: Failed
          - description: The provisioning state is succeeded, and indicates the data is in-sync with third-parties.
            name: Succeeded
            value: Succeeded
    PlanAcquisitionList:
      description: List of acquired plans.
      properties:
        value:
          description: List of acquired plans.
          type: array
          items:
            $ref: '#/components/schemas/PlanAcquisition'
        nextLink:
          type: string
          description: URI to the next page.
      type: object
    Quota:
      description: Quotas for DelegatedProviders.
      properties:
        properties:
          description: Quotas for DelegatedProviders.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/QuotaProperties'
        id:
          readOnly: true
          description: URI of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of resource.
          type: string
        location:
          description: Location of the resource
          type: string
        tags:
          readOnly: true
          description: List of key-value pairs.
          type: object
          additionalProperties:
            type: string
      type: object
    QuotaProperties:
      description: Quotas for DelegatedProviders.
      type: object
      properties:
        allowCustomPortalBranding:
          description: Value indicating whether custom portal branding is allowed.
          type: boolean
    QuotaList:
      description: List of quotas.
      properties:
        value:
          description: List of quotas.
          type: array
          items:
            $ref: '#/components/schemas/Quota'
        nextLink:
          type: string
          description: URI to next page.
      type: object
    Resource:
      description: Base Resource Object
      type: object
      properties:
        id:
          readOnly: true
          description: URI of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of resource.
          type: string
        location:
          description: Location of the resource
          type: string
        tags:
          readOnly: true
          description: List of key-value pairs.
          type: object
          additionalProperties:
            type: string
      x-ms-azure-resource: true
    Error:
      type: object
      description: Error response.
      properties:
        error:
          $ref: '#/components/schemas/ErrorDefinition'
          description: The error details.
    ErrorDefinition:
      type: object
      description: Error definition.
      properties:
        code:
          description: Service specific error code which serves as the substatus for the HTTP error code.
          type: string
          readOnly: true
        message:
          description: Description of the error.
          type: string
          readOnly: true
        details:
          description: Internal error details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDefinition'
          x-ms-identifiers: []
          readOnly: true
    Display:
      description: Contains the localized display information for this particular operation / action.
      properties:
        provider:
          description: The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute."
          type: string
          readOnly: true
        resource:
          description: The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
          type: string
          readOnly: true
        operation:
          description: The localized, friendly name for the operation. Use the name as it will displayed to the user.
          type: string
          readOnly: true
        description:
          description: The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
          type: string
          readOnly: true
      type: object
    Operation:
      description: Supported REST operation.
      type: object
      properties:
        display:
          description: Display information for the operation.
          $ref: '#/components/schemas/Display'
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        name:
          description: Name of the operation being performed on an object.
          type: string
          readOnly: true
        origin:
          description: Origin for the operation.
          type: string
          readOnly: true
    OperationList:
      description: List of supported operations.
      type: object
      properties:
        value:
          description: List of supported operations.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
    CheckNameAvailabilityDefinition:
      description: The check name availability action definition.
      type: object
      properties:
        name:
          description: The resource name to verify.
          type: string
        resourceType:
          description: The resource type to verify.
          type: string
    CheckNameAvailabilityResponse:
      description: The check name availability response definition
      type: object
      properties:
        nameAvailable:
          description: A value indicating whether the name is available.
          type: boolean
        reason:
          description: The reason for the unavailability of the name.
          $ref: '#/components/schemas/NameUnavailabilityReason'
        message:
          description: The message explaining the reason.
          type: string
    IdentityHealthCheckReportDefinition:
      description: The identity health check report action definition.
      type: object
      properties:
        reportStartTimeUtc:
          description: Start time of the report.
          type: string
          format: date-time
        reportEndTimeUtc:
          description: End time of the report.
          type: string
          format: date-time
        status:
          description: The roll-up health status for the directory.
          $ref: '#/components/schemas/HealthStatus'
        directoryTenants:
          description: List of directory tenant health reports.
          $ref: '#/components/schemas/DirectoryTenantHealthReportList'
    DirectoryTenantHealthReportList:
      description: List of directory tenant health reports.
      properties:
        value:
          type: array
          description: Directory tenant health report.
          items:
            $ref: '#/components/schemas/DirectoryTenantHealthReport'
          x-ms-identifiers:
            - tenantId
        nextLink:
          description: URI to the next page.
          type: string
      type: object
    DirectoryTenantHealthReport:
      description: A report of the health status of a directory tenant and identity applications within.
      type: object
      properties:
        tenantId:
          description: The tenant unique identifier.
          type: string
        tenantName:
          description: The directory tenant resource name.
          type: string
        status:
          description: The roll-up health status for the directory.
          $ref: '#/components/schemas/HealthStatus'
        applications:
          description: List of the application health reports.
          $ref: '#/components/schemas/ApplicationHealthReportList'
    ApplicationHealthReportList:
      description: List of the application health reports.
      properties:
        value:
          type: array
          description: A report of the health status of an identity applications.
          items:
            $ref: '#/components/schemas/ApplicationHealthReport'
          x-ms-identifiers: []
        nextLink:
          description: URI to the next page.
          type: string
      type: object
    ApplicationHealthReport:
      description: A report of the health status of an identity applications.
      type: object
      properties:
        appId:
          description: The application identifier.
          type: string
        servicePrincipalObjectId:
          description: The service principal identifier.
          type: string
        status:
          description: The roll-up health status for the application
          $ref: '#/components/schemas/HealthStatus'
        appRoleAssignments:
          description: List of AppRoleAssignment health reports for the application.
          $ref: '#/components/schemas/AppRoleAssignmentHealthReportList'
        oAuth2PermissionGrants:
          description: List of OAuth2PermissionGrant health reports for the application.
          $ref: '#/components/schemas/OAuth2PermissionGrantHealthReportList'
        servicePrincipalTags:
          description: List of ServicePrincipalTag health reports for the application.
          $ref: '#/components/schemas/ServicePrincipalTagHealthReportList'
    AppRoleAssignmentHealthReportList:
      description: List of AppRoleAssignment health reports for the application.
      properties:
        value:
          type: array
          description: A report of the health status of an AppRoleAssignment.
          items:
            $ref: '#/components/schemas/AppRoleAssignmentHealthReport'
          x-ms-identifiers:
            - appRoleAssignment/resource
        nextLink:
          description: URI to the next page.
          type: string
      type: object
    AppRoleAssignmentHealthReport:
      description: A report of the health status of an AppRoleAssignment.
      type: object
      properties:
        appRoleAssignment:
          description: The permission description.
          $ref: '#/components/schemas/AppRoleAssignmentDefinition'
        status:
          description: The health status for the permission.
          $ref: '#/components/schemas/HealthStatus'
    AppRoleAssignmentDefinition:
      description: Application role assignment definition.
      type: object
      properties:
        resource:
          description: The resource identifier. This should be the application identifier of the resource application.
          type: string
        client:
          description: The client identifier. This should be the application identifier of the client application.
          type: string
        roleId:
          description: The role identifier. This should be the ID of the AppRole exposed by the resource application.
          type: string
    OAuth2PermissionGrantHealthReportList:
      description: List of OAuth2PermissionGrant health reports for the application.
      properties:
        value:
          type: array
          description: A report of the health status of an OAuth2PermissionGrant.
          items:
            $ref: '#/components/schemas/OAuth2PermissionGrantHealthReport'
          x-ms-identifiers:
            - oAuth2PermissionGrant/resource
        nextLink:
          description: URI to the next page.
          type: string
      type: object
    OAuth2PermissionGrantHealthReport:
      description: A report of the health status of an OAuth2PermissionGrant.
      type: object
      properties:
        oAuth2PermissionGrant:
          description: The permission description.
          $ref: '#/components/schemas/OAuth2PermissionGrantDefinition'
        status:
          description: The health status for the permission.
          $ref: '#/components/schemas/HealthStatus'
    OAuth2PermissionGrantDefinition:
      description: Application permission grant definition.
      type: object
      properties:
        resource:
          description: The resource identifier. This should be the application identifier of the resource application.
          type: string
        client:
          description: The client identifier. This should be the application identifier of the client application.
          type: string
        scope:
          description: The scope identifier. This should be the scope value of the OAUTH2PERMISSION exposed by the resource application.
          type: string
    ServicePrincipalTagHealthReportList:
      description: List of ServicePrincipalTag health reports for the application.
      properties:
        value:
          type: array
          description: A report of the health status of a tag on an identity application service principal.
          items:
            $ref: '#/components/schemas/ServicePrincipalTagHealthReport'
          x-ms-identifiers:
            - servicePrincipalTag
        nextLink:
          description: URI to the next page.
          type: string
      type: object
    ServicePrincipalTagHealthReport:
      description: A report of the health status of a tag on an identity application service principal.
      type: object
      properties:
        servicePrincipalTag:
          description: The tag.
          type: string
        status:
          description: The health status for the tag.
          $ref: '#/components/schemas/HealthStatus'
    NameUnavailabilityReason:
      description: The reason that the name is not available.
      type: string
      enum:
        - Invalid
        - AlreadyExists
      x-ms-enum:
        name: NameUnavailabilityReason
        modelAsString: true
    MoveSubscriptionsDefinition:
      description: The move subscriptions action definition
      type: object
      required:
        - resources
      properties:
        targetDelegatedProviderOffer:
          description: The delegated provider offer identifier (from the Admin context) that the subscriptions to be moved to.
          type: string
        resources:
          description: A collection of subscriptions to move to the target delegated provider offer.
          type: array
          items:
            type: string
    SubscriptionDefinition:
      description: Subscription object properties.
      type: object
      properties:
        delegatedProviderSubscriptionId:
          description: Parent DelegatedProvider subscription identifier.
          type: string
        displayName:
          description: Subscription name.
          type: string
        id:
          description: Fully qualified identifier.
          type: string
        externalReferenceId:
          description: External reference identifier.
          type: string
        offerId:
          description: Identifier of the offer under the scope of a delegated provider.
          type: string
        owner:
          description: Subscription owner.
          type: string
        routingResourceManagerType:
          description: Routing resource manager type.
          $ref: '#/components/schemas/ResourceManagerType'
        state:
          description: Subscription state.
          $ref: '#/components/schemas/SubscriptionState'
        subscriptionId:
          description: Subscription identifier.
          type: string
        tenantId:
          description: Directory tenant identifier.
          type: string
      x-ms-azure-resource: true
    SubscriptionList:
      description: List of subscriptions.
      properties:
        value:
          type: array
          description: Subscription definition.
          items:
            $ref: '#/components/schemas/SubscriptionDefinition'
        nextLink:
          description: URI to the next page.
          type: string
      type: object
    ResourceManagerType:
      description: Resource manager type.
      type: string
      enum:
        - Default
        - Admin
      x-ms-enum:
        name: ResourceManagerType
        modelAsString: true
    SubscriptionState:
      description: Subscription notification state.
      type: string
      enum:
        - NotDefined
        - Enabled
        - Warned
        - PastDue
        - Disabled
        - Deleted
        - Deleting
        - PartiallyDeleted
      x-ms-enum:
        name: SubscriptionState
        modelAsString: true
        values:
          - description: Subscription is active. New resources can be created.
            name: Enabled
            value: Enabled
          - description: This state is not used in Azure Stack.
            name: PastDue
            value: PastDue
          - description: This state is not used in Azure Stack.
            name: Warned
            value: Warned
          - description: Subscription is not active and usage is not reported. Resources are shut down (VMs stopped and deallocated, IP addresses are freed, etc). During this period, the Azure Stack Operator can re-enable the subscription which allows creation of new resources but doesn’t automatically restore disabled resources.
            name: Disabled
            value: Disabled
          - description: This state is unique to Azure Stack and is only visible to the Azure Stack Operator, and if used, to the respective Delegated Provider. Resources and Data are being deleted before subscription state is set to Deleted. This state cannot be reversed. It means that deletion is in progress.
            name: Deleting
            value: Deleting
          - description: Final state of subscription. All resources and data are deleted. This state cannot be reversed.
            name: Deleted
            value: Deleted
          - description: This state is not used in Azure Stack.
            name: NotDefined
            value: NotDefined
          - description: This state is unique to Azure Stack and is only visible to the Azure Stack Operator, and if used, to the respective Delegated Provider. It means that deletion failed.  You can’t reverse the deletion process, so in this state all you can do is restart deletion.  This state is not reported to RPs.
            name: PartiallyDeleted
            value: PartiallyDeleted
    HealthStatus:
      description: Health Status.
      type: string
      enum:
        - Unknown
        - Unhealthy
        - Healthy
      x-ms-enum:
        name: HealthStatus
        modelAsString: true
        values:
          - description: The health status is unknown.
            name: Unknown
            value: Unknown
          - description: The health status is unhealthy, indicating something is wrong or a sub-health status is Unhealthy or Unknown.
            name: Unhealthy
            value: Unhealthy
          - description: The health status is healthy, indicating nothing is wrong.
            name: Healthy
            value: Healthy
    Metric:
      description: The resource metric set that represents the metrics for a particular resource.
      type: object
      properties:
        metricUnit:
          description: Unit of metrics.
          $ref: '#/components/schemas/MetricUnit'
        timeGrain:
          description: Timespan of the metric.
          type: string
        startTime:
          description: Start time of the metric.
          type: string
          format: date-time
        endTime:
          description: End time of the metric.
          type: string
          format: date-time
        metricValues:
          description: Collected metric values in the timespan.
          $ref: '#/components/schemas/MetricValueList'
    MetricValue:
      description: Metric value
      properties:
        timeStamp:
          description: Timestamp of when the metric value was collected.
          type: string
          format: date-time
        average:
          description: Average value for metric sample period.
          type: number
          format: double
        minimum:
          description: Minimum value for metric sample period.
          type: number
          format: double
        maximum:
          description: Maximum value for metric sample period.
          type: number
          format: double
        total:
          description: Total value for metric sample period.
          type: number
          format: double
        count:
          description: Number of measurements for metric sample period.
          type: integer
          format: int32
        properties:
          x-ms-client-name: extendedProperties
          description: Extended properties.
          type: object
          additionalProperties:
            type: string
      type: object
    MetricValueList:
      description: List of metric values.
      type: array
      items:
        $ref: '#/components/schemas/MetricValue'
      x-ms-identifiers: []
    MetricDefinition:
      description: Metric Definition
      type: object
      properties:
        name:
          description: Metric definition name.
          type: string
        unit:
          description: Unit of metrics.
          $ref: '#/components/schemas/MetricUnit'
        primaryAggregationType:
          description: Type of the primary aggregation.
          $ref: '#/components/schemas/MetricPrimaryAggregationType'
        metricAvailabilities:
          description: Metric availabilities.
          $ref: '#/components/schemas/MetricAvailabilityList'
    MetricUnit:
      description: The resource metric unit.
      type: string
      enum:
        - Count
        - Bytes
        - Seconds
        - CountPerSecond
        - BytesPerSecond
      x-ms-enum:
        name: MetricUnit
        modelAsString: true
        values:
          - description: The count.
            name: Count
            value: Count
          - description: The bytes.
            name: Bytes
            value: Bytes
          - description: The seconds.
            name: Seconds
            value: Seconds
          - description: The count per second.
            name: CountPerSecond
            value: CountPerSecond
          - description: The bytes per second.
            name: BytesPerSecond
            value: BytesPerSecond
    MetricPrimaryAggregationType:
      description: The primary aggregation type for resource metric.
      type: string
      enum:
        - None
        - Average
        - Total
        - Minimum
        - Maximum
        - Last
      x-ms-enum:
        name: MetricPrimaryAggregationType
        modelAsString: true
        values:
          - description: No aggregation applied to resource.
            name: None
            value: None
          - description: The average aggregation type.
            name: Average
            value: Average
          - description: The total aggregation type.
            name: Total
            value: Total
          - description: The minimum aggregation type.
            name: Minimum
            value: Minimum
          - description: The maximum aggregation type.
            name: Maximum
            value: Maximum
          - description: The last aggregation type.
            name: Last
            value: Last
    MetricAvailability:
      description: Metric Definition
      type: object
      properties:
        timeGrain:
          description: The time grain. Metrics will be available for this time grain.
          type: string
        retention:
          description: the retention. Metrics may be queried for this interval.
          type: string
    MetricAvailabilityList:
      description: List of metric definitions.
      type: array
      items:
        $ref: '#/components/schemas/MetricAvailability'
      x-ms-identifiers: []
    MetricList:
      description: List of metrics.
      properties:
        value:
          description: List of metrics.
          type: array
          items:
            $ref: '#/components/schemas/Metric'
          x-ms-identifiers: []
        nextLink:
          type: string
          description: Continuation token
      type: object
    MetricDefinitionList:
      description: List of metric definitions.
      properties:
        value:
          description: Array of metric definitions.
          type: array
          items:
            $ref: '#/components/schemas/MetricDefinition'
          x-ms-identifiers:
            - name
        nextLink:
          type: string
          description: Continuation token
      type: object
    DelegatedProviderOffer:
      description: The delegated provider offer.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties for an delegated provider.
          $ref: '#/components/schemas/DelegatedProviderOfferProperties'
        id:
          readOnly: true
          description: URI of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of resource.
          type: string
        location:
          description: Location of the resource
          type: string
        tags:
          readOnly: true
          description: List of key-value pairs.
          type: object
          additionalProperties:
            type: string
      type: object
    DelegatedProviderOfferProperties:
      description: Properties for an delegated provider.
      type: object
      properties:
        delegatedOfferId:
          description: The delegated offer identifier.
          type: string
        displayName:
          description: Display name of offer.
          type: string
        description:
          description: Description of offer.
          type: string
        externalReferenceId:
          description: External reference identifier.
          type: string
        accessibilityState:
          description: Offer accessibility state.
          $ref: '#/components/schemas/AccessibilityState'
        subscriptionCount:
          description: Current subscription count.
          type: integer
          format: int32
    AccessibilityState:
      type: string
      description: Represents the state of the offer
      enum:
        - Private
        - Public
        - Decommissioned
      x-ms-enum:
        name: AccessibilityState
        modelAsString: true
        values:
          - description: The offer or plan is private. Only an Admin can see and manage it.
            name: Private
            value: Private
          - description: The offer or plan is public. Users can see and self-subscribe to it.
            name: Public
            value: Public
          - description: The offer or plan is decommissioned. Current subscriptions can still consume it but new subscriptions cannot.
            name: Decommissioned
            value: Decommissioned
    DelegatedProviderOfferList:
      description: List of delegated provider offers.
      properties:
        value:
          description: Array of delegated provider offers.
          type: array
          items:
            $ref: '#/components/schemas/DelegatedProviderOffer'
        nextLink:
          type: string
          description: Continuation token
      type: object
    Offer:
      description: Represents an offering of services against which a subscription can be created.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Represents an offering of services against which a subscription can be created.
          $ref: '#/components/schemas/OfferProperties'
        id:
          readOnly: true
          description: URI of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of resource.
          type: string
        location:
          description: Location of the resource
          type: string
        tags:
          readOnly: true
          description: List of key-value pairs.
          type: object
          additionalProperties:
            type: string
      type: object
    OfferProperties:
      description: Represents an offering of services against which a subscription can be created.
      type: object
      properties:
        name:
          description: Name of the Offer.
          type: string
        displayName:
          description: Display name of offer.
          type: string
        description:
          description: Description of offer.
          type: string
        externalReferenceId:
          description: External reference identifier.
          type: string
        state:
          description: Offer accessibility state.
          $ref: '#/components/schemas/AccessibilityState'
        subscriptionCount:
          description: Current subscription count.
          type: integer
          format: int32
        maxSubscriptionsPerAccount:
          description: Maximum subscriptions per account.
          type: integer
          format: int32
        basePlanIds:
          description: Identifiers of the base plans that become available to the tenant immediately when a tenant subscribes to the offer.
          type: array
          items:
            type: string
        addonPlans:
          description: References to add-on plans that a tenant can optionally acquire as a part of the offer.
          type: array
          items:
            $ref: '#/components/schemas/AddonPlanDefinition'
          x-ms-identifiers:
            - planId
    AddonPlanDefinition:
      description: Contains the name of the desired plan to be linked or unlinked from an offer.
      type: object
      properties:
        planId:
          description: Plan identifier.
          type: string
        maxAcquisitionCount:
          description: Maximum number of instances that can be acquired by a single subscription. If not specified, the assumed value is 1.
          type: integer
          format: int32
    OfferList:
      description: List of offers.
      type: object
      properties:
        value:
          description: List of offers.
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        nextLink:
          type: string
          description: URI to next page.
    PlanLinkDefinition:
      description: Definition for linking and unlinking plans to offers.
      type: object
      properties:
        planName:
          description: Name of the plan.
          type: string
        planLinkType:
          description: Type of the plan link.
          $ref: '#/components/schemas/PlanLinkType'
        maxAcquisitionCount:
          description: The maximum acquisition count by subscribers
          type: integer
          format: int32
    PlanLinkType:
      description: Plan link type.
      type: string
      enum:
        - None
        - Base
        - Addon
      x-ms-enum:
        name: PlanLinkType
        modelAsString: true
    OfferDelegation:
      description: Offer delegation.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties for an offer.
          $ref: '#/components/schemas/OfferDelegationProperties'
        id:
          readOnly: true
          description: URI of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of resource.
          type: string
        location:
          description: Location of the resource
          type: string
        tags:
          readOnly: true
          description: List of key-value pairs.
          type: object
          additionalProperties:
            type: string
      type: object
    OfferDelegationProperties:
      description: Properties for an offer delegation.
      type: object
      properties:
        subscriptionId:
          description: Identifier of the subscription receiving the delegated offer.
          type: string
    OfferDelegationList:
      description: .
      properties:
        value:
          description: Array of usage aggregates.
          type: array
          items:
            $ref: '#/components/schemas/OfferDelegation'
        nextLink:
          type: string
          description: Continuation token
      type: object
  x-stackQL-resources:
    plans:
      id: azure_stack.subscriptions_admin.plans
      name: plans
      title: plans
      methods:
        list_all:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1plans?api-version=2015-11-01/get'
            operationId: Plans_ListAll
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PlanList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1plans?api-version=2015-11-01/get'
            operationId: Plans_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PlanList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1plans~1{plan}?api-version=2015-11-01/get'
            operationId: Plans_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Plan
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1plans~1{plan}?api-version=2015-11-01/put'
            operationId: Plans_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Plan
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1plans~1{plan}?api-version=2015-11-01/delete'
            operationId: Plans_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/plans/methods/list'
          - $ref: '#/components/x-stackQL-resources/plans/methods/list_all'
        insert:
          - $ref: '#/components/x-stackQL-resources/plans/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/plans/methods/delete'
    plans_metrics:
      id: azure_stack.subscriptions_admin.plans_metrics
      name: plans_metrics
      title: plans_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1plans~1{plan}~1metrics?api-version=2015-11-01/get'
            operationId: PlansMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/plans_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    plans_metric_definitions:
      id: azure_stack.subscriptions_admin.plans_metric_definitions
      name: plans_metric_definitions
      title: plans_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1plans~1{plan}~1metricDefinitions?api-version=2015-11-01/get'
            operationId: PlansMetricDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/plans_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    delegated_providers:
      id: azure_stack.subscriptions_admin.delegated_providers
      name: delegated_providers
      title: delegated_providers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1delegatedProviders?api-version=2015-11-01/get'
            operationId: DelegatedProviders_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1delegatedProviders~1{delegatedProvider}?api-version=2015-11-01/get'
            operationId: DelegatedProviders_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionDefinition
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delegated_providers/methods/get'
          - $ref: '#/components/x-stackQL-resources/delegated_providers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    directory_tenants:
      id: azure_stack.subscriptions_admin.directory_tenants
      name: directory_tenants
      title: directory_tenants
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1directoryTenants?api-version=2015-11-01/get'
            operationId: DirectoryTenants_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DirectoryTenantList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1directoryTenants~1{tenant}?api-version=2015-11-01/get'
            operationId: DirectoryTenants_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DirectoryTenant
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1directoryTenants~1{tenant}?api-version=2015-11-01/delete'
            operationId: DirectoryTenants_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1directoryTenants~1{tenant}?api-version=2015-11-01/put'
            operationId: DirectoryTenants_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DirectoryTenant
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/directory_tenants/methods/get'
          - $ref: '#/components/x-stackQL-resources/directory_tenants/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/directory_tenants/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/directory_tenants/methods/delete'
    manifests:
      id: azure_stack.subscriptions_admin.manifests
      name: manifests
      title: manifests
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1manifests?api-version=2015-11-01/get'
            operationId: Manifests_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManifestList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1manifests~1{manifestName}?api-version=2015-11-01/get'
            operationId: Manifests_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Manifest
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/manifests/methods/get'
          - $ref: '#/components/x-stackQL-resources/manifests/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: azure_stack.subscriptions_admin.locations
      name: locations
      title: locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1locations?api-version=2015-11-01/get'
            operationId: Locations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocationList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1locations~1{location}?api-version=2015-11-01/get'
            operationId: Locations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Location
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1locations~1{location}?api-version=2015-11-01/put'
            operationId: Locations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Location
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/locations/methods/create_or_update'
        update: []
        replace: []
        delete: []
    locations_operations_status:
      id: azure_stack.subscriptions_admin.locations_operations_status
      name: locations_operations_status
      title: locations_operations_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1locations~1{location}~1operationsStatus~1{operationsStatusName}?api-version=2015-11-01/get'
            operationId: LocationsOperationsStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationsStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations_operations_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    acquired_plans:
      id: azure_stack.subscriptions_admin.acquired_plans
      name: acquired_plans
      title: acquired_plans
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1subscriptions~1{targetSubscriptionId}~1acquiredPlans?api-version=2015-11-01/get'
            operationId: AcquiredPlans_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PlanAcquisitionList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1subscriptions~1{targetSubscriptionId}~1acquiredPlans~1{planAcquisitionId}?api-version=2015-11-01/get'
            operationId: AcquiredPlans_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PlanAcquisition
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1subscriptions~1{targetSubscriptionId}~1acquiredPlans~1{planAcquisitionId}?api-version=2015-11-01/delete'
            operationId: AcquiredPlans_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1subscriptions~1{targetSubscriptionId}~1acquiredPlans~1{planAcquisitionId}?api-version=2015-11-01/put'
            operationId: AcquiredPlans_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PlanAcquisition
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/acquired_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/acquired_plans/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/acquired_plans/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/acquired_plans/methods/delete'
    quotas:
      id: azure_stack.subscriptions_admin.quotas
      name: quotas
      title: quotas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1locations~1{location}~1quotas?api-version=2015-11-01/get'
            operationId: Quotas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1locations~1{location}~1quotas~1{quota}?api-version=2015-11-01/get'
            operationId: Quotas_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Quota
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/get'
          - $ref: '#/components/x-stackQL-resources/quotas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure_stack.subscriptions_admin.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Subscriptions.Admin~1operations?api-version=2015-11-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    subscriptions_encryptions:
      id: azure_stack.subscriptions_admin.subscriptions_encryptions
      name: subscriptions_encryptions
      title: subscriptions_encryptions
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1updateEncryption?api-version=2015-11-01/post'
            operationId: SubscriptionsEncryption_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    subscriptions:
      id: azure_stack.subscriptions_admin.subscriptions
      name: subscriptions
      title: subscriptions
      methods:
        restore_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1restoreData?api-version=2015-11-01/post'
            operationId: Subscriptions_RestoreData
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionList
        check_identity_health:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1checkIdentityHealth?api-version=2015-11-01/post'
            operationId: Subscriptions_CheckIdentityHealth
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IdentityHealthCheckReportDefinition
        move_subscriptions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1moveSubscriptions?api-version=2015-11-01/post'
            operationId: Subscriptions_MoveSubscriptions
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        validate_move_subscriptions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1validateMoveSubscriptions?api-version=2015-11-01/post'
            operationId: Subscriptions_ValidateMoveSubscriptions
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1subscriptions?api-version=2015-11-01/get'
            operationId: Subscriptions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionList
            objectKey: $.value
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1checkNameAvailability?api-version=2015-11-01/post'
            operationId: Subscriptions_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1subscriptions~1{targetSubscriptionId}?api-version=2015-11-01/get'
            operationId: Subscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionDefinition
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1subscriptions~1{targetSubscriptionId}?api-version=2015-11-01/put'
            operationId: Subscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionDefinition
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1subscriptions~1{targetSubscriptionId}?api-version=2015-11-01/delete'
            operationId: Subscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/delete'
    delegated_provider_offers:
      id: azure_stack.subscriptions_admin.delegated_provider_offers
      name: delegated_provider_offers
      title: delegated_provider_offers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1delegatedProviders~1{delegatedProviderSubscriptionId}~1offers?api-version=2015-11-01/get'
            operationId: DelegatedProviderOffers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedProviderOfferList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1delegatedProviders~1{delegatedProviderSubscriptionId}~1offers~1{offer}?api-version=2015-11-01/get'
            operationId: DelegatedProviderOffers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedProviderOffer
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delegated_provider_offers/methods/get'
          - $ref: '#/components/x-stackQL-resources/delegated_provider_offers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    offers:
      id: azure_stack.subscriptions_admin.offers
      name: offers
      title: offers
      methods:
        list_all:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Subscriptions.Admin~1offers?api-version=2015-11-01/get'
            operationId: Offers_ListAll
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OfferList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers?api-version=2015-11-01/get'
            operationId: Offers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OfferList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}?api-version=2015-11-01/get'
            operationId: Offers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Offer
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}?api-version=2015-11-01/put'
            operationId: Offers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Offer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}?api-version=2015-11-01/delete'
            operationId: Offers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        link:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}~1link?api-version=2015-11-01/post'
            operationId: Offers_Link
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Offer
        unlink:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}~1unlink?api-version=2015-11-01/post'
            operationId: Offers_Unlink
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Offer
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/offers/methods/get'
          - $ref: '#/components/x-stackQL-resources/offers/methods/list'
          - $ref: '#/components/x-stackQL-resources/offers/methods/list_all'
        insert:
          - $ref: '#/components/x-stackQL-resources/offers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/offers/methods/delete'
    offers_metrics:
      id: azure_stack.subscriptions_admin.offers_metrics
      name: offers_metrics
      title: offers_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}~1metrics?api-version=2015-11-01/get'
            operationId: OffersMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/offers_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    offers_metric_definitions:
      id: azure_stack.subscriptions_admin.offers_metric_definitions
      name: offers_metric_definitions
      title: offers_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}~1metricDefinitions?api-version=2015-11-01/get'
            operationId: OffersMetricDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/offers_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    offer_delegations:
      id: azure_stack.subscriptions_admin.offer_delegations
      name: offer_delegations
      title: offer_delegations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}~1offerDelegations?api-version=2015-11-01/get'
            operationId: OfferDelegations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OfferDelegationList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}~1offerDelegations~1{offerDelegationName}?api-version=2015-11-01/get'
            operationId: OfferDelegations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OfferDelegation
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}~1offerDelegations~1{offerDelegationName}?api-version=2015-11-01/put'
            operationId: OfferDelegations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OfferDelegation
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Subscriptions.Admin~1offers~1{offer}~1offerDelegations~1{offerDelegationName}?api-version=2015-11-01/delete'
            operationId: OfferDelegations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/offer_delegations/methods/get'
          - $ref: '#/components/x-stackQL-resources/offer_delegations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/offer_delegations/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/offer_delegations/methods/delete'
    vw_plans:
      id: azure_stack.subscriptions_admin.vw_plans
      name: vw_plans
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.externalReferenceId') as "external_reference_id",
              JSON_EXTRACT(properties, '$.quotaIds') as "quota_ids",
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.subscriptionCount') as "subscription_count",
              JSON_EXTRACT(properties, '$.skuIds') as "sku_ids",
              subscriptionId,
              resourceGroupName,
              plan
              FROM azure_stack.subscriptions_admin.plans
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.externalReferenceId') as "external_reference_id",
                json_extract_path_text(properties, '$.quotaIds') as "quota_ids",
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.subscriptionCount') as "subscription_count",
                json_extract_path_text(properties, '$.skuIds') as "sku_ids",
                subscriptionId,
                resourceGroupName,
                plan
                FROM azure_stack.subscriptions_admin.plans
                WHERE subscriptionId = 'replace-me';
    vw_directory_tenants:
      id: azure_stack.subscriptions_admin.vw_directory_tenants
      name: vw_directory_tenants
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.tenantId') as "tenant_id",
              subscriptionId,
              resourceGroupName,
              tenant
              FROM azure_stack.subscriptions_admin.directory_tenants
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.tenantId') as "tenant_id",
                subscriptionId,
                resourceGroupName,
                tenant
                FROM azure_stack.subscriptions_admin.directory_tenants
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
    vw_quotas:
      id: azure_stack.subscriptions_admin.vw_quotas
      name: vw_quotas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.allowCustomPortalBranding') as "allow_custom_portal_branding",
              subscriptionId,
              location,
              quota
              FROM azure_stack.subscriptions_admin.quotas
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.allowCustomPortalBranding') as "allow_custom_portal_branding",
                subscriptionId,
                location,
                quota
                FROM azure_stack.subscriptions_admin.quotas
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_delegated_provider_offers:
      id: azure_stack.subscriptions_admin.vw_delegated_provider_offers
      name: vw_delegated_provider_offers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.delegatedOfferId') as "delegated_offer_id",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.externalReferenceId') as "external_reference_id",
              JSON_EXTRACT(properties, '$.accessibilityState') as "accessibility_state",
              JSON_EXTRACT(properties, '$.subscriptionCount') as "subscription_count",
              subscriptionId,
              delegatedProviderSubscriptionId,
              offer
              FROM azure_stack.subscriptions_admin.delegated_provider_offers
              WHERE subscriptionId = 'replace-me' AND delegatedProviderSubscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.delegatedOfferId') as "delegated_offer_id",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.externalReferenceId') as "external_reference_id",
                json_extract_path_text(properties, '$.accessibilityState') as "accessibility_state",
                json_extract_path_text(properties, '$.subscriptionCount') as "subscription_count",
                subscriptionId,
                delegatedProviderSubscriptionId,
                offer
                FROM azure_stack.subscriptions_admin.delegated_provider_offers
                WHERE subscriptionId = 'replace-me' AND delegatedProviderSubscriptionId = 'replace-me';
    vw_offers:
      id: azure_stack.subscriptions_admin.vw_offers
      name: vw_offers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.externalReferenceId') as "external_reference_id",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.subscriptionCount') as "subscription_count",
              JSON_EXTRACT(properties, '$.maxSubscriptionsPerAccount') as "max_subscriptions_per_account",
              JSON_EXTRACT(properties, '$.basePlanIds') as "base_plan_ids",
              JSON_EXTRACT(properties, '$.addonPlans') as "addon_plans",
              subscriptionId,
              resourceGroupName,
              offer
              FROM azure_stack.subscriptions_admin.offers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.externalReferenceId') as "external_reference_id",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.subscriptionCount') as "subscription_count",
                json_extract_path_text(properties, '$.maxSubscriptionsPerAccount') as "max_subscriptions_per_account",
                json_extract_path_text(properties, '$.basePlanIds') as "base_plan_ids",
                json_extract_path_text(properties, '$.addonPlans') as "addon_plans",
                subscriptionId,
                resourceGroupName,
                offer
                FROM azure_stack.subscriptions_admin.offers
                WHERE subscriptionId = 'replace-me';
    vw_offer_delegations:
      id: azure_stack.subscriptions_admin.vw_offer_delegations
      name: vw_offer_delegations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.subscriptionId') as "subscription_id",
              subscriptionId,
              resourceGroupName,
              offer,
              offerDelegationName
              FROM azure_stack.subscriptions_admin.offer_delegations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND offer = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.subscriptionId') as "subscription_id",
                subscriptionId,
                resourceGroupName,
                offer,
                offerDelegationName
                FROM azure_stack.subscriptions_admin.offer_delegations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND offer = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/plans?api-version=2015-11-01:
    get:
      description: List all plans across all subscriptions.
      tags:
        - Plans
      operationId: Plans_ListAll
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans?api-version=2015-11-01:
    get:
      description: Get the list of plans under a resource group.
      tags:
        - Plans
      operationId: Plans_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans/{plan}?api-version=2015-11-01:
    get:
      description: Get the specified plan.
      tags:
        - Plans
      operationId: Plans_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/PlanParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Create or update the plan.
      tags:
        - Plans
      operationId: Plans_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/PlanParameter'
      requestBody:
        description: New plan.
        required: true
        x-ms-requestBody-name: planDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete the specified plan.
      tags:
        - Plans
      operationId: Plans_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/PlanParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans/{plan}/metrics?api-version=2015-11-01:
    get:
      description: Get the metrics of the specified plan.
      tags:
        - Plans
      operationId: PlansMetrics_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/PlanParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Plans_ListMetrics
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans/{plan}/metricDefinitions?api-version=2015-11-01:
    get:
      description: Get the metric definitions of the specified plan.
      tags:
        - Plans
      operationId: PlansMetricDefinitions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/PlanParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Plans_ListMetricDefinitions
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/delegatedProviders?api-version=2015-11-01:
    get:
      description: Get the list of delegatedProviders.
      tags:
        - DelegatedProviders
      operationId: DelegatedProviders_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/delegatedProviders/{delegatedProvider}?api-version=2015-11-01:
    get:
      description: Get the specified delegated provider.
      tags:
        - DelegatedProviders
      operationId: DelegatedProviders_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/DelegatedProviderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDefinition'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/directoryTenants?api-version=2015-11-01:
    get:
      tags:
        - DirectoryTenants
      description: Lists all the directory tenants under the current subscription and given resource group name.
      operationId: DirectoryTenants_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryTenantList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/directoryTenants/{tenant}?api-version=2015-11-01:
    get:
      description: Get a directory tenant by name.
      tags:
        - DirectoryTenants
      operationId: DirectoryTenants_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/DirectoryTenantParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryTenant'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete a directory tenant under a resource group.
      tags:
        - DirectoryTenants
      operationId: DirectoryTenants_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/DirectoryTenantParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Create or updates a directory tenant.
      tags:
        - DirectoryTenants
      operationId: DirectoryTenants_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/DirectoryTenantParameter'
      requestBody:
        description: New directory tenant properties.
        required: true
        x-ms-requestBody-name: tenantDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryTenant'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryTenant'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryTenant'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/manifests?api-version=2015-11-01:
    get:
      description: Get a list of all manifests.
      tags:
        - Manifests
      operationId: Manifests_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/manifests/{manifestName}?api-version=2015-11-01:
    get:
      description: Get the specified manifest.
      tags:
        - Manifests
      operationId: Manifests_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ManifestParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations?api-version=2015-11-01:
    get:
      description: Get a list of all AzureStack location.
      tags:
        - Locations
      operationId: Locations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations/{location}?api-version=2015-11-01:
    get:
      description: Get the specified location.
      tags:
        - Locations
      operationId: Locations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates the specified location.
      tags:
        - Locations
      operationId: Locations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The new location
        required: true
        x-ms-requestBody-name: newLocation
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations/{location}/operationsStatus/{operationsStatusName}?api-version=2015-11-01:
    get:
      description: Get the operation status.
      tags:
        - Locations
      operationId: LocationsOperationsStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationsStatusParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsStatus'
        '202':
          description: Accepted
        '204':
          description: Not Content
        '404':
          description: Not Found
          x-ms-error-response: true
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Locations_GetOperationsStatus
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/subscriptions/{targetSubscriptionId}/acquiredPlans?api-version=2015-11-01:
    get:
      description: Get a collection of all acquired plans that subscription has access to.
      tags:
        - AcquiredPlans
      operationId: AcquiredPlans_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetSubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanAcquisitionList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/subscriptions/{targetSubscriptionId}/acquiredPlans/{planAcquisitionId}?api-version=2015-11-01:
    get:
      tags:
        - AcquiredPlans
      description: Gets the specified plan acquired by a subscription consuming the offer.
      operationId: AcquiredPlans_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetSubscriptionIdParameter'
        - $ref: '#/components/parameters/PlanAcquisitionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanAcquisition'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes an acquired plan.
      tags:
        - AcquiredPlans
      operationId: AcquiredPlans_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetSubscriptionIdParameter'
        - $ref: '#/components/parameters/PlanAcquisitionIdParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - AcquiredPlans
      description: Creates an acquired plan.
      operationId: AcquiredPlans_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetSubscriptionIdParameter'
        - $ref: '#/components/parameters/PlanAcquisitionIdParameter'
      requestBody:
        description: The new acquired plan.
        required: true
        x-ms-requestBody-name: acquiredPlanDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanAcquisition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanAcquisition'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanAcquisition'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations/{location}/quotas?api-version=2015-11-01:
    get:
      tags:
        - Quotas
      description: Get the list of quotas at a location.
      operationId: Quotas_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/locations/{location}/quotas/{quota}?api-version=2015-11-01:
    get:
      description: Gets a quota by name.
      tags:
        - Quotas
      operationId: Quotas_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quota'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Subscriptions.Admin/operations?api-version=2015-11-01:
    get:
      description: Get the list of Operations.
      tags:
        - Operations
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/updateEncryption?api-version=2015-11-01:
    post:
      description: Update the encryption settings.
      tags:
        - Subscriptions
      operationId: SubscriptionsEncryption_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Subscriptions_UpdateEncryption
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/restoreData?api-version=2015-11-01:
    post:
      description: Restores the data
      tags:
        - Subscriptions
      operationId: Subscriptions_RestoreData
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/checkIdentityHealth?api-version=2015-11-01:
    post:
      description: Checks the identity health
      tags:
        - Subscriptions
      operationId: Subscriptions_CheckIdentityHealth
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityHealthCheckReportDefinition'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/moveSubscriptions?api-version=2015-11-01:
    post:
      description: Move subscriptions between delegated provider offers.
      tags:
        - Subscriptions
      operationId: Subscriptions_MoveSubscriptions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Move subscriptions parameter.
        required: true
        x-ms-requestBody-name: moveSubscriptionsDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveSubscriptionsDefinition'
      responses:
        '202':
          description: Accepted -- Move subscriptions request accepted; operation will complete asynchronously.
        '204':
          description: No Content -- The subscriptions were successfully moved to the target delegated provider offer.
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/validateMoveSubscriptions?api-version=2015-11-01:
    post:
      description: Validate that user subscriptions can be moved between delegated provider offers.
      tags:
        - Subscriptions
      operationId: Subscriptions_ValidateMoveSubscriptions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Move subscriptions parameter.
        required: true
        x-ms-requestBody-name: moveSubscriptionsDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveSubscriptionsDefinition'
      responses:
        '202':
          description: Accepted -- Validate move subscriptions request accepted; operation will complete asynchronously.
        '204':
          description: No Content -- The subscriptions can be moved to the target delegated provider offer.
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/subscriptions?api-version=2015-11-01:
    get:
      description: Get the list of subscriptions.
      tags:
        - Subscriptions
      operationId: Subscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: null
      x-ms-odata: '#/components/schemas/SubscriptionDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/checkNameAvailability?api-version=2015-11-01:
    post:
      description: Get the list of subscriptions.
      tags:
        - Subscriptions
      operationId: Subscriptions_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Check name availability parameter
        required: true
        x-ms-requestBody-name: nameAvailabilityDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/subscriptions/{targetSubscriptionId}?api-version=2015-11-01:
    get:
      description: Get a specified subscription.
      tags:
        - Subscriptions
      operationId: Subscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetSubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDefinition'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Creates or updates the specified subscription.
      tags:
        - Subscriptions
      operationId: Subscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetSubscriptionIdParameter'
      requestBody:
        description: Subscription parameter.
        required: true
        x-ms-requestBody-name: subscriptionDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDefinition'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDefinition'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete the specified subscription.
      tags:
        - Subscriptions
      operationId: Subscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetSubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/delegatedProviders/{delegatedProviderSubscriptionId}/offers?api-version=2015-11-01:
    get:
      description: Get the list of delegated provider offers.
      tags:
        - DelegatedProviderOffers
      operationId: DelegatedProviderOffers_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/DelegatedProviderSubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedProviderOfferList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/delegatedProviders/{delegatedProviderSubscriptionId}/offers/{offer}?api-version=2015-11-01:
    get:
      description: Get the specified delegated provider offer.
      tags:
        - DelegatedProviderOffers
      operationId: DelegatedProviderOffers_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/DelegatedProviderSubscriptionIdParameter'
        - $ref: '#/components/parameters/OfferParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedProviderOffer'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/offers?api-version=2015-11-01:
    get:
      description: Get the list of offers.
      tags:
        - Offers
      operationId: Offers_ListAll
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/offers?api-version=2015-11-01:
    get:
      description: Get the list of offers under a resource group.
      tags:
        - Offers
      operationId: Offers_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/offers/{offer}?api-version=2015-11-01:
    get:
      description: Get the specified offer.
      tags:
        - Offers
      operationId: Offers_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Create or update the offer.
      tags:
        - Offers
      operationId: Offers_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
      requestBody:
        description: New offer.
        required: true
        x-ms-requestBody-name: offerDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete the specified offer.
      tags:
        - Offers
      operationId: Offers_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/offers/{offer}/metrics?api-version=2015-11-01:
    get:
      description: Get the offer metrics.
      tags:
        - Offers
      operationId: OffersMetrics_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Offers_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/offers/{offer}/metricDefinitions?api-version=2015-11-01:
    get:
      description: Get the metric definitions.
      tags:
        - Offers
      operationId: OffersMetricDefinitions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Offers_ListMetricDefinitions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/offers/{offer}/link?api-version=2015-11-01:
    post:
      description: Links a plan to an offer.
      tags:
        - Offers
      operationId: Offers_Link
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
      requestBody:
        description: New plan link.
        required: true
        x-ms-requestBody-name: planLink
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanLinkDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/offers/{offer}/unlink?api-version=2015-11-01:
    post:
      description: Unlink a plan from an offer.
      tags:
        - Offers
      operationId: Offers_Unlink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
      requestBody:
        description: New plan link.
        required: true
        x-ms-requestBody-name: planLink
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanLinkDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/offers/{offer}/offerDelegations?api-version=2015-11-01:
    get:
      description: Get the list of offer delegations.
      tags:
        - OfferDelegations
      operationId: OfferDelegations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferDelegationList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/offers/{offer}/offerDelegations/{offerDelegationName}?api-version=2015-11-01:
    get:
      description: Get the specified offer delegation.
      tags:
        - OfferDelegations
      operationId: OfferDelegations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
        - $ref: '#/components/parameters/OfferDelegationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferDelegation'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Create or update the offer delegation.
      tags:
        - OfferDelegations
      operationId: OfferDelegations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
        - $ref: '#/components/parameters/OfferDelegationParameter'
      requestBody:
        description: New offer delegation parameter.
        required: true
        x-ms-requestBody-name: offerDelegationDefinition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferDelegation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferDelegation'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferDelegation'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete the specified offer delegation.
      tags:
        - OfferDelegations
      operationId: OfferDelegations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OfferParameter'
        - $ref: '#/components/parameters/OfferDelegationParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
