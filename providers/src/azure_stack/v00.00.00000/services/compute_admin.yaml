openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureStack Compute Admin Client
  description: the AzureStack Compute administrator module which provides functionality to manage compute quotas, platform images, and virtual machine extensions, as well as managed disks migration jobs to rebalance storage.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    UserSubscriptionIdParameter:
      name: userSubscriptionId
      in: query
      description: User Subscription Id which the resource belongs to.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    DiskStateParameter:
      name: status
      in: query
      description: The parameters of disk state.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    SourceSharePathParameter:
      name: sharePath
      in: query
      description: The share which the resource belongs to.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    SourceScaleUnitParameter:
      name: scaleUnit
      in: query
      description: The scale unit which the resource belongs to.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    SourceVolumeLabelParameter:
      name: volumeLabel
      in: query
      description: The volume label of the volume which the resource belongs to.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    DiskCountParameter:
      name: count
      in: query
      description: The maximum number of disks to return.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    DiskStartParameter:
      name: start
      in: query
      description: The start index of disks in query.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    DiskIdParameter:
      name: diskId
      in: path
      description: The disk guid as identity.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DiskSizeDetailParameter:
      name: showSizeDetail
      in: query
      description: Switch for whether summary or detailed disk size information is returned.
      required: false
      x-ms-parameter-location: method
      schema:
        default: false
        type: boolean
    FeatureParameter:
      name: featureName
      in: path
      description: Name of the feature.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OfferParameter:
      name: offer
      in: path
      description: Name of the offer.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SkuParameter:
      name: sku
      in: path
      description: Name of the SKU.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    MigrationJobStatusParameter:
      name: status
      in: query
      description: The parameters of disk migration job status.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    MigrationIdParameter:
      name: migrationId
      in: path
      description: The migration job guid name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TargetShareParameter:
      name: targetShare
      in: query
      description: The target share name.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TargetScaleUnitParameter:
      name: targetScaleUnit
      in: query
      description: The target scale unit name.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TargetVolumeLabelParameter:
      name: targetVolumeLabel
      in: query
      description: The target volume label.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ScaleUnitParameter:
      name: scaleUnitName
      in: path
      description: Name of the scale unit.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    PublisherParameter:
      name: publisher
      in: path
      description: Name of the publisher.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    VersionParameter:
      name: version
      in: path
      description: The version of the resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TypeParameter:
      name: type
      in: path
      description: Type of extension.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QuotaParameter:
      name: quotaName
      in: path
      description: Name of the quota.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorDefinition:
      description: Error definition.
      readOnly: true
      required:
        - message
        - code
      properties:
        code:
          description: Service specific error code which serves as the substatus for the HTTP error code.
          type: string
          minimum: 100
          maximum: 600
        message:
          description: Description of the error.
          type: string
      type: object
    DiskProperties:
      description: Managed disk properties.
      type: object
      properties:
        diskId:
          description: The disk id.
          type: string
        status:
          description: The disk status.
          $ref: '#/components/schemas/DiskState'
        sharePath:
          description: The disk share path.
          type: string
        actualSizeGB:
          description: The actual size of disk in GB.
          type: integer
          format: int64
          readOnly: true
        provisionSizeGB:
          description: The provision size of disk in GB.
          type: integer
          format: int64
          readOnly: true
        managedBy:
          description: Compute resource Uri which owns this disk.
          type: string
          readOnly: true
        userResourceId:
          description: The disk resource Uri from user view.
          type: string
          readOnly: true
        diskType:
          description: The type of the disk resource.
          $ref: '#/components/schemas/DiskResourceType'
          readOnly: true
        diskSku:
          description: the disk sku.
          $ref: '#/components/schemas/AccountType'
          readOnly: true
        creationSourceUri:
          description: The disk creation source uri.
          type: string
          readOnly: true
        creationOption:
          description: The disk creation option.
          $ref: '#/components/schemas/DiskCreationOption'
          readOnly: true
        exclusiveAllocatedSize:
          description: The exclusive allocated size for the disk.
          type: integer
          format: int64
          readOnly: true
    Disk:
      description: Managed Disk.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiskProperties'
          description: Disk properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    DiskList:
      type: object
      description: List of disks.
      properties:
        value:
          description: List of disks.
          type: array
          items:
            $ref: '#/components/schemas/Disk'
        nextLink:
          description: URI to the next page.
          type: string
    DiskState:
      description: Disk State.
      type: string
      enum:
        - Undefined
        - Unattached
        - Attached
        - Reserved
        - ActiveSAS
        - Unknown
        - All
        - Recommended
        - OfflineMigration
        - OnlineMigration
      x-ms-enum:
        name: DiskState
        modelAsString: true
    DiskResourceType:
      description: Disk resource type.
      type: string
      enum:
        - Undefined
        - Disk
        - Snapshot
        - RestorePoint
        - ManagedBlob
      x-ms-enum:
        name: DiskResourceType
        modelAsString: true
    AccountType:
      description: Disk Sku.
      type: string
      enum:
        - Standard_LRS
        - Standard_ZRS
        - Standard_GRS
        - Standard_RAGRS
        - Premium_LRS
        - StandardSSD_LRS
        - UltraSSD_LRS
      x-ms-enum:
        name: AccountType
        modelAsString: true
    DiskCreationOption:
      description: Disk creation option.
      type: string
      enum:
        - Empty
        - FromImage
        - Import
        - Copy
        - Restore
        - FromPreprovisioned
        - Undelete
        - Upload
        - RecoverFromBlob
      x-ms-enum:
        name: DiskCreationOption
        modelAsString: true
    Feature:
      description: Subscription features that can be toggled.
      properties:
        properties:
          description: Feature properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FeatureProperties'
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    FeatureProperties:
      description: Properties of features.
      type: object
      properties:
        featureName:
          description: The name of the feature.
          type: string
        globalFeatureSettings:
          description: Higher-priority global feature flags.
          $ref: '#/components/schemas/GlobalFeatureSettings'
        enabledTenantSubscriptionIds:
          description: List of subscription identifiers which have the feature enabled.
          type: array
          items:
            type: string
    GlobalFeatureSettings:
      description: Higher-priority global feature flags.
      type: object
      properties:
        globalFeatureState:
          description: The state of the global feature.
          $ref: '#/components/schemas/GlobalFeatureState'
    GlobalFeatureState:
      description: The state of the global feature.
      enum:
        - TenantSubscriptionLevel
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: GlobalFeatureState
    FeatureList:
      type: object
      description: List features.
      properties:
        value:
          description: List of features.
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        nextLink:
          description: URI to the next page.
          type: string
    TenantSubscriptionFeatureSettings:
      type: object
      description: The feature settings for the tenant subscription.
      properties:
        tenantSubscriptionId:
          description: The tenant subscription identifier.
          type: string
    PlatformImage:
      description: Platform image represents a virtual machine.
      properties:
        properties:
          description: Platform image properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PlatformImageProperties'
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    PlatformImageProperties:
      description: Properties of platform image.
      type: object
      properties:
        osDisk:
          description: Operating system used for this platform image.
          $ref: '#/components/schemas/OsDisk'
        dataDisks:
          description: Data disks used by the platform image.
          type: array
          items:
            $ref: '#/components/schemas/DataDisk'
          x-ms-identifiers:
            - lun
        details:
          description: Information about the image.
          $ref: '#/components/schemas/ImageDetails'
        provisioningState:
          description: Provisioning status of the platform image.
          $ref: '#/components/schemas/ProvisioningState'
    OsDisk:
      description: Operating system disk.
      type: object
      properties:
        osType:
          description: Operating system type.
          $ref: '#/components/schemas/OsType'
        uri:
          description: Location of the disk.
          type: string
    DataDisk:
      description: Information about datadisk.
      type: object
      properties:
        lun:
          description: Logical unit number.
          format: int32
          type: integer
        uri:
          description: Location of the disk template.
          type: string
    ImageDetails:
      description: Information about the disk image.
      type: object
      properties:
        billingPartNumber:
          description: The part number is used to bill for software costs.
          type: string
    OsType:
      description: Operating system type.
      enum:
        - Unknown
        - Windows
        - Linux
      type: string
      x-ms-enum:
        name: OsType
    PlatformImageList:
      description: List of platform images.
      type: array
      items:
        $ref: '#/components/schemas/PlatformImage'
    PlatformImageParameters:
      description: Parameters used to create a new platform image.
      properties:
        properties:
          description: Platform image properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PlatformImageProperties'
      type: object
    MigrationJobStatus:
      description: Migration job status.
      type: string
      enum:
        - Undefined
        - Running
        - Succeeded
        - Failed
        - Canceled
        - Pending
      x-ms-enum:
        name: MigrationJobStatus
        modelAsString: true
    MigrationSubTaskStatus:
      description: Migration child task status.
      type: string
      enum:
        - Undefined
        - Running
        - Succeeded
        - Failed
        - Canceled
        - Pending
        - Skipped
      x-ms-enum:
        name: MigrationSubTaskStatus
        modelAsString: true
    MigrationSubTaskProperties:
      description: Disk migration child task properties.
      type: object
      properties:
        migrationSubtaskStatus:
          description: The disk migration child task status.
          $ref: '#/components/schemas/MigrationSubTaskStatus'
          readOnly: true
        reason:
          description: The reason of task failure.
          type: string
          readOnly: true
        startTime:
          description: The task start time.
          type: string
          format: date-time
          readOnly: true
        endTime:
          description: The task end time.
          type: string
          format: date-time
          readOnly: true
        targetShare:
          description: The target share of migration task.
          type: string
          readOnly: true
        sourceShare:
          description: The source share of migration task.
          type: string
          readOnly: true
        targetDiskStateForMigration:
          description: The disk status.
          $ref: '#/components/schemas/DiskState'
          readOnly: true
        diskId:
          description: The id of disk.
          type: string
          readOnly: true
        progress:
          description: The progress of migration sub task which measures the percent of content migrated.
          type: string
          readOnly: true
    MigrationSubTaskList:
      description: List of disk migration tasks.
      type: array
      items:
        $ref: '#/components/schemas/MigrationSubTask'
      x-ms-identifiers:
        - migrationSubTaskId
    MigrationSubTask:
      description: Disk migration child task.
      properties:
        migrationSubTaskId:
          description: The id of migration child task.
          type: string
          readOnly: true
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MigrationSubTaskProperties'
          description: Disk migration child task properties.
      type: object
    DiskMigrationJobProperties:
      description: Disk migration job properties.
      type: object
      properties:
        migrationId:
          description: The disk migration id.
          type: string
        status:
          description: The current status of disk migration job.
          $ref: '#/components/schemas/MigrationJobStatus'
          readOnly: true
        subtasks:
          description: The list of child migration tasks.
          $ref: '#/components/schemas/MigrationSubTaskList'
          readOnly: true
        creationTime:
          description: The job creation time.
          type: string
          format: date-time
          readOnly: true
        startTime:
          description: The job start time.
          type: string
          format: date-time
          readOnly: true
        endTime:
          description: The job end time.
          type: string
          format: date-time
          readOnly: true
        targetShare:
          description: The target share of migration job.
          type: string
          readOnly: true
    DiskMigrationJob:
      description: Disk migration job.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiskMigrationJobProperties'
          description: Disk migration properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    DiskMigrationJobList:
      type: object
      description: List of disk migration jobs.
      properties:
        value:
          description: List of disk migration jobs.
          type: array
          items:
            $ref: '#/components/schemas/DiskMigrationJob'
        nextLink:
          description: URI to the next page.
          type: string
    DiskListInput:
      type: array
      description: List of disks.
      items:
        $ref: '#/components/schemas/Disk'
    ScaleUnit:
      description: The scale unit operator view.
      properties:
        properties:
          description: The scale unit operator view properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScaleUnitProperties'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ScaleUnitProperties:
      description: Properties for a scale unit
      type: object
      properties:
        scaleUnitName:
          description: The name of the scale unit.
          type: string
        lastUpdatedTime:
          description: The scale unit last update time (UTC).
          type: string
        nodes:
          description: The nodes of the scale unit.
          type: array
          items:
            $ref: '#/components/schemas/NodeView'
          x-ms-identifiers:
            - nodeName
    NodeView:
      description: Properties for a node
      type: object
      properties:
        nodeName:
          description: The name of the node.
          type: string
        lastUpdatedTime:
          description: The node last update time (UTC).
          type: string
        nodeHealthState:
          description: The node health state.
          enum:
            - Unknown
            - Up
            - Down
            - MaintenanceMode
          type: string
          x-ms-enum:
            name: NodeHealthState
        virtualMachines:
          description: The virtual machines on the node.
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineView'
          x-ms-identifiers:
            - vmId
    VirtualMachineView:
      description: Properties for a virtual machine
      type: object
      properties:
        vmName:
          description: The name of the virtual machine.
          type: string
        vmId:
          description: The identifier of the virtual machine.
          type: string
        subscriptionId:
          description: The identifier of the subscription.
          type: string
        resourceGroupName:
          description: The resource group name.
          type: string
        vmSize:
          description: The virtual machine size.
          type: string
        vmScaleSetName:
          description: The virtual machine scale set name.
          type: string
        lastProvisioningErrorMessage:
          description: The virtual machine last provisioning error message.
          type: string
        timeOfLastConfigurationChange:
          description: The time of last configuration change (UTC).
          type: string
        powerState:
          description: The fabric VM power state.
          enum:
            - Unknown
            - Stopped
            - Running
            - Paused
            - SavedState
            - Stopping
            - Starting
            - Pausing
            - Resuming
            - Saving
          type: string
          x-ms-enum:
            name: VmPowerState
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    CrpResource:
      description: Base resource object.
      type: object
      properties:
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      x-ms-azure-resource: true
    ProvisioningState:
      description: The provisioning state of the resource.
      enum:
        - Creating
        - Failed
        - Succeeded
        - Canceled
      type: string
      x-ms-enum:
        name: ProvisioningState
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    Display:
      description: Contains the localized display information for this particular operation or action.
      type: object
      properties:
        provider:
          description: The localized, friendly version of the resource provider name. The provider name is expected to include the name of the publisher or company responsible. The provider name format should use title case and begin with "Microsoft" for first-party services. For example, the provider name may be"Microsoft Monitoring Insights" or "Microsoft Compute."
          type: string
        resource:
          description: The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
          type: string
        operation:
          description: The localized, friendly name for the operation. Use the name as it will displayed to the user.
          type: string
        description:
          description: The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
          type: string
    OperationList:
      description: List of Operations
      type: object
      properties:
        value:
          description: Array of operations
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: URI to the next page of operations.
          type: string
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    CrpErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    VMExtension:
      description: Virtual Machine Extension Image.
      properties:
        properties:
          description: Inner properties of a Virtual Machine Extension Image.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VMExtensionProperties'
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    VMExtensionProperties:
      description: Properties of a Virtual Machine Extension Image.
      type: object
      properties:
        vmOsType:
          description: Target virtual machine operating system type necessary for deploying the extension handler.
          $ref: '#/components/schemas/OsType'
        publisher:
          description: The publisher of the VM Extension
          type: string
        computeRole:
          description: Compute role
          type: string
        vmScaleSetEnabled:
          description: Value indicating whether the extension is enabled for virtual machine scale set support.
          type: boolean
        supportMultipleExtensions:
          description: True if supports multiple extensions.
          type: boolean
        isSystemExtension:
          description: Indicates if the extension is for the system.
          type: boolean
        sourceBlob:
          description: URI to Azure or AzureStack blob.
          $ref: '#/components/schemas/AzureBlob'
        provisioningState:
          description: Provisioning state of extension.
          $ref: '#/components/schemas/ProvisioningState'
    AzureBlob:
      description: Azure or AzureStack blob information.
      type: object
      properties:
        uri:
          description: URI to Azure or AzureStack blob.
          type: string
    VMExtensionList:
      description: List of virtual machine extensions.
      type: array
      items:
        $ref: '#/components/schemas/VMExtension'
    VMExtensionParameters:
      description: Parameters used to create a new Virtual Machine Extension Image.
      properties:
        properties:
          description: Properties of a Virtual Machine Extension Image.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VMExtensionProperties'
      type: object
    Quota:
      description: Holds Compute quota information used to control resource allocation.
      properties:
        properties:
          description: Compute Quota properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/QuotaProperties'
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        type:
          readOnly: true
          description: Type of Resource.
          type: string
        location:
          description: Location of the resource.
          type: string
      type: object
    QuotaProperties:
      description: Properties for a Compute Quota
      type: object
      properties:
        availabilitySetCount:
          description: Maximum number of availability sets allowed.
          format: int32
          type: integer
          minimum: 0
        coresLimit:
          description: Maximum number of cores allowed.
          format: int32
          type: integer
          minimum: 0
        virtualMachineCount:
          description: Maximum number of virtual machines allowed.
          format: int32
          type: integer
          minimum: 0
        vmScaleSetCount:
          description: Maximum number of scale sets allowed.
          format: int32
          type: integer
          minimum: 0
        maxAllocationStandardManagedDisksAndSnapshots:
          description: Maximum number of managed disks and snapshots of type standard allowed.
          format: int32
          type: integer
          minimum: 0
        maxAllocationPremiumManagedDisksAndSnapshots:
          description: Maximum number of managed disks and snapshots of type premium allowed.
          format: int32
          type: integer
          minimum: 0
        ddagpuCount:
          description: Maximum number of dda gpus allowed.
          format: int32
          type: integer
          minimum: 0
        partitionedGpuCount:
          description: Maximum number of partitioned gpus allowed.
          format: int32
          type: integer
          minimum: 0
    QuotaList:
      description: List of Compute quotas
      type: object
      properties:
        nextLink:
          description: URI to the next page.
          type: string
        value:
          description: List of Compute quotas
          type: array
          items:
            $ref: '#/components/schemas/Quota'
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    disks:
      id: azure_stack.compute_admin.disks
      name: disks
      title: disks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1disks?api-version=2021-09-01/get'
            operationId: Disks_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1disks~1{diskId}?api-version=2021-09-01/get'
            operationId: Disks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Disk
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disks/methods/get'
          - $ref: '#/components/x-stackQL-resources/disks/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    features:
      id: azure_stack.compute_admin.features
      name: features
      title: features
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1features~1{featureName}?api-version=2020-11-01/get'
            operationId: Features_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Feature
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1features?api-version=2020-11-01/get'
            operationId: Features_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FeatureList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features/methods/get'
          - $ref: '#/components/x-stackQL-resources/features/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    global_feature_settings:
      id: azure_stack.compute_admin.global_feature_settings
      name: global_feature_settings
      title: global_feature_settings
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1features~1{featureName}~1updateGlobalFeatureSettings?api-version=2020-11-01/post'
            operationId: GlobalFeatureSettings_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure_stack.compute_admin.operations
      name: operations
      title: operations
      methods:
        enable_tenant_subscription_feature:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1features~1{featureName}~1enableTenantSubscriptionFeature?api-version=2020-11-01/post'
            operationId: Operations_EnableTenantSubscriptionFeature
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_tenant_subscription_feature:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1features~1{featureName}~1disableTenantSubscriptionFeature?api-version=2020-11-01/post'
            operationId: Operations_DisableTenantSubscriptionFeature
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Compute.Admin~1operations?api-version=2015-12-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    platform_images:
      id: azure_stack.compute_admin.platform_images
      name: platform_images
      title: platform_images
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1artifactTypes~1platformImage?api-version=2015-12-01-preview/get'
            operationId: PlatformImages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PlatformImageList
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1artifactTypes~1platformImage~1publishers~1{publisher}~1offers~1{offer}~1skus~1{sku}~1versions~1{version}?api-version=2015-12-01-preview/get'
            operationId: PlatformImages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PlatformImage
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1artifactTypes~1platformImage~1publishers~1{publisher}~1offers~1{offer}~1skus~1{sku}~1versions~1{version}?api-version=2015-12-01-preview/put'
            operationId: PlatformImages_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PlatformImage
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1artifactTypes~1platformImage~1publishers~1{publisher}~1offers~1{offer}~1skus~1{sku}~1versions~1{version}?api-version=2015-12-01-preview/delete'
            operationId: PlatformImages_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/platform_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/platform_images/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/platform_images/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/platform_images/methods/delete'
    disk_migration_jobs:
      id: azure_stack.compute_admin.disk_migration_jobs
      name: disk_migration_jobs
      title: disk_migration_jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1diskmigrationjobs?api-version=2021-09-01/get'
            operationId: DiskMigrationJobs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskMigrationJobList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1diskmigrationjobs~1{migrationId}?api-version=2021-09-01/get'
            operationId: DiskMigrationJobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskMigrationJob
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1diskmigrationjobs~1{migrationId}?api-version=2021-09-01/put'
            operationId: DiskMigrationJobs_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskMigrationJob
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1diskMigrationJobs~1{migrationId}~1cancel?api-version=2021-09-01/post'
            operationId: DiskMigrationJobs_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskMigrationJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_migration_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/disk_migration_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/disk_migration_jobs/methods/create'
        update: []
        replace: []
        delete: []
    scale_units:
      id: azure_stack.compute_admin.scale_units
      name: scale_units
      title: scale_units
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1computeScaleUnits~1{scaleUnitName}?api-version=2021-03-30/get'
            operationId: ScaleUnits_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScaleUnit
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scale_units/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vm_extensions:
      id: azure_stack.compute_admin.vm_extensions
      name: vm_extensions
      title: vm_extensions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1artifactTypes~1VMExtension~1publishers~1{publisher}~1types~1{type}~1versions~1{version}?api-version=2015-12-01-preview/get'
            operationId: VMExtensions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMExtension
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1artifactTypes~1VMExtension~1publishers~1{publisher}~1types~1{type}~1versions~1{version}?api-version=2015-12-01-preview/put'
            operationId: VMExtensions_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMExtension
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1artifactTypes~1VMExtension~1publishers~1{publisher}~1types~1{type}~1versions~1{version}?api-version=2015-12-01-preview/delete'
            operationId: VMExtensions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1artifactTypes~1VMExtension?api-version=2015-12-01-preview/get'
            operationId: VMExtensions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMExtensionList
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vm_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/vm_extensions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/vm_extensions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vm_extensions/methods/delete'
    quotas:
      id: azure_stack.compute_admin.quotas
      name: quotas
      title: quotas
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1quotas~1{quotaName}?api-version=2021-01-01/get'
            operationId: Quotas_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Quota
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1quotas~1{quotaName}?api-version=2021-01-01/put'
            operationId: Quotas_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Quota
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1quotas~1{quotaName}?api-version=2021-01-01/delete'
            operationId: Quotas_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute.Admin~1locations~1{location}~1quotas?api-version=2021-01-01/get'
            operationId: Quotas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/get'
          - $ref: '#/components/x-stackQL-resources/quotas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/delete'
    vw_disks:
      id: azure_stack.compute_admin.vw_disks
      name: vw_disks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.diskId') as "disk_id",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.sharePath') as "share_path",
              JSON_EXTRACT(properties, '$.actualSizeGB') as "actual_size_gb",
              JSON_EXTRACT(properties, '$.provisionSizeGB') as "provision_size_gb",
              JSON_EXTRACT(properties, '$.managedBy') as "managed_by",
              JSON_EXTRACT(properties, '$.userResourceId') as "user_resource_id",
              JSON_EXTRACT(properties, '$.diskType') as "disk_type",
              JSON_EXTRACT(properties, '$.diskSku') as "disk_sku",
              JSON_EXTRACT(properties, '$.creationSourceUri') as "creation_source_uri",
              JSON_EXTRACT(properties, '$.creationOption') as "creation_option",
              JSON_EXTRACT(properties, '$.exclusiveAllocatedSize') as "exclusive_allocated_size",
              subscriptionId,
              location,
              diskId
              FROM azure_stack.compute_admin.disks
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.diskId') as "disk_id",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.sharePath') as "share_path",
                json_extract_path_text(properties, '$.actualSizeGB') as "actual_size_gb",
                json_extract_path_text(properties, '$.provisionSizeGB') as "provision_size_gb",
                json_extract_path_text(properties, '$.managedBy') as "managed_by",
                json_extract_path_text(properties, '$.userResourceId') as "user_resource_id",
                json_extract_path_text(properties, '$.diskType') as "disk_type",
                json_extract_path_text(properties, '$.diskSku') as "disk_sku",
                json_extract_path_text(properties, '$.creationSourceUri') as "creation_source_uri",
                json_extract_path_text(properties, '$.creationOption') as "creation_option",
                json_extract_path_text(properties, '$.exclusiveAllocatedSize') as "exclusive_allocated_size",
                subscriptionId,
                location,
                diskId
                FROM azure_stack.compute_admin.disks
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_features:
      id: azure_stack.compute_admin.vw_features
      name: vw_features
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.featureName') as "feature_name",
              JSON_EXTRACT(properties, '$.globalFeatureSettings') as "global_feature_settings",
              JSON_EXTRACT(properties, '$.enabledTenantSubscriptionIds') as "enabled_tenant_subscription_ids",
              subscriptionId,
              location,
              featureName
              FROM azure_stack.compute_admin.features
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.featureName') as "feature_name",
                json_extract_path_text(properties, '$.globalFeatureSettings') as "global_feature_settings",
                json_extract_path_text(properties, '$.enabledTenantSubscriptionIds') as "enabled_tenant_subscription_ids",
                subscriptionId,
                location,
                featureName
                FROM azure_stack.compute_admin.features
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_platform_images:
      id: azure_stack.compute_admin.vw_platform_images
      name: vw_platform_images
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.osDisk') as "os_disk",
              JSON_EXTRACT(properties, '$.dataDisks') as "data_disks",
              JSON_EXTRACT(properties, '$.details') as "details",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              location,
              publisher,
              offer,
              sku,
              version
              FROM azure_stack.compute_admin.platform_images
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.osDisk') as "os_disk",
                json_extract_path_text(properties, '$.dataDisks') as "data_disks",
                json_extract_path_text(properties, '$.details') as "details",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                location,
                publisher,
                offer,
                sku,
                version
                FROM azure_stack.compute_admin.platform_images
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_disk_migration_jobs:
      id: azure_stack.compute_admin.vw_disk_migration_jobs
      name: vw_disk_migration_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.migrationId') as "migration_id",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.subtasks') as "subtasks",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.targetShare') as "target_share",
              subscriptionId,
              location,
              migrationId
              FROM azure_stack.compute_admin.disk_migration_jobs
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.migrationId') as "migration_id",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.subtasks') as "subtasks",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.targetShare') as "target_share",
                subscriptionId,
                location,
                migrationId
                FROM azure_stack.compute_admin.disk_migration_jobs
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_scale_units:
      id: azure_stack.compute_admin.vw_scale_units
      name: vw_scale_units
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.scaleUnitName') as "scale_unit_name",
              JSON_EXTRACT(properties, '$.lastUpdatedTime') as "last_updated_time",
              JSON_EXTRACT(properties, '$.nodes') as "nodes",
              subscriptionId,
              location,
              scaleUnitName
              FROM azure_stack.compute_admin.scale_units
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me' AND scaleUnitName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.scaleUnitName') as "scale_unit_name",
                json_extract_path_text(properties, '$.lastUpdatedTime') as "last_updated_time",
                json_extract_path_text(properties, '$.nodes') as "nodes",
                subscriptionId,
                location,
                scaleUnitName
                FROM azure_stack.compute_admin.scale_units
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me' AND scaleUnitName = 'replace-me';
    vw_vm_extensions:
      id: azure_stack.compute_admin.vw_vm_extensions
      name: vw_vm_extensions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.vmOsType') as "vm_os_type",
              JSON_EXTRACT(properties, '$.publisher') as "publisher",
              JSON_EXTRACT(properties, '$.computeRole') as "compute_role",
              JSON_EXTRACT(properties, '$.vmScaleSetEnabled') as "vm_scale_set_enabled",
              JSON_EXTRACT(properties, '$.supportMultipleExtensions') as "support_multiple_extensions",
              JSON_EXTRACT(properties, '$.isSystemExtension') as "is_system_extension",
              JSON_EXTRACT(properties, '$.sourceBlob') as "source_blob",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              location,
              publisher,
              type,
              version
              FROM azure_stack.compute_admin.vm_extensions
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.vmOsType') as "vm_os_type",
                json_extract_path_text(properties, '$.publisher') as "publisher",
                json_extract_path_text(properties, '$.computeRole') as "compute_role",
                json_extract_path_text(properties, '$.vmScaleSetEnabled') as "vm_scale_set_enabled",
                json_extract_path_text(properties, '$.supportMultipleExtensions') as "support_multiple_extensions",
                json_extract_path_text(properties, '$.isSystemExtension') as "is_system_extension",
                json_extract_path_text(properties, '$.sourceBlob') as "source_blob",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                location,
                publisher,
                type,
                version
                FROM azure_stack.compute_admin.vm_extensions
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_quotas:
      id: azure_stack.compute_admin.vw_quotas
      name: vw_quotas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.availabilitySetCount') as "availability_set_count",
              JSON_EXTRACT(properties, '$.coresLimit') as "cores_limit",
              JSON_EXTRACT(properties, '$.virtualMachineCount') as "virtual_machine_count",
              JSON_EXTRACT(properties, '$.vmScaleSetCount') as "vm_scale_set_count",
              JSON_EXTRACT(properties, '$.maxAllocationStandardManagedDisksAndSnapshots') as "max_allocation_standard_managed_disks_and_snapshots",
              JSON_EXTRACT(properties, '$.maxAllocationPremiumManagedDisksAndSnapshots') as "max_allocation_premium_managed_disks_and_snapshots",
              JSON_EXTRACT(properties, '$.ddagpuCount') as "ddagpu_count",
              JSON_EXTRACT(properties, '$.partitionedGpuCount') as "partitioned_gpu_count",
              subscriptionId,
              location,
              quotaName
              FROM azure_stack.compute_admin.quotas
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.availabilitySetCount') as "availability_set_count",
                json_extract_path_text(properties, '$.coresLimit') as "cores_limit",
                json_extract_path_text(properties, '$.virtualMachineCount') as "virtual_machine_count",
                json_extract_path_text(properties, '$.vmScaleSetCount') as "vm_scale_set_count",
                json_extract_path_text(properties, '$.maxAllocationStandardManagedDisksAndSnapshots') as "max_allocation_standard_managed_disks_and_snapshots",
                json_extract_path_text(properties, '$.maxAllocationPremiumManagedDisksAndSnapshots') as "max_allocation_premium_managed_disks_and_snapshots",
                json_extract_path_text(properties, '$.ddagpuCount') as "ddagpu_count",
                json_extract_path_text(properties, '$.partitionedGpuCount') as "partitioned_gpu_count",
                subscriptionId,
                location,
                quotaName
                FROM azure_stack.compute_admin.quotas
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/disks?api-version=2021-09-01:
    get:
      tags:
        - Disks
      operationId: Disks_List
      description: Returns a list of disks.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/UserSubscriptionIdParameter'
        - $ref: '#/components/parameters/DiskStateParameter'
        - $ref: '#/components/parameters/SourceSharePathParameter'
        - $ref: '#/components/parameters/SourceScaleUnitParameter'
        - $ref: '#/components/parameters/SourceVolumeLabelParameter'
        - $ref: '#/components/parameters/DiskCountParameter'
        - $ref: '#/components/parameters/DiskStartParameter'
      responses:
        '200':
          description: OK -- The list of disks has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/disks/{diskId}?api-version=2021-09-01:
    get:
      tags:
        - Disks
      operationId: Disks_Get
      description: Returns the disk.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/DiskIdParameter'
        - $ref: '#/components/parameters/DiskSizeDetailParameter'
      responses:
        '200':
          description: OK -- The disk has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/features/{featureName}?api-version=2020-11-01:
    get:
      tags:
        - Features
      summary: Returns the requested feature.
      description: Get an existing feature.
      operationId: Features_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/FeatureParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/features?api-version=2020-11-01:
    get:
      tags:
        - Features
      summary: Lists all features.
      description: Get a list of existing features.
      operationId: Features_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureList'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/features/{featureName}/updateGlobalFeatureSettings?api-version=2020-11-01:
    post:
      tags:
        - Features
      summary: Updates the global feature settings.
      description: Update the feature settings.
      operationId: GlobalFeatureSettings_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/FeatureParameter'
      requestBody:
        description: The global feature state to update.
        required: true
        x-ms-requestBody-name: globalFeatureSettings
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalFeatureSettings'
      responses:
        '200':
          description: OK
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
      x-ms-original-operationId: UpdateGlobalFeatureSettings
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/features/{featureName}/enableTenantSubscriptionFeature?api-version=2020-11-01:
    post:
      tags:
        - Features
      summary: Enables the requested feature in the tenant subscription.
      description: Enable the tenant subscription feature.
      operationId: Operations_EnableTenantSubscriptionFeature
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/FeatureParameter'
      requestBody:
        description: The tenant subscription feature settings to enable or disable.
        required: true
        x-ms-requestBody-name: tenantSubscriptionFeatureSettings
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantSubscriptionFeatureSettings'
      responses:
        '200':
          description: OK
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
      x-ms-original-operationId: EnableTenantSubscriptionFeature
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/features/{featureName}/disableTenantSubscriptionFeature?api-version=2020-11-01:
    post:
      tags:
        - Features
      summary: Disables the requested feature in the tenant subscription.
      description: Disable the tenant subscription feature.
      operationId: Operations_DisableTenantSubscriptionFeature
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/FeatureParameter'
      requestBody:
        description: The tenant subscription feature settings to enable or disable.
        required: true
        x-ms-requestBody-name: tenantSubscriptionFeatureSettings
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantSubscriptionFeatureSettings'
      responses:
        '200':
          description: OK
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
      x-ms-original-operationId: DisableTenantSubscriptionFeature
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/artifactTypes/platformImage?api-version=2015-12-01-preview:
    get:
      tags:
        - PlatformImages
      summary: Returns all platform images.
      description: Returns a list of all platform images.
      operationId: PlatformImages_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformImageList'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/artifactTypes/platformImage/publishers/{publisher}/offers/{offer}/skus/{sku}/versions/{version}?api-version=2015-12-01-preview:
    get:
      tags:
        - PlatformImages
      summary: Returns the requested platform image.
      description: Returns the specific platform image matching publisher, offer, skus and version.
      operationId: PlatformImages_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/PublisherParameter'
        - $ref: '#/components/parameters/OfferParameter'
        - $ref: '#/components/parameters/SkuParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformImage'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
    put:
      tags:
        - PlatformImages
      description: Creates a new platform image with given publisher, offer, skus and version.
      summary: Creates a platform image.
      operationId: PlatformImages_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/PublisherParameter'
        - $ref: '#/components/parameters/OfferParameter'
        - $ref: '#/components/parameters/SkuParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        description: New platform image.
        required: true
        x-ms-requestBody-name: newImage
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformImageParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformImage'
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformImage'
        '202':
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformImage'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - PlatformImages
      summary: Deletes a platform image matching publisher, offer, skus and version
      description: Delete a platform image
      operationId: PlatformImages_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/PublisherParameter'
        - $ref: '#/components/parameters/OfferParameter'
        - $ref: '#/components/parameters/SkuParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs?api-version=2021-09-01:
    get:
      tags:
        - DiskMigrationJobs
      operationId: DiskMigrationJobs_List
      description: Returns a list of disk migration jobs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/MigrationJobStatusParameter'
      responses:
        '200':
          description: OK -- The list of disk migration jobs has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskMigrationJobList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs/{migrationId}?api-version=2021-09-01:
    get:
      tags:
        - DiskMigrationJobs
      operationId: DiskMigrationJobs_Get
      description: Returns the requested disk migration job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/MigrationIdParameter'
      responses:
        '200':
          description: OK -- The disk migration job has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskMigrationJob'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DiskMigrationJobs
      operationId: DiskMigrationJobs_Create
      description: Create a disk migration job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/MigrationIdParameter'
        - $ref: '#/components/parameters/TargetShareParameter'
        - $ref: '#/components/parameters/TargetScaleUnitParameter'
        - $ref: '#/components/parameters/TargetVolumeLabelParameter'
      requestBody:
        description: The parameters of disk list.
        required: true
        x-ms-requestBody-name: disks
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskListInput'
      responses:
        '200':
          description: OK --  Disk migration job is created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskMigrationJob'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskMigrationJobs/{migrationId}/cancel?api-version=2021-09-01:
    post:
      tags:
        - DiskMigrationJobs
      operationId: DiskMigrationJobs_Cancel
      description: Cancel a disk migration job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/MigrationIdParameter'
      responses:
        '200':
          description: OK --  Disk migration job cancellation is called.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskMigrationJob'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/computeScaleUnits/{scaleUnitName}?api-version=2021-03-30:
    get:
      tags:
        - ScaleUnits
      summary: Returns the scale unit view.
      description: Get the scale unit view.
      operationId: ScaleUnits_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ScaleUnitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaleUnit'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
  /providers/Microsoft.Compute.Admin/operations?api-version=2015-12-01-preview:
    get:
      description: Returns the list of supported REST operations.
      tags:
        - Compute
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/artifactTypes/VMExtension/publishers/{publisher}/types/{type}/versions/{version}?api-version=2015-12-01-preview:
    get:
      tags:
        - VMExtensions
      summary: Returns requested Virtual Machine Extension Image.
      description: Returns requested Virtual Machine Extension Image matching publisher, type, version.
      operationId: VMExtensions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/PublisherParameter'
        - $ref: '#/components/parameters/TypeParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMExtension'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
    put:
      tags:
        - VMExtensions
      summary: Create a Virtual Machine Extension Image.
      description: Create a Virtual Machine Extension Image with publisher, version.
      operationId: VMExtensions_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/PublisherParameter'
        - $ref: '#/components/parameters/TypeParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        description: Virtual Machine Extension Image creation properties.
        required: true
        x-ms-requestBody-name: extension
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMExtensionParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMExtension'
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMExtension'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
    delete:
      tags:
        - VMExtensions
      summary: Deletes a Virtual Machine Extension Image.
      description: Deletes specified Virtual Machine Extension Image.
      operationId: VMExtensions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/PublisherParameter'
        - $ref: '#/components/parameters/TypeParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/artifactTypes/VMExtension?api-version=2015-12-01-preview:
    get:
      tags:
        - VMExtensions
      summary: Returns a list of all Virtual Machine Extension Images.
      description: List of all Virtual Machine Extension Images for the current location are returned.
      operationId: VMExtensions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMExtensionList'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/quotas/{quotaName}?api-version=2021-01-01:
    get:
      tags:
        - Quotas
      summary: Returns the requested Compute quota.
      description: Get an existing Compute Quota.
      operationId: Quotas_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quota'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
    put:
      tags:
        - Quotas
      description: Creates or Updates a Compute Quota with the provided quota parameters.
      summary: Creates or Updates a Compute Quota.
      operationId: Quotas_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaParameter'
      requestBody:
        description: New quota to create.
        required: true
        x-ms-requestBody-name: newQuota
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quota'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quota'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
    delete:
      tags:
        - Quotas
      summary: Deletes specified Compute quota
      description: Delete an existing Compute quota.
      operationId: Quotas_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaParameter'
      responses:
        '200':
          description: OK
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/quotas?api-version=2021-01-01:
    get:
      tags:
        - Quotas
      summary: Lists all Compute quotas.
      description: Get a list of existing Compute quotas.
      operationId: Quotas_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaList'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrpErrorResponse'
      x-ms-pageable:
        nextLinkName: null
