openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureStack HCI Client
  description: Run virtual machines and containers on-premises with an Azure Arcâ€“enabled infrastructure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ClusterNameParameter:
      name: clusterName
      in: path
      description: The name of the cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ArcSettingNameParameter:
      name: arcSettingName
      in: path
      description: The name of the proxy resource holding details of HCI ArcSetting information.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    UpdateNameParameter:
      name: updateName
      in: path
      description: The name of the Update
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    UpdateRunNameParameter:
      name: updateRunName
      in: path
      description: The name of the Update Run
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ExtensionNameParameter:
      name: extensionName
      in: path
      description: The name of the machine extension.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    Azure.ResourceManager.ResourceUriParameter:
      name: resourceUri
      in: path
      description: The fully qualified Azure Resource manager identifier of the resource.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    VirtualHardDiskNameParameter:
      name: virtualHardDiskName
      in: path
      description: Name of the virtual hard disk
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$
        maxLength: 80
        minLength: 1
        type: string
    PublisherNameParameter:
      name: publisherName
      in: path
      description: The name of the publisher available within HCI cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OfferNameParameter:
      name: offerName
      in: path
      description: The name of the offer available within HCI cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ODataExpandParameter:
      name: $expand
      in: query
      description: Specify $expand=content,contentVersion to populate additional fields related to the marketplace offer.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkInterfaceNameParameter:
      name: networkInterfaceName
      in: path
      description: Name of the network interface
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$
        maxLength: 80
        minLength: 1
        type: string
    GalleryImageNameParameter:
      name: galleryImageName
      in: path
      description: Name of the gallery image
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[a-zA-Z0-9]$
        maxLength: 80
        minLength: 1
        type: string
    LogicalNetworkNameParameter:
      name: logicalNetworkName
      in: path
      description: Name of the logical network
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[_a-zA-Z0-9]$
        maxLength: 64
        minLength: 2
        type: string
    SkuNameParameter:
      name: skuName
      in: path
      description: The name of the SKU available within HCI cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    StorageContainerNameParameter:
      name: storageContainerName
      in: path
      description: Name of the storage container
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$
        maxLength: 80
        minLength: 1
        type: string
    ResourceUriParameter:
      name: resourceUri
      in: path
      description: The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    MarketplaceGalleryImageNameParameter:
      name: marketplaceGalleryImageName
      in: path
      description: Name of the marketplace gallery image
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[a-zA-Z0-9]$
        maxLength: 80
        minLength: 1
        type: string
  schemas:
    ClusterList:
      description: List of clusters.
      type: object
      properties:
        value:
          description: List of clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    Cluster:
      description: Cluster details.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        identity:
          description: Identity of Cluster resource
          $ref: '#/components/schemas/ManagedServiceIdentity'
          x-ms-client-flatten: true
        properties:
          description: Cluster properties.
          $ref: '#/components/schemas/ClusterProperties'
          x-ms-client-flatten: true
      type: object
    ClusterPatch:
      description: Cluster details to update.
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        identity:
          description: Identity of Cluster resource
          $ref: '#/components/schemas/ManagedServiceIdentity'
          x-ms-client-flatten: true
        properties:
          description: Cluster properties.
          $ref: '#/components/schemas/ClusterPatchProperties'
          x-ms-client-flatten: true
      type: object
    ClusterProperties:
      description: Cluster properties.
      type: object
      properties:
        provisioningState:
          description: Provisioning state.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - Provisioning
            - NotSpecified
            - Creating
            - Updating
            - Deleting
            - Moving
            - Deleted
            - PartiallySucceeded
            - InProgress
            - DisableInProgress
            - Connected
            - PartiallyConnected
            - Disconnected
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
        status:
          description: Status of the cluster agent.
          type: string
          enum:
            - NotYetRegistered
            - ConnectedRecently
            - NotConnectedRecently
            - Disconnected
            - Error
            - NotSpecified
            - ValidationInProgress
            - ValidationSuccess
            - ValidationFailed
            - DeploymentInProgress
            - DeploymentFailed
            - DeploymentSuccess
          x-ms-enum:
            name: Status
            modelAsString: true
          readOnly: true
        connectivityStatus:
          description: Overall connectivity status for the cluster resource.
          type: string
          enum:
            - NotYetRegistered
            - Connected
            - NotConnectedRecently
            - PartiallyConnected
            - Disconnected
            - NotSpecified
          x-ms-enum:
            name: ConnectivityStatus
            modelAsString: true
          readOnly: true
        cloudId:
          description: Unique, immutable resource id.
          type: string
          readOnly: true
        cloudManagementEndpoint:
          description: Endpoint configured for management from the Azure portal.
          type: string
        aadClientId:
          description: App id of cluster AAD identity.
          type: string
        aadTenantId:
          description: Tenant id of cluster AAD identity.
          type: string
        aadApplicationObjectId:
          description: Object id of cluster AAD identity.
          type: string
        aadServicePrincipalObjectId:
          description: Id of cluster identity service principal.
          type: string
        softwareAssuranceProperties:
          description: Software Assurance properties of the cluster.
          $ref: '#/components/schemas/SoftwareAssuranceProperties'
        desiredProperties:
          description: Desired properties of the cluster.
          $ref: '#/components/schemas/ClusterDesiredProperties'
        reportedProperties:
          description: Properties reported by cluster agent.
          $ref: '#/components/schemas/ClusterReportedProperties'
          readOnly: true
        isolatedVmAttestationConfiguration:
          description: Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
          $ref: '#/components/schemas/IsolatedVmAttestationConfiguration'
          readOnly: true
        trialDaysRemaining:
          description: Number of days remaining in the trial period.
          type: number
          readOnly: true
        billingModel:
          description: Type of billing applied to the resource.
          type: string
          readOnly: true
        registrationTimestamp:
          description: First cluster sync timestamp.
          type: string
          format: date-time
          readOnly: true
        lastSyncTimestamp:
          description: Most recent cluster sync timestamp.
          type: string
          format: date-time
          readOnly: true
        lastBillingTimestamp:
          description: Most recent billing meter timestamp.
          type: string
          format: date-time
          readOnly: true
        serviceEndpoint:
          description: Region specific DataPath Endpoint of the cluster.
          type: string
          readOnly: true
        resourceProviderObjectId:
          description: Object id of RP Service Principal
          type: string
          readOnly: true
    ClusterPatchProperties:
      description: Cluster properties.
      type: object
      properties:
        cloudManagementEndpoint:
          description: Endpoint configured for management from the Azure portal
          type: string
        aadClientId:
          description: App id of cluster AAD identity.
          type: string
        aadTenantId:
          description: Tenant id of cluster AAD identity.
          type: string
        desiredProperties:
          description: Desired properties of the cluster.
          $ref: '#/components/schemas/ClusterDesiredProperties'
    SoftwareAssuranceProperties:
      description: Software Assurance properties of the cluster.
      type: object
      properties:
        softwareAssuranceStatus:
          description: Status of the Software Assurance for the cluster.
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: SoftwareAssuranceStatus
            modelAsString: true
          readOnly: true
        softwareAssuranceIntent:
          description: Customer Intent for Software Assurance Benefit.
          type: string
          enum:
            - Enable
            - Disable
          x-ms-enum:
            name: SoftwareAssuranceIntent
            modelAsString: true
        lastUpdated:
          description: TimeStamp denoting the latest SA benefit applicability is validated.
          type: string
          format: date-time
          readOnly: true
    IsolatedVmAttestationConfiguration:
      description: Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
      type: object
      properties:
        attestationResourceId:
          description: Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Attestation/attestationProviders
                scopes:
                  - Tenant
          readOnly: true
        relyingPartyServiceEndpoint:
          description: Region specific endpoint for relying party service.
          type: string
          readOnly: true
        attestationServiceEndpoint:
          description: Region specific endpoint for Microsoft Azure Attestation service for the cluster
          type: string
          readOnly: true
    ClusterDesiredProperties:
      description: Desired properties of the cluster.
      type: object
      properties:
        windowsServerSubscription:
          description: Desired state of Windows Server Subscription.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: WindowsServerSubscription
            modelAsString: true
        diagnosticLevel:
          description: Desired level of diagnostic data emitted by the cluster.
          type: string
          enum:
            - 'Off'
            - Basic
            - Enhanced
          x-ms-enum:
            name: DiagnosticLevel
            modelAsString: true
    ClusterReportedProperties:
      description: Properties reported by cluster agent.
      type: object
      properties:
        clusterName:
          description: Name of the on-prem cluster connected to this resource.
          type: string
          readOnly: true
        clusterId:
          description: Unique id generated by the on-prem cluster.
          type: string
          readOnly: true
        clusterVersion:
          description: Version of the cluster software.
          type: string
          readOnly: true
        nodes:
          description: List of nodes reported by the cluster.
          type: array
          items:
            $ref: '#/components/schemas/ClusterNode'
          readOnly: true
        lastUpdated:
          description: Last time the cluster reported the data.
          type: string
          format: date-time
          readOnly: true
        imdsAttestation:
          description: IMDS attestation status of the cluster.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: ImdsAttestation
            modelAsString: true
          readOnly: true
        diagnosticLevel:
          description: Level of diagnostic data emitted by the cluster.
          type: string
          enum:
            - 'Off'
            - Basic
            - Enhanced
          x-ms-enum:
            name: DiagnosticLevel
            modelAsString: true
        supportedCapabilities:
          description: Capabilities supported by the cluster.
          type: array
          readOnly: true
          items:
            type: string
        clusterType:
          description: The node type of all the nodes of the cluster.
          type: string
          enum:
            - FirstParty
            - ThirdParty
          x-ms-enum:
            name: ClusterNodeType
            modelAsString: true
          readOnly: true
        manufacturer:
          description: The manufacturer of all the nodes of the cluster.
          type: string
          readOnly: true
        oemActivation:
          description: OEM activation status of the cluster.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: OemActivation
            modelAsString: true
          readOnly: true
    ClusterNode:
      description: Cluster node details.
      type: object
      properties:
        name:
          description: Name of the cluster node.
          type: string
          readOnly: true
        id:
          description: Id of the node in the cluster.
          type: number
          readOnly: true
        windowsServerSubscription:
          description: State of Windows Server Subscription.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: WindowsServerSubscription
            modelAsString: true
          readOnly: true
        nodeType:
          description: Type of the cluster node hardware.
          type: string
          enum:
            - FirstParty
            - ThirdParty
          x-ms-enum:
            name: ClusterNodeType
            modelAsString: true
          readOnly: true
        ehcResourceId:
          description: Edge Hardware Center Resource Id
          type: string
          readOnly: true
        manufacturer:
          description: Manufacturer of the cluster node hardware.
          type: string
          readOnly: true
        model:
          description: Model name of the cluster node hardware.
          type: string
          readOnly: true
        osName:
          description: Operating system running on the cluster node.
          type: string
          readOnly: true
        osVersion:
          description: Version of the operating system running on the cluster node.
          type: string
          readOnly: true
        osDisplayVersion:
          description: Display version of the operating system running on the cluster node.
          type: string
          readOnly: true
        serialNumber:
          description: Immutable id of the cluster node.
          type: string
          readOnly: true
        coreCount:
          description: Number of physical cores on the cluster node.
          type: number
          readOnly: true
        memoryInGiB:
          description: Total available memory on the cluster node (in GiB).
          type: number
          readOnly: true
        lastLicensingTimestamp:
          description: Most recent licensing timestamp.
          type: string
          format: date-time
          readOnly: true
        oemActivation:
          description: OEM activation status of the node.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: OemActivation
            modelAsString: true
          readOnly: true
    RawCertificateData:
      type: object
      properties:
        certificates:
          type: array
          items:
            type: string
    UploadCertificateRequest:
      properties:
        properties:
          $ref: '#/components/schemas/RawCertificateData'
      type: object
    SoftwareAssuranceChangeRequestProperties:
      type: object
      properties:
        softwareAssuranceIntent:
          type: string
          enum:
            - Enable
            - Disable
          x-ms-enum:
            name: SoftwareAssuranceIntent
            modelAsString: true
    SoftwareAssuranceChangeRequest:
      properties:
        properties:
          $ref: '#/components/schemas/SoftwareAssuranceChangeRequestProperties'
      type: object
    ClusterIdentityResponse:
      description: Cluster Identity details.
      properties:
        properties:
          description: Cluster identity properties.
          $ref: '#/components/schemas/ClusterIdentityResponseProperties'
          x-ms-client-flatten: true
      type: object
    ClusterIdentityResponseProperties:
      type: object
      properties:
        aadClientId:
          type: string
        aadTenantId:
          type: string
        aadServicePrincipalObjectId:
          type: string
        aadApplicationObjectId:
          type: string
      readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: Sku details.
      properties:
        properties:
          description: SKU properties.
          $ref: '#/components/schemas/SkuProperties'
          x-ms-client-flatten: true
      type: object
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ArcSettingList:
      description: List of ArcSetting proxy resources for the HCI cluster.
      type: object
      properties:
        value:
          description: List of ArcSetting proxy resources.
          type: array
          items:
            $ref: '#/components/schemas/ArcSetting'
          readOnly: true
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    ArcSettingsPatch:
      description: ArcSetting details to update.
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        properties:
          description: ArcSettings properties.
          $ref: '#/components/schemas/ArcSettingsPatchProperties'
          x-ms-client-flatten: true
      type: object
    ArcSettingsPatchProperties:
      description: ArcSettings properties.
      type: object
      properties:
        connectivityProperties:
          description: contains connectivity related configuration for ARC resources
          type: object
          items:
            $ref: '#/components/schemas/ArcConnectivityProperties'
    ArcSetting:
      description: ArcSetting details.
      properties:
        properties:
          description: ArcSetting properties.
          $ref: '#/components/schemas/ArcSettingProperties'
          x-ms-client-flatten: true
      type: object
    ArcSettingProperties:
      description: ArcSetting properties.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the ArcSetting proxy resource.
          type: string
          enum:
            - NotSpecified
            - Error
            - Succeeded
            - Failed
            - Canceled
            - Connected
            - Disconnected
            - Deleted
            - Creating
            - Updating
            - Deleting
            - Moving
            - PartiallySucceeded
            - PartiallyConnected
            - InProgress
            - Accepted
            - Provisioning
            - DisableInProgress
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
        arcInstanceResourceGroup:
          description: The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.
          type: string
        arcApplicationClientId:
          description: App id of arc AAD identity.
          type: string
        arcApplicationTenantId:
          description: Tenant id of arc AAD identity.
          type: string
        arcServicePrincipalObjectId:
          description: Object id of arc AAD service principal.
          type: string
        arcApplicationObjectId:
          description: Object id of arc AAD identity.
          type: string
        aggregateState:
          description: Aggregate state of Arc agent across the nodes in this HCI cluster.
          type: string
          enum:
            - NotSpecified
            - Error
            - Succeeded
            - Canceled
            - Failed
            - Connected
            - Disconnected
            - Deleted
            - Creating
            - Updating
            - Deleting
            - Moving
            - PartiallySucceeded
            - PartiallyConnected
            - InProgress
            - Accepted
            - Provisioning
            - DisableInProgress
          x-ms-enum:
            name: ArcSettingAggregateState
            modelAsString: true
          readOnly: true
        perNodeDetails:
          description: State of Arc agent in each of the nodes.
          type: array
          items:
            $ref: '#/components/schemas/PerNodeState'
          readOnly: true
        connectivityProperties:
          description: contains connectivity related configuration for ARC resources
          type: object
          items:
            $ref: '#/components/schemas/ArcConnectivityProperties'
        defaultExtensions:
          description: Properties for each of the default extensions category
          type: array
          items:
            $ref: '#/components/schemas/DefaultExtensionDetails'
          x-ms-identifiers:
            - category
          readOnly: true
    PerNodeState:
      description: Status of Arc agent for a particular node in HCI Cluster.
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: Name of the Node in HCI Cluster
        arcInstance:
          description: Fully qualified resource ID for the Arc agent of this node.
          type: string
          readOnly: true
        arcNodeServicePrincipalObjectId:
          description: The service principal id of the arc for server node
          type: string
          readOnly: true
        state:
          description: State of Arc agent in this node.
          type: string
          enum:
            - NotSpecified
            - Error
            - Succeeded
            - Canceled
            - Failed
            - Connected
            - Disconnected
            - Deleted
            - Creating
            - Updating
            - Deleting
            - Moving
            - PartiallySucceeded
            - PartiallyConnected
            - InProgress
            - Accepted
            - Provisioning
            - DisableInProgress
          x-ms-enum:
            name: NodeArcState
            modelAsString: true
          readOnly: true
    DefaultExtensionDetails:
      description: Properties for a particular default extension category.
      type: object
      properties:
        category:
          description: Default extension category
          type: string
          readOnly: true
        consentTime:
          description: Consent time for extension category
          type: string
          format: date-time
          readOnly: true
    ArcConnectivityProperties:
      description: Connectivity related configuration required by arc server.
      type: object
      properties:
        enabled:
          type: boolean
          description: True indicates ARC connectivity is enabled
        serviceConfigurations:
          type: array
          description: Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.
          items:
            $ref: '#/components/schemas/ServiceConfiguration'
          x-ms-identifiers:
            - serviceName
    ServiceConfiguration:
      type: object
      description: Service configuration details
      required:
        - serviceName
        - port
      properties:
        serviceName:
          type: string
          description: Name of the service.
          enum:
            - WAC
          x-ms-enum:
            name: serviceName
            modelAsString: true
        port:
          type: integer
          format: int64
          description: The port on which service is enabled.
    PasswordCredential:
      type: object
      properties:
        secretText:
          type: string
        keyId:
          type: string
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      readOnly: true
    ArcIdentityResponse:
      description: ArcIdentity details.
      properties:
        properties:
          description: ArcIdentity properties.
          $ref: '#/components/schemas/ArcIdentityResponseProperties'
          x-ms-client-flatten: true
      type: object
    ArcIdentityResponseProperties:
      type: object
      properties:
        arcApplicationClientId:
          type: string
        arcApplicationTenantId:
          type: string
        arcServicePrincipalObjectId:
          type: string
        arcApplicationObjectId:
          type: string
      readOnly: true
    UpdateRunList:
      description: List of Update runs
      type: object
      properties:
        value:
          description: List of Update runs
          type: array
          items:
            $ref: '#/components/schemas/UpdateRun'
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    UpdateRun:
      description: Details of an Update run
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Describes Update Run Properties.
          $ref: '#/components/schemas/UpdateRunProperties'
          x-ms-client-flatten: true
      type: object
    UpdateRunProperties:
      description: Details of an Update run
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the UpdateRuns proxy resource.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - Provisioning
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
        timeStarted:
          description: Timestamp of the update run was started.
          type: string
          format: date-time
        lastUpdatedTime:
          description: Timestamp of the most recently completed step in the update run.
          type: string
          format: date-time
        duration:
          description: Duration of the update run.
          type: string
        state:
          description: State of the update run.
          type: string
          enum:
            - Unknown
            - Succeeded
            - InProgress
            - Failed
          x-ms-enum:
            name: updateRunPropertiesState
            modelAsString: true
        progress:
          description: Progress representation of the update run steps.
          $ref: '#/components/schemas/Step'
          x-ms-client-flatten: true
    Step:
      description: Progress representation of the update run steps.
      type: object
      properties:
        name:
          description: Name of the step.
          type: string
        description:
          description: More detailed description of the step.
          type: string
        errorMessage:
          description: Error message, specified if the step is in a failed state.
          type: string
        status:
          description: 'Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: ''Success'', ''Error'', ''InProgress'', and ''Unknown status''.'
          type: string
        startTimeUtc:
          description: When the step started, or empty if it has not started executing.
          type: string
          format: date-time
        endTimeUtc:
          description: When the step reached a terminal state.
          type: string
          format: date-time
        lastUpdatedTimeUtc:
          description: Completion time of this step or the last completed sub-step.
          type: string
          format: date-time
        steps:
          description: Recursive model for child steps of this step.
          type: array
          items:
            $ref: '#/components/schemas/Step'
          x-ms-identifiers:
            - name
    Extension:
      description: Details of a particular extension in HCI Cluster.
      properties:
        properties:
          description: Describes Machine Extension Properties.
          $ref: '#/components/schemas/ExtensionProperties'
          x-ms-client-flatten: true
      type: object
    ExtensionPatch:
      description: Extension Details to update
      properties:
        properties:
          description: Describes Machine Extension Properties that can be updated.
          $ref: '#/components/schemas/ExtensionPatchProperties'
          x-ms-client-flatten: true
      type: object
    ExtensionProperties:
      description: Status of Arc Extension for a particular node in HCI Cluster.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the Extension proxy resource.
          type: string
          enum:
            - NotSpecified
            - Error
            - Succeeded
            - Failed
            - Canceled
            - Connected
            - Disconnected
            - Deleted
            - Creating
            - Updating
            - Deleting
            - Moving
            - PartiallySucceeded
            - PartiallyConnected
            - InProgress
            - Accepted
            - Provisioning
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
        extensionParameters:
          description: Parameters specific to this extension type.
          $ref: '#/components/schemas/ExtensionParameters'
          x-ms-client-flatten: true
        aggregateState:
          description: Aggregate state of Arc Extensions across the nodes in this HCI cluster.
          type: string
          enum:
            - NotSpecified
            - Error
            - Succeeded
            - Canceled
            - Failed
            - Connected
            - Disconnected
            - Deleted
            - Creating
            - Updating
            - Deleting
            - Moving
            - PartiallySucceeded
            - PartiallyConnected
            - InProgress
            - Accepted
            - Provisioning
            - UpgradeFailedRollbackSucceeded
          x-ms-enum:
            name: ExtensionAggregateState
            modelAsString: true
          readOnly: true
        perNodeExtensionDetails:
          description: State of Arc Extension in each of the nodes.
          type: array
          items:
            $ref: '#/components/schemas/PerNodeExtensionState'
          readOnly: true
        managedBy:
          description: Indicates if the extension is managed by azure or the user.
          type: string
          enum:
            - Azure
            - User
          x-ms-enum:
            name: ExtensionManagedBy
            modelAsString: true
          readOnly: true
    ExtensionPatchProperties:
      description: Describes Machine Extension Properties that can be updated.
      type: object
      properties:
        extensionParameters:
          description: Describes the properties of a Machine Extension that can be updated.
          $ref: '#/components/schemas/ExtensionPatchParameters'
    ExtensionPatchParameters:
      description: Describes the properties of a Machine Extension that can be updated.
      type: object
      properties:
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler. Latest version would be used if not specified.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: Protected settings (may contain secrets).
          x-ms-secret: true
    PerNodeExtensionState:
      description: Status of Arc Extension for a particular node in HCI Cluster.
      type: object
      properties:
        name:
          description: Name of the node in HCI Cluster.
          type: string
          readOnly: true
        extension:
          description: Fully qualified resource ID for the particular Arc Extension on this node.
          type: string
          readOnly: true
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
          readOnly: true
        state:
          description: State of Arc Extension in this node.
          type: string
          enum:
            - NotSpecified
            - Error
            - Succeeded
            - Canceled
            - Failed
            - Connected
            - Disconnected
            - Deleted
            - Creating
            - Updating
            - Deleting
            - Moving
            - PartiallySucceeded
            - PartiallyConnected
            - InProgress
            - Accepted
            - Provisioning
          x-ms-enum:
            name: NodeExtensionState
            modelAsString: true
          readOnly: true
        instanceView:
          $ref: '#/components/schemas/ExtensionInstanceView'
          description: The extension instance view.
          readOnly: true
    ExtensionList:
      description: List of Extensions in HCI cluster.
      type: object
      properties:
        value:
          description: List of Extensions in HCI cluster.
          type: array
          items:
            $ref: '#/components/schemas/Extension'
          readOnly: true
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    ExtensionParameters:
      description: Describes the properties of a Machine Extension. This object mirrors the definition in HybridCompute.
      type: object
      properties:
        forceUpdateTag:
          type: string
          description: How the extension handler should be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler. Latest version would be used if not specified.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: Protected settings (may contain secrets).
          x-ms-secret: true
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
    ExtensionInstanceView:
      type: object
      description: Describes the Extension Instance View.
      properties:
        name:
          type: string
          description: The extension name.
        type:
          type: string
          description: Specifies the type of the extension; an example is "MicrosoftMonitoringAgent".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        status:
          type: object
          description: Instance view status.
          properties:
            code:
              type: string
              description: The status code.
            level:
              type: string
              description: The level code.
              enum:
                - Info
                - Warning
                - Error
              x-ms-enum:
                name: StatusLevelTypes
                modelAsString: true
            displayStatus:
              type: string
              description: The short localizable label for the status.
            message:
              type: string
              description: The detailed status message, including for alerts and error messages.
            time:
              type: string
              format: date-time
              description: The time of the status.
    ExtensionUpgradeParameters:
      type: object
      description: Describes the parameters for Extension upgrade.
      properties:
        targetVersion:
          type: string
          description: Extension Upgrade Target Version.
    DeviceConfiguration:
      type: object
      description: The device Configuration of a device.
      properties:
        nicDetails:
          type: array
          description: NIC Details of device
          items:
            $ref: '#/components/schemas/NicDetail'
          x-ms-identifiers: []
        deviceMetadata:
          type: string
          description: device metadata details.
    EdgeDevice:
      description: Edge device resource
      properties:
        properties:
          $ref: '#/components/schemas/EdgeDeviceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    EdgeDeviceListResult:
      type: object
      description: The response of a EdgeDevice list operation.
      properties:
        value:
          type: array
          description: The EdgeDevice items on this page
          items:
            $ref: '#/components/schemas/EdgeDevice'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    EdgeDeviceProperties:
      type: object
      description: Edge Device properties
      properties:
        deviceConfiguration:
          $ref: '#/components/schemas/DeviceConfiguration'
          description: Device Configuration
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of edgeDevice resource
    NicDetail:
      type: object
      description: The NIC Detail of a device.
      properties:
        adapterName:
          type: string
          description: Adapter Name of NIC
        interfaceDescription:
          type: string
          description: Interface Description of NIC
        componentId:
          type: string
          description: Component Id of NIC
        driverVersion:
          type: string
          description: Driver Version of NIC
        ip4Address:
          type: string
          description: Subnet Mask of NIC
        subnetMask:
          type: string
          description: Subnet Mask of NIC
        defaultGateway:
          type: string
          description: Default Gateway of NIC
        dnsServers:
          type: array
          description: DNS Servers for NIC
          items:
            type: string
          x-ms-identifiers: []
        defaultIsolationId:
          type: string
          description: Default Isolation of Management NIC
      required:
        - adapterName
    ProvisioningState:
      type: string
      description: The provisioning state of a resource.
      readOnly: true
      enum:
        - Succeeded
        - Failed
        - Canceled
        - NotSpecified
        - Provisioning
        - Updating
        - Deleting
        - Accepted
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: NotSpecified
            value: NotSpecified
            description: The resource provision state is not specified
          - name: Provisioning
            value: Provisioning
            description: The resource is being provisioned
          - name: Updating
            value: Updating
            description: The resource is updating
          - name: Deleting
            value: Deleting
            description: The resource is being deleted
          - name: Accepted
            value: Accepted
            description: The resource create request has been accepted
    ValidateRequest:
      type: object
      description: The validate request for Edge Device.
      properties:
        edgeDeviceIds:
          type: array
          description: Node Ids against which, current node has to be validated.
          items:
            type: string
        additionalInfo:
          type: string
          description: additional Info required for validation
      required:
        - edgeDeviceIds
    ValidateResponse:
      type: object
      description: An Accepted response with an Operation-Location header.
      properties:
        status:
          type: string
          description: edge device validation status
          readOnly: true
    VirtualHardDiskProperties:
      type: object
      properties:
        blockSizeBytes:
          type: integer
          format: int32
        diskSizeGB:
          type: integer
          format: int64
          description: Size of the disk in GB
        dynamic:
          type: boolean
          description: Boolean for enabling dynamic sizing on the virtual hard disk
        logicalSectorBytes:
          type: integer
          format: int32
        physicalSectorBytes:
          type: integer
          format: int32
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine [V1, V2]
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        diskFileFormat:
          type: string
          description: The format of the actual VHD file [vhd, vhdx]
          enum:
            - vhdx
            - vhd
          x-ms-enum:
            name: DiskFileFormat
            modelAsString: true
        provisioningState:
          type: string
          description: Provisioning state of the virtual hard disk.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - InProgress
            - Accepted
            - Deleting
            - Canceled
          x-ms-enum:
            name: ProvisioningStateEnum
            modelAsString: true
        containerId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.AzureStackHCI/storageContainers
          description: Storage ContainerID of the storage container to be used for VHD
        status:
          $ref: '#/components/schemas/VirtualHardDiskStatus'
      description: Properties under the virtual hard disk resource
    VirtualHardDiskStatus:
      type: object
      x-ms-client-flatten: true
      readOnly: true
      properties:
        errorCode:
          type: string
          description: VirtualHardDisk provisioning error code
        errorMessage:
          type: string
          description: Descriptive error message
        provisioningStatus:
          type: object
          properties:
            operationId:
              type: string
              description: The ID of the operation performed on the virtual hard disk
            status:
              type: string
              description: The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]
              enum:
                - Succeeded
                - Failed
                - InProgress
              x-ms-enum:
                name: Status
                modelAsString: true
      description: The observed state of virtual hard disks
    VirtualHardDisks:
      description: The virtual hard disk resource definition.
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualHardDiskProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    VirtualHardDisksUpdateRequest:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The virtual hard disk resource patch definition.
    VirtualHardDisksListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHardDisks'
        nextLink:
          type: string
    ComplianceAssignmentType:
      type: string
      description: Represents the compliance assignment type of a resource.
      enum:
        - Audit
        - ApplyAndAutoCorrect
      x-ms-enum:
        name: ComplianceAssignmentType
        modelAsString: true
        values:
          - name: Audit
            value: Audit
            description: Report on the state of the machine, but don't make changes.
          - name: ApplyAndAutoCorrect
            value: ApplyAndAutoCorrect
            description: Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation.
    ComplianceStatus:
      type: string
      description: Represents the compliance status of a resource.
      enum:
        - Compliant
        - NonCompliant
        - Pending
      x-ms-enum:
        name: ComplianceStatus
        modelAsString: true
        values:
          - name: Compliant
            value: Compliant
            description: The resource is compliant
          - name: NonCompliant
            value: NonCompliant
            description: The resource is non-compliant
          - name: Pending
            value: Pending
            description: The resource compliance status is pending
    SecurityComplianceStatus:
      type: object
      description: Security compliance properties of the resource
      properties:
        securedCoreCompliance:
          $ref: '#/components/schemas/ComplianceStatus'
          description: Indicates whether HCI hosts meets secured-core server requirements.
          readOnly: true
        wdacCompliance:
          $ref: '#/components/schemas/ComplianceStatus'
          description: Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.
          readOnly: true
        dataAtRestEncrypted:
          $ref: '#/components/schemas/ComplianceStatus'
          description: Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.
          readOnly: true
        dataInTransitProtected:
          $ref: '#/components/schemas/ComplianceStatus'
          description: Indicates whether HCI cluster has data in-transit protection.
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Time in UTC when compliance status was last updated.
          readOnly: true
    SecurityProperties:
      type: object
      description: Security properties of the resource
      properties:
        securedCoreComplianceAssignment:
          $ref: '#/components/schemas/ComplianceAssignmentType'
          description: Secured Core Compliance Assignment
          default: Audit
        securityComplianceStatus:
          $ref: '#/components/schemas/SecurityComplianceStatus'
          description: Security Compliance Status
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    SecuritySetting:
      description: Security settings proxy resource
      properties:
        properties:
          $ref: '#/components/schemas/SecurityProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    SecuritySettingListResult:
      type: object
      description: The response of a SecuritySetting list operation.
      properties:
        value:
          type: array
          description: The SecuritySetting items on this page
          items:
            $ref: '#/components/schemas/SecuritySetting'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    OfferList:
      description: List of Offer proxy resources for the HCI cluster.
      type: object
      properties:
        value:
          description: List of Offer proxy resources.
          type: array
          items:
            $ref: '#/components/schemas/Offer'
          readOnly: true
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    Offer:
      description: Offer details.
      properties:
        properties:
          description: Offer properties.
          $ref: '#/components/schemas/OfferProperties'
          x-ms-client-flatten: true
      type: object
    OfferProperties:
      description: Publisher properties.
      type: object
      properties:
        provisioningState:
          description: Provisioning State
          type: string
          readOnly: true
        publisherId:
          type: string
          description: Identifier of the Publisher for the offer
        content:
          type: string
          description: JSON serialized catalog content of the offer
        contentVersion:
          type: string
          description: The API version of the catalog service used to serve the catalog content
        skuMappings:
          type: array
          description: Array of SKU mappings
          items:
            $ref: '#/components/schemas/SkuMappings'
          x-ms-identifiers: []
    SkuMappings:
      description: SKU Mapping details.
      type: object
      properties:
        catalogPlanId:
          type: string
          description: Identifier of the CatalogPlan for the sku
        marketplaceSkuId:
          type: string
          description: Identifier for the sku
        marketplaceSkuVersions:
          type: array
          description: Array of SKU versions available
          items:
            type: string
    InterfaceDNSSettings:
      type: object
      properties:
        dnsServers:
          type: array
          items:
            type: string
          description: List of DNS server IP Addresses for the interface
    NetworkInterfaceProperties:
      type: object
      x-ms-client-flatten: true
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/IPConfiguration'
          description: IPConfigurations - A list of IPConfigurations of the network interface.
          x-ms-identifiers: []
        macAddress:
          type: string
          description: MacAddress - The MAC address of the network interface.
        dnsSettings:
          $ref: '#/components/schemas/InterfaceDNSSettings'
          description: DNS Settings for the interface
        provisioningState:
          type: string
          description: Provisioning state of the network interface.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - InProgress
            - Accepted
            - Deleting
            - Canceled
          x-ms-enum:
            name: ProvisioningStateEnum
            modelAsString: true
        status:
          $ref: '#/components/schemas/NetworkInterfaceStatus'
      description: Properties under the network interface resource
    NetworkInterfaceStatus:
      type: object
      x-ms-client-flatten: true
      readOnly: true
      properties:
        errorCode:
          type: string
          description: NetworkInterface provisioning error code
        errorMessage:
          type: string
          description: Descriptive error message
        provisioningStatus:
          type: object
          properties:
            operationId:
              type: string
              description: The ID of the operation performed on the network interface
            status:
              type: string
              description: The status of the operation performed on the network interface [Succeeded, Failed, InProgress]
              enum:
                - Succeeded
                - Failed
                - InProgress
              x-ms-enum:
                name: Status
                modelAsString: true
      description: The observed state of network interfaces
    IPConfiguration:
      x-ms-client-flatten: true
      description: InterfaceIPConfiguration iPConfiguration in a network interface.
      properties:
        name:
          type: string
          pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$
          x-ms-mutability:
            - create
            - read
          description: Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
        properties:
          type: object
          properties:
            gateway:
              type: string
              readOnly: true
              description: Gateway for network interface
            prefixLength:
              type: string
              readOnly: true
              description: prefixLength for network interface
            privateIPAddress:
              type: string
              description: PrivateIPAddress - Private IP address of the IP configuration.
            subnet:
              type: object
              properties:
                id:
                  type: string
                  description: ID - The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
              description: Subnet - Name of Subnet bound to the IP configuration.
          description: InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
      type: object
    NetworkInterfaces:
      description: The network interface resource definition.
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NetworkInterfaceProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkInterfacesUpdateRequest:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The network interface resource patch definition.
    NetworkInterfacesListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaces'
        nextLink:
          type: string
    GalleryImageProperties:
      type: object
      x-ms-client-flatten: true
      properties:
        containerId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.AzureStackHCI/storageContainers
          description: Storage ContainerID of the storage container to be used for gallery image
        imagePath:
          type: string
          x-ms-secret: true
          description: location of the image the gallery image should be created from
        osType:
          type: string
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
          description: Operating system type that the gallery image uses [Windows, Linux]
        cloudInitDataSource:
          type: string
          description: Datasource for the gallery image when provisioning with cloud-init [NoCloud, Azure]
          enum:
            - NoCloud
            - Azure
          x-ms-enum:
            name: CloudInitDataSource
            modelAsString: true
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine [V1, V2]
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        identifier:
          $ref: '#/components/schemas/GalleryImageIdentifier'
        version:
          $ref: '#/components/schemas/GalleryImageVersion'
        provisioningState:
          type: string
          description: Provisioning state of the gallery image.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - InProgress
            - Accepted
            - Deleting
            - Canceled
          x-ms-enum:
            name: ProvisioningStateEnum
            modelAsString: true
        status:
          $ref: '#/components/schemas/GalleryImageStatus'
      required:
        - osType
      description: Properties under the gallery image resource
    GalleryImageStatus:
      type: object
      x-ms-client-flatten: true
      readOnly: true
      properties:
        errorCode:
          type: string
          description: GalleryImage provisioning error code
        errorMessage:
          type: string
          description: Descriptive error message
        provisioningStatus:
          type: object
          properties:
            operationId:
              type: string
              description: The ID of the operation performed on the gallery image
            status:
              type: string
              description: The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]
              enum:
                - Succeeded
                - Failed
                - InProgress
              x-ms-enum:
                name: Status
                modelAsString: true
        downloadStatus:
          type: object
          properties:
            downloadSizeInMB:
              type: integer
              format: int64
              description: The downloaded sized of the image in MB
          description: The download status of the gallery image
        progressPercentage:
          type: integer
          format: int64
          description: The progress of the operation in percentage
      description: The observed state of gallery images
    GalleryImageIdentifier:
      type: object
      properties:
        publisher:
          type: string
          description: The name of the gallery image definition publisher.
        offer:
          type: string
          description: The name of the gallery image definition offer.
        sku:
          type: string
          description: The name of the gallery image definition SKU.
      required:
        - publisher
        - offer
        - sku
      description: This is the gallery image definition identifier.
    GalleryImageVersion:
      description: Specifies information about the gallery image version that you want to create or update.
      properties:
        name:
          type: string
          description: This is the version of the gallery image.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryImageVersionProperties'
      type: object
    GalleryImageVersionProperties:
      type: object
      properties:
        storageProfile:
          $ref: '#/components/schemas/GalleryImageVersionStorageProfile'
      required:
        - storageProfile
      description: Describes the properties of a gallery image version.
    GalleryImageVersionStorageProfile:
      type: object
      properties:
        osDiskImage:
          $ref: '#/components/schemas/GalleryOSDiskImage'
      description: This is the storage profile of a Gallery Image Version.
    GalleryOSDiskImage:
      description: This is the OS disk image.
      properties:
        sizeInMB:
          type: integer
          format: int64
          readOnly: true
          description: This property indicates the size of the VHD to be created.
      type: object
    GalleryDiskImage:
      type: object
      properties:
        sizeInMB:
          type: integer
          format: int64
          readOnly: true
          description: This property indicates the size of the VHD to be created.
      description: This is the disk image base class.
    GalleryImages:
      description: The gallery images resource definition.
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryImageProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    GalleryImagesUpdateRequest:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The gallery images resource patch definition.
    GalleryImagesListResult:
      type: object
      description: List of gallery images.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GalleryImages'
        nextLink:
          type: string
          description: Link to the next set of results.
          readOnly: true
    UpdateList:
      description: List of Updates
      type: object
      properties:
        value:
          description: List of Updates
          type: array
          items:
            $ref: '#/components/schemas/Update'
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    UpdatePrerequisite:
      description: If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
      type: object
      properties:
        updateType:
          description: Updatable component type.
          type: string
        version:
          description: Version of the prerequisite.
          type: string
        packageName:
          description: Friendly name of the prerequisite.
          type: string
    Update:
      description: Update details
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Update properties
          type: object
          $ref: '#/components/schemas/UpdateProperties'
          x-ms-client-flatten: true
      type: object
    UpdateProperties:
      description: Details of a singular Update in HCI Cluster
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the Updates proxy resource.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - Provisioning
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
        installedDate:
          description: Date that the update was installed.
          type: string
          format: date-time
        description:
          description: Description of the update.
          type: string
        state:
          description: State of the update as it relates to this stamp.
          type: string
          enum:
            - HasPrerequisite
            - Obsolete
            - Ready
            - NotApplicableBecauseAnotherUpdateIsInProgress
            - Preparing
            - Installing
            - Installed
            - PreparationFailed
            - InstallationFailed
            - Invalid
            - Recalled
            - Downloading
            - DownloadFailed
            - HealthChecking
            - HealthCheckFailed
            - ReadyToInstall
            - ScanInProgress
            - ScanFailed
            - AdditionalContentRequired
          x-ms-enum:
            name: state
            modelAsString: true
        prerequisites:
          description: If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
          type: array
          items:
            $ref: '#/components/schemas/UpdatePrerequisite'
          x-ms-identifiers:
            - packageName
        componentVersions:
          description: 'An array of component versions for a Solution Bundle update, and an empty array otherwise.  '
          type: array
          items:
            $ref: '#/components/schemas/PackageVersionInfo'
          x-ms-client-flatten: true
          x-ms-identifiers:
            - version
        rebootRequired:
          type: object
          $ref: '#/components/schemas/RebootRequirement'
          x-ms-client-flatten: true
        healthState:
          description: Overall health state for update-specific health checks.
          type: object
          $ref: '#/components/schemas/HealthState'
          x-ms-client-flatten: true
        healthCheckResult:
          description: An array of PrecheckResult objects.
          type: array
          items:
            $ref: '#/components/schemas/PrecheckResult'
          x-ms-client-flatten: true
        healthCheckDate:
          description: Last time the package-specific checks were run.
          type: string
          format: date-time
        packagePath:
          description: Path where the update package is available.
          type: string
        packageSizeInMb:
          description: Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.
          type: number
        displayName:
          description: Display name of the Update
          type: string
        version:
          description: Version of the update.
          type: string
        publisher:
          description: Publisher of the update package.
          type: string
        releaseLink:
          description: Link to release notes for the update.
          type: string
        availabilityType:
          description: Indicates the way the update content can be downloaded.
          type: string
          enum:
            - Local
            - Online
            - Notify
          x-ms-enum:
            name: availabilityType
            modelAsString: true
        packageType:
          description: Customer-visible type of the update.
          type: string
        additionalProperties:
          description: Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.
          type: string
        updateStateProperties:
          description: Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.
          type: object
          $ref: '#/components/schemas/UpdateStateProperties'
          x-ms-client-flatten: true
    UpdateStateProperties:
      description: Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.
      type: object
      properties:
        progressPercentage:
          description: Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.
          type: number
        notifyMessage:
          description: Brief message with instructions for updates of AvailabilityType Notify.
          type: string
    PackageVersionInfo:
      description: Current version of each updatable component.
      type: object
      properties:
        packageType:
          description: Package type
          type: string
        version:
          description: Package version
          type: string
        lastUpdated:
          description: Last time this component was updated.
          type: string
          format: date-time
    RebootRequirement:
      type: string
      enum:
        - Unknown
        - 'True'
        - 'False'
      x-ms-enum:
        name: RebootRequirement
        modelAsString: true
    HealthState:
      type: string
      enum:
        - Unknown
        - Success
        - Failure
        - Warning
        - Error
        - InProgress
      x-ms-enum:
        name: HealthState
        modelAsString: true
    PrecheckResult:
      type: object
      properties:
        name:
          description: Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.
          type: string
        displayName:
          description: The health check DisplayName localized of the individual test executed.
          type: string
        tags:
          description: Key-value pairs that allow grouping/filtering individual tests.
          type: object
          properties:
            key:
              description: Key that allow grouping/filtering individual tests.
              type: string
            value:
              description: Value of the key that allow grouping/filtering individual tests.
              type: string
        title:
          description: User-facing name; one or more sentences indicating the direct issue.
          type: string
        status:
          description: The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed or failed.
          type: string
          enum:
            - Succeeded
            - Failed
            - InProgress
          x-ms-enum:
            name: status
            modelAsString: true
        severity:
          description: Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical is the only update-blocking severity.
          type: string
          enum:
            - Critical
            - Warning
            - Informational
            - Hidden
          x-ms-enum:
            name: severity
            modelAsString: true
        description:
          description: Detailed overview of the issue and what impact the issue has on the stamp.
          type: string
        remediation:
          description: Set of steps that can be taken to resolve the issue found.
          type: string
        targetResourceID:
          description: The unique identifier for the affected resource (such as a node or drive).
          type: string
        targetResourceName:
          description: The name of the affected resource.
          type: string
        timestamp:
          description: The Time in which the HealthCheck was called.
          type: string
          format: date-time
        additionalData:
          description: Property bag of key value pairs for additional information.
          type: string
        healthCheckSource:
          description: The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).
          type: string
    PublisherList:
      description: List of Publisher proxy resources for the HCI cluster.
      type: object
      properties:
        value:
          description: List of Publisher proxy resources.
          type: array
          items:
            $ref: '#/components/schemas/Publisher'
          readOnly: true
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    Publisher:
      description: Publisher details.
      properties:
        properties:
          description: Publisher properties.
          $ref: '#/components/schemas/PublisherProperties'
          x-ms-client-flatten: true
      type: object
    PublisherProperties:
      description: Publisher properties.
      type: object
      properties:
        provisioningState:
          description: Provisioning State
          type: string
          readOnly: true
    ExtendedLocationType:
      type: string
      description: The type of extendedLocation.
      enum:
        - CustomLocation
      x-ms-enum:
        name: ExtendedLocationTypes
        modelAsString: true
    ExtendedLocation:
      description: The complex type of the extended location.
      type: object
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: The type of the extended location.
    LogicalNetworkProperties:
      type: object
      x-ms-client-flatten: true
      properties:
        dhcpOptions:
          type: object
          description: DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options.
          properties:
            dnsServers:
              type: array
              items:
                type: string
              description: The list of DNS servers IP addresses.
        subnets:
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: Subnet - list of subnets under the logical network
          x-ms-identifiers: []
        provisioningState:
          type: string
          description: Provisioning state of the logical network.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - InProgress
            - Accepted
            - Deleting
            - Canceled
          x-ms-enum:
            name: ProvisioningStateEnum
            modelAsString: true
        vmSwitchName:
          type: string
          description: name of the network switch to be used for VMs
        status:
          $ref: '#/components/schemas/LogicalNetworkStatus'
      description: Properties under the logical network resource
    LogicalNetworkStatus:
      type: object
      x-ms-client-flatten: true
      readOnly: true
      properties:
        errorCode:
          type: string
          description: LogicalNetwork provisioning error code
        errorMessage:
          type: string
          description: Descriptive error message
        provisioningStatus:
          type: object
          properties:
            operationId:
              type: string
              description: The ID of the operation performed on the logical network
            status:
              type: string
              description: The status of the operation performed on the logical network [Succeeded, Failed, InProgress]
              enum:
                - Succeeded
                - Failed
                - InProgress
              x-ms-enum:
                name: Status
                modelAsString: true
      description: The observed state of logical networks
    IPPoolInfo:
      type: object
      properties:
        used:
          type: string
          readOnly: true
          description: Number of IP addresses allocated from the IP Pool
        available:
          type: string
          readOnly: true
          description: Number of IP addresses available in the IP Pool
    IPPool:
      type: object
      properties:
        name:
          type: string
          description: Name of the IP-Pool
        ipPoolType:
          type: string
          enum:
            - vm
            - vippool
          x-ms-enum:
            name: IPPoolTypeEnum
            modelAsString: false
          description: Type of the IP Pool [vm, vippool]
        start:
          type: string
          description: Start of the IP address pool
        end:
          type: string
          description: End of the IP address pool
        info:
          $ref: '#/components/schemas/IPPoolInfo'
    RoutePropertiesFormat:
      type: object
      properties:
        addressPrefix:
          type: string
          description: The destination CIDR to which the route applies.
        nextHopIpAddress:
          type: string
          description: The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
      description: RoutePropertiesFormat - Route resource.
    Route:
      description: Route - Route resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoutePropertiesFormat'
          description: Properties of the route.
        name:
          type: string
          pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$
          description: Name - name of the subnet
      type: object
    RouteTablePropertiesFormat:
      type: object
      properties:
        routes:
          type: array
          items:
            $ref: '#/components/schemas/Route'
          description: Collection of routes contained within a route table.
          x-ms-identifiers: []
      description: RouteTablePropertiesFormat - Route Table resource.
    RouteTable:
      description: Route table resource.
      properties:
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RouteTablePropertiesFormat'
          description: Properties of the route table.
      type: object
    SubnetPropertiesFormat:
      type: object
      properties:
        addressPrefix:
          type: string
          description: 'The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6.'
        addressPrefixes:
          type: array
          items:
            type: string
          description: List of address prefixes for the subnet.
        ipAllocationMethod:
          type: string
          description: 'IPAllocationMethod - The IP address allocation method. Possible values include: ''Static'', ''Dynamic'''
          enum:
            - Dynamic
            - Static
          x-ms-enum:
            name: IpAllocationMethodEnum
            modelAsString: true
        ipConfigurationReferences:
          type: array
          items:
            type: object
            properties:
              ID:
                type: string
                description: IPConfigurationID
            description: IPConfigurationReference - Describes a IPConfiguration under the virtual network
          x-ms-identifiers: []
          description: IPConfigurationReferences - list of IPConfigurationReferences
        routeTable:
          type: object
          $ref: '#/components/schemas/RouteTable'
        ipPools:
          type: array
          description: network associated pool of IP Addresses
          items:
            $ref: '#/components/schemas/IPPool'
          x-ms-identifiers: []
        vlan:
          type: integer
          format: int32
          description: Vlan to use for the subnet
      description: Properties of the subnet.
    Subnet:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SubnetPropertiesFormat'
          description: Properties of the subnet.
        name:
          type: string
          pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$
          description: Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
      type: object
    LogicalNetworks:
      description: The logical network resource definition.
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LogicalNetworkProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    LogicalNetworksUpdateRequest:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The logical network resource patch definition.
    LogicalNetworksListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LogicalNetworks'
        nextLink:
          type: string
    UpdateSummariesList:
      description: List of Update Summaries
      type: object
      properties:
        value:
          description: List of Update Summaries
          type: array
          items:
            $ref: '#/components/schemas/UpdateSummaries'
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    UpdateSummaries:
      description: Get the update summaries for the cluster
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Update summaries properties
          type: object
          $ref: '#/components/schemas/UpdateSummariesProperties'
          x-ms-client-flatten: true
      type: object
    UpdateSummariesProperties:
      description: Properties of Update summaries
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the UpdateSummaries proxy resource.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - Provisioning
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
        oemFamily:
          description: OEM family name.
          type: string
        hardwareModel:
          description: Name of the hardware model.
          type: string
        packageVersions:
          description: Current version of each updatable component.
          type: array
          items:
            $ref: '#/components/schemas/PackageVersionInfo'
          x-ms-client-flatten: true
          x-ms-identifiers:
            - version
        currentVersion:
          description: Current Solution Bundle version of the stamp.
          type: string
        lastUpdated:
          description: Last time an update installation completed successfully.
          type: string
          format: date-time
        lastChecked:
          description: Last time the update service successfully checked for updates
          type: string
          format: date-time
        healthState:
          description: Overall health state for update-specific health checks.
          type: object
          $ref: '#/components/schemas/HealthState'
          x-ms-client-flatten: true
        healthCheckResult:
          description: An array of pre-check result objects.
          type: array
          items:
            $ref: '#/components/schemas/PrecheckResult'
          x-ms-client-flatten: true
          x-ms-identifiers:
            - name
        healthCheckDate:
          description: Last time the package-specific checks were run.
          type: string
          format: date-time
        state:
          description: Overall update state of the stamp.
          type: string
          enum:
            - Unknown
            - AppliedSuccessfully
            - UpdateAvailable
            - UpdateInProgress
            - UpdateFailed
            - NeedsAttention
            - PreparationInProgress
            - PreparationFailed
          x-ms-enum:
            name: updateSummariesPropertiesState
            modelAsString: true
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    SkuList:
      description: List of SKU proxy resources for the HCI cluster.
      type: object
      properties:
        value:
          description: List of SKU proxy resources.
          type: array
          items:
            $ref: '#/components/schemas/Sku'
          readOnly: true
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    SkuProperties:
      description: SKU properties.
      type: object
      properties:
        provisioningState:
          description: Provisioning State
          type: string
          readOnly: true
        publisherId:
          type: string
          description: Identifier of the Publisher for the offer
        offerId:
          type: string
          description: Identifier of the Offer for the sku
        content:
          type: string
          description: JSON serialized catalog content of the sku offer
        contentVersion:
          type: string
          description: The API version of the catalog service used to serve the catalog content
        skuMappings:
          type: array
          description: Array of SKU mappings
          items:
            $ref: '#/components/schemas/SkuMappings'
          x-ms-identifiers: []
    StorageContainerProperties:
      type: object
      x-ms-client-flatten: true
      properties:
        path:
          type: string
          description: Path of the storage container on the disk
        provisioningState:
          type: string
          description: Provisioning state of the storage container.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - InProgress
            - Accepted
            - Deleting
            - Canceled
          x-ms-enum:
            name: ProvisioningStateEnum
            modelAsString: true
        status:
          $ref: '#/components/schemas/StorageContainerStatus'
      required:
        - path
      description: Properties under the storage container resource
    StorageContainerStatus:
      type: object
      x-ms-client-flatten: true
      readOnly: true
      properties:
        errorCode:
          type: string
          description: StorageContainer provisioning error code
        errorMessage:
          type: string
          description: Descriptive error message
        availableSizeMB:
          type: integer
          format: int64
          description: Amount of space available on the disk in MB
        containerSizeMB:
          type: integer
          format: int64
          description: Total size of the disk in MB
        provisioningStatus:
          type: object
          properties:
            operationId:
              type: string
              description: The ID of the operation performed on the storage container
            status:
              type: string
              description: The status of the operation performed on the storage container [Succeeded, Failed, InProgress]
              enum:
                - Succeeded
                - Failed
                - InProgress
              x-ms-enum:
                name: Status
                modelAsString: true
      description: The observed state of storage containers
    StorageContainers:
      description: The storage container resource definition.
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageContainerProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StorageContainersUpdateRequest:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The storage container resource patch definition.
    StorageContainersListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StorageContainers'
        nextLink:
          type: string
    VirtualMachineInstanceProperties:
      type: object
      x-ms-client-flatten: true
      properties:
        hardwareProfile:
          type: object
          properties:
            vmSize:
              type: string
              enum:
                - Default
                - Standard_A2_v2
                - Standard_A4_v2
                - Standard_D2s_v3
                - Standard_D4s_v3
                - Standard_D8s_v3
                - Standard_D16s_v3
                - Standard_D32s_v3
                - Standard_DS2_v2
                - Standard_DS3_v2
                - Standard_DS4_v2
                - Standard_DS5_v2
                - Standard_DS13_v2
                - Standard_K8S_v1
                - Standard_K8S2_v1
                - Standard_K8S3_v1
                - Standard_K8S4_v1
                - Standard_NK6
                - Standard_NK12
                - Standard_NV6
                - Standard_NV12
                - Standard_K8S5_v1
                - Custom
              default: Default
              x-ms-enum:
                name: VmSizeEnum
                modelAsString: true
            processors:
              type: integer
              format: int32
              description: number of processors for the virtual machine instance
            memoryMB:
              type: integer
              format: int64
              description: RAM in MB for the virtual machine instance
            dynamicMemoryConfig:
              type: object
              properties:
                maximumMemoryMB:
                  type: integer
                  format: int64
                minimumMemoryMB:
                  type: integer
                  format: int64
                targetMemoryBuffer:
                  type: integer
                  description: Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
                  format: int32
          description: HardwareProfile - Specifies the hardware settings for the virtual machine instance.
        networkProfile:
          type: object
          properties:
            networkInterfaces:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: ID - Resource Id of the network interface
              description: NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
          description: NetworkProfile - describes the network configuration the virtual machine instance
        osProfile:
          type: object
          properties:
            adminPassword:
              type: string
              x-ms-secret: true
              description: AdminPassword - admin password
              x-ms-mutability:
                - create
            adminUsername:
              type: string
              description: AdminUsername - admin username
            computerName:
              type: string
              description: ComputerName - name of the compute
            linuxConfiguration:
              type: object
              properties:
                disablePasswordAuthentication:
                  type: boolean
                  description: DisablePasswordAuthentication - whether password authentication should be disabled
                ssh:
                  $ref: '#/components/schemas/SshConfiguration'
                  description: Specifies the ssh key configuration for a Linux OS.
                provisionVMAgent:
                  type: boolean
                  default: true
                  description: Usedâ€¯to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
                provisionVMConfigAgent:
                  type: boolean
                  default: true
                  description: Usedâ€¯to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
              description: LinuxConfiguration - linux specific configuration values for the virtual machine instance
            windowsConfiguration:
              type: object
              properties:
                enableAutomaticUpdates:
                  type: boolean
                  description: Whether to EnableAutomaticUpdates on the machine
                ssh:
                  $ref: '#/components/schemas/SshConfiguration'
                  description: Specifies the ssh key configuration for Windows OS.
                timeZone:
                  type: string
                  description: TimeZone for the virtual machine instance
                provisionVMAgent:
                  type: boolean
                  default: true
                  description: Usedâ€¯to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
                provisionVMConfigAgent:
                  type: boolean
                  default: true
                  description: Usedâ€¯to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
              description: 'Windows Configuration for the virtual machine instance '
          description: OsProfile - describes the configuration of the operating system and sets login data
        securityProfile:
          type: object
          properties:
            enableTPM:
              type: boolean
              default: false
            uefiSettings:
              type: object
              properties:
                secureBootEnabled:
                  type: boolean
                  default: false
                  description: Specifies whether secure boot should be enabled on the virtual machine instance.
            securityType:
              type: string
              description: Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.
              enum:
                - TrustedLaunch
                - ConfidentialVM
              x-ms-enum:
                name: SecurityTypes
                modelAsString: true
          description: SecurityProfile - Specifies the security settings for the virtual machine instance.
        storageProfile:
          type: object
          properties:
            dataDisks:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Resource ID of the data disk
              description: adds data disks to the virtual machine instance
            imageReference:
              type: object
              properties:
                id:
                  type: string
                  x-ms-mutability:
                    - create
                    - read
                  description: Resource ID of the image
              description: Which Image to use for the virtual machine instance
            osDisk:
              type: object
              properties:
                id:
                  type: string
                  description: Resource ID of the OS disk
                osType:
                  type: string
                  description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**'
                  enum:
                    - Linux
                    - Windows
                  x-ms-enum:
                    name: OperatingSystemTypes
                    modelAsString: false
              description: VHD to attach as OS disk
            vmConfigStoragePathId:
              type: string
              format: arm-id
              x-ms-arm-id-details:
                allowedResources:
                  - type: Microsoft.AzureStackHCI/storageContainers
              description: Id of the storage container that hosts the VM configuration file
          description: StorageProfile - contains information about the disks and storage information for the virtual machine instance
        httpProxyConfig:
          description: HTTP Proxy configuration for the VM.
          $ref: '#/components/schemas/HttpProxyConfiguration'
        provisioningState:
          type: string
          description: Provisioning state of the virtual machine instance.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - InProgress
            - Accepted
            - Deleting
            - Canceled
          x-ms-enum:
            name: ProvisioningStateEnum
            modelAsString: true
        instanceView:
          $ref: '#/components/schemas/VirtualMachineInstanceView'
          readOnly: true
          description: The virtual machine instance view.
        status:
          $ref: '#/components/schemas/VirtualMachineInstanceStatus'
        guestAgentInstallStatus:
          description: Guest agent install status.
          $ref: '#/components/schemas/GuestAgentInstallStatus'
        vmId:
          description: Unique identifier for the vm resource.
          type: string
          readOnly: true
        resourceUid:
          description: Unique identifier defined by ARC to identify the guest of the VM.
          type: string
      description: Properties under the virtual machine instance resource
    SshPublicKey:
      type: object
      properties:
        path:
          type: string
          description: 'Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys'
        keyData:
          type: string
          description: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
      description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
    SshConfiguration:
      type: object
      properties:
        publicKeys:
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKey'
          x-ms-identifiers:
            - path
          description: The list of SSH public keys used to authenticate with linux based VMs.
      description: SSH configuration for Linux based VMs running on Azure
    VirtualMachineInstanceStatus:
      type: object
      x-ms-client-flatten: true
      readOnly: true
      properties:
        errorCode:
          type: string
          description: VirtualMachine provisioning error code
        errorMessage:
          type: string
          description: Descriptive error message
        powerState:
          type: string
          description: The power state of the virtual machine instance
          enum:
            - Deallocated
            - Deallocating
            - Running
            - Starting
            - Stopped
            - Stopping
            - Unknown
          x-ms-enum:
            name: PowerStateEnum
            modelAsString: true
        provisioningStatus:
          type: object
          properties:
            operationId:
              type: string
              description: The ID of the operation performed on the virtual machine instance
            status:
              type: string
              description: The status of the operation performed on the virtual machine instance [Succeeded, Failed, InProgress]
              enum:
                - Succeeded
                - Failed
                - InProgress
              x-ms-enum:
                name: Status
                modelAsString: true
      description: The observed state of virtual machine instances
    VirtualMachineInstance:
      x-ms-client-flatten: true
      x-ms-azure-resource: true
      description: The virtual machine instance resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineInstanceProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        identity:
          $ref: '#/components/schemas/Identity'
      type: object
    VirtualMachineInstanceView:
      type: object
      properties:
        vmAgent:
          $ref: '#/components/schemas/VirtualMachineConfigAgentInstanceView'
          description: The VM Config Agent running on the virtual machine.
      description: The instance view of a virtual machine.
    VirtualMachineConfigAgentInstanceView:
      type: object
      properties:
        vmConfigAgentVersion:
          type: string
          description: The VM Config Agent full version.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of the VM Config Agent running on the virtual machine.
    InstanceViewStatus:
      type: object
      properties:
        code:
          type: string
          description: The status code.
        level:
          type: string
          description: The level code.
          enum:
            - Info
            - Warning
            - Error
          x-ms-enum:
            name: StatusLevelTypes
            modelAsString: true
        displayStatus:
          type: string
          description: The short localizable label for the status.
        message:
          type: string
          description: The detailed status message, including for alerts and error messages.
        time:
          type: string
          format: date-time
          description: The time of the status.
      description: Instance view status.
    HardwareProfileUpdate:
      type: object
      properties:
        vmSize:
          type: string
          enum:
            - Default
            - Standard_A2_v2
            - Standard_A4_v2
            - Standard_D2s_v3
            - Standard_D4s_v3
            - Standard_D8s_v3
            - Standard_D16s_v3
            - Standard_D32s_v3
            - Standard_DS2_v2
            - Standard_DS3_v2
            - Standard_DS4_v2
            - Standard_DS5_v2
            - Standard_DS13_v2
            - Standard_K8S_v1
            - Standard_K8S2_v1
            - Standard_K8S3_v1
            - Standard_K8S4_v1
            - Standard_NK6
            - Standard_NK12
            - Standard_NV6
            - Standard_NV12
            - Standard_K8S5_v1
            - Custom
          default: Default
          x-ms-enum:
            name: VmSizeEnum
            modelAsString: true
        processors:
          type: integer
          format: int32
          description: number of processors for the virtual machine instance
        memoryMB:
          type: integer
          format: int64
          description: RAM in MB for the virtual machine instance
      description: HardwareProfile - Specifies the hardware settings for the virtual machine instance.
    NetworkProfileUpdate:
      type: object
      properties:
        networkInterfaces:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID - Resource ID of the network interface
          description: NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
      description: NetworkProfile - describes the network update configuration the virtual machine instance
    StorageProfileUpdate:
      type: object
      properties:
        dataDisks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
          description: adds data disks to the virtual machine instance for the update call
    OsProfileUpdate:
      type: object
      properties:
        computerName:
          type: string
          description: ComputerName - name of the computer
        linuxConfiguration:
          type: object
          properties:
            provisionVMAgent:
              type: boolean
              description: Usedâ€¯to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
            provisionVMConfigAgent:
              type: boolean
              description: Usedâ€¯to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
        windowsConfiguration:
          type: object
          properties:
            provisionVMAgent:
              type: boolean
              description: Usedâ€¯to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
            provisionVMConfigAgent:
              type: boolean
              description: Usedâ€¯to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
      description: OsProfile - describes the update configuration of the operating system
    VirtualMachineInstanceUpdateProperties:
      description: Defines the resource properties for the update.
      type: object
      properties:
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfileUpdate'
        storageProfile:
          $ref: '#/components/schemas/StorageProfileUpdate'
        networkProfile:
          $ref: '#/components/schemas/NetworkProfileUpdate'
        osProfile:
          $ref: '#/components/schemas/OsProfileUpdate'
    VirtualMachineInstanceUpdateRequest:
      description: The virtual machine instance resource patch definition.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualMachineInstanceUpdateProperties'
        identity:
          $ref: '#/components/schemas/Identity'
      type: object
    VirtualMachineInstanceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineInstance'
        nextLink:
          type: string
    GuestAgentInstallStatus:
      description: Defines the status of a guest agent installation.
      type: object
      properties:
        vmUuid:
          readOnly: true
          type: string
          description: Specifies the VM's unique SMBIOS ID.
        status:
          readOnly: true
          type: string
          description: The installation status of the hybrid machine agent installation.
          enum:
            - Succeeded
            - InProgress
            - Failed
          x-ms-enum:
            name: StatusTypes
            modelAsString: true
        lastStatusChange:
          readOnly: true
          type: string
          format: date-time
          description: The time of the last status change.
        agentVersion:
          readOnly: true
          type: string
          description: The hybrid machine agent full version.
        errorDetails:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers: []
          description: Details about the error state.
    HybridIdentityMetadataList:
      description: List of HybridIdentityMetadata.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of HybridIdentityMetadata.
          type: string
        value:
          description: Array of HybridIdentityMetadata
          type: array
          items:
            $ref: '#/components/schemas/HybridIdentityMetadata'
      required:
        - value
    HybridIdentityMetadata:
      description: Defines the HybridIdentityMetadata.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/HybridIdentityMetadataProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
      type: object
    HybridIdentityMetadataProperties:
      description: Defines the resource properties.
      type: object
      properties:
        resourceUid:
          description: The unique identifier for the resource.
          type: string
        publicKey:
          description: The Public Key.
          type: string
        identity:
          $ref: '#/components/schemas/Identity'
          readOnly: true
        provisioningState:
          description: The provisioning state.
          type: string
          readOnly: true
    GuestAgentList:
      type: object
      description: List of GuestAgent.
      properties:
        nextLink:
          description: Url to follow for getting next page of GuestAgent.
          type: string
        value:
          description: Array of GuestAgent
          type: array
          items:
            $ref: '#/components/schemas/GuestAgent'
      required:
        - value
    GuestAgent:
      description: Defines the GuestAgent.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/GuestAgentProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
      type: object
    ProvisioningAction:
      description: Defines the different types of operations for guest agent.
      enum:
        - install
        - uninstall
        - repair
      type: string
      x-ms-enum:
        modelAsString: true
        name: ProvisioningAction
    GuestCredential:
      description: Username / Password Credentials to connect to guest.
      type: object
      properties:
        username:
          description: The username to connect with the guest.
          type: string
        password:
          description: The password to connect with the guest.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    GuestAgentProperties:
      description: Defines the resource properties.
      type: object
      properties:
        credentials:
          description: Username / Password Credentials to provision guest agent.
          $ref: '#/components/schemas/GuestCredential'
        provisioningAction:
          description: The guest agent provisioning action.
          $ref: '#/components/schemas/ProvisioningAction'
          type: string
        status:
          description: The guest agent status.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning state.
          type: string
          readOnly: true
    HttpProxyConfiguration:
      description: HTTP Proxy configuration for the VM.
      type: object
      properties:
        httpProxy:
          type: string
          x-ms-secret: true
          description: The HTTP proxy server endpoint to use.
        httpsProxy:
          type: string
          x-ms-secret: true
          description: The HTTPS proxy server endpoint to use.
        noProxy:
          type: array
          items:
            type: string
          description: The endpoints that should not go through proxy.
        trustedCa:
          type: string
          description: Alternative CA cert to use for connecting to proxy servers.
    AdapterPropertyOverrides:
      type: object
      description: The AdapterPropertyOverrides of a cluster.
      properties:
        jumboPacket:
          type: string
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        networkDirect:
          type: string
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        networkDirectTechnology:
          type: string
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'
    DeploymentCluster:
      type: object
      description: AzureStackHCI Cluster deployment properties.
      properties:
        name:
          type: string
          description: The cluster name provided when preparing Active Directory.
        witnessType:
          type: string
          description: 'Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are ''Cloud'', ''FileShare''. '
        witnessPath:
          type: string
          description: Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
        cloudAccountName:
          type: string
          description: Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
        azureServiceEndpoint:
          type: string
          description: For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
    DeploymentConfiguration:
      type: object
      description: Deployment Configuration
      properties:
        version:
          type: string
          description: 'deployment template version '
        scaleUnits:
          type: array
          description: Scale units will contains list of deployment data
          items:
            $ref: '#/components/schemas/ScaleUnits'
          x-ms-identifiers: []
      required:
        - scaleUnits
    DeploymentData:
      type: object
      description: The Deployment data of AzureStackHCI Cluster.
      properties:
        securitySettings:
          $ref: '#/components/schemas/DeploymentSecuritySettings'
          description: SecuritySettings to deploy AzureStackHCI Cluster.
        observability:
          $ref: '#/components/schemas/Observability'
          description: Observability config to deploy AzureStackHCI Cluster.
        cluster:
          $ref: '#/components/schemas/DeploymentCluster'
          description: Observability config to deploy AzureStackHCI Cluster.
        storage:
          $ref: '#/components/schemas/Storage'
          description: Storage config to deploy AzureStackHCI Cluster.
        namingPrefix:
          type: string
          description: naming prefix to deploy cluster.
          pattern: ^[a-zA-Z0-9-]{1,8}$
        domainFqdn:
          type: string
          description: FQDN to deploy cluster
        infrastructureNetwork:
          type: array
          description: InfrastructureNetwork config to deploy AzureStackHCI Cluster.
          items:
            $ref: '#/components/schemas/InfrastructureNetwork'
          x-ms-identifiers: []
        physicalNodes:
          type: array
          description: list of physical nodes config to deploy AzureStackHCI Cluster.
          items:
            $ref: '#/components/schemas/PhysicalNodes'
          x-ms-identifiers:
            - name
        hostNetwork:
          $ref: '#/components/schemas/HostNetwork'
          description: HostNetwork config to deploy AzureStackHCI Cluster.
        adouPath:
          type: string
          description: 'The path to the Active Directory Organizational Unit container object prepared for the deployment. '
        secretsLocation:
          type: string
          description: The URI to the keyvault / secret store.
        optionalServices:
          $ref: '#/components/schemas/OptionalServices'
          description: OptionalServices config to deploy AzureStackHCI Cluster.
    DeploymentMode:
      type: string
      description: The deployment mode for cluster deployment.
      enum:
        - Validate
        - Deploy
      default: Deploy
      x-ms-enum:
        name: DeploymentMode
        modelAsString: true
        values:
          - name: Validate
            value: Validate
            description: Validate deployment settings for cluster.
          - name: Deploy
            value: Deploy
            description: Deploy cluster using deployment settings.
    DeploymentSetting:
      description: Edge device resource
      properties:
        properties:
          $ref: '#/components/schemas/DeploymentSettingsProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    DeploymentSettingListResult:
      type: object
      description: The response of a DeploymentSetting list operation.
      properties:
        value:
          type: array
          description: The DeploymentSetting items on this page
          items:
            $ref: '#/components/schemas/DeploymentSetting'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DeploymentSettingsProperties:
      type: object
      description: DeploymentSetting properties
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: DeploymentSetting provisioning state
        arcNodeResourceIds:
          type: array
          description: Azure resource ids of Arc machines to be part of cluster.
          items:
            type: string
          x-ms-identifiers: []
        deploymentMode:
          $ref: '#/components/schemas/DeploymentMode'
          description: The deployment mode for cluster deployment.
        deploymentConfiguration:
          $ref: '#/components/schemas/DeploymentConfiguration'
          description: Scale units will contains list of deployment data
          x-ms-identifiers: []
        reportedProperties:
          $ref: '#/components/schemas/ReportedProperties'
          description: Deployment Status reported from cluster.
          readOnly: true
      required:
        - arcNodeResourceIds
        - deploymentMode
        - deploymentConfiguration
    DeploymentStatus:
      type: object
      description: The DeploymentStatus of AzureStackHCI Cluster.
      properties:
        status:
          type: string
          description: Status of AzureStackHCI Cluster Deployment.
          readOnly: true
        steps:
          type: array
          description: List of steps of AzureStackHCI Cluster Deployment.
          items:
            $ref: '#/components/schemas/DeploymentStep'
          readOnly: true
          x-ms-identifiers: []
    HostNetwork:
      type: object
      description: The HostNetwork of a cluster.
      properties:
        intents:
          type: array
          description: The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
          items:
            $ref: '#/components/schemas/Intents'
          x-ms-identifiers:
            - name
        storageNetworks:
          type: array
          description: List of StorageNetworks config to deploy AzureStackHCI Cluster.
          items:
            $ref: '#/components/schemas/StorageNetworks'
          x-ms-identifiers:
            - name
        storageConnectivitySwitchless:
          type: boolean
          description: Defines how the storage adapters between nodes are connected either switch or switch less..
          default: false
        enableStorageAutoIp:
          type: boolean
          description: Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
          default: false
    InfrastructureNetwork:
      type: object
      description: The InfrastructureNetwork of a AzureStackHCI Cluster.
      properties:
        subnetMask:
          type: string
          description: Subnet mask that matches the provided IP address space.
        gateway:
          type: string
          description: Default gateway that should be used for the provided IP address space.
        ipPools:
          type: array
          description: Range of IP addresses from which addresses are allocated for nodes within a subnet.
          items:
            $ref: '#/components/schemas/IpPools'
          x-ms-identifiers: []
        dnsServers:
          type: array
          description: IPv4 address of the DNS servers in your environment.
          items:
            type: string
        useDhcp:
          type: boolean
          description: Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required
    Intents:
      type: object
      description: The Intents of a cluster.
      properties:
        name:
          type: string
          description: Name of the network intent you wish to create.
        trafficType:
          type: array
          description: List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.
          items:
            type: string
        adapter:
          type: array
          description: Array of network interfaces used for the network intent.
          items:
            type: string
        overrideVirtualSwitchConfiguration:
          type: boolean
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
          default: false
        virtualSwitchConfigurationOverrides:
          $ref: '#/components/schemas/VirtualSwitchConfigurationOverrides'
          description: Set virtualSwitch ConfigurationOverrides for cluster.
        overrideQosPolicy:
          type: boolean
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
          default: false
        qosPolicyOverrides:
          $ref: '#/components/schemas/QosPolicyOverrides'
          description: Set QoS PolicyOverrides for cluster.
        overrideAdapterProperty:
          type: boolean
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
          default: false
        adapterPropertyOverrides:
          $ref: '#/components/schemas/AdapterPropertyOverrides'
          description: Set Adapter PropertyOverrides for cluster.
    IpPools:
      type: object
      description: The dnsServers of a device.
      properties:
        startingAddress:
          type: string
          description: Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
        endingAddress:
          type: string
          description: Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
    Observability:
      type: object
      description: The Observability of AzureStackHCI Cluster.
      properties:
        streamingDataClient:
          type: boolean
          description: Enables telemetry data to be sent to Microsoft
          default: true
        euLocation:
          type: boolean
          description: Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
          default: false
        episodicDataUpload:
          type: boolean
          description: When set to true, collects log data to facilitate quicker issue resolution.
          default: true
    OptionalServices:
      type: object
      description: The OptionalServices of AzureStackHCI Cluster.
      properties:
        customLocation:
          type: string
          description: The name of custom location.
    PhysicalNodes:
      type: object
      description: The PhysicalNodes of a cluster.
      properties:
        name:
          type: string
          description: NETBIOS name of each physical server on your Azure Stack HCI cluster.
        ipv4Address:
          type: string
          description: The IPv4 address assigned to each physical server on your Azure Stack HCI cluster.
    QosPolicyOverrides:
      type: object
      description: The QoSPolicyOverrides of a cluster.
      properties:
        priorityValue8021Action_Cluster:
          type: string
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        priorityValue8021Action_SMB:
          type: string
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        bandwidthPercentage_SMB:
          type: string
          description: This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
    ReportedProperties:
      type: object
      description: The DeploymentStatus of AzureStackHCI Cluster.
      properties:
        validationStatus:
          $ref: '#/components/schemas/ValidationStatus'
          description: validation status of AzureStackHCI Cluster Deployment.
          readOnly: true
        deploymentStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: Deployment status of AzureStackHCI Cluster Deployment.
          readOnly: true
    ScaleUnits:
      type: object
      description: Scale units will contains list of deployment data
      properties:
        deploymentData:
          $ref: '#/components/schemas/DeploymentData'
          description: Deployment Data to deploy AzureStackHCI Cluster.
      required:
        - deploymentData
      externalDocs:
        description: Deploy Azure Stack HCI using an existing configuration file
        url: https://learn.microsoft.com/en-us/azure-stack/hci/deploy/deployment-tool-existing-file
    DeploymentSecuritySettings:
      type: object
      description: The SecuritySettings of AzureStackHCI Cluster.
      properties:
        hvciProtection:
          type: boolean
          description: By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
          default: true
        drtmProtection:
          type: boolean
          description: By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
          default: true
        driftControlEnforced:
          type: boolean
          description: When set to true, the security baseline is re-applied regularly.
          default: true
        credentialGuardEnforced:
          type: boolean
          description: When set to true, Credential Guard is enabled.
          default: false
        smbSigningEnforced:
          type: boolean
          description: When set to true, the SMB default instance requires sign in for the client and server services.
          default: true
        smbClusterEncryption:
          type: boolean
          description: When set to true, cluster east-west traffic is encrypted.
          default: false
        sideChannelMitigationEnforced:
          type: boolean
          description: When set to true, all the side channel mitigations are enabled
          default: true
        bitlockerBootVolume:
          type: boolean
          description: 'When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. '
          default: true
        bitlockerDataVolumes:
          type: boolean
          description: When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.
          default: true
        wdacEnforced:
          type: boolean
          description: WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.
          default: true
    DeploymentStep:
      type: object
      description: The Step of AzureStackHCI Cluster.
      properties:
        name:
          type: string
          description: Name of step.
          readOnly: true
        description:
          type: string
          description: Description of step.
          readOnly: true
        fullStepIndex:
          type: string
          description: FullStepIndex of step.
          readOnly: true
        startTimeUtc:
          type: string
          description: Start time of step.
          readOnly: true
        endTimeUtc:
          type: string
          description: End time of step.
          readOnly: true
        status:
          type: string
          description: Status of step. Allowed values are 'Error', 'Success', 'InProgress'
          readOnly: true
        steps:
          type: array
          description: List of nested steps of AzureStackHCI Cluster Deployment.
          items:
            $ref: '#/components/schemas/DeploymentStep'
          readOnly: true
          x-ms-identifiers: []
        exception:
          type: array
          description: List of exceptions in AzureStackHCI Cluster Deployment.
          items:
            type: string
          readOnly: true
          x-ms-identifiers: []
    Storage:
      type: object
      description: The Storage config of AzureStackHCI Cluster.
      properties:
        configurationMode:
          type: string
          description: By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'
          default: Express
    StorageNetworks:
      type: object
      description: The StorageNetworks of a cluster.
      properties:
        name:
          type: string
          description: Name of the storage network.
        networkAdapterName:
          type: string
          description: Name of the storage network adapter.
        vlanId:
          type: string
          description: 'ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. '
    ValidationStatus:
      type: object
      description: The ValidationStatus of AzureStackHCI Cluster.
      properties:
        status:
          type: string
          description: Status of AzureStackHCI Cluster Deployment.
          readOnly: true
        steps:
          type: array
          description: List of steps of AzureStackHCI Cluster Deployment.
          items:
            $ref: '#/components/schemas/DeploymentStep'
          readOnly: true
          x-ms-identifiers: []
    VirtualSwitchConfigurationOverrides:
      type: object
      description: The VirtualSwitchConfigurationOverrides of a cluster.
      properties:
        enableIov:
          type: string
          description: Enable IoV for Virtual Switch
        loadBalancingAlgorithm:
          type: string
          description: Load Balancing Algorithm for Virtual Switch
    MarketplaceGalleryImageProperties:
      type: object
      x-ms-client-flatten: true
      properties:
        containerId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.AzureStackHCI/storageContainers
          description: Storage ContainerID of the storage container to be used for marketplace gallery image
        osType:
          type: string
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
          description: Operating system type that the gallery image uses [Windows, Linux]
        cloudInitDataSource:
          type: string
          description: Datasource for the gallery image when provisioning with cloud-init [NoCloud, Azure]
          enum:
            - NoCloud
            - Azure
          x-ms-enum:
            name: CloudInitDataSource
            modelAsString: true
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine [V1, V2]
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        identifier:
          $ref: '#/components/schemas/GalleryImageIdentifier'
        version:
          $ref: '#/components/schemas/GalleryImageVersion'
        provisioningState:
          type: string
          description: Provisioning state of the marketplace gallery image.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - InProgress
            - Accepted
            - Deleting
            - Canceled
          x-ms-enum:
            name: ProvisioningStateEnum
            modelAsString: true
        status:
          $ref: '#/components/schemas/MarketplaceGalleryImageStatus'
      required:
        - osType
      description: Properties under the marketplace gallery image resource
    MarketplaceGalleryImageStatus:
      type: object
      x-ms-client-flatten: true
      readOnly: true
      properties:
        errorCode:
          type: string
          description: MarketplaceGalleryImage provisioning error code
        errorMessage:
          type: string
          description: Descriptive error message
        provisioningStatus:
          type: object
          properties:
            operationId:
              type: string
              description: The ID of the operation performed on the gallery image
            status:
              type: string
              description: The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]
              enum:
                - Succeeded
                - Failed
                - InProgress
              x-ms-enum:
                name: Status
                modelAsString: true
        downloadStatus:
          type: object
          properties:
            downloadSizeInMB:
              type: integer
              format: int64
              description: The downloaded sized of the image in MB
          description: The download status of the gallery image
        progressPercentage:
          type: integer
          format: int64
          description: The progress of the operation in percentage
      description: The observed state of marketplace gallery images
    MarketplaceGalleryImages:
      description: The marketplace gallery image resource definition.
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MarketplaceGalleryImageProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MarketplaceGalleryImagesUpdateRequest:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The marketplace gallery image resource patch definition.
    MarketplaceGalleryImagesListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceGalleryImages'
        nextLink:
          type: string
  x-stackQL-resources:
    clusters:
      id: azure_stack.azure_stack_hci.clusters
      name: clusters
      title: clusters
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStackHCI~1clusters~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_certificate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1uploadCertificate~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        extend_software_assurance_benefit:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1extendSoftwareAssuranceBenefit~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    clusters_identity:
      id: azure_stack.azure_stack_hci.clusters_identity
      name: clusters_identity
      title: clusters_identity
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1createClusterIdentity~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters_identity/methods/create'
        update: []
        replace: []
        delete: []
    arc_settings:
      id: azure_stack.azure_stack_hci.arc_settings
      name: arc_settings
      title: arc_settings
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_password:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1generatePassword~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        consent_and_install_default_extensions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1consentAndInstallDefaultExtensions~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        initialize_disable_process:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1initializeDisableProcess~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/arc_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/arc_settings/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/arc_settings/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/arc_settings/methods/delete'
    arc_settings_identity:
      id: azure_stack.azure_stack_hci.arc_settings_identity
      name: arc_settings_identity
      title: arc_settings_identity
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1createArcIdentity~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/arc_settings_identity/methods/create'
        update: []
        replace: []
        delete: []
    operations:
      id: azure_stack.azure_stack_hci.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureStackHCI~1operations~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    update_runs:
      id: azure_stack.azure_stack_hci.update_runs
      name: update_runs
      title: update_runs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1{updateName}~1updateRuns~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1{updateName}~1updateRuns~1{updateRunName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1{updateName}~1updateRuns~1{updateRunName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1{updateName}~1updateRuns~1{updateRunName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/update_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/update_runs/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/update_runs/methods/delete'
    extensions:
      id: azure_stack.azure_stack_hci.extensions
      name: extensions
      title: extensions
      methods:
        list_by_arc_setting:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1extensions~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1extensions~1{extensionName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1extensions~1{extensionName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1extensions~1{extensionName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1extensions~1{extensionName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1arcSettings~1{arcSettingName}~1extensions~1{extensionName}~1upgrade~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/extensions/methods/list_by_arc_setting'
        insert:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/delete'
    edge_devices:
      id: azure_stack.azure_stack_hci.edge_devices
      name: edge_devices
      title: edge_devices
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1edgeDevices~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1edgeDevices~1{edgeDeviceName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1edgeDevices~1{edgeDeviceName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1edgeDevices~1{edgeDeviceName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1edgeDevices~1{edgeDeviceName}~1validate~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/edge_devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/edge_devices/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/edge_devices/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/edge_devices/methods/delete'
    virtual_hard_disks:
      id: azure_stack.azure_stack_hci.virtual_hard_disks
      name: virtual_hard_disks
      title: virtual_hard_disks
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1virtualHardDisks~1{virtualHardDiskName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1virtualHardDisks~1{virtualHardDiskName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1virtualHardDisks~1{virtualHardDiskName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1virtualHardDisks~1{virtualHardDiskName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1virtualHardDisks~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_hard_disks/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_hard_disks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_hard_disks/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_hard_disks/methods/delete'
    virtual_hard_disks_all:
      id: azure_stack.azure_stack_hci.virtual_hard_disks_all
      name: virtual_hard_disks_all
      title: virtual_hard_disks_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStackHCI~1virtualHardDisks~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_hard_disks_all/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    security_settings:
      id: azure_stack.azure_stack_hci.security_settings
      name: security_settings
      title: security_settings
      methods:
        list_by_clusters:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1securitySettings~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1securitySettings~1{securitySettingsName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1securitySettings~1{securitySettingsName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1securitySettings~1{securitySettingsName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/security_settings/methods/list_by_clusters'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_settings/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_settings/methods/delete'
    offers:
      id: azure_stack.azure_stack_hci.offers
      name: offers
      title: offers
      methods:
        list_by_publisher:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1publishers~1{publisherName}~1offers~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1offers~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1publishers~1{publisherName}~1offers~1{offerName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/offers/methods/get'
          - $ref: '#/components/x-stackQL-resources/offers/methods/list_by_publisher'
          - $ref: '#/components/x-stackQL-resources/offers/methods/list_by_cluster'
        insert: []
        update: []
        replace: []
        delete: []
    network_interfaces:
      id: azure_stack.azure_stack_hci.network_interfaces
      name: network_interfaces
      title: network_interfaces
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1networkInterfaces~1{networkInterfaceName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1networkInterfaces~1{networkInterfaceName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1networkInterfaces~1{networkInterfaceName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1networkInterfaces~1{networkInterfaceName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1networkInterfaces~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/delete'
    network_interfaces_all:
      id: azure_stack.azure_stack_hci.network_interfaces_all
      name: network_interfaces_all
      title: network_interfaces_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStackHCI~1networkInterfaces~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_interfaces_all/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    gallery_images:
      id: azure_stack.azure_stack_hci.gallery_images
      name: gallery_images
      title: gallery_images
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1galleryImages~1{galleryImageName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1galleryImages~1{galleryImageName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1galleryImages~1{galleryImageName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1galleryImages~1{galleryImageName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1galleryImages~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/delete'
    gallery_images_all:
      id: azure_stack.azure_stack_hci.gallery_images_all
      name: gallery_images_all
      title: gallery_images_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStackHCI~1galleryImages~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_images_all/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    updates:
      id: azure_stack.azure_stack_hci.updates
      name: updates
      title: updates
      methods:
        post:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1{updateName}~1apply~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1{updateName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1{updateName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updates~1{updateName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/updates/methods/get'
          - $ref: '#/components/x-stackQL-resources/updates/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/updates/methods/delete'
    publishers:
      id: azure_stack.azure_stack_hci.publishers
      name: publishers
      title: publishers
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1publishers~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1publishers~1{publisherName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/publishers/methods/get'
          - $ref: '#/components/x-stackQL-resources/publishers/methods/list_by_cluster'
        insert: []
        update: []
        replace: []
        delete: []
    logical_networks:
      id: azure_stack.azure_stack_hci.logical_networks
      name: logical_networks
      title: logical_networks
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1logicalNetworks~1{logicalNetworkName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1logicalNetworks~1{logicalNetworkName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1logicalNetworks~1{logicalNetworkName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1logicalNetworks~1{logicalNetworkName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1logicalNetworks~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logical_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/logical_networks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/logical_networks/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/logical_networks/methods/delete'
    logical_networks_all:
      id: azure_stack.azure_stack_hci.logical_networks_all
      name: logical_networks_all
      title: logical_networks_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStackHCI~1logicalNetworks~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logical_networks_all/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    update_summaries_list:
      id: azure_stack.azure_stack_hci.update_summaries_list
      name: update_summaries_list
      title: update_summaries_list
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updateSummaries~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/update_summaries_list/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    update_summaries:
      id: azure_stack.azure_stack_hci.update_summaries
      name: update_summaries
      title: update_summaries
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updateSummaries~1default~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updateSummaries~1default~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1updateSummaries~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/update_summaries/methods/get'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/update_summaries/methods/delete'
    skus:
      id: azure_stack.azure_stack_hci.skus
      name: skus
      title: skus
      methods:
        list_by_offer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1publishers~1{publisherName}~1offers~1{offerName}~1skus~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1publishers~1{publisherName}~1offers~1{offerName}~1skus~1{skuName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/get'
          - $ref: '#/components/x-stackQL-resources/skus/methods/list_by_offer'
        insert: []
        update: []
        replace: []
        delete: []
    storage_containers:
      id: azure_stack.azure_stack_hci.storage_containers
      name: storage_containers
      title: storage_containers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1storageContainers~1{storageContainerName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1storageContainers~1{storageContainerName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1storageContainers~1{storageContainerName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1storageContainers~1{storageContainerName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1storageContainers~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_containers/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_containers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_containers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_containers/methods/delete'
    storage_containers_all:
      id: azure_stack.azure_stack_hci.storage_containers_all
      name: storage_containers_all
      title: storage_containers_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStackHCI~1storageContainers~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_containers_all/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    virtual_machine_instances:
      id: azure_stack.azure_stack_hci.virtual_machine_instances
      name: virtual_machine_instances
      title: virtual_machine_instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1start~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1stop~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1restart~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/delete'
    hybrid_identity_metadata:
      id: azure_stack.azure_stack_hci.hybrid_identity_metadata
      name: hybrid_identity_metadata
      title: hybrid_identity_metadata
      methods:
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1hybridIdentityMetadata~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1hybridIdentityMetadata~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata/methods/get'
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    guest_agent:
      id: azure_stack.azure_stack_hci.guest_agent
      name: guest_agent
      title: guest_agent
      methods:
        create:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/guest_agent/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/guest_agent/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/guest_agent/methods/delete'
    guest_agents:
      id: azure_stack.azure_stack_hci.guest_agents
      name: guest_agents
      title: guest_agents
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.AzureStackHCI~1virtualMachineInstances~1default~1guestAgents~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    deployment_settings:
      id: azure_stack.azure_stack_hci.deployment_settings
      name: deployment_settings
      title: deployment_settings
      methods:
        list_by_clusters:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1deploymentSettings~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1deploymentSettings~1{deploymentSettingsName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1deploymentSettings~1{deploymentSettingsName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1clusters~1{clusterName}~1deploymentSettings~1{deploymentSettingsName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployment_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployment_settings/methods/list_by_clusters'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployment_settings/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployment_settings/methods/delete'
    marketplace_gallery_images:
      id: azure_stack.azure_stack_hci.marketplace_gallery_images
      name: marketplace_gallery_images
      title: marketplace_gallery_images
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1marketplaceGalleryImages~1{marketplaceGalleryImageName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1marketplaceGalleryImages~1{marketplaceGalleryImageName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1marketplaceGalleryImages~1{marketplaceGalleryImageName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1marketplaceGalleryImages~1{marketplaceGalleryImageName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureStackHCI~1marketplaceGalleryImages~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_gallery_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/marketplace_gallery_images/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/marketplace_gallery_images/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/marketplace_gallery_images/methods/delete'
    marketplace_gallery_images_all:
      id: azure_stack.azure_stack_hci.marketplace_gallery_images_all
      name: marketplace_gallery_images_all
      title: marketplace_gallery_images_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureStackHCI~1marketplaceGalleryImages~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_gallery_images_all/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_clusters:
      id: azure_stack.azure_stack_hci.vw_clusters
      name: vw_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.connectivityStatus') as connectivity_status,
              JSON_EXTRACT(properties, '$.cloudId') as cloud_id,
              JSON_EXTRACT(properties, '$.cloudManagementEndpoint') as cloud_management_endpoint,
              JSON_EXTRACT(properties, '$.aadClientId') as aad_client_id,
              JSON_EXTRACT(properties, '$.aadTenantId') as aad_tenant_id,
              JSON_EXTRACT(properties, '$.aadApplicationObjectId') as aad_application_object_id,
              JSON_EXTRACT(properties, '$.aadServicePrincipalObjectId') as aad_service_principal_object_id,
              JSON_EXTRACT(properties, '$.softwareAssuranceProperties') as software_assurance_properties,
              JSON_EXTRACT(properties, '$.desiredProperties') as desired_properties,
              JSON_EXTRACT(properties, '$.reportedProperties') as reported_properties,
              JSON_EXTRACT(properties, '$.isolatedVmAttestationConfiguration') as isolated_vm_attestation_configuration,
              JSON_EXTRACT(properties, '$.trialDaysRemaining') as trial_days_remaining,
              JSON_EXTRACT(properties, '$.billingModel') as billing_model,
              JSON_EXTRACT(properties, '$.registrationTimestamp') as registration_timestamp,
              JSON_EXTRACT(properties, '$.lastSyncTimestamp') as last_sync_timestamp,
              JSON_EXTRACT(properties, '$.lastBillingTimestamp') as last_billing_timestamp,
              JSON_EXTRACT(properties, '$.serviceEndpoint') as service_endpoint,
              JSON_EXTRACT(properties, '$.resourceProviderObjectId') as resource_provider_object_id,
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure_stack.azure_stack_hci.clusters
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.connectivityStatus') as connectivity_status,
                JSON_EXTRACT(properties, '$.cloudId') as cloud_id,
                JSON_EXTRACT(properties, '$.cloudManagementEndpoint') as cloud_management_endpoint,
                JSON_EXTRACT(properties, '$.aadClientId') as aad_client_id,
                JSON_EXTRACT(properties, '$.aadTenantId') as aad_tenant_id,
                JSON_EXTRACT(properties, '$.aadApplicationObjectId') as aad_application_object_id,
                JSON_EXTRACT(properties, '$.aadServicePrincipalObjectId') as aad_service_principal_object_id,
                JSON_EXTRACT(properties, '$.softwareAssuranceProperties') as software_assurance_properties,
                JSON_EXTRACT(properties, '$.desiredProperties') as desired_properties,
                JSON_EXTRACT(properties, '$.reportedProperties') as reported_properties,
                JSON_EXTRACT(properties, '$.isolatedVmAttestationConfiguration') as isolated_vm_attestation_configuration,
                JSON_EXTRACT(properties, '$.trialDaysRemaining') as trial_days_remaining,
                JSON_EXTRACT(properties, '$.billingModel') as billing_model,
                JSON_EXTRACT(properties, '$.registrationTimestamp') as registration_timestamp,
                JSON_EXTRACT(properties, '$.lastSyncTimestamp') as last_sync_timestamp,
                JSON_EXTRACT(properties, '$.lastBillingTimestamp') as last_billing_timestamp,
                JSON_EXTRACT(properties, '$.serviceEndpoint') as service_endpoint,
                JSON_EXTRACT(properties, '$.resourceProviderObjectId') as resource_provider_object_id,
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure_stack.azure_stack_hci.clusters
                WHERE subscriptionId = 'replace-me';
    vw_arc_settings:
      id: azure_stack.azure_stack_hci.vw_arc_settings
      name: vw_arc_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.arcInstanceResourceGroup') as arc_instance_resource_group,
              JSON_EXTRACT(properties, '$.arcApplicationClientId') as arc_application_client_id,
              JSON_EXTRACT(properties, '$.arcApplicationTenantId') as arc_application_tenant_id,
              JSON_EXTRACT(properties, '$.arcServicePrincipalObjectId') as arc_service_principal_object_id,
              JSON_EXTRACT(properties, '$.arcApplicationObjectId') as arc_application_object_id,
              JSON_EXTRACT(properties, '$.aggregateState') as aggregate_state,
              JSON_EXTRACT(properties, '$.perNodeDetails') as per_node_details,
              JSON_EXTRACT(properties, '$.connectivityProperties') as connectivity_properties,
              JSON_EXTRACT(properties, '$.defaultExtensions') as default_extensions,
              subscriptionId,
              resourceGroupName,
              clusterName,
              arcSettingName
              FROM azure_stack.azure_stack_hci.arc_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.arcInstanceResourceGroup') as arc_instance_resource_group,
                JSON_EXTRACT(properties, '$.arcApplicationClientId') as arc_application_client_id,
                JSON_EXTRACT(properties, '$.arcApplicationTenantId') as arc_application_tenant_id,
                JSON_EXTRACT(properties, '$.arcServicePrincipalObjectId') as arc_service_principal_object_id,
                JSON_EXTRACT(properties, '$.arcApplicationObjectId') as arc_application_object_id,
                JSON_EXTRACT(properties, '$.aggregateState') as aggregate_state,
                JSON_EXTRACT(properties, '$.perNodeDetails') as per_node_details,
                JSON_EXTRACT(properties, '$.connectivityProperties') as connectivity_properties,
                JSON_EXTRACT(properties, '$.defaultExtensions') as default_extensions,
                subscriptionId,
                resourceGroupName,
                clusterName,
                arcSettingName
                FROM azure_stack.azure_stack_hci.arc_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_update_runs:
      id: azure_stack.azure_stack_hci.vw_update_runs
      name: vw_update_runs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.timeStarted') as time_started,
              JSON_EXTRACT(properties, '$.lastUpdatedTime') as last_updated_time,
              JSON_EXTRACT(properties, '$.duration') as duration,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.progress') as progress,
              subscriptionId,
              resourceGroupName,
              clusterName,
              updateName,
              updateRunName
              FROM azure_stack.azure_stack_hci.update_runs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND updateName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.timeStarted') as time_started,
                JSON_EXTRACT(properties, '$.lastUpdatedTime') as last_updated_time,
                JSON_EXTRACT(properties, '$.duration') as duration,
                JSON_EXTRACT(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.progress') as progress,
                subscriptionId,
                resourceGroupName,
                clusterName,
                updateName,
                updateRunName
                FROM azure_stack.azure_stack_hci.update_runs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND updateName = 'replace-me';
    vw_extensions:
      id: azure_stack.azure_stack_hci.vw_extensions
      name: vw_extensions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.extensionParameters') as extension_parameters,
              JSON_EXTRACT(properties, '$.aggregateState') as aggregate_state,
              JSON_EXTRACT(properties, '$.perNodeExtensionDetails') as per_node_extension_details,
              JSON_EXTRACT(properties, '$.managedBy') as managed_by,
              subscriptionId,
              resourceGroupName,
              clusterName,
              arcSettingName,
              extensionName
              FROM azure_stack.azure_stack_hci.extensions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND arcSettingName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.extensionParameters') as extension_parameters,
                JSON_EXTRACT(properties, '$.aggregateState') as aggregate_state,
                JSON_EXTRACT(properties, '$.perNodeExtensionDetails') as per_node_extension_details,
                JSON_EXTRACT(properties, '$.managedBy') as managed_by,
                subscriptionId,
                resourceGroupName,
                clusterName,
                arcSettingName,
                extensionName
                FROM azure_stack.azure_stack_hci.extensions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND arcSettingName = 'replace-me';
    vw_edge_devices:
      id: azure_stack.azure_stack_hci.vw_edge_devices
      name: vw_edge_devices
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.deviceConfiguration') as device_configuration,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              resourceUri,
              edgeDeviceName
              FROM azure_stack.azure_stack_hci.edge_devices
              WHERE resourceUri = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.deviceConfiguration') as device_configuration,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                resourceUri,
                edgeDeviceName
                FROM azure_stack.azure_stack_hci.edge_devices
                WHERE resourceUri = 'replace-me';
    vw_virtual_hard_disks:
      id: azure_stack.azure_stack_hci.vw_virtual_hard_disks
      name: vw_virtual_hard_disks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.blockSizeBytes') as block_size_bytes,
              JSON_EXTRACT(properties, '$.diskSizeGB') as disk_size_gb,
              JSON_EXTRACT(properties, '$.dynamic') as dynamic,
              JSON_EXTRACT(properties, '$.logicalSectorBytes') as logical_sector_bytes,
              JSON_EXTRACT(properties, '$.physicalSectorBytes') as physical_sector_bytes,
              JSON_EXTRACT(properties, '$.hyperVGeneration') as hyper_v_generation,
              JSON_EXTRACT(properties, '$.diskFileFormat') as disk_file_format,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.containerId') as container_id,
              JSON_EXTRACT(properties, '$.status') as status,
              subscriptionId,
              resourceGroupName,
              virtualHardDiskName
              FROM azure_stack.azure_stack_hci.virtual_hard_disks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.blockSizeBytes') as block_size_bytes,
                JSON_EXTRACT(properties, '$.diskSizeGB') as disk_size_gb,
                JSON_EXTRACT(properties, '$.dynamic') as dynamic,
                JSON_EXTRACT(properties, '$.logicalSectorBytes') as logical_sector_bytes,
                JSON_EXTRACT(properties, '$.physicalSectorBytes') as physical_sector_bytes,
                JSON_EXTRACT(properties, '$.hyperVGeneration') as hyper_v_generation,
                JSON_EXTRACT(properties, '$.diskFileFormat') as disk_file_format,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.containerId') as container_id,
                JSON_EXTRACT(properties, '$.status') as status,
                subscriptionId,
                resourceGroupName,
                virtualHardDiskName
                FROM azure_stack.azure_stack_hci.virtual_hard_disks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
    vw_security_settings:
      id: azure_stack.azure_stack_hci.vw_security_settings
      name: vw_security_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.securedCoreComplianceAssignment') as secured_core_compliance_assignment,
              JSON_EXTRACT(properties, '$.securityComplianceStatus') as security_compliance_status,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              clusterName,
              securitySettingsName
              FROM azure_stack.azure_stack_hci.security_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.securedCoreComplianceAssignment') as secured_core_compliance_assignment,
                JSON_EXTRACT(properties, '$.securityComplianceStatus') as security_compliance_status,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                clusterName,
                securitySettingsName
                FROM azure_stack.azure_stack_hci.security_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_offers:
      id: azure_stack.azure_stack_hci.vw_offers
      name: vw_offers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.publisherId') as publisher_id,
              JSON_EXTRACT(properties, '$.content') as content,
              JSON_EXTRACT(properties, '$.contentVersion') as content_version,
              JSON_EXTRACT(properties, '$.skuMappings') as sku_mappings,
              subscriptionId,
              resourceGroupName,
              clusterName,
              publisherName,
              offerName
              FROM azure_stack.azure_stack_hci.offers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.publisherId') as publisher_id,
                JSON_EXTRACT(properties, '$.content') as content,
                JSON_EXTRACT(properties, '$.contentVersion') as content_version,
                JSON_EXTRACT(properties, '$.skuMappings') as sku_mappings,
                subscriptionId,
                resourceGroupName,
                clusterName,
                publisherName,
                offerName
                FROM azure_stack.azure_stack_hci.offers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_network_interfaces:
      id: azure_stack.azure_stack_hci.vw_network_interfaces
      name: vw_network_interfaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.ipConfigurations') as ip_configurations,
              JSON_EXTRACT(properties, '$.macAddress') as mac_address,
              JSON_EXTRACT(properties, '$.dnsSettings') as dns_settings,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.status') as status,
              subscriptionId,
              resourceGroupName,
              networkInterfaceName
              FROM azure_stack.azure_stack_hci.network_interfaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.ipConfigurations') as ip_configurations,
                JSON_EXTRACT(properties, '$.macAddress') as mac_address,
                JSON_EXTRACT(properties, '$.dnsSettings') as dns_settings,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.status') as status,
                subscriptionId,
                resourceGroupName,
                networkInterfaceName
                FROM azure_stack.azure_stack_hci.network_interfaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
    vw_gallery_images:
      id: azure_stack.azure_stack_hci.vw_gallery_images
      name: vw_gallery_images
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.containerId') as container_id,
              JSON_EXTRACT(properties, '$.imagePath') as image_path,
              JSON_EXTRACT(properties, '$.osType') as os_type,
              JSON_EXTRACT(properties, '$.cloudInitDataSource') as cloud_init_data_source,
              JSON_EXTRACT(properties, '$.hyperVGeneration') as hyper_v_generation,
              JSON_EXTRACT(properties, '$.identifier') as identifier,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.status') as status,
              subscriptionId,
              resourceGroupName,
              galleryImageName
              FROM azure_stack.azure_stack_hci.gallery_images
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.containerId') as container_id,
                JSON_EXTRACT(properties, '$.imagePath') as image_path,
                JSON_EXTRACT(properties, '$.osType') as os_type,
                JSON_EXTRACT(properties, '$.cloudInitDataSource') as cloud_init_data_source,
                JSON_EXTRACT(properties, '$.hyperVGeneration') as hyper_v_generation,
                JSON_EXTRACT(properties, '$.identifier') as identifier,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.status') as status,
                subscriptionId,
                resourceGroupName,
                galleryImageName
                FROM azure_stack.azure_stack_hci.gallery_images
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
    vw_updates:
      id: azure_stack.azure_stack_hci.vw_updates
      name: vw_updates
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.installedDate') as installed_date,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.prerequisites') as prerequisites,
              JSON_EXTRACT(properties, '$.componentVersions') as component_versions,
              JSON_EXTRACT(properties, '$.rebootRequired') as reboot_required,
              JSON_EXTRACT(properties, '$.healthState') as health_state,
              JSON_EXTRACT(properties, '$.healthCheckResult') as health_check_result,
              JSON_EXTRACT(properties, '$.healthCheckDate') as health_check_date,
              JSON_EXTRACT(properties, '$.packagePath') as package_path,
              JSON_EXTRACT(properties, '$.packageSizeInMb') as package_size_in_mb,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.publisher') as publisher,
              JSON_EXTRACT(properties, '$.releaseLink') as release_link,
              JSON_EXTRACT(properties, '$.availabilityType') as availability_type,
              JSON_EXTRACT(properties, '$.packageType') as package_type,
              JSON_EXTRACT(properties, '$.additionalProperties') as additional_properties,
              JSON_EXTRACT(properties, '$.updateStateProperties') as update_state_properties,
              subscriptionId,
              resourceGroupName,
              clusterName,
              updateName
              FROM azure_stack.azure_stack_hci.updates
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.installedDate') as installed_date,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.prerequisites') as prerequisites,
                JSON_EXTRACT(properties, '$.componentVersions') as component_versions,
                JSON_EXTRACT(properties, '$.rebootRequired') as reboot_required,
                JSON_EXTRACT(properties, '$.healthState') as health_state,
                JSON_EXTRACT(properties, '$.healthCheckResult') as health_check_result,
                JSON_EXTRACT(properties, '$.healthCheckDate') as health_check_date,
                JSON_EXTRACT(properties, '$.packagePath') as package_path,
                JSON_EXTRACT(properties, '$.packageSizeInMb') as package_size_in_mb,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.publisher') as publisher,
                JSON_EXTRACT(properties, '$.releaseLink') as release_link,
                JSON_EXTRACT(properties, '$.availabilityType') as availability_type,
                JSON_EXTRACT(properties, '$.packageType') as package_type,
                JSON_EXTRACT(properties, '$.additionalProperties') as additional_properties,
                JSON_EXTRACT(properties, '$.updateStateProperties') as update_state_properties,
                subscriptionId,
                resourceGroupName,
                clusterName,
                updateName
                FROM azure_stack.azure_stack_hci.updates
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_publishers:
      id: azure_stack.azure_stack_hci.vw_publishers
      name: vw_publishers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              clusterName,
              publisherName
              FROM azure_stack.azure_stack_hci.publishers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                clusterName,
                publisherName
                FROM azure_stack.azure_stack_hci.publishers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_logical_networks:
      id: azure_stack.azure_stack_hci.vw_logical_networks
      name: vw_logical_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.dhcpOptions') as dhcp_options,
              JSON_EXTRACT(properties, '$.subnets') as subnets,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.vmSwitchName') as vm_switch_name,
              JSON_EXTRACT(properties, '$.status') as status,
              subscriptionId,
              resourceGroupName,
              logicalNetworkName
              FROM azure_stack.azure_stack_hci.logical_networks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.dhcpOptions') as dhcp_options,
                JSON_EXTRACT(properties, '$.subnets') as subnets,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.vmSwitchName') as vm_switch_name,
                JSON_EXTRACT(properties, '$.status') as status,
                subscriptionId,
                resourceGroupName,
                logicalNetworkName
                FROM azure_stack.azure_stack_hci.logical_networks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
    vw_update_summaries:
      id: azure_stack.azure_stack_hci.vw_update_summaries
      name: vw_update_summaries
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.oemFamily') as oem_family,
              JSON_EXTRACT(properties, '$.hardwareModel') as hardware_model,
              JSON_EXTRACT(properties, '$.packageVersions') as package_versions,
              JSON_EXTRACT(properties, '$.currentVersion') as current_version,
              JSON_EXTRACT(properties, '$.lastUpdated') as last_updated,
              JSON_EXTRACT(properties, '$.lastChecked') as last_checked,
              JSON_EXTRACT(properties, '$.healthState') as health_state,
              JSON_EXTRACT(properties, '$.healthCheckResult') as health_check_result,
              JSON_EXTRACT(properties, '$.healthCheckDate') as health_check_date,
              JSON_EXTRACT(properties, '$.state') as state,
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure_stack.azure_stack_hci.update_summaries
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.oemFamily') as oem_family,
                JSON_EXTRACT(properties, '$.hardwareModel') as hardware_model,
                JSON_EXTRACT(properties, '$.packageVersions') as package_versions,
                JSON_EXTRACT(properties, '$.currentVersion') as current_version,
                JSON_EXTRACT(properties, '$.lastUpdated') as last_updated,
                JSON_EXTRACT(properties, '$.lastChecked') as last_checked,
                JSON_EXTRACT(properties, '$.healthState') as health_state,
                JSON_EXTRACT(properties, '$.healthCheckResult') as health_check_result,
                JSON_EXTRACT(properties, '$.healthCheckDate') as health_check_date,
                JSON_EXTRACT(properties, '$.state') as state,
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure_stack.azure_stack_hci.update_summaries
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_skus:
      id: azure_stack.azure_stack_hci.vw_skus
      name: vw_skus
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.publisherId') as publisher_id,
              JSON_EXTRACT(properties, '$.offerId') as offer_id,
              JSON_EXTRACT(properties, '$.content') as content,
              JSON_EXTRACT(properties, '$.contentVersion') as content_version,
              JSON_EXTRACT(properties, '$.skuMappings') as sku_mappings,
              subscriptionId,
              resourceGroupName,
              clusterName,
              publisherName,
              offerName,
              skuName
              FROM azure_stack.azure_stack_hci.skus
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND publisherName = 'replace-me' AND offerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.publisherId') as publisher_id,
                JSON_EXTRACT(properties, '$.offerId') as offer_id,
                JSON_EXTRACT(properties, '$.content') as content,
                JSON_EXTRACT(properties, '$.contentVersion') as content_version,
                JSON_EXTRACT(properties, '$.skuMappings') as sku_mappings,
                subscriptionId,
                resourceGroupName,
                clusterName,
                publisherName,
                offerName,
                skuName
                FROM azure_stack.azure_stack_hci.skus
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND publisherName = 'replace-me' AND offerName = 'replace-me';
    vw_storage_containers:
      id: azure_stack.azure_stack_hci.vw_storage_containers
      name: vw_storage_containers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.path') as path,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.status') as status,
              subscriptionId,
              resourceGroupName,
              storageContainerName
              FROM azure_stack.azure_stack_hci.storage_containers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.path') as path,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.status') as status,
                subscriptionId,
                resourceGroupName,
                storageContainerName
                FROM azure_stack.azure_stack_hci.storage_containers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
    vw_virtual_machine_instances:
      id: azure_stack.azure_stack_hci.vw_virtual_machine_instances
      name: vw_virtual_machine_instances
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              extendedLocation as extended_location,
              identity as identity,
              JSON_EXTRACT(properties, '$.hardwareProfile') as hardware_profile,
              JSON_EXTRACT(properties, '$.networkProfile') as network_profile,
              JSON_EXTRACT(properties, '$.osProfile') as os_profile,
              JSON_EXTRACT(properties, '$.securityProfile') as security_profile,
              JSON_EXTRACT(properties, '$.storageProfile') as storage_profile,
              JSON_EXTRACT(properties, '$.httpProxyConfig') as http_proxy_config,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.instanceView') as instance_view,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.guestAgentInstallStatus') as guest_agent_install_status,
              JSON_EXTRACT(properties, '$.vmId') as vm_id,
              JSON_EXTRACT(properties, '$.resourceUid') as resource_uid,
              resourceUri
              FROM azure_stack.azure_stack_hci.virtual_machine_instances
              WHERE resourceUri = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                extendedLocation as extended_location,
                identity as identity,
                json_extract_path_text(properties, '$.hardwareProfile') as hardware_profile,
                JSON_EXTRACT(properties, '$.networkProfile') as network_profile,
                JSON_EXTRACT(properties, '$.osProfile') as os_profile,
                JSON_EXTRACT(properties, '$.securityProfile') as security_profile,
                JSON_EXTRACT(properties, '$.storageProfile') as storage_profile,
                JSON_EXTRACT(properties, '$.httpProxyConfig') as http_proxy_config,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.instanceView') as instance_view,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.guestAgentInstallStatus') as guest_agent_install_status,
                JSON_EXTRACT(properties, '$.vmId') as vm_id,
                JSON_EXTRACT(properties, '$.resourceUid') as resource_uid,
                resourceUri
                FROM azure_stack.azure_stack_hci.virtual_machine_instances
                WHERE resourceUri = 'replace-me';
    vw_hybrid_identity_metadata:
      id: azure_stack.azure_stack_hci.vw_hybrid_identity_metadata
      name: vw_hybrid_identity_metadata
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.resourceUid') as resource_uid,
              JSON_EXTRACT(properties, '$.publicKey') as public_key,
              JSON_EXTRACT(properties, '$.identity') as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              resourceUri
              FROM azure_stack.azure_stack_hci.hybrid_identity_metadata
              WHERE resourceUri = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.resourceUid') as resource_uid,
                JSON_EXTRACT(properties, '$.publicKey') as public_key,
                JSON_EXTRACT(properties, '$.identity') as identity,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                resourceUri
                FROM azure_stack.azure_stack_hci.hybrid_identity_metadata
                WHERE resourceUri = 'replace-me';
    vw_guest_agent:
      id: azure_stack.azure_stack_hci.vw_guest_agent
      name: vw_guest_agent
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.credentials') as credentials,
              JSON_EXTRACT(properties, '$.provisioningAction') as provisioning_action,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              resourceUri
              FROM azure_stack.azure_stack_hci.guest_agent
              WHERE resourceUri = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.credentials') as credentials,
                JSON_EXTRACT(properties, '$.provisioningAction') as provisioning_action,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                resourceUri
                FROM azure_stack.azure_stack_hci.guest_agent
                WHERE resourceUri = 'replace-me';
    vw_deployment_settings:
      id: azure_stack.azure_stack_hci.vw_deployment_settings
      name: vw_deployment_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.arcNodeResourceIds') as arc_node_resource_ids,
              JSON_EXTRACT(properties, '$.deploymentMode') as deployment_mode,
              JSON_EXTRACT(properties, '$.deploymentConfiguration') as deployment_configuration,
              JSON_EXTRACT(properties, '$.reportedProperties') as reported_properties,
              subscriptionId,
              resourceGroupName,
              clusterName,
              deploymentSettingsName
              FROM azure_stack.azure_stack_hci.deployment_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.arcNodeResourceIds') as arc_node_resource_ids,
                JSON_EXTRACT(properties, '$.deploymentMode') as deployment_mode,
                JSON_EXTRACT(properties, '$.deploymentConfiguration') as deployment_configuration,
                JSON_EXTRACT(properties, '$.reportedProperties') as reported_properties,
                subscriptionId,
                resourceGroupName,
                clusterName,
                deploymentSettingsName
                FROM azure_stack.azure_stack_hci.deployment_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_marketplace_gallery_images:
      id: azure_stack.azure_stack_hci.vw_marketplace_gallery_images
      name: vw_marketplace_gallery_images
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.containerId') as container_id,
              JSON_EXTRACT(properties, '$.osType') as os_type,
              JSON_EXTRACT(properties, '$.cloudInitDataSource') as cloud_init_data_source,
              JSON_EXTRACT(properties, '$.hyperVGeneration') as hyper_v_generation,
              JSON_EXTRACT(properties, '$.identifier') as identifier,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.status') as status,
              subscriptionId,
              resourceGroupName,
              marketplaceGalleryImageName
              FROM azure_stack.azure_stack_hci.marketplace_gallery_images
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.containerId') as container_id,
                JSON_EXTRACT(properties, '$.osType') as os_type,
                JSON_EXTRACT(properties, '$.cloudInitDataSource') as cloud_init_data_source,
                JSON_EXTRACT(properties, '$.hyperVGeneration') as hyper_v_generation,
                JSON_EXTRACT(properties, '$.identifier') as identifier,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.status') as status,
                subscriptionId,
                resourceGroupName,
                marketplaceGalleryImageName
                FROM azure_stack.azure_stack_hci.marketplace_gallery_images
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/clusters/?api-version=2024-01-01:
    get:
      tags:
        - Clusters
      operationId: Clusters_ListBySubscription
      description: List all HCI clusters in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/?api-version=2024-01-01:
    get:
      tags:
        - Clusters
      operationId: Clusters_ListByResourceGroup
      description: List all HCI clusters in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/?api-version=2024-01-01:
    get:
      tags:
        - Clusters
      operationId: Clusters_Get
      description: Get HCI cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Clusters
      operationId: Clusters_Create
      description: Create an HCI cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: Details of the HCI cluster.
        required: true
        x-ms-requestBody-name: cluster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Clusters
      operationId: Clusters_Update
      description: Update an HCI cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: Details of the HCI cluster.
        required: true
        x-ms-requestBody-name: cluster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Clusters
      operationId: Clusters_Delete
      description: Delete an HCI cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/uploadCertificate/?api-version=2024-01-01:
    post:
      tags:
        - Cluster
      operationId: Clusters_UploadCertificate
      description: Upload certificate.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: Upload certificate request.
        required: true
        x-ms-requestBody-name: uploadCertificateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCertificateRequest'
      responses:
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/createClusterIdentity/?api-version=2024-01-01:
    post:
      tags:
        - Cluster
      operationId: Clusters_CreateIdentity
      description: Create cluster identity.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterIdentityResponse'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/extendSoftwareAssuranceBenefit/?api-version=2024-01-01:
    post:
      tags:
        - Cluster
      operationId: Clusters_ExtendSoftwareAssuranceBenefit
      description: Extends Software Assurance Benefit to a cluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: Software Assurance Change Request Payload
        required: true
        x-ms-requestBody-name: softwareAssuranceChangeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareAssuranceChangeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/?api-version=2024-01-01:
    get:
      operationId: ArcSettings_ListByCluster
      description: Get ArcSetting resources of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSettingList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/?api-version=2024-01-01:
    get:
      operationId: ArcSettings_Get
      description: Get ArcSetting resource details of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSetting'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ArcSettings_Create
      description: Create ArcSetting for HCI cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      requestBody:
        description: Parameters supplied to the Create ArcSetting resource for this HCI cluster.
        required: true
        x-ms-requestBody-name: arcSetting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArcSetting'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSetting'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: ArcSettings_Update
      description: Update ArcSettings for HCI cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      requestBody:
        description: ArcSettings parameters that needs to be updated
        required: true
        x-ms-requestBody-name: arcSetting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArcSettingsPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSetting'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ArcSettings_Delete
      description: Delete ArcSetting resource details of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/generatePassword/?api-version=2024-01-01:
    post:
      tags:
        - ArcSettings
      operationId: ArcSettings_GeneratePassword
      description: Generate password for arc settings.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordCredential'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/createArcIdentity/?api-version=2024-01-01:
    post:
      tags:
        - ArcSettings
      operationId: ArcSettings_CreateIdentity
      description: Create Aad identity for arc settings.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcIdentityResponse'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/consentAndInstallDefaultExtensions/?api-version=2024-01-01:
    post:
      tags:
        - ArcSettings
      operationId: ArcSettings_ConsentAndInstallDefaultExtensions
      description: Add consent time for default extensions and initiate extensions installation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSetting'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/initializeDisableProcess/?api-version=2024-01-01:
    post:
      tags:
        - ArcSettings
      operationId: ArcSettings_InitializeDisableProcess
      description: Initializes ARC Disable process on the cluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /providers/Microsoft.AzureStackHCI/operations/?api-version=2024-01-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: List all available Microsoft.AzureStackHCI provider operations
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/updateRuns/?api-version=2024-01-01:
    get:
      operationId: UpdateRuns_List
      description: List all Update runs for a specified update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/UpdateNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRunList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/updateRuns/{updateRunName}/?api-version=2024-01-01:
    delete:
      operationId: UpdateRuns_Delete
      description: Delete specified Update Run
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/UpdateNameParameter'
        - $ref: '#/components/parameters/UpdateRunNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: ACCEPTED
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    put:
      operationId: UpdateRuns_Put
      description: Put Update runs for a specified update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/UpdateNameParameter'
        - $ref: '#/components/parameters/UpdateRunNameParameter'
      requestBody:
        description: Properties of the updateRuns object
        required: true
        x-ms-requestBody-name: updateRunsProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRun'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRun'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: UpdateRuns_Get
      description: Get the Update run for a specified update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/UpdateNameParameter'
        - $ref: '#/components/parameters/UpdateRunNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRun'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/?api-version=2024-01-01:
    get:
      operationId: Extensions_ListByArcSetting
      description: List all Extensions under ArcSetting resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}/?api-version=2024-01-01:
    get:
      operationId: Extensions_Get
      description: Get particular Arc Extension of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Extensions_Create
      description: Create Extension for HCI cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
      requestBody:
        description: Details of the Machine Extension to be created.
        required: true
        x-ms-requestBody-name: extension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Extension'
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      operationId: Extensions_Update
      description: Update Extension for HCI cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
      requestBody:
        description: Details of the Machine Extension to be created.
        required: true
        x-ms-requestBody-name: extension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
    delete:
      operationId: Extensions_Delete
      description: Delete particular Arc Extension of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: OK
        '204':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}/upgrade/?api-version=2024-01-01:
    post:
      operationId: Extensions_Upgrade
      description: Upgrade a particular Arc Extension of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ArcSettingNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
      requestBody:
        description: Parameters supplied to the Upgrade Extensions operation.
        required: true
        x-ms-requestBody-name: extensionUpgradeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionUpgradeParameters'
      responses:
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/?api-version=2024-01-01:
    get:
      operationId: EdgeDevices_List
      tags:
        - EdgeDevices
      description: List EdgeDevice resources by parent
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeviceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}/?api-version=2024-01-01:
    get:
      operationId: EdgeDevices_Get
      tags:
        - EdgeDevices
      description: Get a EdgeDevice
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
        - name: edgeDeviceName
          in: path
          description: Name of Device
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDevice'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: EdgeDevices_CreateOrUpdate
      tags:
        - EdgeDevices
      description: Create a EdgeDevice
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
        - name: edgeDeviceName
          in: path
          description: Name of Device
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDevice'
      responses:
        '200':
          description: Resource 'EdgeDevice' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDevice'
        '201':
          description: Resource 'EdgeDevice' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDevice'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: EdgeDevices_Delete
      tags:
        - EdgeDevices
      description: Delete a EdgeDevice
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
        - name: edgeDeviceName
          in: path
          description: Name of Device
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}/validate/?api-version=2024-01-01:
    post:
      operationId: EdgeDevices_Validate
      tags:
        - EdgeDevices
      description: A long-running resource action.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
        - name: edgeDeviceName
          in: path
          description: Name of Device
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: ValidateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateResponse'
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualHardDisks/{virtualHardDiskName}/?api-version=2024-01-01:
    get:
      operationId: VirtualHardDisks_Get
      description: Gets a virtual hard disk
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualHardDiskNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHardDisks'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: VirtualHardDisks_CreateOrUpdate
      description: The operation to create or update a virtual hard disk. Please note some properties can be set only during virtual hard disk creation.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualHardDiskNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: virtualHardDisks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHardDisks'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHardDisks'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHardDisks'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: VirtualHardDisks_Delete
      description: The operation to delete a virtual hard disk.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualHardDiskNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: VirtualHardDisks_Update
      description: The operation to update a virtual hard disk.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualHardDiskNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: virtualHardDisks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHardDisksUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHardDisks'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualHardDisks/?api-version=2024-01-01:
    get:
      operationId: VirtualHardDisks_List
      description: Lists all of the virtual hard disks in the specified resource group. Use the nextLink property in the response to get the next page of virtual hard disks.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHardDisksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/virtualHardDisks/?api-version=2024-01-01:
    get:
      operationId: VirtualHardDisks_ListAll
      description: Lists all of the virtual hard disks in the specified subscription. Use the nextLink property in the response to get the next page of virtual hard disks.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHardDisksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/securitySettings/?api-version=2024-01-01:
    get:
      operationId: SecuritySettings_ListByClusters
      tags:
        - SecuritySettings
      description: List SecuritySetting resources by Clusters
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySettingListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/securitySettings/{securitySettingsName}/?api-version=2024-01-01:
    get:
      operationId: SecuritySettings_Get
      tags:
        - SecuritySettings
      description: Get a SecuritySetting
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - name: securitySettingsName
          in: path
          description: Name of security setting
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: SecuritySettings_CreateOrUpdate
      tags:
        - SecuritySettings
      description: Create a security setting
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - name: securitySettingsName
          in: path
          description: Name of security setting
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySetting'
      responses:
        '200':
          description: Resource 'SecuritySetting' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySetting'
        '201':
          description: Resource 'SecuritySetting' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySetting'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: SecuritySettings_Delete
      tags:
        - SecuritySettings
      description: Delete a SecuritySetting
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - name: securitySettingsName
          in: path
          description: Name of security setting
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/?api-version=2024-01-01:
    get:
      operationId: Offers_ListByPublisher
      description: List Offers available for a publisher within the HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ODataExpandParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/offers/?api-version=2024-01-01:
    get:
      operationId: Offers_ListByCluster
      description: List Offers available across publishers for the HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ODataExpandParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}/?api-version=2024-01-01:
    get:
      operationId: Offers_Get
      description: Get Offer resource details within a publisher of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/OfferNameParameter'
        - $ref: '#/components/parameters/ODataExpandParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/networkInterfaces/{networkInterfaceName}/?api-version=2024-01-01:
    get:
      operationId: NetworkInterfaces_Get
      description: Gets a network interface
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaces'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: NetworkInterfaces_CreateOrUpdate
      description: The operation to create or update a network interface. Please note some properties can be set only during network interface creation.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: networkInterfaces
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterfaces'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaces'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaces'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: NetworkInterfaces_Delete
      description: The operation to delete a network interface.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: NetworkInterfaces_Update
      description: The operation to update a network interface.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: networkInterfaces
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterfacesUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaces'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/networkInterfaces/?api-version=2024-01-01:
    get:
      operationId: NetworkInterfaces_List
      description: Lists all of the network interfaces in the specified resource group. Use the nextLink property in the response to get the next page of network interfaces.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfacesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/networkInterfaces/?api-version=2024-01-01:
    get:
      operationId: NetworkInterfaces_ListAll
      description: Lists all of the network interfaces in the specified subscription. Use the nextLink property in the response to get the next page of network interfaces.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfacesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/galleryImages/{galleryImageName}/?api-version=2024-01-01:
    get:
      operationId: GalleryImages_Get
      description: Gets a gallery image
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/GalleryImageNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImages'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: GalleryImages_CreateOrUpdate
      description: The operation to create or update a gallery image. Please note some properties can be set only during gallery image creation.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/GalleryImageNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: galleryImages
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryImages'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImages'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImages'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: GalleryImages_Delete
      description: The operation to delete a gallery image.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/GalleryImageNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: GalleryImages_Update
      description: The operation to update a gallery image.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/GalleryImageNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: galleryImages
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryImagesUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImages'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/galleryImages/?api-version=2024-01-01:
    get:
      operationId: GalleryImages_List
      description: Lists all of the gallery images in the specified resource group. Use the nextLink property in the response to get the next page of gallery images.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImagesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/galleryImages/?api-version=2024-01-01:
    get:
      operationId: GalleryImages_ListAll
      description: Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get the next page of gallery images.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImagesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/apply/?api-version=2024-01-01:
    post:
      operationId: Updates_Post
      description: Apply Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/UpdateNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: ACCEPTED
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/?api-version=2024-01-01:
    get:
      operationId: Updates_List
      description: List all Updates
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/?api-version=2024-01-01:
    delete:
      operationId: Updates_Delete
      description: Delete specified Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/UpdateNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: ACCEPTED
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    put:
      operationId: Updates_Put
      description: Put specified Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/UpdateNameParameter'
      requestBody:
        description: Properties of the Updates object
        required: true
        x-ms-requestBody-name: updateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Update'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: Updates_Get
      description: Get specified Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/UpdateNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Update'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/?api-version=2024-01-01:
    get:
      operationId: Publishers_ListByCluster
      description: List Publishers available for the HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/?api-version=2024-01-01:
    get:
      operationId: Publishers_Get
      description: Get Publisher resource details of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}/?api-version=2024-01-01:
    get:
      operationId: LogicalNetworks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LogicalNetworkNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworks'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: LogicalNetworks_CreateOrUpdate
      description: The operation to create or update a logical network. Please note some properties can be set only during logical network creation.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LogicalNetworkNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: logicalNetworks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicalNetworks'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworks'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworks'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: LogicalNetworks_Delete
      description: The operation to delete a logical network.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LogicalNetworkNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: LogicalNetworks_Update
      description: The operation to update a logical network.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LogicalNetworkNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: logicalNetworks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicalNetworksUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworks'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/?api-version=2024-01-01:
    get:
      operationId: LogicalNetworks_List
      description: Lists all of the logical networks in the specified resource group. Use the nextLink property in the response to get the next page of logical networks.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/logicalNetworks/?api-version=2024-01-01:
    get:
      operationId: LogicalNetworks_ListAll
      description: Lists all of the logical networks in the specified subscription. Use the nextLink property in the response to get the next page of logical networks.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updateSummaries/?api-version=2024-01-01:
    get:
      operationId: UpdateSummaries_List
      description: List all Update summaries under the HCI cluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSummariesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updateSummaries/default/?api-version=2024-01-01:
    delete:
      operationId: UpdateSummaries_Delete
      description: Delete Update Summaries
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: ACCEPTED
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    put:
      operationId: UpdateSummaries_Put
      description: Put Update summaries under the HCI cluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: Properties of the UpdateSummaries resource
        required: true
        x-ms-requestBody-name: updateLocationProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSummaries'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSummaries'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: UpdateSummaries_Get
      description: Get all Update summaries under the HCI cluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSummaries'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}/skus/?api-version=2024-01-01:
    get:
      operationId: Skus_ListByOffer
      description: List Skus available for a offer within the HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/OfferNameParameter'
        - $ref: '#/components/parameters/ODataExpandParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}/skus/{skuName}/?api-version=2024-01-01:
    get:
      operationId: Skus_Get
      description: Get SKU resource details within a offer of HCI Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/OfferNameParameter'
        - $ref: '#/components/parameters/SkuNameParameter'
        - $ref: '#/components/parameters/ODataExpandParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/storageContainers/{storageContainerName}/?api-version=2024-01-01:
    get:
      operationId: StorageContainers_Get
      description: Gets a storage container
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageContainerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainers'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: StorageContainers_CreateOrUpdate
      description: The operation to create or update a storage container. Please note some properties can be set only during storage container creation.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageContainerNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: storageContainers
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageContainers'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainers'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainers'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: StorageContainers_Delete
      description: The operation to delete a storage container.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageContainerNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: StorageContainers_Update
      description: The operation to update a storage container.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageContainerNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: storageContainers
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageContainersUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainers'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/storageContainers/?api-version=2024-01-01:
    get:
      operationId: StorageContainers_List
      description: Lists all of the storage containers in the specified resource group. Use the nextLink property in the response to get the next page of storage containers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainersListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/storageContainers/?api-version=2024-01-01:
    get:
      operationId: StorageContainers_ListAll
      description: Lists all of the storage containers in the specified subscription. Use the nextLink property in the response to get the next page of storage containers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainersListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/?api-version=2024-01-01:
    get:
      operationId: VirtualMachineInstances_Get
      description: Gets a virtual machine instance
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: VirtualMachineInstances_CreateOrUpdate
      description: The operation to create or update a virtual machine instance. Please note some properties can be set only during virtual machine instance creation.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: virtualMachineInstance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstance'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: VirtualMachineInstances_Delete
      description: The operation to delete a virtual machine instance.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: VirtualMachineInstances_Update
      description: The operation to update a virtual machine instance.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: virtualMachineInstance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstanceUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/start/?api-version=2024-01-01:
    post:
      operationId: VirtualMachineInstances_Start
      description: The operation to start a virtual machine instance.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/stop/?api-version=2024-01-01:
    post:
      operationId: VirtualMachineInstances_Stop
      description: The operation to stop a virtual machine instance.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/restart/?api-version=2024-01-01:
    post:
      operationId: VirtualMachineInstances_Restart
      description: The operation to restart a virtual machine instance.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/?api-version=2024-01-01:
    get:
      operationId: VirtualMachineInstances_List
      description: Lists all of the virtual machine instances within the specified parent resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstanceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/hybridIdentityMetadata/default/?api-version=2024-01-01:
    get:
      tags:
        - HybridIdentityMetadata
      operationId: HybridIdentityMetadata_Get
      summary: Gets HybridIdentityMetadata.
      description: Implements HybridIdentityMetadata GET method.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridIdentityMetadata'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/hybridIdentityMetadata/?api-version=2024-01-01:
    get:
      tags:
        - HybridIdentityMetadata
      operationId: HybridIdentityMetadata_List
      summary: Implements GET HybridIdentityMetadata in a vm.
      description: Returns the list of HybridIdentityMetadata of the given vm.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridIdentityMetadataList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/guestAgents/default/?api-version=2024-01-01:
    put:
      tags:
        - GuestAgents
      operationId: GuestAgent_Create
      description: Create Or Update GuestAgent.
      summary: Implements GuestAgent PUT method.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestAgent'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - GuestAgents
      operationId: GuestAgent_Get
      summary: Gets GuestAgent.
      description: Implements GuestAgent GET method.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GuestAgents
      operationId: GuestAgent_Delete
      summary: Deleted an GuestAgent.
      description: Implements GuestAgent DELETE method.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/guestAgents/?api-version=2024-01-01:
    get:
      tags:
        - GuestAgents
      operationId: GuestAgents_List
      summary: Implements GET GuestAgent in a vm.
      description: Returns the list of GuestAgent of the given vm.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/deploymentSettings/?api-version=2024-01-01:
    get:
      operationId: DeploymentSettings_ListByClusters
      tags:
        - DeploymentSettings
      description: List DeploymentSetting resources by Clusters
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSettingListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/deploymentSettings/{deploymentSettingsName}/?api-version=2024-01-01:
    get:
      operationId: DeploymentSettings_Get
      tags:
        - DeploymentSettings
      description: Get a DeploymentSetting
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - name: deploymentSettingsName
          in: path
          description: Name of Deployment Setting
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: DeploymentSettings_CreateOrUpdate
      tags:
        - DeploymentSettings
      description: Create a DeploymentSetting
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - name: deploymentSettingsName
          in: path
          description: Name of Deployment Setting
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentSetting'
      responses:
        '200':
          description: Resource 'DeploymentSetting' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSetting'
        '201':
          description: Resource 'DeploymentSetting' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSetting'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: DeploymentSettings_Delete
      tags:
        - DeploymentSettings
      description: Delete a DeploymentSetting
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - name: deploymentSettingsName
          in: path
          description: Name of Deployment Setting
          required: true
          schema:
            default: default
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages/{marketplaceGalleryImageName}/?api-version=2024-01-01:
    get:
      operationId: MarketplaceGalleryImages_Get
      description: Gets a marketplace gallery image
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MarketplaceGalleryImageNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceGalleryImages'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: MarketplaceGalleryImages_CreateOrUpdate
      description: The operation to create or update a marketplace gallery image. Please note some properties can be set only during marketplace gallery image creation.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MarketplaceGalleryImageNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: marketplaceGalleryImages
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceGalleryImages'
      responses:
        '200':
          description: Updates the marketplace gallery image resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceGalleryImages'
        '201':
          description: Creates the marketplace gallery image resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceGalleryImages'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: MarketplaceGalleryImages_Delete
      description: The operation to delete a marketplace gallery image.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MarketplaceGalleryImageNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: MarketplaceGalleryImages_Update
      description: The operation to update a marketplace gallery image.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MarketplaceGalleryImageNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: marketplaceGalleryImages
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceGalleryImagesUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceGalleryImages'
        '202':
          description: Updates the marketplace gallery image resource.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages/?api-version=2024-01-01:
    get:
      operationId: MarketplaceGalleryImages_List
      description: Lists all of the marketplace gallery images in the specified resource group. Use the nextLink property in the response to get the next page of marketplace gallery images.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all marketplace gallery images under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceGalleryImagesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages/?api-version=2024-01-01:
    get:
      operationId: MarketplaceGalleryImages_ListAll
      description: Lists all of the marketplace gallery images in the specified subscription. Use the nextLink property in the response to get the next page of marketplace gallery images.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all marketplace gallery images under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceGalleryImagesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
