paths:
  /builds/{build_id}:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/build'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - build
      operationId: getSiteBuild
      parameters:
        - in: path
          name: build_id
          required: true
          schema:
            type: string
  /builds/{build_id}/start:
    post:
      responses:
        '204':
          description: No content
        default:
          $ref: '#/components/responses/error'
      tags:
        - build
      operationId: notifyBuildStart
      parameters:
        - in: path
          name: build_id
          required: true
          schema:
            type: string
  /sites/{site_id}/builds:
    get:
      parameters: &ref_0
        - in: path
          name: site_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/build'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - build
      operationId: listSiteBuilds
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/build'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - build
      operationId: createSiteBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/buildSetup'
      parameters: *ref_0
  /{account_id}/builds/status:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/buildStatus'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - build
      operationId: getAccountBuildStatus
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
components:
  schemas:
    build:
      properties:
        created_at:
          format: dateTime
          type: string
        deploy_id:
          type: string
        done:
          type: boolean
        error:
          type: string
        id:
          type: string
        sha:
          type: string
      type: object
    error:
      properties:
        code:
          format: int64
          type: integer
        message:
          nullable: false
          type: string
      required:
        - message
      type: object
    buildSetup:
      properties:
        image:
          type: string
      type: object
    buildStatus:
      properties:
        active:
          type: integer
        build_count:
          type: integer
        enqueued:
          type: integer
        minutes:
          properties:
            current:
              type: integer
            current_average_sec:
              type: integer
            included_minutes:
              type: string
            included_minutes_with_packs:
              type: string
            last_updated_at:
              format: dateTime
              type: string
            period_end_date:
              format: dateTime
              type: string
            period_start_date:
              format: dateTime
              type: string
            previous:
              type: integer
          type: object
        pending_concurrency:
          type: integer
      type: object
  parameters:
    page:
      in: query
      name: page
      required: false
      schema:
        format: int32
        type: integer
    perPage:
      in: query
      name: per_page
      required: false
      schema:
        format: int32
        type: integer
  responses:
    error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: error
  securitySchemes: {}
  callbacks: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    builds:
      id: netlify.build.builds
      name: builds
      title: Builds
      methods:
        getSiteBuild:
          operation:
            $ref: '#/paths/~1builds~1{build_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/builds/methods/getSiteBuild'
        insert: []
        update: []
        delete: []
    builds_start:
      id: netlify.build.builds_start
      name: builds_start
      title: Builds_start
      methods:
        notifyBuildStart:
          operation:
            $ref: '#/paths/~1builds~1{build_id}~1start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    sites_builds:
      id: netlify.build.sites_builds
      name: sites_builds
      title: Sites_builds
      methods:
        listSiteBuilds:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1builds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createSiteBuild:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1builds/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sites_builds/methods/listSiteBuilds'
        insert:
          - $ref: '#/components/x-stackQL-resources/sites_builds/methods/createSiteBuild'
        update: []
        delete: []
    builds_status:
      id: netlify.build.builds_status
      name: builds_status
      title: Builds_status
      methods:
        getAccountBuildStatus:
          operation:
            $ref: '#/paths/~1{account_id}~1builds~1status/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/builds_status/methods/getAccountBuildStatus'
        insert: []
        update: []
        delete: []
openapi: 3.0.0
servers:
  - url: https://api.netlify.com/api/v1
security:
  - netlifyAuth: []
tags:
  - name: ticket
    x-displayName: Ticket
  - name: accessToken
    x-displayName: Access token
  - name: user
    x-displayName: User
  - name: accountMembership
    x-displayName: Accounts
  - name: member
    x-displayName: Member
  - name: accountType
    x-displayName: Access type
  - name: paymentMethod
    x-displayName: Payment method
  - name: auditLog
    x-displayName: Audit log
  - name: site
    x-displayName: Site
  - name: file
    x-displayName: File
  - name: metadata
    x-displayName: Metadata
  - name: snippet
    x-displayName: Snippet
  - name: dnsZone
    x-displayName: DNS zone
  - name: sniCertificate
    x-displayName: SNI certificate
  - name: deploy
    x-displayName: Deploy
  - name: deployedBranch
    x-displayName: Deployed branch
  - name: deployKey
    x-displayName: Deploy key
  - name: build
    x-displayName: Build
  - name: buildLogMsg
    x-displayName: Build log message
  - name: hook
    x-displayName: Hook
  - name: hookType
    x-displayName: Hook type
  - name: buildHook
    x-displayName: Build hook
  - name: service
    x-displayName: Service
  - name: serviceInstance
    x-displayName: Service instance
  - name: function
    x-displayName: Function
  - name: form
    x-displayName: Form
  - name: submission
    x-displayName: Form submission
  - name: splitTest
    x-displayName: Split test
  - name: asset
    x-displayName: Asset
  - name: assetPublicSignature
    x-displayName: Asset public signature
externalDocs:
  description: Online documentation
  url: https://www.netlify.com/docs/api/
info:
  description: build
  termsOfService: https://www.netlify.com/legal/terms-of-use/
  title: Netlify's API documentation - build
  version: 2.9.0
  x-logo:
    altText: Netlify
    href: https://www.netlify.com/docs/
    url: netlify-logo.png
