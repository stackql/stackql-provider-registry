paths:
  /accounts:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accountMembership'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - accountMembership
      operationId: listAccountsForUser
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountMembership'
          description: Created
        default:
          $ref: '#/components/responses/error'
      tags:
        - accountMembership
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountSetup'
        required: true
  /accounts/types:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accountType'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - accountType
      operationId: listAccountTypesForUser
  /accounts/{account_id}:
    delete:
      responses:
        '204':
          description: Not Content
        default:
          $ref: '#/components/responses/error'
      tags:
        - accountMembership
      operationId: cancelAccount
      parameters: &ref_0
        - in: path
          name: account_id
          required: true
          schema:
            type: string
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accountMembership'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - accountMembership
      operationId: getAccount
      parameters: *ref_0
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountMembership'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - accountMembership
      operationId: updateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountUpdateSetup'
      parameters: *ref_0
  /accounts/{account_id}/audit:
    get:
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/auditLog'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - auditLog
      operationId: listAccountAuditEvents
  /billing/payment_methods:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/paymentMethod'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - paymentMethod
      operationId: listPaymentMethodsForUser
  /user:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/user'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - user
      operationId: getCurrentUser
  /{account_slug}/members:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/member'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - member
      operationId: listMembersForAccount
      parameters: &ref_1
        - in: path
          name: account_slug
          required: true
          schema:
            type: string
    post:
      parameters: *ref_1
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/member'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - member
      operationId: addMemberToAccount
components:
  schemas:
    accountMembership:
      properties:
        billing_details:
          type: string
        billing_email:
          type: string
        billing_name:
          type: string
        billing_period:
          type: string
        capabilities:
          properties:
            collaborators:
              $ref: '#/components/schemas/accountUsageCapability'
            sites:
              $ref: '#/components/schemas/accountUsageCapability'
          type: object
        created_at:
          format: dateTime
          type: string
        id:
          type: string
        name:
          type: string
        owner_ids:
          items:
            type: string
          type: array
        payment_method_id:
          type: string
        roles_allowed:
          items:
            type: string
          type: array
        slug:
          type: string
        type:
          type: string
        type_id:
          type: string
        type_name:
          type: string
        updated_at:
          format: dateTime
          type: string
      type: object
    accountUsageCapability:
      properties:
        included:
          type: integer
        used:
          type: integer
      type: object
    error:
      properties:
        code:
          format: int64
          type: integer
        message:
          nullable: false
          type: string
      required:
        - message
      type: object
    accountSetup:
      properties:
        extra_seats_block:
          type: integer
        name:
          type: string
        payment_method_id:
          type: string
        period:
          enum:
            - monthly
            - yearly
          type: string
        type_id:
          type: string
      required:
        - name
        - type_id
      type: object
    accountType:
      properties:
        capabilities:
          type: object
        description:
          type: string
        id:
          type: string
        monthly_dollar_price:
          type: integer
        monthly_seats_addon_dollar_price:
          type: integer
        name:
          type: string
        yearly_dollar_price:
          type: integer
        yearly_seats_addon_dollar_price:
          type: integer
      type: object
    accountUpdateSetup:
      properties:
        billing_details:
          type: string
        billing_email:
          type: string
        billing_name:
          type: string
        extra_seats_block:
          type: integer
        name:
          type: string
        slug:
          type: string
        type_id:
          type: string
      type: object
    auditLog:
      properties:
        account_id:
          type: string
        id:
          type: string
        payload:
          additionalProperties:
            type: object
          properties:
            action:
              type: string
            actor_email:
              type: string
            actor_id:
              type: string
            actor_name:
              type: string
            log_type:
              type: string
            timestamp:
              format: dateTime
              type: string
          type: object
      type: object
    paymentMethod:
      properties:
        created_at:
          format: dateTime
          type: string
        data:
          properties:
            card_type:
              type: string
            email:
              type: string
            last4:
              type: string
          type: object
        id:
          type: string
        method_name:
          type: string
        state:
          type: string
        type:
          type: string
        updated_at:
          format: dateTime
          type: string
      type: object
    user:
      properties:
        affiliate_id:
          type: string
        avatar_url:
          type: string
        created_at:
          format: dateTime
          type: string
        email:
          type: string
        full_name:
          type: string
        id:
          type: string
        last_login:
          format: dateTime
          type: string
        login_providers:
          items:
            type: string
          type: array
        onboarding_progress:
          properties:
            slides:
              type: string
          type: object
        site_count:
          format: int64
          type: integer
        uid:
          type: string
      type: object
    member:
      properties:
        avatar:
          type: string
        email:
          type: string
        full_name:
          type: string
        id:
          type: string
        role:
          type: string
      type: object
  parameters:
    page:
      in: query
      name: page
      required: false
      schema:
        format: int32
        type: integer
    perPage:
      in: query
      name: per_page
      required: false
      schema:
        format: int32
        type: integer
  responses:
    error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: error
  securitySchemes: {}
  callbacks: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    accountMembership:
      id: netlify.user_accounts.accountMembership
      name: accountMembership
      title: accountMembership
      methods:
        listAccountsForUser:
          operation:
            $ref: '#/paths/~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createAccount:
          operation:
            $ref: '#/paths/~1accounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        cancelAccount:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        getAccount:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateAccount:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accountMembership/methods/getAccount'
          - $ref: '#/components/x-stackQL-resources/accountMembership/methods/listAccountsForUser'
        insert:
          - $ref: '#/components/x-stackQL-resources/accountMembership/methods/createAccount'
        update: []
        delete: []
    accountType:
      id: netlify.user_accounts.accountType
      name: accountType
      title: accountType
      methods:
        listAccountTypesForUser:
          operation:
            $ref: '#/paths/~1accounts~1types/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accountType/methods/listAccountTypesForUser'
        insert: []
        update: []
        delete: []
    auditLog:
      id: netlify.user_accounts.auditLog
      name: auditLog
      title: auditLog
      methods:
        listAccountAuditEvents:
          operation:
            $ref: '#/paths/~1accounts~1{account_id}~1audit/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/auditLog/methods/listAccountAuditEvents'
        insert: []
        update: []
        delete: []
    paymentMethod:
      id: netlify.user_accounts.paymentMethod
      name: paymentMethod
      title: paymentMethod
      methods:
        listPaymentMethodsForUser:
          operation:
            $ref: '#/paths/~1billing~1payment_methods/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/paymentMethod/methods/listPaymentMethodsForUser'
        insert: []
        update: []
        delete: []
    user:
      id: netlify.user_accounts.user
      name: user
      title: user
      methods:
        getCurrentUser:
          operation:
            $ref: '#/paths/~1user/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user/methods/getCurrentUser'
        insert: []
        update: []
        delete: []
    member:
      id: netlify.user_accounts.member
      name: member
      title: member
      methods:
        listMembersForAccount:
          operation:
            $ref: '#/paths/~1{account_slug}~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        addMemberToAccount:
          operation:
            $ref: '#/paths/~1{account_slug}~1members/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/member/methods/listMembersForAccount'
        insert:
          - $ref: '#/components/x-stackQL-resources/member/methods/addMemberToAccount'
        update: []
        delete: []
openapi: 3.0.0
servers:
  - url: https://api.netlify.com/api/v1
security:
  - netlifyAuth: []
tags:
  - name: ticket
    x-displayName: Ticket
  - name: accessToken
    x-displayName: Access token
  - name: user
    x-displayName: User
  - name: accountMembership
    x-displayName: Accounts
  - name: member
    x-displayName: Member
  - name: accountType
    x-displayName: Access type
  - name: paymentMethod
    x-displayName: Payment method
  - name: auditLog
    x-displayName: Audit log
  - name: site
    x-displayName: Site
  - name: file
    x-displayName: File
  - name: metadata
    x-displayName: Metadata
  - name: snippet
    x-displayName: Snippet
  - name: dnsZone
    x-displayName: DNS zone
  - name: sniCertificate
    x-displayName: SNI certificate
  - name: deploy
    x-displayName: Deploy
  - name: deployedBranch
    x-displayName: Deployed branch
  - name: deployKey
    x-displayName: Deploy key
  - name: build
    x-displayName: Build
  - name: buildLogMsg
    x-displayName: Build log message
  - name: hook
    x-displayName: Hook
  - name: hookType
    x-displayName: Hook type
  - name: buildHook
    x-displayName: Build hook
  - name: service
    x-displayName: Service
  - name: serviceInstance
    x-displayName: Service instance
  - name: function
    x-displayName: Function
  - name: form
    x-displayName: Form
  - name: submission
    x-displayName: Form submission
  - name: splitTest
    x-displayName: Split test
  - name: asset
    x-displayName: Asset
  - name: assetPublicSignature
    x-displayName: Asset public signature
externalDocs:
  description: Online documentation
  url: https://www.netlify.com/docs/api/
info:
  description: User Accounts
  termsOfService: https://www.netlify.com/legal/terms-of-use/
  title: Netlify's API documentation - user_accounts
  version: 2.9.0
  x-logo:
    altText: Netlify
    href: https://www.netlify.com/docs/
    url: netlify-logo.png
