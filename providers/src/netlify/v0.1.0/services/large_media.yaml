paths:
  /sites/{site_id}/assets:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/asset'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - asset
      operationId: listSiteAssets
      parameters: &ref_0
        - in: path
          name: site_id
          required: true
          schema:
            type: string
    post:
      parameters: *ref_0
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetSignature'
          description: Created
        default:
          $ref: '#/components/responses/error'
      tags:
        - asset
      operationId: createSiteAsset
  /sites/{site_id}/assets/{asset_id}:
    delete:
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/error'
      tags:
        - asset
      operationId: deleteSiteAsset
      parameters: &ref_1
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: asset_id
          required: true
          schema:
            type: string
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - asset
      operationId: getSiteAssetInfo
      parameters: *ref_1
    put:
      parameters: *ref_1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset'
          description: Updated
        default:
          $ref: '#/components/responses/error'
      tags:
        - asset
      operationId: updateSiteAsset
  /sites/{site_id}/assets/{asset_id}/public_signature:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetPublicSignature'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - assetPublicSignature
      operationId: getSiteAssetPublicSignature
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: asset_id
          required: true
          schema:
            type: string
components:
  schemas:
    asset:
      properties:
        content_type:
          type: string
        created_at:
          format: dateTime
          type: string
        creator_id:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        site_id:
          type: string
        size:
          format: int64
          type: integer
        state:
          type: string
        updated_at:
          format: dateTime
          type: string
        url:
          type: string
        visibility:
          type: string
      type: object
    error:
      properties:
        code:
          format: int64
          type: integer
        message:
          nullable: false
          type: string
      required:
        - message
      type: object
    assetSignature:
      properties:
        asset:
          $ref: '#/components/schemas/asset'
          type: object
        form:
          $ref: '#/components/schemas/assetForm'
          type: object
      type: object
    assetForm:
      properties:
        fields:
          additionalProperties:
            type: string
          type: object
        url:
          type: string
      type: object
    assetPublicSignature:
      properties:
        url:
          type: string
      type: object
  parameters: {}
  responses:
    error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: error
  securitySchemes: {}
  callbacks: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    asset:
      id: netlify.large_media.asset
      name: asset
      title: asset
      methods:
        listSiteAssets:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createSiteAsset:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1assets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        deleteSiteAsset:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1assets~1{asset_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        getSiteAssetInfo:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1assets~1{asset_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateSiteAsset:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1assets~1{asset_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/asset/methods/getSiteAssetInfo'
          - $ref: '#/components/x-stackQL-resources/asset/methods/listSiteAssets'
        insert:
          - $ref: '#/components/x-stackQL-resources/asset/methods/createSiteAsset'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/asset/methods/deleteSiteAsset'
    assetPublicSignature:
      id: netlify.large_media.assetPublicSignature
      name: assetPublicSignature
      title: assetPublicSignature
      methods:
        getSiteAssetPublicSignature:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1assets~1{asset_id}~1public_signature/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assetPublicSignature/methods/getSiteAssetPublicSignature'
        insert: []
        update: []
        delete: []
openapi: 3.0.0
servers:
  - url: https://api.netlify.com/api/v1
security:
  - netlifyAuth: []
tags:
  - name: ticket
    x-displayName: Ticket
  - name: accessToken
    x-displayName: Access token
  - name: user
    x-displayName: User
  - name: accountMembership
    x-displayName: Accounts
  - name: member
    x-displayName: Member
  - name: accountType
    x-displayName: Access type
  - name: paymentMethod
    x-displayName: Payment method
  - name: auditLog
    x-displayName: Audit log
  - name: site
    x-displayName: Site
  - name: file
    x-displayName: File
  - name: metadata
    x-displayName: Metadata
  - name: snippet
    x-displayName: Snippet
  - name: dnsZone
    x-displayName: DNS zone
  - name: sniCertificate
    x-displayName: SNI certificate
  - name: deploy
    x-displayName: Deploy
  - name: deployedBranch
    x-displayName: Deployed branch
  - name: deployKey
    x-displayName: Deploy key
  - name: build
    x-displayName: Build
  - name: buildLogMsg
    x-displayName: Build log message
  - name: hook
    x-displayName: Hook
  - name: hookType
    x-displayName: Hook type
  - name: buildHook
    x-displayName: Build hook
  - name: service
    x-displayName: Service
  - name: serviceInstance
    x-displayName: Service instance
  - name: function
    x-displayName: Function
  - name: form
    x-displayName: Form
  - name: submission
    x-displayName: Form submission
  - name: splitTest
    x-displayName: Split test
  - name: asset
    x-displayName: Asset
  - name: assetPublicSignature
    x-displayName: Asset public signature
externalDocs:
  description: Online documentation
  url: https://www.netlify.com/docs/api/
info:
  description: Large Media
  termsOfService: https://www.netlify.com/legal/terms-of-use/
  title: Netlify's API documentation - large_media
  version: 2.9.0
  x-logo:
    altText: Netlify
    href: https://www.netlify.com/docs/
    url: netlify-logo.png
