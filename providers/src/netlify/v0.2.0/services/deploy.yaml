paths:
  /deploys/{deploy_id}:
    get:
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: getDeploy
  /deploys/{deploy_id}/cancel:
    post:
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: Cancelled
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: cancelSiteDeploy
  /deploys/{deploy_id}/lock:
    post:
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: lockDeploy
  /deploys/{deploy_id}/unlock:
    post:
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: unlockDeploy
  /sites/{site_id}/deploys:
    get:
      parameters: &ref_0
        - in: path
          name: site_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/deploy'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: listSiteDeploys
    post:
      parameters: *ref_0
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: createSiteDeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deployFiles'
        required: true
  /sites/{site_id}/deploys/{deploy_id}:
    get:
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: getSiteDeploy
    put:
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: OK
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: updateSiteDeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deployFiles'
        required: true
  /sites/{site_id}/deploys/{deploy_id}/restore:
    post:
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy'
          description: Created
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: restoreSiteDeploy
  /sites/{site_id}/rollback:
    put:
      responses:
        '204':
          description: No content
        default:
          $ref: '#/components/responses/error'
      tags:
        - deploy
      operationId: rollbackSiteDeploy
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
components:
  schemas:
    deploy:
      properties:
        admin_url:
          type: string
        branch:
          type: string
        build_id:
          type: string
        commit_ref:
          type: string
        commit_url:
          type: string
        context:
          type: string
        created_at:
          format: dateTime
          type: string
        deploy_ssl_url:
          type: string
        deploy_url:
          type: string
        draft:
          type: boolean
        error_message:
          type: string
        framework:
          type: string
        function_schedules:
          items:
            $ref: '#/components/schemas/functionSchedule'
          type: array
        id:
          type: string
        locked:
          type: boolean
        name:
          type: string
        published_at:
          format: dateTime
          type: string
        required:
          items:
            type: string
          type: array
        required_functions:
          items:
            type: string
          type: array
        review_id:
          type: number
        review_url:
          type: string
        screenshot_url:
          type: string
        site_capabilities:
          properties:
            large_media_enabled:
              type: boolean
          type: object
        site_id:
          type: string
        skipped:
          type: boolean
        ssl_url:
          type: string
        state:
          type: string
        title:
          type: string
        updated_at:
          format: dateTime
          type: string
        url:
          type: string
        user_id:
          type: string
      type: object
    functionSchedule:
      properties:
        cron:
          type: string
        name:
          type: string
      type: object
    error:
      properties:
        code:
          format: int64
          type: integer
        message:
          nullable: false
          type: string
      required:
        - message
      type: object
    deployFiles:
      properties:
        async:
          type: boolean
        branch:
          type: string
        draft:
          type: boolean
        files:
          type: object
        framework:
          type: string
        function_schedules:
          items:
            $ref: '#/components/schemas/functionSchedule'
          type: array
        functions:
          type: object
      type: object
  parameters:
    page:
      in: query
      name: page
      required: false
      schema:
        format: int32
        type: integer
    perPage:
      in: query
      name: per_page
      required: false
      schema:
        format: int32
        type: integer
  responses:
    error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: error
  securitySchemes: {}
  callbacks: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    deploys:
      id: netlify.deploy.deploys
      name: deploys
      title: Deploys
      methods:
        getDeploy:
          operation:
            $ref: '#/paths/~1deploys~1{deploy_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deploys/methods/getDeploy'
        insert: []
        update: []
        delete: []
    deploys_cancel:
      id: netlify.deploy.deploys_cancel
      name: deploys_cancel
      title: Deploys_cancel
      methods:
        cancelSiteDeploy:
          operation:
            $ref: '#/paths/~1deploys~1{deploy_id}~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    deploys_lock:
      id: netlify.deploy.deploys_lock
      name: deploys_lock
      title: Deploys_lock
      methods:
        lockDeploy:
          operation:
            $ref: '#/paths/~1deploys~1{deploy_id}~1lock/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    deploys_unlock:
      id: netlify.deploy.deploys_unlock
      name: deploys_unlock
      title: Deploys_unlock
      methods:
        unlockDeploy:
          operation:
            $ref: '#/paths/~1deploys~1{deploy_id}~1unlock/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    sites_deploys:
      id: netlify.deploy.sites_deploys
      name: sites_deploys
      title: Sites_deploys
      methods:
        listSiteDeploys:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1deploys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createSiteDeploy:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1deploys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getSiteDeploy:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1deploys~1{deploy_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateSiteDeploy:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1deploys~1{deploy_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sites_deploys/methods/getSiteDeploy'
          - $ref: '#/components/x-stackQL-resources/sites_deploys/methods/listSiteDeploys'
        insert:
          - $ref: '#/components/x-stackQL-resources/sites_deploys/methods/createSiteDeploy'
        update: []
        delete: []
    sites_deploys_restore:
      id: netlify.deploy.sites_deploys_restore
      name: sites_deploys_restore
      title: Sites_deploys_restore
      methods:
        restoreSiteDeploy:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1deploys~1{deploy_id}~1restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    sites_rollback:
      id: netlify.deploy.sites_rollback
      name: sites_rollback
      title: Sites_rollback
      methods:
        rollbackSiteDeploy:
          operation:
            $ref: '#/paths/~1sites~1{site_id}~1rollback/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
openapi: 3.0.0
servers:
  - url: https://api.netlify.com/api/v1
security:
  - netlifyAuth: []
tags:
  - name: ticket
    x-displayName: Ticket
  - name: accessToken
    x-displayName: Access token
  - name: user
    x-displayName: User
  - name: accountMembership
    x-displayName: Accounts
  - name: member
    x-displayName: Member
  - name: accountType
    x-displayName: Access type
  - name: paymentMethod
    x-displayName: Payment method
  - name: auditLog
    x-displayName: Audit log
  - name: site
    x-displayName: Site
  - name: file
    x-displayName: File
  - name: metadata
    x-displayName: Metadata
  - name: snippet
    x-displayName: Snippet
  - name: dnsZone
    x-displayName: DNS zone
  - name: sniCertificate
    x-displayName: SNI certificate
  - name: deploy
    x-displayName: Deploy
  - name: deployedBranch
    x-displayName: Deployed branch
  - name: deployKey
    x-displayName: Deploy key
  - name: build
    x-displayName: Build
  - name: buildLogMsg
    x-displayName: Build log message
  - name: hook
    x-displayName: Hook
  - name: hookType
    x-displayName: Hook type
  - name: buildHook
    x-displayName: Build hook
  - name: service
    x-displayName: Service
  - name: serviceInstance
    x-displayName: Service instance
  - name: function
    x-displayName: Function
  - name: form
    x-displayName: Form
  - name: submission
    x-displayName: Form submission
  - name: splitTest
    x-displayName: Split test
  - name: asset
    x-displayName: Asset
  - name: assetPublicSignature
    x-displayName: Asset public signature
externalDocs:
  description: Online documentation
  url: https://www.netlify.com/docs/api/
info:
  description: deploy
  termsOfService: https://www.netlify.com/legal/terms-of-use/
  title: Netlify's API documentation - deploy
  version: 2.9.0
  x-logo:
    altText: Netlify
    href: https://www.netlify.com/docs/
    url: netlify-logo.png
