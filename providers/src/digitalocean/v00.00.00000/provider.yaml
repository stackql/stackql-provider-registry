id: digitalocean
name: digitalocean
version: v00.00.00000
providerServices:
  account:
    id: account:v00.00.00000
    name: account
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/account.yaml
    title: DigitalOcean API - Account
    version: v00.00.00000
    description: Provides Information About Your Current Account.
  actions:
    id: actions:v00.00.00000
    name: actions
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/actions.yaml
    title: DigitalOcean API - Actions
    version: v00.00.00000
    description: |-
      Actions Are Records Of Events That Have Occurred On The Resources In Your Account.
      These Can Be Things Like Rebooting A Droplet, Or Transferring An Image To A New Region.
      An Action Object Is Created Every Time One Of These Actions Is Initiated. The Action
      Object Contains Information About The Current Status Of The Action, Start And Complete
      Timestamps, And The Associated Resource Type And ID.
      Every Action That Creates An Action Object Is Available Through This Endpoint. Completed
      Actions Are Not Removed From This List And Are Always Available For Querying.
      **Note:** You Can Pass The Following HTTP Header With The Request To Have The API Return
      The `Reserved Ips` Stanza Instead Of The `Floating Ips` Stanza:
      - `Accept: Application/Vnd.Digitalocean.Reserveip+Json`
  apps:
    id: apps:v00.00.00000
    name: apps
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/apps.yaml
    title: DigitalOcean API - Apps
    version: v00.00.00000
    description: |-
      App Platform Is A Platform-As-A-Service (PaaS) Offering From DigitalOcean That Allows
      Developers To Publish Code Directly To DigitalOcean Servers Without Worrying About The
      Underlying Infrastructure.
      Most API Operations Are Centered Around A Few Core Object Types. Following Are The
      Definitions Of These Types. These Definitions Will Be Omitted From The Operation-Specific
      Documentation.
      For Documentation On App Specifications (`AppSpec` Objects), Please Refer To The
      [Product Documentation](Https://Docs.Digitalocean.Com/Products/App-Platform/Reference/App-Spec/)).
  billing:
    id: billing:v00.00.00000
    name: billing
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/billing.yaml
    title: DigitalOcean API - Billing
    version: v00.00.00000
    description: |-
      The Billing Endpoints Allow You To Retrieve Your Account Balance, Invoices
      And Billing History.
      **Balance:** By Sending Requests To The `/V2/Customers/My/Balance` Endpoint, You Can
      Retrieve The Balance Information For The Requested Customer Account.
      **Invoices:** [Invoices](Https://Docs.Digitalocean.Com/Platform/Billing/Invoices/)
      Are Generated On The First Of Each Month For Every DigitalOcean
      Customer. An Invoice Preview Is Generated Daily, Which Can Be Accessed
      With The `Preview` Keyword In Place Of `$INVOICE UUID`. To Interact With
      Invoices, You Will Generally Send Requests To The Invoices Endpoint At
      `/V2/Customers/My/Invoices`.
      **Billing History:** Billing History Is A Record Of Billing Events For Your Account.
      For Example, Entries May Include Events Like Payments Made, Invoices
      Issued, Or Credits Granted. To Interact With Invoices, You
      Will Generally Send Requests To The Invoices Endpoint At
      `/V2/Customers/My/Billing History`.
  block_storage:
    id: block_storage:v00.00.00000
    name: block_storage
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/block_storage.yaml
    title: DigitalOcean API - Block Storage
    version: v00.00.00000
    description: |-
      [DigitalOcean Block Storage Volumes](Https://Docs.Digitalocean.Com/Products/Volumes/)
      Provide Expanded Storage Capacity For Your Droplets And Can Be Moved
      Between Droplets Within A Specific Region.
      Volumes Function As Raw Block Devices, Meaning They Appear To The
      Operating System As Locally Attached Storage Which Can Be Formatted Using
      Any File System Supported By The OS. They May Be Created In Sizes From
      1GiB To 16TiB.
      By Sending Requests To The `/V2/Volumes` Endpoint, You Can List, Create, Or
      Delete Volumes As Well As Attach And Detach Them From Droplets
  cdn:
    id: cdn:v00.00.00000
    name: cdn
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/cdn.yaml
    title: DigitalOcean API - Cdn
    version: v00.00.00000
    description: |-
      Content Hosted In DigitalOcean'S Object Storage Solution,
      [Spaces](Https://Docs.Digitalocean.Com/Products/Spaces/),
      Can Optionally Be Served By Our Globally Distributed Content Delivery
      Network (CDN). By Sending Requests To `/V2/Cdn/Endpoints`, You Can List,
      Create, Or Delete CDN Endpoints As Well As Purge Cached Content. To Use A
      Custom Subdomain To Access The CDN Endpoint, Provide The ID Of A
      DigitalOcean Managed TLS Certificate And The Fully Qualified Domain Name
      For The Custom Subdomain. 
      CDN Endpoints Have A Rate Limit Of Five Requests Per 10 Seconds.
  certificates:
    id: certificates:v00.00.00000
    name: certificates
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/certificates.yaml
    title: DigitalOcean API - Certificates
    version: v00.00.00000
    description: |-
      In Order To Perform SSL Termination On Load Balancers, DigitalOcean Offers
      Two Types Of [SSL Certificate Management](Https://Docs.Digitalocean.Com/Platform/Teams/Manage-Certificates):
      * **Custom**: User-Generated Certificates May Be Uploaded To DigitalOcean
      Where They Will Be Placed In A Fully Encrypted And Isolated Storage System.
      * **Let'S Encrypt**: Certificates May Be Automatically Generated By
      DigitalOcean Utilizing An Integration With Let'S Encrypt, The Free And
      Open Certificate Authority. These Certificates Will Also Be Automatically
      Renewed As Required.
  container_registry:
    id: container_registry:v00.00.00000
    name: container_registry
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/container_registry.yaml
    title: DigitalOcean API - Container Registry
    version: v00.00.00000
    description: |-
      DigitalOcean Offers The Ability For You To Create A
      [Private Container Registry](Https://Docs.Digitalocean.Com/Products/Container-Registry/)
      To Store Your Docker Images For Use With Your Kubernetes Clusters. This
      Container Registry Runs Inside The Same Datacenters As Your Cluster,
      Ensuring Reliable And Performant Rollout Of Image Deployments.
      You Can Only Create One Registry Per DigitalOcean Account, But You Can Use
      That Registry To Create As Many Repositories As You Wish.
  databases:
    id: databases:v00.00.00000
    name: databases
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/databases.yaml
    title: DigitalOcean API - Databases
    version: v00.00.00000
    description: |-
      DigitalOcean'S [Managed Database Service](Https://Docs.Digitalocean.Com/Products/Databases)
      Simplifies The Creation And Management Of Highly Available Database Clusters. Currently, It
      Offers Support For [PostgreSQL](Http://Docs.Digitalocean.Com/Products/Databases/Postgresql/),
      [Redis](Https://Docs.Digitalocean.Com/Products/Databases/Redis/),
      [MySQL](Https://Docs.Digitalocean.Com/Products/Databases/Mysql/), 
      [MongoDB](Https://Docs.Digitalocean.Com/Products/Databases/Mongodb/), And
      [OpenSearch](Https://Docs.Digitalocean.Com/Products/Databases/Opensearch/).
      By Sending Requests To The `/V2/Databases` Endpoint, You Can List, Create, Or Delete
      Database Clusters As Well As Scale The Size Of A Cluster, Add Or Remove Read-Only Replicas,
      And Manage Other Configuration Details.
      Database Clusters May Be Deployed In A Multi-Node, High-Availability Configuration.
      If Your Machine Type Is Above The Basic Nodes, Your Node Plan Is Above The Smallest Option,
      Or You Are Running MongoDB, You May Additionally Include Up To Two Standby Nodes In Your Cluster.
      The Size Of Individual Nodes In A Database Cluster Is Represented By A Human-Readable Slug,
      Which Is Used In Some Of The Following Requests. Each Slug Denotes The Node'S Identifier,
      CPU Count, And Amount Of RAM, In That Order.
      For A List Of Currently Available Database Slugs And Options, Use The `/V2/Databases/Options` Endpoint Or Use The 
      `Doctl Databases Options` [Command](Https://Docs.Digitalocean.Com/Reference/Doctl/Reference/Databases/Options).
  domains:
    id: domains:v00.00.00000
    name: domains
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/domains.yaml
    title: DigitalOcean API - Domains
    version: v00.00.00000
    description: |-
      Domain Resources Are Domain Names That You Have Purchased From A Domain
      Name Registrar That You Are Managing Through The
      [DigitalOcean DNS Interface](Https://Docs.Digitalocean.Com/Products/Networking/Dns/).
      This Resource Establishes Top-Level Control Over Each Domain. Actions That
      Affect Individual Domain Records Should Be Taken On The
      [Domain Records](#Tag/Domain-Records) Resource.
  droplets:
    id: droplets:v00.00.00000
    name: droplets
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/droplets.yaml
    title: DigitalOcean API - Droplets
    version: v00.00.00000
    description: |-
      A [Droplet](Https://Docs.Digitalocean.Com/Products/Droplets/) Is A DigitalOcean
      Virtual Machine. By Sending Requests To The Droplet Endpoint, You Can
      List, Create, Or Delete Droplets.
      Some Of The Attributes Will Have An Object Value. The `Region` And `Image`
      Objects Will All Contain The Standard Attributes Of Their Associated
      Types. Find More Information About Each Of These Objects In Their
      Respective Sections.
  firewalls:
    id: firewalls:v00.00.00000
    name: firewalls
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/firewalls.yaml
    title: DigitalOcean API - Firewalls
    version: v00.00.00000
    description: |-
      [DigitalOcean Cloud Firewalls](Https://Docs.Digitalocean.Com/Products/Networking/Firewalls/)
      Provide The Ability To Restrict Network Access To And From A Droplet
      Allowing You To Define Which Ports Will Accept Inbound Or Outbound
      Connections. By Sending Requests To The `/V2/Firewalls` Endpoint, You Can
      List, Create, Or Delete Firewalls As Well As Modify Access Rules.
  floating_ips:
    id: floating_ips:v00.00.00000
    name: floating_ips
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/floating_ips.yaml
    title: DigitalOcean API - Floating Ips
    version: v00.00.00000
    description: |-
      As Of 16 June 2022, We Have Renamed The Floating IP Product To [Reserved IPs](Https://Docs.Digitalocean.Com/Reference/Api/Api-Reference/#Tag/Reserved-IPs).
      The Reserved IP Product'S Endpoints Function The Exact Same Way As Floating IPs.
      The Only Difference Is The Name Change Throughout The URLs And Fields.
      For Example, The `Floating Ips` Field Is Now The `Reserved Ips` Field.
      The Floating IP Endpoints Will Remain Active Until Fall 2023 Before Being
      Permanently Deprecated.
      With The Exception Of The [Projects API](Https://Docs.Digitalocean.Com/Reference/Api/Api-Reference/#Tag/Projects),
      We Will Reflect This Change As An Additional Field In The Responses Across The API
      Where The `Floating Ip` Field Is Used. For Example, The Droplet Metadata Response
      Will Contain The Field `Reserved Ips` In Addition To The `Floating Ips` Field.
      Floating IPs Retrieved Using The Projects API Will Retain The Original Name.
      [DigitalOcean Floating IPs](Https://Docs.Digitalocean.Com/Products/Networking/Reserved-Ips/)
      Are Publicly-Accessible Static IP Addresses That Can Be Mapped To One Of
      Your Droplets. They Can Be Used To Create Highly Available Setups Or Other
      Configurations Requiring Movable Addresses.
      Floating IPs Are Bound To A Specific Region.
  functions:
    id: functions:v00.00.00000
    name: functions
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/functions.yaml
    title: DigitalOcean API - Functions
    version: v00.00.00000
    description: |-
      [Serverless Functions](Https://Docs.Digitalocean.Com/Products/Functions) Are Blocks Of Code That Run On Demand Without The Need To Manage Any Infrastructure.
      You Can Develop Functions On Your Local Machine And Then Deploy Them To A Namespace Using `Doctl`, The [Official DigitalOcean CLI Tool](Https://Docs.Digitalocean.Com/Reference/Doctl).
      The Serverless Functions API Currently Only Supports Creating And Managing Namespaces.
  images:
    id: images:v00.00.00000
    name: images
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/images.yaml
    title: DigitalOcean API - Images
    version: v00.00.00000
    description: |-
      A DigitalOcean [Image](Https://Docs.Digitalocean.Com/Products/Images/) Can Be
      Used To Create A Droplet And May Come In A Number Of Flavors. Currently,
      There Are Five Types Of Images: Snapshots, Backups, Applications,
      Distributions, And Custom Images.
      * [Snapshots](Https://Docs.Digitalocean.Com/Products/Snapshots/) Provide
      A Full Copy Of An Existing Droplet Instance Taken On Demand.
      * [Backups](Https://Docs.Digitalocean.Com/Products/Backups/) Are Similar
      To Snapshots But Are Created Automatically At Regular Intervals When
      Enabled For A Droplet.
      * [Custom Images](Https://Docs.Digitalocean.Com/Products/Custom-Images/)
      Are Linux-Based Virtual Machine Images (Raw, Qcow2, Vhdx, Vdi, And Vmdk
      Formats Are Supported) That You May Upload For Use On DigitalOcean.
      * Distributions Are The Public Linux Distributions That Are Available To
      Be Used As A Base To Create Droplets.
      * Applications, Or [1-Click Apps](Https://Docs.Digitalocean.Com/Products/Marketplace/),
      Are Distributions Pre-Configured With Additional Software.
      To Interact With Images, You Will Generally Send Requests To The Images
      Endpoint At /V2/Images.
  kubernetes:
    id: kubernetes:v00.00.00000
    name: kubernetes
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/kubernetes.yaml
    title: DigitalOcean API - Kubernetes
    version: v00.00.00000
    description: |-
      [DigitalOcean Kubernetes](Https://Docs.Digitalocean.Com/Products/Kubernetes/)
      Allows You To Quickly Deploy Scalable And Secure Kubernetes Clusters. By
      Sending Requests To The `/V2/Kubernetes/Clusters` Endpoint, You Can List,
      Create, Or Delete Clusters As Well As Scale Node Pools Up And Down,
      Recycle Individual Nodes, And Retrieve The Kubeconfig File For Use With
      A Cluster.
  load_balancers:
    id: load_balancers:v00.00.00000
    name: load_balancers
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/load_balancers.yaml
    title: DigitalOcean API - Load Balancers
    version: v00.00.00000
    description: |-
      [DigitalOcean Load Balancers](Https://Docs.Digitalocean.Com/Products/Networking/Load-Balancers/)
      Provide A Way To Distribute Traffic Across Multiple Droplets. By Sending
      Requests To The `/V2/Load Balancers` Endpoint, You Can List, Create, Or
      Delete Load Balancers As Well As Add Or Remove Droplets, Forwarding Rules,
      And Other Configuration Details.
  monitoring:
    id: monitoring:v00.00.00000
    name: monitoring
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/monitoring.yaml
    title: DigitalOcean API - Monitoring
    version: v00.00.00000
    description: |-
      The DigitalOcean Monitoring API Makes It Possible To Programmatically Retrieve Metrics As Well As Configure Alert
      Policies Based On These Metrics. The Monitoring API Can Help You Gain Insight Into How Your Apps Are Performing
      And Consuming Resources.
  one_click_applications:
    id: one_click_applications:v00.00.00000
    name: one_click_applications
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/one_click_applications.yaml
    title: DigitalOcean API - One Click Applications
    version: v00.00.00000
    description: |-
      1-Click Applications Are Pre-Built Droplet Images Or Kubernetes Apps With Software,
      Features, And Configuration Details Already Set Up For You. They Can Be Found In The
      [DigitalOcean Marketplace](Https://Marketplace.Digitalocean.Com/).
  projects:
    id: projects:v00.00.00000
    name: projects
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/projects.yaml
    title: DigitalOcean API - Projects
    version: v00.00.00000
    description: |-
      Projects Allow You To Organize Your Resources Into Groups That Fit The Way
      You Work. You Can Group Resources (Like Droplets, Spaces, Load Balancers,
      Domains, And Floating IPs) In Ways That Align With The Applications
      You Host On DigitalOcean.
  regions:
    id: regions:v00.00.00000
    name: regions
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/regions.yaml
    title: DigitalOcean API - Regions
    version: v00.00.00000
    description: Provides Information About DigitalOcean Data Center Regions.
  reserved_ips:
    id: reserved_ips:v00.00.00000
    name: reserved_ips
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/reserved_ips.yaml
    title: DigitalOcean API - Reserved Ips
    version: v00.00.00000
    description: |-
      As Of 16 June 2022, We Have Renamed The [Floating IP](Https://Docs.Digitalocean.Com/Reference/Api/Api-Reference/#Tag/Floating-IPs)
      Product To Reserved IPs. The Reserved IP Product'S Endpoints Function The Exact
      Same Way As Floating IPs. The Only Difference Is The Name Change Throughout The
      URLs And Fields. For Example, The `Floating Ips` Field Is Now The `Reserved Ips` Field.
      The Floating IP Endpoints Will Remain Active Until Fall 2023 Before Being
      Permanently Deprecated.
      With The Exception Of The [Projects API](Https://Docs.Digitalocean.Com/Reference/Api/Api-Reference/#Tag/Projects),
      We Will Reflect This Change As An Additional Field In The Responses Across The API
      Where The `Floating Ip` Field Is Used. For Example, The Droplet Metadata Response
      Will Contain The Field `Reserved Ips` In Addition To The `Floating Ips` Field.
      Floating IPs Retrieved Using The Projects API Will Retain The Original Name.
      DigitalOcean Reserved IPs Are Publicly-Accessible Static IP Addresses That Can Be
      Mapped To One Of Your Droplets. They Can Be Used To Create Highly Available
      Setups Or Other Configurations Requiring Movable Addresses.
      Reserved IPs Are Bound To A Specific Region.
  sizes:
    id: sizes:v00.00.00000
    name: sizes
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/sizes.yaml
    title: DigitalOcean API - Sizes
    version: v00.00.00000
    description: |-
      The Sizes Objects Represent Different Packages Of Hardware Resources That
      Can Be Used For Droplets. When A Droplet Is Created, A Size Must Be
      Selected So That The Correct Resources Can Be Allocated.
      Each Size Represents A Plan That Bundles Together Specific Sets Of
      Resources. This Includes The Amount Of RAM, The Number Of Virtual CPUs,
      Disk Space, And Transfer. The Size Object Also Includes The Pricing
      Details And The Regions That The Size Is Available In.
  snapshots:
    id: snapshots:v00.00.00000
    name: snapshots
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/snapshots.yaml
    title: DigitalOcean API - Snapshots
    version: v00.00.00000
    description: |-
      [Snapshots](Https://Docs.Digitalocean.Com/Products/Snapshots/) Are Saved
      Instances Of A Droplet Or A Block Storage Volume, Which Is Reflected In
      The `Resource Type` Attribute. In Order To Avoid Problems With Compressing
      Filesystems, Each Defines A `Min Disk Size` Attribute Which Is The Minimum
      Size Of The Droplet Or Volume Disk When Creating A New Resource From The
      Saved Snapshot.
      To Interact With Snapshots, You Will Generally Send Requests To The
      Snapshots Endpoint At `/V2/Snapshots`.
  ssh_keys:
    id: ssh_keys:v00.00.00000
    name: ssh_keys
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/ssh_keys.yaml
    title: DigitalOcean API - Ssh Keys
    version: v00.00.00000
    description: Manage SSH Keys Available On Your Account.
  tags:
    id: tags:v00.00.00000
    name: tags
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/tags.yaml
    title: DigitalOcean API - Tags
    version: v00.00.00000
    description: |-
      A Tag Is A Label That Can Be Applied To A Resource (Currently Droplets,
      Images, Volumes, Volume Snapshots, And Database Clusters) In Order To
      Better Organize Or Facilitate The Lookups And Actions On It.
      Tags Have Two Attributes: A User Defined `Name` Attribute And An Embedded
      `Resources` Attribute With Information About Resources That Have Been Tagged.
  uptime:
    id: uptime:v00.00.00000
    name: uptime
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/uptime.yaml
    title: DigitalOcean API - Uptime
    version: v00.00.00000
    description: |-
      [DigitalOcean Uptime Checks](Https://Docs.Digitalocean.Com/Products/Uptime/) Provide The Ability To Monitor Your Endpoints From Around The World, And Alert You When They'Re Slow, Unavailable, Or SSL Certificates Are Expiring.
      To Interact With Uptime, You Will Generally Send Requests To The Uptime Endpoint At `/V2/Uptime/`.
  vpcs:
    id: vpcs:v00.00.00000
    name: vpcs
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/vpcs.yaml
    title: DigitalOcean API - Vpcs
    version: v00.00.00000
    description: |-
      [VPCs (Virtual Private Clouds)](Https://Docs.Digitalocean.Com/Products/Networking/Vpc/)
      Allow You To Create Virtual Networks Containing Resources That Can
      Communicate With Each Other In Full Isolation Using Private IP Addresses.
      By Sending Requests To The `/V2/Vpcs` Endpoint, You Can Create, Configure,
      List, And Delete Custom VPCs As Well As Retrieve Information About The
      Resources Assigned To Them.
  vpc_peerings:
    id: vpc_peerings:v00.00.00000
    name: vpc_peerings
    preferred: true
    service:
      $ref: digitalocean/v00.00.00000/services/vpc_peerings.yaml
    title: DigitalOcean API - Vpc Peerings
    version: v00.00.00000
    description: |-
      [VPC Peerings](Https://Docs.Digitalocean.Com/Products/Networking/Vpc/How-To/Create-Peering/) 
      Join Two VPC Networks With A Secure, Private Connection. This Allows 
      Resources In Those Networks To Connect To Each Other'S Private IP Addresses 
      As If They Were In The Same Network.
config:
  auth:
    type: bearer
    credentialsenvvar: DIGITALOCEAN_TOKEN
