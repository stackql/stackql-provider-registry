openapi: 3.0.0
info:
  title: monitoring API
  description: digitalocean API
  version: '2.0'
paths:
  /v2/monitoring/alerts:
    get:
      operationId: monitoring_list_alertPolicy
      summary: List Alert Policies
      description: Returns all alert policies that are configured for the given account. To List all alert policies, send a GET request to `/v2/monitoring/alerts`.
      tags:
        - Monitoring
      parameters:
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/list_alert_policy_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/alerts"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.list_alert_policy()
      security:
        - bearer_auth:
            - monitoring:read
    post:
      operationId: monitoring_create_alertPolicy
      summary: Create Alert Policy
      description: To create a new alert, send a POST request to `/v2/monitoring/alerts`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/alert_policy_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      requestBody:
        description: |
          The `type` field dictates what type of entity that the alert policy applies to and hence what type of entity is passed in the `entities` array. If both the `tags` array and `entities` array are empty the alert policy applies to all entities of the relevant type that are owned by the user account. Otherwise the following table shows the valid entity types for each type of alert policy:

          Type | Description | Valid Entity Type
          -----|-------------|--------------------
          `v1/insights/droplet/memory_utilization_percent` | alert on the percent of memory utilization | Droplet ID
          `v1/insights/droplet/disk_read` | alert on the rate of disk read I/O in MBps | Droplet ID
          `v1/insights/droplet/load_5` | alert on the 5 minute load average | Droplet ID
          `v1/insights/droplet/load_15` | alert on the 15 minute load average | Droplet ID
          `v1/insights/droplet/disk_utilization_percent` | alert on the percent of disk utilization | Droplet ID
          `v1/insights/droplet/cpu` | alert on the percent of CPU utilization | Droplet ID
          `v1/insights/droplet/disk_write` | alert on the rate of disk write I/O in MBps | Droplet ID
          `v1/insights/droplet/public_outbound_bandwidth` | alert on the rate of public outbound bandwidth in Mbps | Droplet ID
          `v1/insights/droplet/public_inbound_bandwidth` | alert on the rate of public inbound bandwidth in Mbps | Droplet ID
          `v1/insights/droplet/private_outbound_bandwidth` | alert on the rate of private outbound bandwidth in Mbps | Droplet ID
          `v1/insights/droplet/private_inbound_bandwidth` | alert on the rate of private inbound bandwidth in Mbps | Droplet ID
          `v1/insights/droplet/load_1` | alert on the 1 minute load average | Droplet ID
          `v1/insights/lbaas/avg_cpu_utilization_percent`|alert on the percent of CPU utilization|load balancer ID
          `v1/insights/lbaas/connection_utilization_percent`|alert on the percent of connection utilization|load balancer ID
          `v1/insights/lbaas/droplet_health`|alert on Droplet health status changes|load balancer ID
          `v1/insights/lbaas/tls_connections_per_second_utilization_percent`|alert on the percent of TLS connections per second utilization (requires at least one HTTPS forwarding rule)|load balancer ID
          `v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx`|alert on the percent increase of 5xx level http errors over 5m|load balancer ID
          `v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx`|alert on the percent increase of 4xx level http errors over 5m|load balancer ID
          `v1/insights/lbaas/increase_in_http_error_rate_count_5xx`|alert on the count of 5xx level http errors over 5m|load balancer ID
          `v1/insights/lbaas/increase_in_http_error_rate_count_4xx`|alert on the count of 4xx level http errors over 5m|load balancer ID
          `v1/insights/lbaas/high_http_request_response_time`|alert on high average http response time|load balancer ID
          `v1/insights/lbaas/high_http_request_response_time_50p`|alert on high 50th percentile http response time|load balancer ID
          `v1/insights/lbaas/high_http_request_response_time_95p`|alert on high 95th percentile http response time|load balancer ID
          `v1/insights/lbaas/high_http_request_response_time_99p`|alert on high 99th percentile http response time|load balancer ID
          `v1/dbaas/alerts/load_15_alerts` | alert on 15 minute load average across the database cluster | database cluster UUID
          `v1/dbaas/alerts/memory_utilization_alerts` | alert on the percent memory utilization average across the database cluster | database cluster UUID
          `v1/dbaas/alerts/disk_utilization_alerts` | alert on the percent disk utilization average across the database cluster | database cluster UUID
          `v1/dbaas/alerts/cpu_alerts` | alert on the percent CPU usage average across the database cluster | database cluster UUID
          `v1/droplet/autoscale_alerts/current_instances` | alert on current pool size | autoscale pool ID
          `v1/droplet/autoscale_alerts/target_instances` | alert on target pool size | autoscale pool ID
          `v1/droplet/autoscale_alerts/current_cpu_utilization` | alert on current average CPU utilization | autoscale pool ID
          `v1/droplet/autoscale_alerts/target_cpu_utilization` | alert on target average CPU utilization | autoscale pool ID
          `v1/droplet/autoscale_alerts/current_memory_utilization` | alert on current average memory utilization | autoscale pool ID
          `v1/droplet/autoscale_alerts/target_memory_utilization` | alert on target average memory utilization | autoscale pool ID
          `v1/droplet/autoscale_alerts/scale_up` | alert on scale up event | autoscale pool ID
          `v1/droplet/autoscale_alerts/scale_down` | alert on scale down event | autoscale pool ID
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert_policy_request'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X POST \                                                                                                                              
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/alerts" \
              --data '{"alerts":{"email":["alerts@example.com"]},"compare":"GreaterThan","description":"CPU Alert","enabled":true,"entities":["12345678"],"tags":["droplet_tag"],"type":"v1/insights/droplet/cpu","value":80,"window":"5m"}'
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            req = {
              "alerts": {
                "email": [
                  "bob@exmaple.com"
                ],
                "slack": [
                  {
                    "channel": "Production Alerts",
                    "url": "https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ"
                  }
                ]
              },
              "compare": "GreaterThan",
              "description": "CPU Alert",
              "enabled": True,
              "entities": [
                "192018292"
              ],
              "tags": [
                "droplet_tag"
              ],
              "type": "v1/insights/droplet/cpu",
              "value": 80,
              "window": "5m"
            }

            resp = client.monitoring.create_alert_policy(body=req)
      security:
        - bearer_auth:
            - monitoring:create
  /v2/monitoring/alerts/{alert_uuid}:
    get:
      operationId: monitoring_get_alertPolicy
      summary: Retrieve an Existing Alert Policy
      description: To retrieve a given alert policy, send a GET request to `/v2/monitoring/alerts/{alert_uuid}`
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/alert_policy_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/alert_uuid'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/alerts/78b3da62-27e5-49ba-ac70-5db0b5935c64"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_alert_policy(alert_uuid="dfa8da")
      security:
        - bearer_auth:
            - monitoring:read
    put:
      operationId: monitoring_update_alertPolicy
      summary: Update an Alert Policy
      description: To update en existing policy, send a PUT request to `v2/monitoring/alerts/{alert_uuid}`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/alert_policy_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/alert_uuid'
      requestBody:
        description: |
          The `type` field dictates what type of entity that the alert policy applies to and hence what type of entity is passed in the `entities` array. If both the `tags` array and `entities` array are empty the alert policy applies to all entities of the relevant type that are owned by the user account. Otherwise the following table shows the valid entity types for each type of alert policy:

          Type | Description | Valid Entity Type
          -----|-------------|--------------------
          `v1/insights/droplet/memory_utilization_percent` | alert on the percent of memory utilization | Droplet ID
          `v1/insights/droplet/disk_read` | alert on the rate of disk read I/O in MBps | Droplet ID
          `v1/insights/droplet/load_5` | alert on the 5 minute load average | Droplet ID
          `v1/insights/droplet/load_15` | alert on the 15 minute load average | Droplet ID
          `v1/insights/droplet/disk_utilization_percent` | alert on the percent of disk utilization | Droplet ID
          `v1/insights/droplet/cpu` | alert on the percent of CPU utilization | Droplet ID
          `v1/insights/droplet/disk_write` | alert on the rate of disk write I/O in MBps | Droplet ID
          `v1/insights/droplet/public_outbound_bandwidth` | alert on the rate of public outbound bandwidth in Mbps | Droplet ID
          `v1/insights/droplet/public_inbound_bandwidth` | alert on the rate of public inbound bandwidth in Mbps | Droplet ID
          `v1/insights/droplet/private_outbound_bandwidth` | alert on the rate of private outbound bandwidth in Mbps | Droplet ID
          `v1/insights/droplet/private_inbound_bandwidth` | alert on the rate of private inbound bandwidth in Mbps | Droplet ID
          `v1/insights/droplet/load_1` | alert on the 1 minute load average | Droplet ID
          `v1/insights/lbaas/avg_cpu_utilization_percent`|alert on the percent of CPU utilization|load balancer ID
          `v1/insights/lbaas/connection_utilization_percent`|alert on the percent of connection utilization|load balancer ID
          `v1/insights/lbaas/droplet_health`|alert on Droplet health status changes|load balancer ID
          `v1/insights/lbaas/tls_connections_per_second_utilization_percent`|alert on the percent of TLS connections per second utilization (requires at least one HTTPS forwarding rule)|load balancer ID
          `v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx`|alert on the percent increase of 5xx level http errors over 5m|load balancer ID
          `v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx`|alert on the percent increase of 4xx level http errors over 5m|load balancer ID
          `v1/insights/lbaas/increase_in_http_error_rate_count_5xx`|alert on the count of 5xx level http errors over 5m|load balancer ID
          `v1/insights/lbaas/increase_in_http_error_rate_count_4xx`|alert on the count of 4xx level http errors over 5m|load balancer ID
          `v1/insights/lbaas/high_http_request_response_time`|alert on high average http response time|load balancer ID
          `v1/insights/lbaas/high_http_request_response_time_50p`|alert on high 50th percentile http response time|load balancer ID
          `v1/insights/lbaas/high_http_request_response_time_95p`|alert on high 95th percentile http response time|load balancer ID
          `v1/insights/lbaas/high_http_request_response_time_99p`|alert on high 99th percentile http response time|load balancer ID
          `v1/dbaas/alerts/load_15_alerts` | alert on 15 minute load average across the database cluster | database cluster UUID
          `v1/dbaas/alerts/memory_utilization_alerts` | alert on the percent memory utilization average across the database cluster | database cluster UUID
          `v1/dbaas/alerts/disk_utilization_alerts` | alert on the percent disk utilization average across the database cluster | database cluster UUID
          `v1/dbaas/alerts/cpu_alerts` | alert on the percent CPU usage average across the database cluster | database cluster UUID
          `v1/droplet/autoscale_alerts/current_instances` | alert on current pool size | autoscale pool ID
          `v1/droplet/autoscale_alerts/target_instances` | alert on target pool size | autoscale pool ID
          `v1/droplet/autoscale_alerts/current_cpu_utilization` | alert on current average CPU utilization | autoscale pool ID
          `v1/droplet/autoscale_alerts/target_cpu_utilization` | alert on target average CPU utilization | autoscale pool ID
          `v1/droplet/autoscale_alerts/current_memory_utilization` | alert on current average memory utilization | autoscale pool ID
          `v1/droplet/autoscale_alerts/target_memory_utilization` | alert on target average memory utilization | autoscale pool ID
          `v1/droplet/autoscale_alerts/scale_up` | alert on scale up event | autoscale pool ID
          `v1/droplet/autoscale_alerts/scale_down` | alert on scale down event | autoscale pool ID
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert_policy_request'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X PUT \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/alerts/78b3da62-27e5-49ba-ac70-5db0b5935c64" \
              --data '{"alerts":{"email":["alerts@example.com"]},"compare":"GreaterThan","description":"CPU Alert","enabled":true,"entities":["12345678"],"tags":["droplet_tag"],"type":"v1/insights/droplet/cpu","value":80,"window":"5m"}'
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            req = {
              "alerts": {
                "email": [
                  "bob@exmaple.com"
                ],
                "slack": [
                  {
                    "channel": "Production Alerts",
                    "url": "https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ"
                  }
                ]
              },
              "compare": "GreaterThan",
              "description": "CPU Alert",
              "enabled": True,
              "entities": [
                "192018292"
              ],
              "tags": [
                "droplet_tag"
              ],
              "type": "v1/insights/droplet/cpu",
              "value": 80,
              "window": "5m"
            }

            resp = client.monitoring.update_alert_policy(alert_uuid="fda9da", body=req)
      security:
        - bearer_auth:
            - monitoring:update
    delete:
      operationId: monitoring_delete_alertPolicy
      summary: Delete an Alert Policy
      description: To delete an alert policy, send a DELETE request to `/v2/monitoring/alerts/{alert_uuid}`
      tags:
        - Monitoring
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/alert_uuid'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X DELETE \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/alerts/{alert_uuid}"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.delete_alert_policy(alert_uuid="dfa8da")
      security:
        - bearer_auth:
            - monitoring:delete
  /v2/monitoring/metrics/droplet/bandwidth:
    get:
      operationId: monitoring_get_dropletBandwidthMetrics
      summary: Get Droplet Bandwidth Metrics
      description: |-
        To retrieve bandwidth metrics for a given Droplet, send a GET request to `/v2/monitoring/metrics/droplet/bandwidth`. Use the `interface` query parameter to specify if the results should be for the `private` or `public` interface. Use the `direction` query parameter to specify if the results should be for `inbound` or `outbound` traffic.
        The metrics in the response body are in megabits per second (Mbps).
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/droplet_bandwidth_metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/network_interface'
        - $ref: '#/components/parameters/network_direction'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/bandwidth?host_id=222651441&interface=public&direction=outbound&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_bandwidth_metrics(alert_uuid="dfa8da", host_id="17209102", interface="private", direction="inbound", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/cpu:
    get:
      operationId: monitoring_get_DropletCpuMetrics
      summary: Get Droplet CPU Metrics
      description: To retrieve CPU metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/cpu`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/droplet_cpu_metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/cpu?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_cpu_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/filesystem_free:
    get:
      operationId: monitoring_get_dropletFilesystemFreeMetrics
      summary: Get Droplet Filesystem Free Metrics
      description: To retrieve filesystem free metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/filesystem_free`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/droplet_filesystem_metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/filesystem_free?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_filesystem_free_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/filesystem_size:
    get:
      operationId: monitoring_get_dropletFilesystemSizeMetrics
      summary: Get Droplet Filesystem Size Metrics
      description: To retrieve filesystem size metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/filesystem_size`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/droplet_filesystem_metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/filesystem_size?host_id=222651441&interface=public&direction=outbound&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_filesystem_size_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/load_1:
    get:
      operationId: monitoring_get_dropletLoad1Metrics
      summary: Get Droplet Load1 Metrics
      description: To retrieve 1 minute load average metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/load_1`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/load_1?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_load1_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/load_5:
    get:
      operationId: monitoring_get_dropletLoad5Metrics
      summary: Get Droplet Load5 Metrics
      description: To retrieve 5 minute load average metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/load_5`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/load_5?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_load5_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/load_15:
    get:
      operationId: monitoring_get_dropletLoad15Metrics
      summary: Get Droplet Load15 Metrics
      description: To retrieve 15 minute load average metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/load_15`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/load_15?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_load15_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/memory_cached:
    get:
      operationId: monitoring_get_dropletMemoryCachedMetrics
      summary: Get Droplet Cached Memory Metrics
      description: To retrieve cached memory metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/memory_cached`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/memory_cached?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_memory_cached_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/memory_free:
    get:
      operationId: monitoring_get_dropletMemoryFreeMetrics
      summary: Get Droplet Free Memory Metrics
      description: To retrieve free memory metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/memory_free`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/memory_free?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_memory_free_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/memory_total:
    get:
      operationId: monitoring_get_dropletMemoryTotalMetrics
      summary: Get Droplet Total Memory Metrics
      description: To retrieve total memory metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/memory_total`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/memory_total?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_memory_total_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet/memory_available:
    get:
      operationId: monitoring_get_dropletMemoryAvailableMetrics
      summary: Get Droplet Available Memory Metrics
      description: To retrieve available memory metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/memory_available`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_droplet_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet/memory_available?host_id=222651441&start=1636051668&end=1636051668"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.monitoring.get_droplet_memory_available_metrics(host_id="17209102", start="1620683817", end="1620705417")
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/apps/memory_percentage:
    get:
      operationId: monitoring_get_appMemoryPercentageMetrics
      summary: Get App Memory Percentage Metrics
      description: To retrieve memory percentage metrics for a given app, send a GET request to `/v2/monitoring/metrics/apps/memory_percentage`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/app_metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_app_id'
        - $ref: '#/components/parameters/app_component'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/apps/memory_percentage?app_id=2db3c021-15ad-4088-bfe8-99dc972b9cf6&app_component=sample-application&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/apps/cpu_percentage:
    get:
      operationId: monitoring_get_appCPUPercentageMetrics
      summary: Get App CPU Percentage Metrics
      description: To retrieve cpu percentage metrics for a given app, send a GET request to `/v2/monitoring/metrics/apps/cpu_percentage`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/app_metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_app_id'
        - $ref: '#/components/parameters/app_component'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/apps/cpu_percentage?app_id=2db3c021-15ad-4088-bfe8-99dc972b9cf6&app_component=sample-application&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/apps/restart_count:
    get:
      operationId: monitoring_get_appRestartCountMetrics.yml
      summary: Get App Restart Count Metrics
      description: To retrieve restart count metrics for a given app, send a GET request to `/v2/monitoring/metrics/apps/restart_count`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/app_metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_app_id'
        - $ref: '#/components/parameters/app_component'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/apps/restart_count?app_id=2db3c021-15ad-4088-bfe8-99dc972b9cf6&app_component=sample-application&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_connections_current:
    get:
      operationId: monitoring_get_lb_frontend_connections_current
      summary: Get Load Balancer Frontend Total Current Active Connections Metrics
      description: To retrieve frontend total current active connections for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_connections_current`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_connections_current?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_connections_limit:
    get:
      operationId: monitoring_get_lb_frontend_connections_limit
      summary: Get Load Balancer Frontend Max Connections Limit Metrics
      description: To retrieve frontend max connections limit for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_connections_limit`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_connections_limit?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_cpu_utilization:
    get:
      operationId: monitoring_get_lb_frontend_cpu_utilization
      summary: Get Load Balancer Frontend Average Percentage CPU Utilization Metrics
      description: To retrieve frontend average percentage CPU utilization for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_cpu_utilization`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_cpu_utilization?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_firewall_dropped_bytes:
    get:
      operationId: monitoring_get_lb_frontend_firewall_dropped_bytes
      summary: Get Load Balancer Frontend Firewall Dropped Bytes Metrics
      description: To retrieve firewall dropped bytes for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_firewall_dropped_bytes`. This is currently only supported for network load balancers.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_firewall_dropped_bytes?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_firewall_dropped_packets:
    get:
      operationId: monitoring_get_lb_frontend_firewall_dropped_packets
      summary: Get Load Balancer Frontend Firewall Dropped Packets Metrics
      description: To retrieve firewall dropped packets per second for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_firewall_dropped_packets`. This is currently only supported for network load balancers.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_firewall_dropped_packets?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_http_responses:
    get:
      operationId: monitoring_get_lb_frontend_http_responses
      summary: Get Load Balancer Frontend HTTP Rate Of Response Code Metrics
      description: To retrieve frontend HTTP rate of response code for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_http_responses`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_http_responses?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_http_requests_per_second:
    get:
      operationId: monitoring_get_lb_frontend_http_requests_per_second
      summary: Get Load Balancer Frontend HTTP Requests Metrics
      description: To retrieve frontend HTTP requests per second for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_http_requests_per_second`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_http_requests_per_second?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_network_throughput_http:
    get:
      operationId: monitoring_get_lb_frontend_network_throughput_http
      summary: Get Load Balancer Frontend HTTP Throughput Metrics
      description: To retrieve frontend HTTP throughput in bytes per second for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_network_throughput_http`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_network_throughput_http?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_network_throughput_udp:
    get:
      operationId: monitoring_get_lb_frontend_network_throughput_udp
      summary: Get Load Balancer Frontend UDP Throughput Metrics
      description: To retrieve frontend UDP throughput in bytes per second for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_network_throughput_udp`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_network_throughput_udp?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_network_throughput_tcp:
    get:
      operationId: monitoring_get_lb_frontend_network_throughput_tcp
      summary: Get Load Balancer Frontend TCP Throughput Metrics
      description: To retrieve frontend TCP throughput in bytes per second for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_network_throughput_tcp`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_network_throughput_tcp?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_nlb_tcp_network_throughput:
    get:
      operationId: monitoring_get_lb_frontend_nlb_tcp_network_throughput
      summary: Get Network Load Balancer Frontend TCP Throughput Metrics
      description: To retrieve frontend TCP throughput in bytes per second for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_nlb_tcp_network_throughput`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_nlb_tcp_network_throughput?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_nlb_udp_network_throughput:
    get:
      operationId: monitoring_get_lb_frontend_nlb_udp_network_throughput
      summary: Get Network Load Balancer Frontend UDP Throughput Metrics
      description: To retrieve frontend UDP throughput in bytes per second for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_nlb_udp_network_throughput`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_nlb_udp_network_throughput?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_tls_connections_current:
    get:
      operationId: monitoring_get_lb_frontend_tls_connections_current
      summary: Get Load Balancer Frontend Current TLS Connections Rate Metrics
      description: To retrieve frontend current TLS connections rate for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_tls_connections_current`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_tls_connections_current?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_tls_connections_limit:
    get:
      operationId: monitoring_get_lb_frontend_tls_connections_limit
      summary: Get Load Balancer Frontend Max TLS Connections Limit Metrics
      description: To retrieve frontend max TLS connections limit for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_tls_connections_limit`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_tls_connections_limit?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/frontend_tls_connections_exceeding_rate_limit:
    get:
      operationId: monitoring_get_lb_frontend_tls_connections_exceeding_rate_limit
      summary: Get Load Balancer Frontend Closed TLS Connections For Exceeded Rate Limit Metrics
      description: To retrieve frontend closed TLS connections for exceeded rate limit for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/frontend_tls_connections_exceeding_rate_limit`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/frontend_tls_connections_exceeding_rate_limit?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_http_session_duration_avg:
    get:
      operationId: monitoring_get_lb_droplets_http_session_duration_avg
      summary: Get Load Balancer Droplets Average HTTP Session Duration Metrics
      description: To retrieve Droplets average HTTP session duration in seconds for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_http_session_duration_avg`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_http_session_duration_avg?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_http_session_duration_50p:
    get:
      operationId: monitoring_get_lb_droplets_http_session_duration_50p
      summary: Get Load Balancer Droplets 50th Percentile HTTP Session Duration Metrics
      description: To retrieve Droplets 50th percentile HTTP session duration in seconds for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_http_session_duration_50p`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_http_session_duration_50p?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_http_session_duration_95p:
    get:
      operationId: monitoring_get_lb_droplets_http_session_duration_95p
      summary: Get Load Balancer Droplets 95th Percentile HTTP Session Duration Metrics
      description: To retrieve Droplets 95th percentile HTTP session duration in seconds for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_http_session_duration_95p`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_http_session_duration_95p?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_http_response_time_avg:
    get:
      operationId: monitoring_get_lb_droplets_http_response_time_avg
      summary: Get Load Balancer Droplets Average HTTP Response Time Metrics
      description: To retrieve Droplets average HTTP response time in seconds for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_http_response_time_avg`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_http_response_time_avg?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_http_response_time_50p:
    get:
      operationId: monitoring_get_lb_droplets_http_response_time_50p
      summary: Get Load Balancer Droplets 50th Percentile HTTP Response Time Metrics
      description: To retrieve Droplets 50th percentile HTTP response time in seconds for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_http_response_time_50p`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_http_response_time_50p?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_http_response_time_95p:
    get:
      operationId: monitoring_get_lb_droplets_http_response_time_95p
      summary: Get Load Balancer Droplets 95th Percentile HTTP Response Time Metrics
      description: To retrieve Droplets 95th percentile HTTP response time in seconds for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_http_response_time_95p`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_http_response_time_95p?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_http_response_time_99p:
    get:
      operationId: monitoring_get_lb_droplets_http_response_time_99p
      summary: Get Load Balancer Droplets 99th Percentile HTTP Response Time Metrics
      description: To retrieve Droplets 99th percentile HTTP response time in seconds for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_http_response_time_99p`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_http_response_time_99p?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_queue_size:
    get:
      operationId: monitoring_get_lb_droplets_queue_size
      summary: Get Load Balancer Droplets Queue Size Metrics
      description: To retrieve Droplets queue size for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_queue_size`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_queue_size?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_http_responses:
    get:
      operationId: monitoring_get_lb_droplets_http_responses
      summary: Get Load Balancer Droplets HTTP Rate Of Response Code Metrics
      description: To retrieve Droplets HTTP rate of response code for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_http_responses`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_http_responses?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_connections:
    get:
      operationId: monitoring_get_lb_droplets_connections
      summary: Get Load Balancer Droplets Active Connections Metrics
      description: To retrieve Droplets active connections for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_connections`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_connections?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_health_checks:
    get:
      operationId: monitoring_get_lb_droplets_health_checks
      summary: Get Load Balancer Droplets Health Check Status Metrics
      description: To retrieve Droplets health check status for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_health_checks`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_health_checks?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/load_balancer/droplets_downtime:
    get:
      operationId: monitoring_get_lb_droplets_downtime
      summary: Get Load Balancer Droplets Downtime Status Metrics
      description: To retrieve Droplets downtime status for a given load balancer, send a GET request to `/v2/monitoring/metrics/load_balancer/droplets_downtime`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_load_balancer_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/load_balancer/droplets_downtime?lb_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet_autoscale/current_instances:
    get:
      operationId: monitoring_get_droplet_autoscale_current_instances
      summary: Get Droplet Autoscale Pool Current Size
      description: To retrieve the current size for a given Droplet Autoscale Pool, send a GET request to `/v2/monitoring/metrics/droplet_autoscale/current_instances`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_autoscale_pool_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet_autoscale/current_instances?autoscale_pool_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet_autoscale/target_instances:
    get:
      operationId: monitoring_get_droplet_autoscale_target_instances
      summary: Get Droplet Autoscale Pool Target Size
      description: To retrieve the target size for a given Droplet Autoscale Pool, send a GET request to `/v2/monitoring/metrics/droplet_autoscale/target_instances`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_autoscale_pool_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet_autoscale/target_instances?autoscale_pool_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet_autoscale/current_cpu_utilization:
    get:
      operationId: monitoring_get_droplet_autoscale_current_cpu_utilization.yml
      summary: Get Droplet Autoscale Pool Current Average CPU utilization
      description: To retrieve the current average CPU utilization for a given Droplet Autoscale Pool, send a GET request to `/v2/monitoring/metrics/droplet_autoscale/current_cpu_utilization`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_autoscale_pool_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet_autoscale/current_cpu_utilization?autoscale_pool_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet_autoscale/target_cpu_utilization:
    get:
      operationId: monitoring_get_droplet_autoscale_target_cpu_utilization
      summary: Get Droplet Autoscale Pool Target Average CPU utilization
      description: To retrieve the target average CPU utilization for a given Droplet Autoscale Pool, send a GET request to `/v2/monitoring/metrics/droplet_autoscale/target_cpu_utilization`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_autoscale_pool_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet_autoscale/target_cpu_utilization?autoscale_pool_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet_autoscale/current_memory_utilization:
    get:
      operationId: monitoring_get_droplet_autoscale_current_memory_utilization
      summary: Get Droplet Autoscale Pool Current Average Memory utilization
      description: To retrieve the current average memory utilization for a given Droplet Autoscale Pool, send a GET request to `/v2/monitoring/metrics/droplet_autoscale/current_memory_utilization`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_autoscale_pool_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet_autoscale/current_memory_utilization?autoscale_pool_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/metrics/droplet_autoscale/target_memory_utilization:
    get:
      operationId: monitoring_get_droplet_autoscale_target_memory_utilization
      summary: Get Droplet Autoscale Pool Target Average Memory utilization
      description: To retrieve the target average memory utilization for a given Droplet Autoscale Pool, send a GET request to `/v2/monitoring/metrics/droplet_autoscale/target_memory_utilization`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/metric_response'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      parameters:
        - $ref: '#/components/parameters/parameters_autoscale_pool_id'
        - $ref: '#/components/parameters/metric_timestamp_start'
        - $ref: '#/components/parameters/metric_timestamp_end'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/metrics/droplet_autoscale/target_memory_utilization?autoscale_pool_id=4de7ac8b-495b-4884-9a69-1050c6793cd6&start=1636051668&end=1636051668"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/sinks/destinations:
    post:
      operationId: monitoring_create_destination
      summary: Create Logging Destination
      description: To create a new destination, send a POST request to `/v2/monitoring/sinks/destinations`.
      tags:
        - Monitoring
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/destination_request'
            examples:
              Managed OpenSearch Cluster:
                value:
                  name: managed_opensearch_cluster
                  type: opensearch_dbaas
                  config:
                    endpoint: db-opensearch-nyc3-123456-do-user-123456-0.g.db.ondigitalocean.com
                    cluster_uuid: 85148069-7e35-4999-80bd-6fa1637ca385
                    cluster_name: managed_dbaas_cluster
                    index_name: logs
                    retention_days: 14
              External OpenSearch Cluster:
                value:
                  name: external_opensearch
                  type: opensearch_ext
                  config:
                    endpoint: example.com
                    credentials:
                      username: username
                      password: password
                    index_name: logs
                    retention_days: 14
      responses:
        '200':
          $ref: '#/components/responses/destination'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks/destinations" \
              --data '{"name":"cluster", "type":"opensearch_dbaas", "config": {"endpoint": "example.com", "credentials": {"username": "username", "password": "password"}}}'
      security:
        - bearer_auth:
            - monitoring:create
    get:
      operationId: monitoring_list_destinations
      summary: List Logging Destinations
      description: To list all logging destinations, send a GET request to `/v2/monitoring/sinks/destinations`.
      tags:
        - Monitoring
      responses:
        '200':
          $ref: '#/components/responses/monitoring_list_destinations'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks/destinations"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/sinks/destinations/{destination_uuid}:
    get:
      operationId: monitoring_get_destination
      summary: Get Logging Destination
      description: To get the details of a destination, send a GET request to `/v2/monitoring/sinks/destinations/${destination_uuid}`.
      tags:
        - Monitoring
      parameters:
        - $ref: '#/components/parameters/destination_uuid'
      responses:
        '200':
          $ref: '#/components/responses/destination'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks/destinations/01f30bfa-319a-4769-ba95-9d43971fb514"
      security:
        - bearer_auth:
            - monitoring:read
    post:
      operationId: monitoring_update_destination
      summary: Update Logging Destination
      description: To update the details of a destination, send a PATCH request to `/v2/monitoring/sinks/destinations/${destination_uuid}`.
      tags:
        - Monitoring
      parameters:
        - $ref: '#/components/parameters/destination_uuid'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/destination_request'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X PATCH \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks/destinations/01f30bfa-319a-4769-ba95-9d43971fb514" \
              --data '{"index_name": "logs", "retention_days": 30}'
      security:
        - bearer_auth:
            - monitoring:update
    delete:
      operationId: monitoring_delete_destination
      summary: Delete Logging Destination
      description: To delete a destination and all associated sinks, send a DELETE request to `/v2/monitoring/sinks/destinations/${destination_uuid}`.
      tags:
        - Monitoring
      parameters:
        - $ref: '#/components/parameters/destination_uuid'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X DELETE \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks/destinations/01f30bfa-319a-4769-ba95-9d43971fb514"
      security:
        - bearer_auth:
            - monitoring:delete
  /v2/monitoring/sinks:
    post:
      operationId: monitoring_create_sink
      summary: Create Sink
      description: |
        To create a new sink, send a POST request to `/v2/monitoring/sinks`. Forwards logs from the 
        resources identified in `resources` to the specified pre-existing destination.
      tags:
        - Monitoring
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destination_uuid:
                  type: string
                  example: 9df2b7e9-3fb2-4577-b60a-e9c0d53f9a99
                  description: A unique identifier for an already-existing destination.
                resources:
                  type: array
                  description: List of resources identified by their URNs.
                  items:
                    $ref: '#/components/schemas/sink_resource'
              type: object
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks" \
              --data '{"destination_uuid": "f2fcd5d9-f410-4f3a-8015-130ada94b1fe",  "resources": [{"name": "fra_kubernetes_cluster", "urn":"do:kubernetes:8463c9db-150c-4b44-830c-fca7f68d005b"}]}'
      security:
        - bearer_auth:
            - monitoring:create
    get:
      operationId: monitoring_list_sinks
      summary: Lists all sinks
      description: To list all sinks, send a GET request to `/v2/monitoring/sinks`.
      tags:
        - Monitoring
      parameters:
        - $ref: '#/components/parameters/resource_id'
      responses:
        '200':
          $ref: '#/components/responses/list_sinks'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks?resource_id=do:kubernetes:f2fcd5d9-f410-4f3a-8015-130ada94b1fe"
      security:
        - bearer_auth:
            - monitoring:read
  /v2/monitoring/sinks/{sink_uuid}:
    get:
      operationId: monitoring_get_sink
      summary: Get Sink
      description: To get the details of a sink (resources and destination), send a GET request to `/v2/monitoring/sinks/${sink_uuid}`.
      tags:
        - Monitoring
      parameters:
        - $ref: '#/components/parameters/sink_uuid'
      responses:
        '200':
          $ref: '#/components/responses/sinks'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks/f945d774-86e8-4dc8-8f60-cfc76dd3d098"
      security:
        - bearer_auth:
            - monitoring:read
    delete:
      operationId: monitoring_delete_sink
      summary: Delete Sink
      description: To delete a sink, send a DELETE request to `/v2/monitoring/sinks/${sink_uuid}`.
      tags:
        - Monitoring
      parameters:
        - $ref: '#/components/parameters/sink_uuid'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X DELETE \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/monitoring/sinks/aef7ff4a-f1be-4d9e-b886-650fcb5bdfe3"
      security:
        - bearer_auth:
            - monitoring:delete
  /v2/uptime/checks:
    get:
      operationId: uptime_list_checks
      summary: List All Checks
      description: To list all of the Uptime checks on your account, send a GET request to `/v2/uptime/checks`.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/all_checks'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/uptime/checks"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.uptime.checks_list()
      security:
        - bearer_auth:
            - uptime:read
    post:
      operationId: uptime_create_check
      summary: Create a New Check
      description: |
        To create an Uptime check, send a POST request to `/v2/uptime/checks` specifying the attributes
        in the table below in the JSON body.
      tags:
        - Uptime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/check_updatable'
              required:
                - name
                - method
                - target
                - regions
                - type
                - enabled
      responses:
        '201':
          $ref: '#/components/responses/existing_check'
        '401':
          $ref: '#/components/responses/unauthorized'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"name":"Landing page check","type":"https","target":"https://www.landingpage.com","regions":["us_east","eu_west"],"enabled":true}' \
              "https://api.digitalocean.com/v2/uptime/checks"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            req = {
              "name": "Landing page check",
              "type": "https",
              "target": "https://www.landingpage.com",
              "regions": [
                "us_east",
                "eu_west"
              ],
              "enabled": True
            }

            resp = client.uptime.check_create(body=req)
      security:
        - bearer_auth:
            - uptime:create
  /v2/uptime/checks/{check_id}:
    get:
      operationId: uptime_get_check
      summary: Retrieve an Existing Check
      description: To show information about an existing check, send a GET request to `/v2/uptime/checks/$CHECK_ID`.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
      responses:
        '200':
          $ref: '#/components/responses/existing_check'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.uptime.check_get(check_id="fd9dfa")
      security:
        - bearer_auth:
            - uptime:read
    put:
      operationId: uptime_update_check
      summary: Update a Check
      description: |
        To update the settings of an Uptime check, send a PUT request to `/v2/uptime/checks/$CHECK_ID`.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/check_updatable'
      responses:
        '200':
          $ref: '#/components/responses/existing_check'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X PUT \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"name":"Landing page check","type":"https","target":"https://www.newlandingpage.com","regions":["us_east","eu_west"],"enabled":true}' \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            req = {
              "name": "Landing page check",
              "type": "https",
              "target": "https://www.landingpage.com",
              "regions": [
                "us_east",
                "eu_west"
              ],
              "enabled": True
            }

            resp = client.uptime.check_update(check_id="fd9fda", body=req)
      security:
        - bearer_auth:
            - uptime:update
    delete:
      operationId: uptime_delete_check
      summary: Delete a Check
      description: |
        To delete an Uptime check, send a DELETE request to `/v2/uptime/checks/$CHECK_ID`. A 204 status
        code with no body will be returned in response to a successful request.


        Deleting a check will also delete alerts associated with the check.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X DELETE \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.uptime.check_delete(check_id="fd9dfa")
      security:
        - bearer_auth:
            - uptime:delete
  /v2/uptime/checks/{check_id}/state:
    get:
      operationId: uptime_get_checkState
      summary: Retrieve Check State
      description: To show information about an existing check's state, send a GET request to `/v2/uptime/checks/$CHECK_ID/state`.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
      responses:
        '200':
          $ref: '#/components/responses/existing_check_state'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}/state"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.uptime.check_state_get(check_id="fd9fda")
      security:
        - bearer_auth:
            - uptime:read
  /v2/uptime/checks/{check_id}/alerts:
    get:
      operationId: uptime_list_alerts
      summary: List All Alerts
      description: To list all of the alerts for an Uptime check, send a GET request to `/v2/uptime/checks/$CHECK_ID/alerts`.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/all_alerts'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.uptime.check_alerts_list(check_id="4de7ac8b")
      security:
        - bearer_auth:
            - uptime:read
    post:
      operationId: uptime_create_alert
      summary: Create a New Alert
      description: |
        To create an Uptime alert, send a POST request to `/v2/uptime/checks/$CHECK_ID/alerts` specifying the attributes
        in the table below in the JSON body.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
      requestBody:
        required: true
        description: |
          The ''type'' field dictates the type of alert, and hence what type of value to pass into the threshold property.
          Type | Description | Threshold Value
          -----|-------------|--------------------
          `latency` | alerts on the response latency | milliseconds
          `down` | alerts on a target registering as down in any region | N/A (Not required)
          `down_global` | alerts on a target registering as down globally | N/A (Not required)
          `ssl_expiry` | alerts on a SSL certificate expiring within $threshold days | days
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/alert'
              required:
                - name
                - type
                - notifications
                - period
      responses:
        '201':
          $ref: '#/components/responses/existing_alert'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"name":"Landing page degraded performance","type":"latency","threshold":300,"comparison":"greater_than","notifications":{"email":["bob@example.com"],"slack":[{"channel":"Production Alerts","url":"https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ"}]},"period":"2m"}' \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            req = {
              "name": "Landing page degraded performance",
              "type": "latency",
              "threshold": 300,
              "comparison": "greater_than",
              "notifications": {
                "email": [
                  "bob@example.com"
                ],
                "slack": [
                  {
                    "channel": "Production Alerts",
                    "url": "https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ"
                  }
                ]
              },
              "period": "2m"
            }

            resp = client.uptime.alert_create(check_id="4de7ac8b", body=req)
      security:
        - bearer_auth:
            - uptime:create
            - uptime:update
  /v2/uptime/checks/{check_id}/alerts/{alert_id}:
    get:
      operationId: uptime_get_alert
      summary: Retrieve an Existing Alert
      description: To show information about an existing alert, send a GET request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
        - $ref: '#/components/parameters/parameters_alert_id'
      responses:
        '200':
          $ref: '#/components/responses/existing_alert'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts/{alert_id}"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.uptime.alert_get(check_id="4de7ac8b", alert_id="da9da9")
      security:
        - bearer_auth:
            - uptime:read
    put:
      operationId: uptime_update_alert
      summary: Update an Alert
      description: |
        To update the settings of an Uptime alert, send a PUT request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
        - $ref: '#/components/parameters/parameters_alert_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/alert_updatable'
              required:
                - name
                - type
                - notifications
                - period
      responses:
        '200':
          $ref: '#/components/responses/existing_alert'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X PUT \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"name":"Landing page down globally","type":"down_global","notifications":{"email":["bob@example.com"],"slack":[{"channel":"Production Alerts","url":"https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ"}]},"period":"2m"}' \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts/{alert_id}"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            req = {
              "name": "Landing page degraded performance",
              "type": "latency",
              "threshold": 300,
              "comparison": "greater_than",
              "notifications": {
                "email": [
                  "bob@example.com"
                ],
                "slack": [
                  {
                    "channel": "Production Alerts",
                    "url": "https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ"
                  }
                ]
              },
              "period": "2m"
            }

            resp = client.uptime.alert_update(check_id="4de7ac8b", alert_id="da9da9", body=req)
      security:
        - bearer_auth:
            - uptime:update
    delete:
      operationId: uptime_delete_alert
      summary: Delete an Alert
      description: |
        To delete an Uptime alert, send a DELETE request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`. A 204 status
        code with no body will be returned in response to a successful request.
      tags:
        - Uptime
      parameters:
        - $ref: '#/components/parameters/check_id'
        - $ref: '#/components/parameters/parameters_alert_id'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found'
        '429':
          $ref: '#/components/responses/too_many_requests'
        '500':
          $ref: '#/components/responses/server_error'
        default:
          $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X DELETE \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts/{alert_id}"
        - lang: Python
          source: |-
            import os
            from pydo import Client

            client = Client(token=os.environ.get("DIGITALOCEAN_TOKEN"))

            resp = client.uptime.alert_delete(check_id="4de7ac8b", alert_id="da9da9")
      security:
        - bearer_auth:
            - uptime:delete
            - uptime:update
components:
  schemas:
    alert_policy_request:
      type: object
      required:
        - type
        - description
        - compare
        - value
        - window
        - entities
        - tags
        - alerts
        - enabled
      properties:
        alerts:
          type: object
          required:
            - slack
            - email
          properties:
            email:
              description: An email to notify on an alert trigger.
              example:
                - bob@exmaple.com
              type: array
              items:
                type: string
            slack:
              type: array
              description: Slack integration details.
              items:
                type: object
                required:
                  - url
                  - channel
                properties:
                  channel:
                    type: string
                    example: Production Alerts
                    description: Slack channel to notify of an alert trigger.
                  url:
                    type: string
                    description: Slack Webhook URL.
                    example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
        compare:
          type: string
          example: GreaterThan
          enum:
            - GreaterThan
            - LessThan
        description:
          type: string
          example: CPU Alert
        enabled:
          type: boolean
          example: true
        entities:
          type: array
          items:
            type: string
          example:
            - '192018292'
        tags:
          type: array
          items:
            type: string
          example:
            - droplet_tag
        type:
          type: string
          enum:
            - v1/insights/droplet/load_1
            - v1/insights/droplet/load_5
            - v1/insights/droplet/load_15
            - v1/insights/droplet/memory_utilization_percent
            - v1/insights/droplet/disk_utilization_percent
            - v1/insights/droplet/cpu
            - v1/insights/droplet/disk_read
            - v1/insights/droplet/disk_write
            - v1/insights/droplet/public_outbound_bandwidth
            - v1/insights/droplet/public_inbound_bandwidth
            - v1/insights/droplet/private_outbound_bandwidth
            - v1/insights/droplet/private_inbound_bandwidth
            - v1/insights/lbaas/avg_cpu_utilization_percent
            - v1/insights/lbaas/connection_utilization_percent
            - v1/insights/lbaas/droplet_health
            - v1/insights/lbaas/tls_connections_per_second_utilization_percent
            - v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx
            - v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx
            - v1/insights/lbaas/increase_in_http_error_rate_count_5xx
            - v1/insights/lbaas/increase_in_http_error_rate_count_4xx
            - v1/insights/lbaas/high_http_request_response_time
            - v1/insights/lbaas/high_http_request_response_time_50p
            - v1/insights/lbaas/high_http_request_response_time_95p
            - v1/insights/lbaas/high_http_request_response_time_99p
            - v1/dbaas/alerts/load_15_alerts
            - v1/dbaas/alerts/memory_utilization_alerts
            - v1/dbaas/alerts/disk_utilization_alerts
            - v1/dbaas/alerts/cpu_alerts
            - v1/droplet/autoscale_alerts/current_instances
            - v1/droplet/autoscale_alerts/target_instances
            - v1/droplet/autoscale_alerts/current_cpu_utilization
            - v1/droplet/autoscale_alerts/target_cpu_utilization
            - v1/droplet/autoscale_alerts/current_memory_utilization
            - v1/droplet/autoscale_alerts/target_memory_utilization
            - v1/droplet/autoscale_alerts/scale_up
            - v1/droplet/autoscale_alerts/scale_down
          example: v1/insights/droplet/cpu
        value:
          type: number
          format: float
          example: 80
        window:
          type: string
          example: 5m
          enum:
            - 5m
            - 10m
            - 30m
            - 1h
    destination_request:
      type: object
      required:
        - config
        - type
      properties:
        name:
          type: string
          description: destination name
          example: managed_opensearch_cluster
        type:
          type: string
          enum:
            - opensearch_dbaas
            - opensearch_ext
          description: |
            The destination type. `opensearch_dbaas` for a DigitalOcean managed OpenSearch
            cluster or `opensearch_ext` for an externally managed one.
        config:
          type: object
          required:
            - endpoint
          properties:
            credentials:
              type: object
              description: Credentials for an OpenSearch cluster user. Optional if `cluster_uuid` is passed.
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
            endpoint:
              type: string
              example: example.com
              description: host of the OpenSearch cluster
            cluster_uuid:
              type: string
              example: 85148069-7e35-4999-80bd-6fa1637ca385
              description: A unique identifier for a managed OpenSearch cluster.
            cluster_name:
              type: string
              example: managed_dbaas_cluster
              description: Name of a managed OpenSearch cluster.
            index_name:
              type: string
              description: OpenSearch index to send logs to.
              example: logs
            retention_days:
              type: integer
              description: Number of days to retain logs in an OpenSearch cluster.
              example: 14
              default: 14
    sink_resource:
      type: object
      required:
        - urn
      properties:
        urn:
          type: string
          pattern: ^do:kubernetes:.*
          example: do:kubernetes:f453aa14-646e-4cf8-8c62-75a19fb24ec2
          description: The uniform resource name (URN) for the resource in the format do:resource_type:resource_id.
        name:
          type: string
          description: resource name
          example: managed_kubernetes_cluster
    check_updatable:
      type: object
      properties:
        name:
          type: string
          example: Landing page check
          description: A human-friendly display name.
        type:
          type: string
          example: https
          enum:
            - ping
            - http
            - https
          description: The type of health check to perform.
        target:
          type: string
          format: url
          example: https://www.landingpage.com
          description: The endpoint to perform healthchecks on.
        regions:
          type: array
          items:
            type: string
            enum:
              - us_east
              - us_west
              - eu_west
              - se_asia
          example:
            - us_east
            - eu_west
          description: An array containing the selected regions to perform healthchecks from.
        enabled:
          type: boolean
          example: true
          default: true
          description: A boolean value indicating whether the check is enabled/disabled.
    alert:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
          description: A unique ID that can be used to identify and reference the alert.
        name:
          type: string
          example: Landing page degraded performance
          description: A human-friendly display name.
        type:
          type: string
          example: latency
          enum:
            - latency
            - down
            - down_global
            - ssl_expiry
          description: The type of alert.
        threshold:
          type: integer
          example: 300
          description: The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
        comparison:
          type: string
          example: greater_than
          description: The comparison operator used against the alert's threshold.
          enum:
            - greater_than
            - less_than
        notifications:
          type: object
          description: The notification settings for a trigger alert.
          required:
            - slack
            - email
          properties:
            email:
              description: An email to notify on an alert trigger. The Email has to be one that is verified on that DigitalOcean account.
              example:
                - bob@example.com
              type: array
              items:
                type: string
            slack:
              type: array
              description: Slack integration details.
              items:
                type: object
                required:
                  - url
                  - channel
                properties:
                  channel:
                    type: string
                    format: string
                    example: Production Alerts
                    description: Slack channel to notify of an alert trigger.
                  url:
                    type: string
                    format: string
                    description: Slack Webhook URL.
                    example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
        period:
          type: string
          example: 2m
          description: Period of time the threshold must be exceeded to trigger the alert.
          enum:
            - 2m
            - 3m
            - 5m
            - 10m
            - 15m
            - 30m
            - 1h
    alert_updatable:
      type: object
      properties:
        name:
          type: string
          example: Landing page degraded performance
          description: A human-friendly display name.
        type:
          type: string
          example: latency
          enum:
            - latency
            - down
            - down_global
            - ssl_expiry
          description: The type of alert.
        threshold:
          type: integer
          example: 300
          description: The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
        comparison:
          type: string
          example: greater_than
          description: The comparison operator used against the alert's threshold.
          enum:
            - greater_than
            - less_than
        notifications:
          type: object
          description: The notification settings for a trigger alert.
          required:
            - slack
            - email
          properties:
            email:
              description: An email to notify on an alert trigger. The Email has to be one that is verified on that DigitalOcean account.
              example:
                - bob@example.com
              type: array
              items:
                type: string
            slack:
              type: array
              description: Slack integration details.
              items:
                type: object
                required:
                  - url
                  - channel
                properties:
                  channel:
                    type: string
                    format: string
                    example: Production Alerts
                    description: Slack channel to notify of an alert trigger.
                  url:
                    type: string
                    format: string
                    description: Slack Webhook URL.
                    example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
        period:
          type: string
          example: 2m
          description: Period of time the threshold must be exceeded to trigger the alert.
          enum:
            - 2m
            - 3m
            - 5m
            - 10m
            - 15m
            - 30m
            - 1h
    list_alert_policy:
      type: object
      required:
        - policies
      properties:
        policies:
          type: array
          items:
            type: object
            required:
              - uuid
              - type
              - description
              - compare
              - value
              - window
              - entities
              - tags
              - alerts
              - enabled
            properties:
              alerts:
                type: object
                required:
                  - slack
                  - email
                properties:
                  email:
                    description: An email to notify on an alert trigger.
                    example:
                      - bob@exmaple.com
                    type: array
                    items:
                      type: string
                  slack:
                    type: array
                    description: Slack integration details.
                    items:
                      type: object
                      required:
                        - url
                        - channel
                      properties:
                        channel:
                          type: string
                          example: Production Alerts
                          description: Slack channel to notify of an alert trigger.
                        url:
                          type: string
                          description: Slack Webhook URL.
                          example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
              compare:
                type: string
                example: GreaterThan
                enum:
                  - GreaterThan
                  - LessThan
              description:
                type: string
                example: CPU Alert
              enabled:
                type: boolean
                example: true
              entities:
                type: array
                items:
                  type: string
                example:
                  - '192018292'
              tags:
                type: array
                items:
                  type: string
                example:
                  - droplet_tag
              type:
                type: string
                enum:
                  - v1/insights/droplet/load_1
                  - v1/insights/droplet/load_5
                  - v1/insights/droplet/load_15
                  - v1/insights/droplet/memory_utilization_percent
                  - v1/insights/droplet/disk_utilization_percent
                  - v1/insights/droplet/cpu
                  - v1/insights/droplet/disk_read
                  - v1/insights/droplet/disk_write
                  - v1/insights/droplet/public_outbound_bandwidth
                  - v1/insights/droplet/public_inbound_bandwidth
                  - v1/insights/droplet/private_outbound_bandwidth
                  - v1/insights/droplet/private_inbound_bandwidth
                  - v1/insights/lbaas/avg_cpu_utilization_percent
                  - v1/insights/lbaas/connection_utilization_percent
                  - v1/insights/lbaas/droplet_health
                  - v1/insights/lbaas/tls_connections_per_second_utilization_percent
                  - v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx
                  - v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx
                  - v1/insights/lbaas/increase_in_http_error_rate_count_5xx
                  - v1/insights/lbaas/increase_in_http_error_rate_count_4xx
                  - v1/insights/lbaas/high_http_request_response_time
                  - v1/insights/lbaas/high_http_request_response_time_50p
                  - v1/insights/lbaas/high_http_request_response_time_95p
                  - v1/insights/lbaas/high_http_request_response_time_99p
                  - v1/dbaas/alerts/load_15_alerts
                  - v1/dbaas/alerts/memory_utilization_alerts
                  - v1/dbaas/alerts/disk_utilization_alerts
                  - v1/dbaas/alerts/cpu_alerts
                  - v1/droplet/autoscale_alerts/current_instances
                  - v1/droplet/autoscale_alerts/target_instances
                  - v1/droplet/autoscale_alerts/current_cpu_utilization
                  - v1/droplet/autoscale_alerts/target_cpu_utilization
                  - v1/droplet/autoscale_alerts/current_memory_utilization
                  - v1/droplet/autoscale_alerts/target_memory_utilization
                  - v1/droplet/autoscale_alerts/scale_up
                  - v1/droplet/autoscale_alerts/scale_down
                example: v1/insights/droplet/cpu
              uuid:
                type: string
                example: 78b3da62-27e5-49ba-ac70-5db0b5935c64
              value:
                type: number
                format: float
                example: 80
              window:
                type: string
                enum:
                  - 5m
                  - 10m
                  - 30m
                  - 1h
                example: 5m
    pagination:
      type: object
      properties:
        links:
          type: object
          properties:
            pages:
              anyOf:
                - type: object
                  properties:
                    last:
                      description: URI of the last page of the results.
                      type: string
                      example: https://api.digitalocean.com/v2/images?page=2
                    next:
                      description: URI of the next page of the results.
                      type: string
                      example: https://api.digitalocean.com/v2/images?page=2
                - type: object
                  properties:
                    first:
                      description: URI of the first page of the results.
                      type: string
                      example: https://api.digitalocean.com/v2/images?page=1
                    prev:
                      description: URI of the previous page of the results.
                      type: string
                      example: https://api.digitalocean.com/v2/images?page=1
                - {}
              example:
                pages:
                  first: https://api.digitalocean.com/v2/account/keys?page=1
                  prev: https://api.digitalocean.com/v2/account/keys?page=2
    meta:
      type: object
      properties:
        meta:
          type: object
          description: Information about the response itself.
          required:
            - total
          properties:
            total:
              description: Number of objects returned by the request.
              type: integer
              example: 1
      required:
        - meta
    error:
      type: object
      properties:
        id:
          description: A short identifier corresponding to the HTTP status code returned. For  example, the ID for a response returning a 404 status code would be "not_found."
          type: string
          example: not_found
        message:
          description: A message providing additional information about the error, including  details to help resolve it when possible.
          type: string
          example: The resource you were accessing could not be found.
        request_id:
          description: Optionally, some endpoints may include a request ID that should be  provided when reporting bugs or opening support tickets to help  identify the issue.
          type: string
          example: 4d9d8375-3c56-4925-a3e7-eb137fed17e9
      required:
        - id
        - message
    alert_policy:
      type: object
      required:
        - uuid
        - type
        - description
        - compare
        - value
        - window
        - entities
        - tags
        - alerts
        - enabled
      properties:
        alerts:
          type: object
          required:
            - slack
            - email
          properties:
            email:
              description: An email to notify on an alert trigger.
              example:
                - bob@exmaple.com
              type: array
              items:
                type: string
            slack:
              type: array
              description: Slack integration details.
              items:
                type: object
                required:
                  - url
                  - channel
                properties:
                  channel:
                    type: string
                    example: Production Alerts
                    description: Slack channel to notify of an alert trigger.
                  url:
                    type: string
                    description: Slack Webhook URL.
                    example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
        compare:
          type: string
          example: GreaterThan
          enum:
            - GreaterThan
            - LessThan
        description:
          type: string
          example: CPU Alert
        enabled:
          type: boolean
          example: true
        entities:
          type: array
          items:
            type: string
          example:
            - '192018292'
        tags:
          type: array
          items:
            type: string
          example:
            - droplet_tag
        type:
          type: string
          enum:
            - v1/insights/droplet/load_1
            - v1/insights/droplet/load_5
            - v1/insights/droplet/load_15
            - v1/insights/droplet/memory_utilization_percent
            - v1/insights/droplet/disk_utilization_percent
            - v1/insights/droplet/cpu
            - v1/insights/droplet/disk_read
            - v1/insights/droplet/disk_write
            - v1/insights/droplet/public_outbound_bandwidth
            - v1/insights/droplet/public_inbound_bandwidth
            - v1/insights/droplet/private_outbound_bandwidth
            - v1/insights/droplet/private_inbound_bandwidth
            - v1/insights/lbaas/avg_cpu_utilization_percent
            - v1/insights/lbaas/connection_utilization_percent
            - v1/insights/lbaas/droplet_health
            - v1/insights/lbaas/tls_connections_per_second_utilization_percent
            - v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx
            - v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx
            - v1/insights/lbaas/increase_in_http_error_rate_count_5xx
            - v1/insights/lbaas/increase_in_http_error_rate_count_4xx
            - v1/insights/lbaas/high_http_request_response_time
            - v1/insights/lbaas/high_http_request_response_time_50p
            - v1/insights/lbaas/high_http_request_response_time_95p
            - v1/insights/lbaas/high_http_request_response_time_99p
            - v1/dbaas/alerts/load_15_alerts
            - v1/dbaas/alerts/memory_utilization_alerts
            - v1/dbaas/alerts/disk_utilization_alerts
            - v1/dbaas/alerts/cpu_alerts
            - v1/droplet/autoscale_alerts/current_instances
            - v1/droplet/autoscale_alerts/target_instances
            - v1/droplet/autoscale_alerts/current_cpu_utilization
            - v1/droplet/autoscale_alerts/target_cpu_utilization
            - v1/droplet/autoscale_alerts/current_memory_utilization
            - v1/droplet/autoscale_alerts/target_memory_utilization
            - v1/droplet/autoscale_alerts/scale_up
            - v1/droplet/autoscale_alerts/scale_down
          example: v1/insights/droplet/cpu
        uuid:
          type: string
          example: 78b3da62-27e5-49ba-ac70-5db0b5935c64
        value:
          type: number
          format: float
          example: 80
        window:
          type: string
          enum:
            - 5m
            - 10m
            - 30m
            - 1h
          example: 5m
    alerts:
      type: object
      required:
        - slack
        - email
      properties:
        email:
          description: An email to notify on an alert trigger.
          example:
            - bob@exmaple.com
          type: array
          items:
            type: string
        slack:
          type: array
          description: Slack integration details.
          items:
            type: object
            required:
              - url
              - channel
            properties:
              channel:
                type: string
                example: Production Alerts
                description: Slack channel to notify of an alert trigger.
              url:
                type: string
                description: Slack Webhook URL.
                example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
    metrics:
      type: object
      required:
        - status
        - data
      properties:
        data:
          type: object
          required:
            - resultType
            - result
          properties:
            result:
              type: array
              description: Result of query.
              items:
                type: object
                required:
                  - metric
                  - values
                properties:
                  metric:
                    type: object
                    description: An object containing the metric's labels. These labels are key/value pairs that vary depending on the metric being queried. For example, load balancer metrics contain a `lb_id` label, while Droplet metrics contain a `host_id` label, and App Platform metrics contain a `app_component` label.
                    additionalProperties:
                      type: string
                    example:
                      host_id: '19201920'
                  values:
                    type: array
                    description: An array of values for the metric.
                    example:
                      - - 1435781430
                        - '1'
                      - - 1435781445
                        - '1'
                    items:
                      type: array
                      items:
                        oneOf:
                          - type: integer
                          - type: string
            resultType:
              type: string
              enum:
                - matrix
              example: matrix
        status:
          type: string
          example: success
          enum:
            - success
            - error
    opensearch_config_request:
      type: object
      required:
        - endpoint
      properties:
        credentials:
          type: object
          description: Credentials for an OpenSearch cluster user. Optional if `cluster_uuid` is passed.
          properties:
            username:
              type: string
              example: username
            password:
              type: string
              example: password
        endpoint:
          type: string
          example: example.com
          description: host of the OpenSearch cluster
        cluster_uuid:
          type: string
          example: 85148069-7e35-4999-80bd-6fa1637ca385
          description: A unique identifier for a managed OpenSearch cluster.
        cluster_name:
          type: string
          example: managed_dbaas_cluster
          description: Name of a managed OpenSearch cluster.
        index_name:
          type: string
          description: OpenSearch index to send logs to.
          example: logs
        retention_days:
          type: integer
          description: Number of days to retain logs in an OpenSearch cluster.
          example: 14
          default: 14
    destination_omit_credentials:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for a destination.
          example: 01f30bfa-319a-4769-ba95-9d43971fb514
        name:
          type: string
          description: destination name
          example: managed_opensearch_cluster
        type:
          type: string
          enum:
            - opensearch_dbaas
            - opensearch_ext
          description: |
            The destination type. `opensearch_dbaas` for a DigitalOcean managed OpenSearch
            cluster or `opensearch_ext` for an externally managed one.
          example: opensearch_dbaas
        config:
          type: object
          description: OpenSearch destination configuration with `credentials` omitted.
          properties:
            id:
              type: string
              description: A unique identifier for a configuration.
              example: 41078d41-165c-4cff-9f0a-19536e3e3d49
            endpoint:
              type: string
              example: example.com
              description: host of the OpenSearch cluster
            cluster_uuid:
              type: string
              example: 85148069-7e35-4999-80bd-6fa1637ca385
              description: A unique identifier for a managed OpenSearch cluster.
            cluster_name:
              type: string
              example: managed_dbaas_cluster
              description: Name of a managed OpenSearch cluster.
            index_name:
              type: string
              description: OpenSearch index to send logs to.
              example: logs
            retention_days:
              type: integer
              description: Number of days to retain logs in OpenSearch.
              example: 14
              default: 14
    urn:
      type: string
      pattern: ^do:(dbaas|domain|droplet|floatingip|loadbalancer|space|volume|kubernetes|vpc):.*
      example: do:droplet:13457723
      description: The uniform resource name (URN) for the resource in the format do:resource_type:resource_id.
    sinks_response:
      type: object
      required:
        - urn
      properties:
        destination:
          type: object
          required:
            - config
          properties:
            id:
              type: string
              description: A unique identifier for a destination.
              example: 01f30bfa-319a-4769-ba95-9d43971fb514
            name:
              type: string
              description: destination name
              example: managed_opensearch_cluster
            type:
              type: string
              enum:
                - opensearch_dbaas
                - opensearch_ext
              description: |
                The destination type. `opensearch_dbaas` for a DigitalOcean managed OpenSearch
                cluster or `opensearch_ext` for an externally managed one.
              example: opensearch_dbaas
            config:
              type: object
              required:
                - endpoint
              properties:
                id:
                  type: string
                  description: A unique identifier for a configuration.
                  example: 41078d41-165c-4cff-9f0a-19536e3e3d49
                credentials:
                  type: object
                  description: Credentials for an OpenSearch cluster user. Optional if `cluster_uuid` is passed.
                  properties:
                    username:
                      type: string
                      example: username
                    password:
                      type: string
                      example: password
                endpoint:
                  type: string
                  example: example.com
                  description: host of the OpenSearch cluster
                cluster_uuid:
                  type: string
                  example: 85148069-7e35-4999-80bd-6fa1637ca385
                  description: A unique identifier for a managed OpenSearch cluster.
                cluster_name:
                  type: string
                  example: managed_dbaas_cluster
                  description: Name of a managed OpenSearch cluster.
                index_name:
                  type: string
                  description: OpenSearch index to send logs to.
                  example: logs
                retention_days:
                  type: integer
                  description: 'Number of days to retain logs in OpenSearch (default: 14)'
                  example: 14
        resources:
          type: array
          description: List of resources identified by their URNs.
          items:
            type: object
            required:
              - urn
            properties:
              urn:
                type: string
                pattern: ^do:kubernetes:.*
                example: do:kubernetes:f453aa14-646e-4cf8-8c62-75a19fb24ec2
                description: The uniform resource name (URN) for the resource in the format do:resource_type:resource_id.
              name:
                type: string
                description: resource name
                example: managed_kubernetes_cluster
    check:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
          description: A unique ID that can be used to identify and reference the check.
        name:
          type: string
          example: Landing page check
          description: A human-friendly display name.
        type:
          type: string
          example: https
          enum:
            - ping
            - http
            - https
          description: The type of health check to perform.
        target:
          type: string
          format: url
          example: https://www.landingpage.com
          description: The endpoint to perform healthchecks on.
        regions:
          type: array
          items:
            type: string
            enum:
              - us_east
              - us_west
              - eu_west
              - se_asia
          example:
            - us_east
            - eu_west
          description: An array containing the selected regions to perform healthchecks from.
        enabled:
          type: boolean
          example: true
          default: true
          description: A boolean value indicating whether the check is enabled/disabled.
    state:
      type: object
      properties:
        regions:
          type: object
          description: A map of region to regional state
          properties:
            us_east:
              type: object
              properties:
                status:
                  type: string
                  example: UP
                  enum:
                    - DOWN
                    - UP
                    - CHECKING
                status_changed_at:
                  type: string
                  example: '2022-03-17T22:28:51Z'
                thirty_day_uptime_percentage:
                  type: number
                  example: 97.99
            eu_west:
              type: object
              properties:
                status:
                  type: string
                  example: UP
                  enum:
                    - DOWN
                    - UP
                    - CHECKING
                status_changed_at:
                  type: string
                  example: '2022-03-17T22:28:51Z'
                thirty_day_uptime_percentage:
                  type: number
                  example: 97.99
        previous_outage:
          type: object
          properties:
            region:
              type: string
              example: us_east
            started_at:
              type: string
              example: '2022-03-17T18:04:55Z'
            ended_at:
              type: string
              example: '2022-03-17T18:06:55Z'
            duration_seconds:
              type: integer
              example: 120
    alert_base:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
          description: A unique ID that can be used to identify and reference the alert.
    notification:
      type: object
      description: The notification settings for a trigger alert.
      required:
        - slack
        - email
      properties:
        email:
          description: An email to notify on an alert trigger. The Email has to be one that is verified on that DigitalOcean account.
          example:
            - bob@example.com
          type: array
          items:
            type: string
        slack:
          type: array
          description: Slack integration details.
          items:
            type: object
            required:
              - url
              - channel
            properties:
              channel:
                type: string
                format: string
                example: Production Alerts
                description: Slack channel to notify of an alert trigger.
              url:
                type: string
                format: string
                description: Slack Webhook URL.
                example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
    page_links:
      type: object
      properties:
        pages:
          anyOf:
            - type: object
              properties:
                last:
                  description: URI of the last page of the results.
                  type: string
                  example: https://api.digitalocean.com/v2/images?page=2
                next:
                  description: URI of the next page of the results.
                  type: string
                  example: https://api.digitalocean.com/v2/images?page=2
            - type: object
              properties:
                first:
                  description: URI of the first page of the results.
                  type: string
                  example: https://api.digitalocean.com/v2/images?page=1
                prev:
                  description: URI of the previous page of the results.
                  type: string
                  example: https://api.digitalocean.com/v2/images?page=1
            - {}
          example:
            pages:
              first: https://api.digitalocean.com/v2/account/keys?page=1
              prev: https://api.digitalocean.com/v2/account/keys?page=2
    meta_properties:
      type: object
      description: Information about the response itself.
      properties:
        total:
          description: Number of objects returned by the request.
          type: integer
          example: 1
    slack_details:
      type: object
      required:
        - url
        - channel
      properties:
        channel:
          type: string
          example: Production Alerts
          description: Slack channel to notify of an alert trigger.
        url:
          type: string
          description: Slack Webhook URL.
          example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
    metrics_data:
      type: object
      required:
        - resultType
        - result
      properties:
        result:
          type: array
          description: Result of query.
          items:
            type: object
            required:
              - metric
              - values
            properties:
              metric:
                type: object
                description: An object containing the metric's labels. These labels are key/value pairs that vary depending on the metric being queried. For example, load balancer metrics contain a `lb_id` label, while Droplet metrics contain a `host_id` label, and App Platform metrics contain a `app_component` label.
                additionalProperties:
                  type: string
                example:
                  host_id: '19201920'
              values:
                type: array
                description: An array of values for the metric.
                example:
                  - - 1435781430
                    - '1'
                  - - 1435781445
                    - '1'
                items:
                  type: array
                  items:
                    oneOf:
                      - type: integer
                      - type: string
        resultType:
          type: string
          enum:
            - matrix
          example: matrix
    opensearch_config_omit_credentials:
      type: object
      description: OpenSearch destination configuration with `credentials` omitted.
      properties:
        id:
          type: string
          description: A unique identifier for a configuration.
          example: 41078d41-165c-4cff-9f0a-19536e3e3d49
        endpoint:
          type: string
          example: example.com
          description: host of the OpenSearch cluster
        cluster_uuid:
          type: string
          example: 85148069-7e35-4999-80bd-6fa1637ca385
          description: A unique identifier for a managed OpenSearch cluster.
        cluster_name:
          type: string
          example: managed_dbaas_cluster
          description: Name of a managed OpenSearch cluster.
        index_name:
          type: string
          description: OpenSearch index to send logs to.
          example: logs
        retention_days:
          type: integer
          description: Number of days to retain logs in OpenSearch.
          example: 14
          default: 14
    destination:
      type: object
      required:
        - config
      properties:
        id:
          type: string
          description: A unique identifier for a destination.
          example: 01f30bfa-319a-4769-ba95-9d43971fb514
        name:
          type: string
          description: destination name
          example: managed_opensearch_cluster
        type:
          type: string
          enum:
            - opensearch_dbaas
            - opensearch_ext
          description: |
            The destination type. `opensearch_dbaas` for a DigitalOcean managed OpenSearch
            cluster or `opensearch_ext` for an externally managed one.
          example: opensearch_dbaas
        config:
          type: object
          required:
            - endpoint
          properties:
            id:
              type: string
              description: A unique identifier for a configuration.
              example: 41078d41-165c-4cff-9f0a-19536e3e3d49
            credentials:
              type: object
              description: Credentials for an OpenSearch cluster user. Optional if `cluster_uuid` is passed.
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
            endpoint:
              type: string
              example: example.com
              description: host of the OpenSearch cluster
            cluster_uuid:
              type: string
              example: 85148069-7e35-4999-80bd-6fa1637ca385
              description: A unique identifier for a managed OpenSearch cluster.
            cluster_name:
              type: string
              example: managed_dbaas_cluster
              description: Name of a managed OpenSearch cluster.
            index_name:
              type: string
              description: OpenSearch index to send logs to.
              example: logs
            retention_days:
              type: integer
              description: 'Number of days to retain logs in OpenSearch (default: 14)'
              example: 14
    check_base:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
          description: A unique ID that can be used to identify and reference the check.
    regional_state:
      type: object
      description: A map of region to regional state
      properties:
        us_east:
          type: object
          properties:
            status:
              type: string
              example: UP
              enum:
                - DOWN
                - UP
                - CHECKING
            status_changed_at:
              type: string
              example: '2022-03-17T22:28:51Z'
            thirty_day_uptime_percentage:
              type: number
              example: 97.99
        eu_west:
          type: object
          properties:
            status:
              type: string
              example: UP
              enum:
                - DOWN
                - UP
                - CHECKING
            status_changed_at:
              type: string
              example: '2022-03-17T22:28:51Z'
            thirty_day_uptime_percentage:
              type: number
              example: 97.99
    previous_outage:
      type: object
      properties:
        region:
          type: string
          example: us_east
        started_at:
          type: string
          example: '2022-03-17T18:04:55Z'
        ended_at:
          type: string
          example: '2022-03-17T18:06:55Z'
        duration_seconds:
          type: integer
          example: 120
    forward_links:
      type: object
      properties:
        last:
          description: URI of the last page of the results.
          type: string
          example: https://api.digitalocean.com/v2/images?page=2
        next:
          description: URI of the next page of the results.
          type: string
          example: https://api.digitalocean.com/v2/images?page=2
    backward_links:
      type: object
      properties:
        first:
          description: URI of the first page of the results.
          type: string
          example: https://api.digitalocean.com/v2/images?page=1
        prev:
          description: URI of the previous page of the results.
          type: string
          example: https://api.digitalocean.com/v2/images?page=1
    metrics_result:
      type: object
      required:
        - metric
        - values
      properties:
        metric:
          type: object
          description: An object containing the metric's labels. These labels are key/value pairs that vary depending on the metric being queried. For example, load balancer metrics contain a `lb_id` label, while Droplet metrics contain a `host_id` label, and App Platform metrics contain a `app_component` label.
          additionalProperties:
            type: string
          example:
            host_id: '19201920'
        values:
          type: array
          description: An array of values for the metric.
          example:
            - - 1435781430
              - '1'
            - - 1435781445
              - '1'
          items:
            type: array
            items:
              oneOf:
                - type: integer
                - type: string
    opensearch_config:
      type: object
      required:
        - endpoint
      properties:
        id:
          type: string
          description: A unique identifier for a configuration.
          example: 41078d41-165c-4cff-9f0a-19536e3e3d49
        credentials:
          type: object
          description: Credentials for an OpenSearch cluster user. Optional if `cluster_uuid` is passed.
          properties:
            username:
              type: string
              example: username
            password:
              type: string
              example: password
        endpoint:
          type: string
          example: example.com
          description: host of the OpenSearch cluster
        cluster_uuid:
          type: string
          example: 85148069-7e35-4999-80bd-6fa1637ca385
          description: A unique identifier for a managed OpenSearch cluster.
        cluster_name:
          type: string
          example: managed_dbaas_cluster
          description: Name of a managed OpenSearch cluster.
        index_name:
          type: string
          description: OpenSearch index to send logs to.
          example: logs
        retention_days:
          type: integer
          description: 'Number of days to retain logs in OpenSearch (default: 14)'
          example: 14
    region_state:
      type: object
      properties:
        status:
          type: string
          example: UP
          enum:
            - DOWN
            - UP
            - CHECKING
        status_changed_at:
          type: string
          example: '2022-03-17T22:28:51Z'
        thirty_day_uptime_percentage:
          type: number
          example: 97.99
    link_to_last_page:
      type: object
      properties:
        last:
          description: URI of the last page of the results.
          type: string
          example: https://api.digitalocean.com/v2/images?page=2
    link_to_next_page:
      type: object
      properties:
        next:
          description: URI of the next page of the results.
          type: string
          example: https://api.digitalocean.com/v2/images?page=2
    link_to_first_page:
      type: object
      properties:
        first:
          description: URI of the first page of the results.
          type: string
          example: https://api.digitalocean.com/v2/images?page=1
    link_to_prev_page:
      type: object
      properties:
        prev:
          description: URI of the previous page of the results.
          type: string
          example: https://api.digitalocean.com/v2/images?page=1
  responses:
    list_alert_policy_response:
      description: A list of alert policies.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/list_alert_policy'
              - $ref: '#/components/schemas/pagination'
              - $ref: '#/components/schemas/meta'
            example:
              policies:
                - alerts:
                    email:
                      - bob@example.com
                    slack:
                      - channel: Production Alerts
                        url: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ"
                  compare: GreaterThan
                  description: CPU Alert
                  enabled: true
                  entities:
                    - 192018292
                  tags:
                    - production_droplets
                  type: v1/insights/droplet/cpu
                  uuid: 78b3da62-27e5-49ba-ac70-5db0b5935c64
                  value: 80
                  window: 5m
              links:
                first: https//api.digitalocean.com/v2/monitoring/alerts?page=1&per_page=10
                prev: https//api.digitalocean.com/v2/monitoring/alerts?page=2&per_page=10
                next: https//api.digitalocean.com/v2/monitoring/alerts?page=4&per_page=10
                last: https//api.digitalocean.com/v2/monitoring/alerts?page=5&per_page=10
              meta:
                total: 50
    unauthorized:
      description: Authentication failed due to invalid credentials.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            id: unauthorized
            message: Unable to authenticate you.
    too_many_requests:
      description: The API rate limit has been exceeded.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            id: too_many_requests
            message: API rate limit exceeded.
    server_error:
      description: There was a server error.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            id: server_error
            message: Unexpected server-side error
    unexpected_error:
      description: There was an unexpected error.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            id: example_error
            message: some error message
    alert_policy_response:
      description: An alert policy.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            properties:
              policy:
                $ref: '#/components/schemas/alert_policy'
            type: object
    not_found:
      description: The resource was not found.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            id: not_found
            message: The resource you requested could not be found.
    no_content:
      description: The action was successful and the response body is empty.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    droplet_bandwidth_metric_response:
      description: The response will be a JSON object with a key called `data` and `status`.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metrics'
          examples:
            Inbound Private Bandwidth:
              $ref: '#/components/examples/inbound_private_droplet_bandwidth'
            Inbound Public Bandwidth:
              $ref: '#/components/examples/inbound_public_droplet_bandwidth'
            Outbound Private Bandwidth:
              $ref: '#/components/examples/outbound_private_droplet_bandwidth'
            Outbound Public Bandwidth:
              $ref: '#/components/examples/outbound_public_droplet_bandwidth'
    droplet_cpu_metric_response:
      description: The response will be a JSON object with a key called `data` and `status`.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metrics'
          examples:
            CPU:
              $ref: '#/components/examples/droplet_cpu'
    droplet_filesystem_metric_response:
      description: The response will be a JSON object with a key called `data` and `status`.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metrics'
          examples:
            Filesystem:
              $ref: '#/components/examples/droplet_filesystem'
    metric_response:
      description: The response will be a JSON object with a key called `data` and `status`.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metrics'
    app_metric_response:
      description: The response will be a JSON object with a key called `data` and `status`.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/metrics'
          examples:
            Memory:
              $ref: '#/components/examples/app_memory_percentage'
    destination:
      description: The response is a JSON object with a `destination` key.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            properties:
              destination:
                $ref: '#/components/schemas/destination_omit_credentials'
            type: object
    monitoring_list_destinations:
      description: The response is a JSON object with a `destinations` key.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            properties:
              destinations:
                type: array
                items:
                  $ref: '#/components/schemas/destination_omit_credentials'
            type: object
    accepted:
      description: This does not indicate the success or failure of any operation, just that the request has been accepted for processing.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
    list_sinks:
      description: The response is a JSON object with a `sinks` key.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            properties:
              sinks:
                type: array
                description: List of sinks identified by their URNs.
                items:
                  $ref: '#/components/schemas/sinks_response'
            type: object
    sinks:
      description: The response is a JSON object with a `sink` key.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            properties:
              sink:
                $ref: '#/components/schemas/sinks_response'
            type: object
    all_checks:
      description: The response will be a JSON object with a key called `checks`. This will be set to an array of objects, each of which will contain the standard attributes associated with an uptime check
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  checks:
                    type: array
                    items:
                      $ref: '#/components/schemas/check'
              - $ref: '#/components/schemas/pagination'
              - $ref: '#/components/schemas/meta'
    existing_check:
      description: The response will be a JSON object with a key called `check`. The value of this will be an object that contains the standard attributes associated with an uptime check.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            type: object
            properties:
              check:
                $ref: '#/components/schemas/check'
    existing_check_state:
      description: The response will be a JSON object with a key called `state`. The value of this will be an object that contains the standard attributes associated with an uptime check's state.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            type: object
            properties:
              state:
                $ref: '#/components/schemas/state'
    all_alerts:
      description: The response will be a JSON object with a key called `alerts`. This will be set to an array of objects, each of which will contain the standard attributes associated with an uptime alert.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  alerts:
                    type: array
                    items:
                      $ref: '#/components/schemas/alert'
              - $ref: '#/components/schemas/pagination'
              - $ref: '#/components/schemas/meta'
    existing_alert:
      description: The response will be a JSON object with a key called `alert`. The value of this will be an object that contains the standard attributes associated with an uptime alert.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            type: object
            properties:
              alert:
                $ref: '#/components/schemas/alert'
  parameters:
    per_page:
      in: query
      name: per_page
      required: false
      description: Number of items returned per page
      schema:
        type: integer
        minimum: 1
        default: 20
        maximum: 200
      example: 2
    page:
      in: query
      name: page
      required: false
      description: Which 'page' of paginated results to return.
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1
    alert_uuid:
      in: path
      name: alert_uuid
      description: A unique identifier for an alert policy.
      required: true
      schema:
        type: string
      example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
    parameters_droplet_id:
      in: query
      name: host_id
      description: The droplet ID.
      example: '17209102'
      required: true
      schema:
        type: string
    network_interface:
      in: query
      name: interface
      description: The network interface.
      required: true
      example: private
      schema:
        type: string
        enum:
          - private
          - public
    network_direction:
      in: query
      name: direction
      description: The traffic direction.
      required: true
      example: inbound
      schema:
        type: string
        enum:
          - inbound
          - outbound
    metric_timestamp_start:
      in: query
      name: start
      description: UNIX timestamp to start metric window.
      example: '1620683817'
      required: true
      schema:
        type: string
    metric_timestamp_end:
      in: query
      name: end
      description: UNIX timestamp to end metric window.
      example: '1620705417'
      required: true
      schema:
        type: string
    parameters_app_id:
      in: query
      name: app_id
      description: The app UUID.
      example: 2db3c021-15ad-4088-bfe8-99dc972b9cf6
      required: true
      schema:
        type: string
    app_component:
      in: query
      name: app_component
      description: The app component name.
      example: sample-application
      required: false
      schema:
        type: string
    parameters_load_balancer_id:
      in: query
      name: lb_id
      description: A unique identifier for a load balancer.
      required: true
      schema:
        type: string
      example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
    parameters_autoscale_pool_id:
      in: query
      name: autoscale_pool_id
      description: A unique identifier for an autoscale pool.
      required: true
      schema:
        type: string
      example: 0d3db13e-a604-4944-9827-7ec2642d32ac
    destination_uuid:
      in: path
      name: destination_uuid
      description: A unique identifier for a destination.
      required: true
      schema:
        type: string
      example: 1a64809f-1708-48ee-a742-dec8d481b8d1
    resource_id:
      in: query
      name: resource_id
      description: A unique URN for a resource.
      schema:
        $ref: '#/components/schemas/urn'
      example: do:kubernetes:5ba4518b-b9e2-4978-aa92-2d4c727e8824
    sink_uuid:
      in: path
      name: sink_uuid
      description: A unique identifier for a sink.
      required: true
      schema:
        type: string
      example: 78b172b6-52c3-4a4b-96d5-78d3f1a0b18c
    check_id:
      in: path
      name: check_id
      description: A unique identifier for a check.
      required: true
      schema:
        type: string
        format: uuid
      example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
    parameters_alert_id:
      in: path
      name: alert_id
      description: A unique identifier for an alert.
      required: true
      schema:
        type: string
        format: uuid
      example: 17f0f0ae-b7e5-4ef6-86e3-aa569db58284
  examples:
    inbound_private_droplet_bandwidth:
      value:
        status: success
        data:
          resultType: matrix
          result:
            - metric:
                direction: inbound
                host_id: '222651441'
                interface: private
              values:
                - - 1634052360
                  - '0.016600450090265357'
                - - 1634052480
                  - '0.015085955677299055'
                - - 1634052600
                  - '0.014941163855322308'
                - - 1634052720
                  - '0.016214285714285712'
    inbound_public_droplet_bandwidth:
      value:
        status: success
        data:
          resultType: matrix
          result:
            - metric:
                direction: inbound
                host_id: '222651441'
                interface: public
              values:
                - - 1634052360
                  - '0.016600450090265357'
                - - 1634052480
                  - '0.015085955677299055'
                - - 1634052600
                  - '0.014941163855322308'
                - - 1634052720
                  - '0.016214285714285712'
    outbound_private_droplet_bandwidth:
      value:
        status: success
        data:
          resultType: matrix
          result:
            - metric:
                direction: outbound
                host_id: '222651441'
                interface: private
              values:
                - - 1634052360
                  - '0.016600450090265357'
                - - 1634052480
                  - '0.015085955677299055'
                - - 1634052600
                  - '0.014941163855322308'
                - - 1634052720
                  - '0.016214285714285712'
    outbound_public_droplet_bandwidth:
      value:
        status: success
        data:
          resultType: matrix
          result:
            - metric:
                direction: outbound
                host_id: '222651441'
                interface: public
              values:
                - - 1634052360
                  - '0.016600450090265357'
                - - 1634052480
                  - '0.015085955677299055'
                - - 1634052600
                  - '0.014941163855322308'
                - - 1634052720
                  - '0.016214285714285712'
    droplet_cpu:
      value:
        status: success
        data:
          resultType: matrix
          result:
            - metric:
                host_id: '222651441'
                mode: idle
              values:
                - - 1635386880
                  - '122901.18'
                - - 1635387000
                  - '123020.92'
                - - 1635387120
                  - '123140.8'
            - metric:
                host_id: '222651441'
                mode: iowait
              values:
                - - 1635386880
                  - '14.99'
                - - 1635387000
                  - '15.01'
                - - 1635387120
                  - '15.01'
            - metric:
                host_id: '222651441'
                mode: irq
              values:
                - - 1635386880
                  - '0'
                - - 1635387000
                  - '0'
                - - 1635387120
                  - '0'
            - metric:
                host_id: '222651441'
                mode: nice
              values:
                - - 1635386880
                  - '66.35'
                - - 1635387000
                  - '66.35'
                - - 1635387120
                  - '66.35'
            - metric:
                host_id: '222651441'
                mode: softirq
              values:
                - - 1635386880
                  - '2.13'
                - - 1635387000
                  - '2.13'
                - - 1635387120
                  - '2.13'
            - metric:
                host_id: '222651441'
                mode: steal
              values:
                - - 1635386880
                  - '7.89'
                - - 1635387000
                  - '7.9'
                - - 1635387120
                  - '7.91'
            - metric:
                host_id: '222651441'
                mode: system
              values:
                - - 1635386880
                  - '140.09'
                - - 1635387000
                  - '140.2'
                - - 1635387120
                  - '140.23'
            - metric:
                host_id: '222651441'
                mode: user
              values:
                - - 1635386880
                  - '278.57'
                - - 1635387000
                  - '278.65'
                - - 1635387120
                  - '278.69'
    droplet_filesystem:
      value:
        status: success
        data:
          resultType: matrix
          result:
            - metric:
                device: /dev/vda1
                fstype: ext4
                host_id: '222651441'
                mountpoint: /
              values:
                - - 1635386880
                  - '25832407040'
                - - 1635387000
                  - '25832407040'
                - - 1635387120
                  - '25832407040'
    app_memory_percentage:
      value:
        status: success
        data:
          resultType: matrix
          result:
            - metric:
                app_component: sample-application
                app_component_instance: sample-application-0
                app_uuid: db3c021-15ad-4088-bfe8-99dc972b9cf6
              values:
                - - 1634052360
                  - '5.016600450090265357'
                - - 1634052480
                  - '12.015085955677299055'
                - - 1634052600
                  - '8.014941163855322308'
                - - 1634052720
                  - '32.016214285714285712'
  headers:
    ratelimit-limit:
      schema:
        type: integer
      example: 5000
      description: The default limit on number of requests that can be made per hour and per minute. Current rate limits are 5000 requests per hour and 250 requests per minute.
    ratelimit-remaining:
      schema:
        type: integer
      example: 4816
      description: The number of requests in your hourly quota that remain before you hit your request limit. See https://developers.digitalocean.com/documentation/v2/#rate-limit for information about how requests expire.
    ratelimit-reset:
      schema:
        type: integer
      example: 1444931833
      description: The time when the oldest request will expire. The value is given in Unix epoch time. See https://developers.digitalocean.com/documentation/v2/#rate-limit for information about how requests expire.
  x-stackQL-resources:
    alert_policies:
      id: digitalocean.monitoring.alert_policies
      name: alert_policies
      title: Alert Policies
      methods:
        monitoring_list_alert_policy:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1alerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        monitoring_create_alert_policy:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1alerts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        monitoring_get_alert_policy:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1alerts~1{alert_uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.policy
        monitoring_update_alert_policy:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1alerts~1{alert_uuid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        monitoring_delete_alert_policy:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1alerts~1{alert_uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/monitoring_get_alert_policy'
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/monitoring_list_alert_policy'
        insert:
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/monitoring_create_alert_policy'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/monitoring_delete_alert_policy'
        replace:
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/monitoring_update_alert_policy'
    droplet_bandwidth_metrics:
      id: digitalocean.monitoring.droplet_bandwidth_metrics
      name: droplet_bandwidth_metrics
      title: Droplet Bandwidth Metrics
      methods:
        monitoring_get_droplet_bandwidth_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1bandwidth/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_bandwidth_metrics/methods/monitoring_get_droplet_bandwidth_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_cpu_metrics:
      id: digitalocean.monitoring.droplet_cpu_metrics
      name: droplet_cpu_metrics
      title: Droplet Cpu Metrics
      methods:
        monitoring_get_droplet_cpu_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1cpu/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_cpu_metrics/methods/monitoring_get_droplet_cpu_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_filesystem_free_metrics:
      id: digitalocean.monitoring.droplet_filesystem_free_metrics
      name: droplet_filesystem_free_metrics
      title: Droplet Filesystem Free Metrics
      methods:
        monitoring_get_droplet_filesystem_free_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1filesystem_free/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_filesystem_free_metrics/methods/monitoring_get_droplet_filesystem_free_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_filesystem_size_metrics:
      id: digitalocean.monitoring.droplet_filesystem_size_metrics
      name: droplet_filesystem_size_metrics
      title: Droplet Filesystem Size Metrics
      methods:
        monitoring_get_droplet_filesystem_size_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1filesystem_size/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_filesystem_size_metrics/methods/monitoring_get_droplet_filesystem_size_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_load1_metrics:
      id: digitalocean.monitoring.droplet_load1_metrics
      name: droplet_load1_metrics
      title: Droplet Load1 Metrics
      methods:
        monitoring_get_droplet_load1_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1load_1/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_load1_metrics/methods/monitoring_get_droplet_load1_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_load5_metrics:
      id: digitalocean.monitoring.droplet_load5_metrics
      name: droplet_load5_metrics
      title: Droplet Load5 Metrics
      methods:
        monitoring_get_droplet_load5_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1load_5/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_load5_metrics/methods/monitoring_get_droplet_load5_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_load15_metrics:
      id: digitalocean.monitoring.droplet_load15_metrics
      name: droplet_load15_metrics
      title: Droplet Load15 Metrics
      methods:
        monitoring_get_droplet_load15_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1load_15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_load15_metrics/methods/monitoring_get_droplet_load15_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_memory_cached_metrics:
      id: digitalocean.monitoring.droplet_memory_cached_metrics
      name: droplet_memory_cached_metrics
      title: Droplet Memory Cached Metrics
      methods:
        monitoring_get_droplet_memory_cached_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1memory_cached/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_memory_cached_metrics/methods/monitoring_get_droplet_memory_cached_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_memory_free_metrics:
      id: digitalocean.monitoring.droplet_memory_free_metrics
      name: droplet_memory_free_metrics
      title: Droplet Memory Free Metrics
      methods:
        monitoring_get_droplet_memory_free_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1memory_free/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_memory_free_metrics/methods/monitoring_get_droplet_memory_free_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_memory_total_metrics:
      id: digitalocean.monitoring.droplet_memory_total_metrics
      name: droplet_memory_total_metrics
      title: Droplet Memory Total Metrics
      methods:
        monitoring_get_droplet_memory_total_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1memory_total/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_memory_total_metrics/methods/monitoring_get_droplet_memory_total_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_memory_available_metrics:
      id: digitalocean.monitoring.droplet_memory_available_metrics
      name: droplet_memory_available_metrics
      title: Droplet Memory Available Metrics
      methods:
        monitoring_get_droplet_memory_available_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet~1memory_available/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_memory_available_metrics/methods/monitoring_get_droplet_memory_available_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    app_memory_percentage_metrics:
      id: digitalocean.monitoring.app_memory_percentage_metrics
      name: app_memory_percentage_metrics
      title: App Memory Percentage Metrics
      methods:
        monitoring_get_app_memory_percentage_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1apps~1memory_percentage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_memory_percentage_metrics/methods/monitoring_get_app_memory_percentage_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    app_cpu_percentage_metrics:
      id: digitalocean.monitoring.app_cpu_percentage_metrics
      name: app_cpu_percentage_metrics
      title: App Cpu Percentage Metrics
      methods:
        monitoring_get_app_cpupercentage_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1apps~1cpu_percentage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_cpu_percentage_metrics/methods/monitoring_get_app_cpupercentage_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    app_restart_count_metrics:
      id: digitalocean.monitoring.app_restart_count_metrics
      name: app_restart_count_metrics
      title: App Restart Count Metrics
      methods:
        monitoring_get_app_restart_count_metrics:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1apps~1restart_count/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_restart_count_metrics/methods/monitoring_get_app_restart_count_metrics'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_connections_current:
      id: digitalocean.monitoring.lb_frontend_connections_current
      name: lb_frontend_connections_current
      title: Lb Frontend Connections Current
      methods:
        monitoring_get_lb_frontend_connections_current:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_connections_current/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_connections_current/methods/monitoring_get_lb_frontend_connections_current'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_connections_limit:
      id: digitalocean.monitoring.lb_frontend_connections_limit
      name: lb_frontend_connections_limit
      title: Lb Frontend Connections Limit
      methods:
        monitoring_get_lb_frontend_connections_limit:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_connections_limit/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_connections_limit/methods/monitoring_get_lb_frontend_connections_limit'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_cpu_utilization:
      id: digitalocean.monitoring.lb_frontend_cpu_utilization
      name: lb_frontend_cpu_utilization
      title: Lb Frontend Cpu Utilization
      methods:
        monitoring_get_lb_frontend_cpu_utilization:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_cpu_utilization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_cpu_utilization/methods/monitoring_get_lb_frontend_cpu_utilization'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_firewall_dropped_bytes:
      id: digitalocean.monitoring.lb_frontend_firewall_dropped_bytes
      name: lb_frontend_firewall_dropped_bytes
      title: Lb Frontend Firewall Dropped Bytes
      methods:
        monitoring_get_lb_frontend_firewall_dropped_bytes:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_firewall_dropped_bytes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_firewall_dropped_bytes/methods/monitoring_get_lb_frontend_firewall_dropped_bytes'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_firewall_dropped_packets:
      id: digitalocean.monitoring.lb_frontend_firewall_dropped_packets
      name: lb_frontend_firewall_dropped_packets
      title: Lb Frontend Firewall Dropped Packets
      methods:
        monitoring_get_lb_frontend_firewall_dropped_packets:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_firewall_dropped_packets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_firewall_dropped_packets/methods/monitoring_get_lb_frontend_firewall_dropped_packets'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_http_responses:
      id: digitalocean.monitoring.lb_frontend_http_responses
      name: lb_frontend_http_responses
      title: Lb Frontend Http Responses
      methods:
        monitoring_get_lb_frontend_http_responses:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_http_responses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_http_responses/methods/monitoring_get_lb_frontend_http_responses'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_http_requests_per_second:
      id: digitalocean.monitoring.lb_frontend_http_requests_per_second
      name: lb_frontend_http_requests_per_second
      title: Lb Frontend Http Requests Per Second
      methods:
        monitoring_get_lb_frontend_http_requests_per_second:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_http_requests_per_second/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_http_requests_per_second/methods/monitoring_get_lb_frontend_http_requests_per_second'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_network_throughput_http:
      id: digitalocean.monitoring.lb_frontend_network_throughput_http
      name: lb_frontend_network_throughput_http
      title: Lb Frontend Network Throughput Http
      methods:
        monitoring_get_lb_frontend_network_throughput_http:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_network_throughput_http/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_network_throughput_http/methods/monitoring_get_lb_frontend_network_throughput_http'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_network_throughput_udp:
      id: digitalocean.monitoring.lb_frontend_network_throughput_udp
      name: lb_frontend_network_throughput_udp
      title: Lb Frontend Network Throughput Udp
      methods:
        monitoring_get_lb_frontend_network_throughput_udp:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_network_throughput_udp/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_network_throughput_udp/methods/monitoring_get_lb_frontend_network_throughput_udp'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_network_throughput_tcp:
      id: digitalocean.monitoring.lb_frontend_network_throughput_tcp
      name: lb_frontend_network_throughput_tcp
      title: Lb Frontend Network Throughput Tcp
      methods:
        monitoring_get_lb_frontend_network_throughput_tcp:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_network_throughput_tcp/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_network_throughput_tcp/methods/monitoring_get_lb_frontend_network_throughput_tcp'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_nlb_tcp_network_throughput:
      id: digitalocean.monitoring.lb_frontend_nlb_tcp_network_throughput
      name: lb_frontend_nlb_tcp_network_throughput
      title: Lb Frontend Nlb Tcp Network Throughput
      methods:
        monitoring_get_lb_frontend_nlb_tcp_network_throughput:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_nlb_tcp_network_throughput/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_nlb_tcp_network_throughput/methods/monitoring_get_lb_frontend_nlb_tcp_network_throughput'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_nlb_udp_network_throughput:
      id: digitalocean.monitoring.lb_frontend_nlb_udp_network_throughput
      name: lb_frontend_nlb_udp_network_throughput
      title: Lb Frontend Nlb Udp Network Throughput
      methods:
        monitoring_get_lb_frontend_nlb_udp_network_throughput:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_nlb_udp_network_throughput/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_nlb_udp_network_throughput/methods/monitoring_get_lb_frontend_nlb_udp_network_throughput'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_tls_connections_current:
      id: digitalocean.monitoring.lb_frontend_tls_connections_current
      name: lb_frontend_tls_connections_current
      title: Lb Frontend Tls Connections Current
      methods:
        monitoring_get_lb_frontend_tls_connections_current:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_tls_connections_current/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_tls_connections_current/methods/monitoring_get_lb_frontend_tls_connections_current'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_tls_connections_limit:
      id: digitalocean.monitoring.lb_frontend_tls_connections_limit
      name: lb_frontend_tls_connections_limit
      title: Lb Frontend Tls Connections Limit
      methods:
        monitoring_get_lb_frontend_tls_connections_limit:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_tls_connections_limit/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_tls_connections_limit/methods/monitoring_get_lb_frontend_tls_connections_limit'
        insert: []
        update: []
        delete: []
        replace: []
    lb_frontend_tls_connections_exceeding_rate_limit:
      id: digitalocean.monitoring.lb_frontend_tls_connections_exceeding_rate_limit
      name: lb_frontend_tls_connections_exceeding_rate_limit
      title: Lb Frontend Tls Connections Exceeding Rate Limit
      methods:
        monitoring_get_lb_frontend_tls_connections_exceeding_rate_limit:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1frontend_tls_connections_exceeding_rate_limit/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_frontend_tls_connections_exceeding_rate_limit/methods/monitoring_get_lb_frontend_tls_connections_exceeding_rate_limit'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_http_session_duration_avg:
      id: digitalocean.monitoring.lb_droplets_http_session_duration_avg
      name: lb_droplets_http_session_duration_avg
      title: Lb Droplets Http Session Duration Avg
      methods:
        monitoring_get_lb_droplets_http_session_duration_avg:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_http_session_duration_avg/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_http_session_duration_avg/methods/monitoring_get_lb_droplets_http_session_duration_avg'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_http_session_duration_50p:
      id: digitalocean.monitoring.lb_droplets_http_session_duration_50p
      name: lb_droplets_http_session_duration_50p
      title: Lb Droplets Http Session Duration 50p
      methods:
        monitoring_get_lb_droplets_http_session_duration_50p:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_http_session_duration_50p/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_http_session_duration_50p/methods/monitoring_get_lb_droplets_http_session_duration_50p'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_http_session_duration_95p:
      id: digitalocean.monitoring.lb_droplets_http_session_duration_95p
      name: lb_droplets_http_session_duration_95p
      title: Lb Droplets Http Session Duration 95p
      methods:
        monitoring_get_lb_droplets_http_session_duration_95p:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_http_session_duration_95p/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_http_session_duration_95p/methods/monitoring_get_lb_droplets_http_session_duration_95p'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_http_response_time_avg:
      id: digitalocean.monitoring.lb_droplets_http_response_time_avg
      name: lb_droplets_http_response_time_avg
      title: Lb Droplets Http Response Time Avg
      methods:
        monitoring_get_lb_droplets_http_response_time_avg:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_http_response_time_avg/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_http_response_time_avg/methods/monitoring_get_lb_droplets_http_response_time_avg'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_http_response_time_50p:
      id: digitalocean.monitoring.lb_droplets_http_response_time_50p
      name: lb_droplets_http_response_time_50p
      title: Lb Droplets Http Response Time 50p
      methods:
        monitoring_get_lb_droplets_http_response_time_50p:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_http_response_time_50p/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_http_response_time_50p/methods/monitoring_get_lb_droplets_http_response_time_50p'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_http_response_time_95p:
      id: digitalocean.monitoring.lb_droplets_http_response_time_95p
      name: lb_droplets_http_response_time_95p
      title: Lb Droplets Http Response Time 95p
      methods:
        monitoring_get_lb_droplets_http_response_time_95p:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_http_response_time_95p/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_http_response_time_95p/methods/monitoring_get_lb_droplets_http_response_time_95p'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_http_response_time_99p:
      id: digitalocean.monitoring.lb_droplets_http_response_time_99p
      name: lb_droplets_http_response_time_99p
      title: Lb Droplets Http Response Time 99p
      methods:
        monitoring_get_lb_droplets_http_response_time_99p:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_http_response_time_99p/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_http_response_time_99p/methods/monitoring_get_lb_droplets_http_response_time_99p'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_queue_size:
      id: digitalocean.monitoring.lb_droplets_queue_size
      name: lb_droplets_queue_size
      title: Lb Droplets Queue Size
      methods:
        monitoring_get_lb_droplets_queue_size:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_queue_size/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_queue_size/methods/monitoring_get_lb_droplets_queue_size'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_http_responses:
      id: digitalocean.monitoring.lb_droplets_http_responses
      name: lb_droplets_http_responses
      title: Lb Droplets Http Responses
      methods:
        monitoring_get_lb_droplets_http_responses:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_http_responses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_http_responses/methods/monitoring_get_lb_droplets_http_responses'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_connections:
      id: digitalocean.monitoring.lb_droplets_connections
      name: lb_droplets_connections
      title: Lb Droplets Connections
      methods:
        monitoring_get_lb_droplets_connections:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_connections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_connections/methods/monitoring_get_lb_droplets_connections'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_health_checks:
      id: digitalocean.monitoring.lb_droplets_health_checks
      name: lb_droplets_health_checks
      title: Lb Droplets Health Checks
      methods:
        monitoring_get_lb_droplets_health_checks:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_health_checks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_health_checks/methods/monitoring_get_lb_droplets_health_checks'
        insert: []
        update: []
        delete: []
        replace: []
    lb_droplets_downtime:
      id: digitalocean.monitoring.lb_droplets_downtime
      name: lb_droplets_downtime
      title: Lb Droplets Downtime
      methods:
        monitoring_get_lb_droplets_downtime:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1load_balancer~1droplets_downtime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lb_droplets_downtime/methods/monitoring_get_lb_droplets_downtime'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_autoscale_current_instances:
      id: digitalocean.monitoring.droplet_autoscale_current_instances
      name: droplet_autoscale_current_instances
      title: Droplet Autoscale Current Instances
      methods:
        monitoring_get_droplet_autoscale_current_instances:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet_autoscale~1current_instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_autoscale_current_instances/methods/monitoring_get_droplet_autoscale_current_instances'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_autoscale_target_instances:
      id: digitalocean.monitoring.droplet_autoscale_target_instances
      name: droplet_autoscale_target_instances
      title: Droplet Autoscale Target Instances
      methods:
        monitoring_get_droplet_autoscale_target_instances:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet_autoscale~1target_instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_autoscale_target_instances/methods/monitoring_get_droplet_autoscale_target_instances'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_autoscale_current_cpu_utilization:
      id: digitalocean.monitoring.droplet_autoscale_current_cpu_utilization
      name: droplet_autoscale_current_cpu_utilization
      title: Droplet Autoscale Current Cpu Utilization
      methods:
        monitoring_get_droplet_autoscale_current_cpu_utilization:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet_autoscale~1current_cpu_utilization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_autoscale_current_cpu_utilization/methods/monitoring_get_droplet_autoscale_current_cpu_utilization'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_autoscale_target_cpu_utilization:
      id: digitalocean.monitoring.droplet_autoscale_target_cpu_utilization
      name: droplet_autoscale_target_cpu_utilization
      title: Droplet Autoscale Target Cpu Utilization
      methods:
        monitoring_get_droplet_autoscale_target_cpu_utilization:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet_autoscale~1target_cpu_utilization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_autoscale_target_cpu_utilization/methods/monitoring_get_droplet_autoscale_target_cpu_utilization'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_autoscale_current_memory_utilization:
      id: digitalocean.monitoring.droplet_autoscale_current_memory_utilization
      name: droplet_autoscale_current_memory_utilization
      title: Droplet Autoscale Current Memory Utilization
      methods:
        monitoring_get_droplet_autoscale_current_memory_utilization:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet_autoscale~1current_memory_utilization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_autoscale_current_memory_utilization/methods/monitoring_get_droplet_autoscale_current_memory_utilization'
        insert: []
        update: []
        delete: []
        replace: []
    droplet_autoscale_target_memory_utilization:
      id: digitalocean.monitoring.droplet_autoscale_target_memory_utilization
      name: droplet_autoscale_target_memory_utilization
      title: Droplet Autoscale Target Memory Utilization
      methods:
        monitoring_get_droplet_autoscale_target_memory_utilization:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1metrics~1droplet_autoscale~1target_memory_utilization/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/droplet_autoscale_target_memory_utilization/methods/monitoring_get_droplet_autoscale_target_memory_utilization'
        insert: []
        update: []
        delete: []
        replace: []
    destinations:
      id: digitalocean.monitoring.destinations
      name: destinations
      title: Destinations
      methods:
        monitoring_create_destination:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks~1destinations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        monitoring_list_destinations:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks~1destinations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.destinations
        monitoring_get_destination:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks~1destinations~1{destination_uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.destination
        monitoring_update_destination:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks~1destinations~1{destination_uuid}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        monitoring_delete_destination:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks~1destinations~1{destination_uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/monitoring_get_destination'
          - $ref: '#/components/x-stackQL-resources/destinations/methods/monitoring_list_destinations'
        insert:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/monitoring_update_destination'
          - $ref: '#/components/x-stackQL-resources/destinations/methods/monitoring_create_destination'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/monitoring_delete_destination'
        replace: []
    sinks:
      id: digitalocean.monitoring.sinks
      name: sinks
      title: Sinks
      methods:
        monitoring_create_sink:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        monitoring_list_sinks:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sinks
        monitoring_get_sink:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks~1{sink_uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sink
        monitoring_delete_sink:
          operation:
            $ref: '#/paths/~1v2~1monitoring~1sinks~1{sink_uuid}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sinks/methods/monitoring_get_sink'
          - $ref: '#/components/x-stackQL-resources/sinks/methods/monitoring_list_sinks'
        insert:
          - $ref: '#/components/x-stackQL-resources/sinks/methods/monitoring_create_sink'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sinks/methods/monitoring_delete_sink'
        replace: []
    checks:
      id: digitalocean.monitoring.checks
      name: checks
      title: Checks
      methods:
        uptime_list_checks:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.checks
        uptime_create_check:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        uptime_get_check:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.check
        uptime_update_check:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        uptime_delete_check:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/checks/methods/uptime_get_check'
          - $ref: '#/components/x-stackQL-resources/checks/methods/uptime_list_checks'
        insert:
          - $ref: '#/components/x-stackQL-resources/checks/methods/uptime_create_check'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/checks/methods/uptime_delete_check'
        replace:
          - $ref: '#/components/x-stackQL-resources/checks/methods/uptime_update_check'
    check_states:
      id: digitalocean.monitoring.check_states
      name: check_states
      title: Check States
      methods:
        uptime_get_check_state:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}~1state/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.state
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/check_states/methods/uptime_get_check_state'
        insert: []
        update: []
        delete: []
        replace: []
    alerts:
      id: digitalocean.monitoring.alerts
      name: alerts
      title: Alerts
      methods:
        uptime_list_alerts:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}~1alerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.alerts
        uptime_create_alert:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}~1alerts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        uptime_get_alert:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}~1alerts~1{alert_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.alert
        uptime_update_alert:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}~1alerts~1{alert_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        uptime_delete_alert:
          operation:
            $ref: '#/paths/~1v2~1uptime~1checks~1{check_id}~1alerts~1{alert_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/uptime_get_alert'
          - $ref: '#/components/x-stackQL-resources/alerts/methods/uptime_list_alerts'
        insert:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/uptime_create_alert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/uptime_delete_alert'
        replace:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/uptime_update_alert'
servers:
  - url: https://api.digitalocean.com
