openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Accelerated Mobile Pages (AMP) URL API
  description: 'Retrieves the list of AMP URLs (and equivalent AMP Cache URLs) for a given list of public URL(s). '
  version: v1
  x-discovery-doc-revision: '20230116'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/amp/cache/
servers:
  - url: https://acceleratedmobilepageurl.googleapis.com
components:
  schemas:
    BatchGetAmpUrlsRequest:
      type: object
      properties:
        urls:
          description: List of URLs to look up for the paired AMP URLs. The URLs are case-sensitive. Up to 50 URLs per lookup (see [Usage Limits](/amp/cache/reference/limits)).
          type: array
          items:
            type: string
        lookupStrategy:
          enum:
            - FETCH_LIVE_DOC
            - IN_INDEX_DOC
          enumDescriptions:
            - FETCH_LIVE_DOC strategy involves live document fetch of URLs not found in the index. Any request URL not found in the index is crawled in realtime to validate if there is a corresponding AMP URL. This strategy has higher coverage but with extra latency introduced by realtime crawling. This is the default strategy. Applications using this strategy should set higher HTTP timeouts of the API calls.
            - IN_INDEX_DOC strategy skips fetching live documents of URL(s) not found in index. For applications which need low latency use of IN_INDEX_DOC strategy is recommended.
          type: string
          description: The lookup_strategy being requested.
      description: AMP URL request for a batch of URLs.
      id: BatchGetAmpUrlsRequest
    BatchGetAmpUrlsResponse:
      description: Batch AMP URL response.
      type: object
      properties:
        ampUrls:
          items:
            $ref: '#/components/schemas/AmpUrl'
          type: array
          description: For each URL in BatchAmpUrlsRequest, the URL response. The response might not be in the same order as URLs in the batch request. If BatchAmpUrlsRequest contains duplicate URLs, AmpUrl is generated only once.
        urlErrors:
          description: The errors for requested URLs that have no AMP URL.
          type: array
          items:
            $ref: '#/components/schemas/AmpUrlError'
      id: BatchGetAmpUrlsResponse
    AmpUrlError:
      type: object
      properties:
        errorCode:
          type: string
          description: The error code of an API call.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - INPUT_URL_NOT_FOUND
            - NO_AMP_URL
            - APPLICATION_ERROR
            - URL_IS_VALID_AMP
            - URL_IS_INVALID_AMP
          enumDescriptions:
            - Not specified error.
            - Indicates the requested URL is not found in the index, possibly because it's unable to be found, not able to be accessed by Googlebot, or some other error.
            - Indicates no AMP URL has been found that corresponds to the requested URL.
            - Indicates some kind of application error occurred at the server. Client advised to retry.
            - 'DEPRECATED: Indicates the requested URL is a valid AMP URL. This is a non-error state, should not be relied upon as a sign of success or failure. It will be removed in future versions of the API.'
            - Indicates that an AMP URL has been found that corresponds to the request URL, but it is not valid AMP HTML.
        errorMessage:
          type: string
          description: An optional descriptive error message.
        originalUrl:
          type: string
          description: The original non-AMP URL.
      description: AMP URL Error resource for a requested URL that couldn't be found.
      id: AmpUrlError
    AmpUrl:
      type: object
      id: AmpUrl
      properties:
        cdnAmpUrl:
          type: string
          description: The [AMP Cache URL](/amp/cache/overview#amp-cache-url-format) pointing to the cached document in the Google AMP Cache.
        ampUrl:
          description: The AMP URL pointing to the publisher's web server.
          type: string
        originalUrl:
          description: The original non-AMP URL.
          type: string
      description: AMP URL response for a requested URL.
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    amp_urls:
      id: googledevelopers.acceleratedmobilepageurl.amp_urls
      name: amp_urls
      title: Amp_urls
      methods:
        ampUrls_batchGet:
          operation:
            $ref: '#/paths/~1v1~1ampUrls:batchGet/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/ampUrls:batchGet:
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Returns AMP URL(s) and equivalent [AMP Cache URL(s)](/amp/cache/overview#amp-cache-url-format).
      operationId: acceleratedmobilepageurl.ampUrls.batchGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetAmpUrlsRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetAmpUrlsResponse'
      parameters: []
      x-stackQL-resource: amp_urls
      x-stackQL-verb: select
