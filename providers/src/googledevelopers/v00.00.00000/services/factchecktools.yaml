openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Fact Check Tools API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20221218'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/fact-check/tools/api/
servers:
  - url: https://factchecktools.googleapis.com
components:
  schemas:
    GoogleFactcheckingFactchecktoolsV1alpha1Claim:
      type: object
      id: GoogleFactcheckingFactchecktoolsV1alpha1Claim
      properties:
        claimReview:
          items:
            $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview'
          type: array
          description: One or more reviews of this claim (namely, a fact-checking article).
        claimant:
          type: string
          description: A person or organization stating the claim. For instance, "John Doe".
        claimDate:
          description: The date that the claim was made.
          format: google-datetime
          type: string
        text:
          type: string
          description: The claim text. For instance, "Crime has doubled in the last 2 years."
      description: Information about the claim.
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor:
      description: Information about the claim author.
      id: GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor
      type: object
      properties:
        jobTitle:
          type: string
          description: Corresponds to `ClaimReview.itemReviewed.author.jobTitle`.
        name:
          type: string
          description: A person or organization stating the claim. For instance, "John Doe". Corresponds to `ClaimReview.itemReviewed.author.name`.
        sameAs:
          type: string
          description: Corresponds to `ClaimReview.itemReviewed.author.sameAs`.
        imageUrl:
          type: string
          description: Corresponds to `ClaimReview.itemReviewed.author.image`.
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor:
      properties:
        imageUrl:
          description: Corresponds to `ClaimReview.author.image`.
          type: string
        name:
          description: Name of the organization that is publishing the fact check. Corresponds to `ClaimReview.author.name`.
          type: string
      id: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor
      type: object
      description: Information about the claim review author.
    GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse:
      description: Response from searching fact-checked claims.
      type: object
      properties:
        claims:
          description: The list of claims and all of their associated information.
          items:
            $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1Claim'
          type: array
        nextPageToken:
          type: string
          description: The next pagination token in the Search response. It should be used as the `page_token` for the following request. An empty value means no more results.
      id: GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview:
      id: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview
      properties:
        url:
          description: The URL of this claim review.
          type: string
        publisher:
          description: The publisher of this claim review.
          $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1Publisher'
        textualRating:
          type: string
          description: Textual rating. For instance, "Mostly false".
        languageCode:
          type: string
          description: The language this review was written in. For instance, "en" or "de".
        reviewDate:
          format: google-datetime
          description: The date the claim was reviewed.
          type: string
        title:
          description: The title of this claim review, if it can be determined.
          type: string
      type: object
      description: Information about a claim review.
    GoogleFactcheckingFactchecktoolsV1alpha1Publisher:
      properties:
        name:
          type: string
          description: The name of this publisher. For instance, "Awesome Fact Checks".
        site:
          type: string
          description: Host-level site name, without the protocol or "www" prefix. For instance, "awesomefactchecks.com". This value of this field is based purely on the claim review URL.
      type: object
      id: GoogleFactcheckingFactchecktoolsV1alpha1Publisher
      description: Information about the publisher.
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage:
      id: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage
      properties:
        pageUrl:
          type: string
          description: The URL of the page associated with this `ClaimReview` markup. While every individual `ClaimReview` has its own URL field, semantically this is a page-level field, and each `ClaimReview` on this page will use this value unless individually overridden. Corresponds to `ClaimReview.url`
        versionId:
          type: string
          description: The version ID for this markup. Except for update requests, this field is output-only and should not be set by the user.
        claimReviewMarkups:
          description: A list of individual claim reviews for this page. Each item in the list corresponds to one `ClaimReview` element.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup'
        name:
          description: The name of this `ClaimReview` markup page resource, in the form of `pages/{page_id}`. Except for update requests, this field is output-only and should not be set by the user.
          type: string
        claimReviewAuthor:
          $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor'
          description: Info about the author of this claim review. Similar to the above, semantically these are page-level fields, and each `ClaimReview` on this page will contain the same values.
        publishDate:
          description: The date when the fact check was published. Similar to the URL, semantically this is a page-level field, and each `ClaimReview` on this page will contain the same value. Corresponds to `ClaimReview.datePublished`
          type: string
      description: Holds one or more instances of `ClaimReview` markup for a webpage.
      type: object
    GoogleProtobufEmpty:
      properties: {}
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
    GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse:
      description: Response from listing `ClaimReview` markup.
      properties:
        claimReviewMarkupPages:
          items:
            $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
          description: The result list of pages of `ClaimReview` markup.
          type: array
        nextPageToken:
          description: The next pagination token in the Search response. It should be used as the `page_token` for the following request. An empty value means no more results.
          type: string
      id: GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating:
      properties:
        ratingValue:
          format: int32
          description: A numeric rating of this claim, in the range worstRating â€” bestRating inclusive. Corresponds to `ClaimReview.reviewRating.ratingValue`.
          type: integer
        worstRating:
          description: For numeric ratings, the worst value possible in the scale from worst to best. Corresponds to `ClaimReview.reviewRating.worstRating`.
          type: integer
          format: int32
        imageUrl:
          description: Corresponds to `ClaimReview.reviewRating.image`.
          type: string
        bestRating:
          type: integer
          description: For numeric ratings, the best value possible in the scale from worst to best. Corresponds to `ClaimReview.reviewRating.bestRating`.
          format: int32
        ratingExplanation:
          description: Corresponds to `ClaimReview.reviewRating.ratingExplanation`.
          type: string
        textualRating:
          description: The truthfulness rating as a human-readible short word or phrase. Corresponds to `ClaimReview.reviewRating.alternateName`.
          type: string
      description: Information about the claim rating.
      type: object
      id: GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup:
      properties:
        claimLocation:
          description: The location where this claim was made. Corresponds to `ClaimReview.itemReviewed.name`.
          type: string
        claimAppearances:
          items:
            type: string
          description: A list of links to works in which this claim appears, aside from the one specified in `claim_first_appearance`. Corresponds to `ClaimReview.itemReviewed[@type=Claim].appearance.url`.
          type: array
        rating:
          $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating'
          description: Info about the rating of this claim review.
        claimReviewed:
          description: A short summary of the claim being evaluated. Corresponds to `ClaimReview.claimReviewed`.
          type: string
        url:
          description: This field is optional, and will default to the page URL. We provide this field to allow you the override the default value, but the only permitted override is the page URL plus an optional anchor link ("page jump"). Corresponds to `ClaimReview.url`
          type: string
        claimDate:
          description: The date when the claim was made or entered public discourse. Corresponds to `ClaimReview.itemReviewed.datePublished`.
          type: string
        claimAuthor:
          description: Info about the author of this claim.
          $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor'
        claimFirstAppearance:
          description: A link to a work in which this claim first appears. Corresponds to `ClaimReview.itemReviewed[@type=Claim].firstAppearance.url`.
          type: string
      id: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup
      description: Fields for an individual `ClaimReview` element. Except for sub-messages that group fields together, each of these fields correspond those in https://schema.org/ClaimReview. We list the precise mapping for each field.
      type: object
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/userinfo.email: See your primary Google Account email address
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    claims:
      id: googledevelopers.factchecktools.claims
      name: claims
      title: Claims
      methods:
        search:
          operation:
            $ref: '#/paths/~1v1alpha1~1claims:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    pages:
      id: googledevelopers.factchecktools.pages
      name: pages
      title: Pages
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1alpha1~1pages~1{pagesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v1alpha1~1pages~1{pagesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1pages~1{pagesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1alpha1~1pages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1alpha1~1pages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pages/methods/get'
          - $ref: '#/components/x-stackQL-resources/pages/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pages/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pages/methods/delete'
paths:
  /v1alpha1/claims:search:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Search through fact-checked claims.
      operationId: factchecktools.claims.search
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse'
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: reviewPublisherSiteFilter
          schema:
            type: string
        - in: query
          name: maxAgeDays
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      x-stackQL-resource: claims
      x-stackQL-verb: exec
  /v1alpha1/pages/{pagesId}:
    parameters: *ref_1
    get:
      description: Get all `ClaimReview` markup on a page.
      operationId: factchecktools.pages.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.email
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.email
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
      parameters:
        - in: path
          name: pagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pages
      x-stackQL-verb: select
    put:
      description: Update for all `ClaimReview` markup on a page Note that this is a full update. To retain the existing `ClaimReview` markup on a page, first perform a Get operation, then modify the returned markup, and finally call Update with the entire `ClaimReview` markup as the body.
      operationId: factchecktools.pages.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.email
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.email
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
      parameters:
        - in: path
          name: pagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pages
      x-stackQL-verb: exec
    delete:
      description: Delete all `ClaimReview` markup on a page.
      operationId: factchecktools.pages.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.email
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.email
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: pagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pages
      x-stackQL-verb: delete
  /v1alpha1/pages:
    parameters: *ref_1
    post:
      description: Create `ClaimReview` markup on a page.
      operationId: factchecktools.pages.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.email
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.email
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
      parameters: []
      x-stackQL-resource: pages
      x-stackQL-verb: insert
    get:
      description: List the `ClaimReview` markup pages for a specific URL or for an organization.
      operationId: factchecktools.pages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.email
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.email
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse'
      parameters:
        - in: query
          name: organization
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: url
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
      x-stackQL-resource: pages
      x-stackQL-verb: select
