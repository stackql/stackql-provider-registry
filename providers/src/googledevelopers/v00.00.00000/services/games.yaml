openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Play Game Services
  description: The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
  version: v1
  x-discovery-doc-revision: '20230112'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/games/
servers:
  - url: https://games.googleapis.com
components:
  schemas:
    EventChild:
      id: EventChild
      type: object
      description: An event child relationship resource.
      properties:
        childId:
          description: The ID of the child event.
          type: string
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventChild`.
    AchievementUpdateRequest:
      description: A request to update an achievement.
      properties:
        setStepsAtLeastPayload:
          description: The payload if an update of type `SET_STEPS_AT_LEAST` was requested for the achievement.
          $ref: '#/components/schemas/GamesAchievementSetStepsAtLeast'
        achievementId:
          type: string
          description: The achievement this update is being applied to.
        incrementPayload:
          description: The payload if an update of type `INCREMENT` was requested for the achievement.
          $ref: '#/components/schemas/GamesAchievementIncrement'
        updateType:
          description: The type of update being applied.
          type: string
          enumDescriptions:
            - Safe default, don't use.
            - Achievement is revealed.
            - Achievement is unlocked.
            - Achievement is incremented.
            - Achievement progress is set to at least the passed value.
          enum:
            - ACHIEVEMENT_UPDATE_TYPE_UNSPECIFIED
            - REVEAL
            - UNLOCK
            - INCREMENT
            - SET_STEPS_AT_LEAST
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateRequest`.
      type: object
      id: AchievementUpdateRequest
    EventUpdateRequest:
      type: object
      description: An event period update resource.
      id: EventUpdateRequest
      properties:
        updateCount:
          format: int64
          description: The number of times this event occurred in this time period.
          type: string
        definitionId:
          type: string
          description: The ID of the event being modified in this update.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateRequest`.
          type: string
    Leaderboard:
      properties:
        name:
          description: The name of the leaderboard.
          type: string
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboard`.
        iconUrl:
          description: The icon for the leaderboard.
          type: string
        isIconUrlDefault:
          type: boolean
          description: Indicates whether the icon image being returned is a default image, or is game-provided.
        id:
          description: The leaderboard ID.
          type: string
        order:
          type: string
          enum:
            - SCORE_ORDER_UNSPECIFIED
            - LARGER_IS_BETTER
            - SMALLER_IS_BETTER
          enumDescriptions:
            - Default value. This value is unused.
            - Larger values are better; scores are sorted in descending order
            - Smaller values are better; scores are sorted in ascending order
          description: How scores are ordered.
      description: The Leaderboard resource.
      id: Leaderboard
      type: object
    PlayerLeaderboardScore:
      description: A player leaderboard score object.
      id: PlayerLeaderboardScore
      properties:
        friendsRank:
          $ref: '#/components/schemas/LeaderboardScoreRank'
          description: The rank of the score in the friends collection for this leaderboard.
        timeSpan:
          enumDescriptions:
            - Default value. This value is unused.
            - The score is an all-time score.
            - The score is a weekly score.
            - The score is a daily score.
          type: string
          description: The time span of this score.
          enum:
            - SCORE_TIME_SPAN_UNSPECIFIED
            - ALL_TIME
            - WEEKLY
            - DAILY
        writeTimestamp:
          format: int64
          description: The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.
          type: string
        leaderboard_id:
          description: The ID of the leaderboard this score is in.
          type: string
        publicRank:
          $ref: '#/components/schemas/LeaderboardScoreRank'
          description: The public rank of the score in this leaderboard. This object will not be present if the user is not sharing their scores publicly.
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScore`.
        scoreValue:
          format: int64
          type: string
          description: The numerical value of this score.
        socialRank:
          $ref: '#/components/schemas/LeaderboardScoreRank'
          description: The social rank of the score in this leaderboard.
        scoreTag:
          description: Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        scoreString:
          description: The formatted value of this score.
          type: string
      type: object
    EventRecordFailure:
      id: EventRecordFailure
      description: An event update failure resource.
      type: object
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordFailure`.
          type: string
        eventId:
          description: The ID of the event that was not updated.
          type: string
        failureCause:
          description: The cause for the update failure.
          enum:
            - EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED
            - NOT_FOUND
            - INVALID_UPDATE_VALUE
          type: string
          enumDescriptions:
            - Default value. Should not use.
            - An attempt was made to set an event that was not defined.
            - An attempt was made to increment an event by a non-positive value.
    Snapshot:
      type: object
      description: An snapshot object.
      id: Snapshot
      properties:
        durationMillis:
          type: string
          description: The duration associated with this snapshot, in millis.
          format: int64
        uniqueName:
          type: string
          description: The unique name provided when the snapshot was created.
        title:
          description: The title of this snapshot.
          type: string
        type:
          enumDescriptions:
            - Default value. This value is unused.
            - A snapshot representing a save game.
          type: string
          enum:
            - SNAPSHOT_TYPE_UNSPECIFIED
            - SAVE_GAME
          description: The type of this snapshot.
        progressValue:
          description: The progress value (64-bit integer set by developer) associated with this snapshot.
          format: int64
          type: string
        driveId:
          description: The ID of the file underlying this snapshot in the Drive API. Only present if the snapshot is a view on a Drive file and the file is owned by the caller.
          type: string
        coverImage:
          $ref: '#/components/schemas/SnapshotImage'
          description: The cover image of this snapshot. May be absent if there is no image.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshot`.
          type: string
        id:
          description: The ID of the snapshot.
          type: string
        description:
          type: string
          description: The description of this snapshot.
        lastModifiedMillis:
          description: The timestamp (in millis since Unix epoch) of the last modification to this snapshot.
          type: string
          format: int64
    PlayerLevel:
      id: PlayerLevel
      properties:
        level:
          format: int32
          type: integer
          description: The level for the user.
        minExperiencePoints:
          format: int64
          description: The minimum experience points for this level.
          type: string
        maxExperiencePoints:
          type: string
          description: The maximum experience points for this level.
          format: int64
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.
          type: string
      type: object
      description: 1P/3P metadata about a user's level.
    EventDefinition:
      type: object
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinition`.
        childEvents:
          description: A list of events that are a child of this event.
          type: array
          items:
            $ref: '#/components/schemas/EventChild'
        isDefaultImageUrl:
          type: boolean
          description: Indicates whether the icon image being returned is a default image, or is game-provided.
        description:
          description: Description of what this event represents.
          type: string
        id:
          description: The ID of the event.
          type: string
        displayName:
          type: string
          description: The name to display for the event.
        imageUrl:
          type: string
          description: The base URL for the image that represents the event.
        visibility:
          description: The visibility of event being tracked in this definition.
          enumDescriptions:
            - Default value. Should not be used.
            - This event should be visible to all users.
            - This event should only be shown to users that have recorded this event at least once.
          enum:
            - EVENT_VISIBILITY_UNSPECIFIED
            - REVEALED
            - HIDDEN
          type: string
      description: An event definition resource.
      id: EventDefinition
    AchievementUnlockResponse:
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUnlockResponse`.
        newlyUnlocked:
          type: boolean
          description: Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).
      type: object
      description: An achievement unlock response
      id: AchievementUnlockResponse
    EventUpdateResponse:
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateResponse`.
          type: string
        playerEvents:
          description: The current status of any updated events
          items:
            $ref: '#/components/schemas/PlayerEvent'
          type: array
        batchFailures:
          description: Any batch-wide failures which occurred applying updates.
          type: array
          items:
            $ref: '#/components/schemas/EventBatchRecordFailure'
        eventFailures:
          type: array
          description: Any failures updating a particular event.
          items:
            $ref: '#/components/schemas/EventRecordFailure'
      description: An event period update resource.
      id: EventUpdateResponse
      type: object
    PlayerExperienceInfo:
      description: 1P/3P metadata about the player's experience.
      properties:
        nextLevel:
          description: The next level of the player. If the current level is the maximum level, this should be same as the current level.
          $ref: '#/components/schemas/PlayerLevel'
        currentExperiencePoints:
          description: The current number of experience points for the player.
          format: int64
          type: string
        lastLevelUpTimestampMillis:
          type: string
          format: int64
          description: The timestamp when the player was leveled up, in millis since Unix epoch UTC.
        currentLevel:
          $ref: '#/components/schemas/PlayerLevel'
          description: The current level of the player.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.
          type: string
      type: object
      id: PlayerExperienceInfo
    PlayerScoreListResponse:
      id: PlayerScoreListResponse
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreListResponse`.
        submittedScores:
          type: array
          items:
            $ref: '#/components/schemas/PlayerScoreResponse'
          description: The score submissions statuses.
      description: A list of score submission statuses.
      type: object
    ScopedPlayerIds:
      type: object
      properties:
        gamePlayerId:
          type: string
          description: Game-scoped player identifier. This is the same id that is returned in GetPlayer game_player_id field.
        developerPlayerKey:
          description: Identifier of the player across all games of the given developer. Every player has the same developer_player_key in all games of one developer. Developer player key changes for the game if the game is transferred to another developer. Note that game_player_id will stay unchanged.
          type: string
      id: ScopedPlayerIds
      description: Scoped player identifiers.
    PlayerAchievementListResponse:
      description: A list of achievement objects.
      id: PlayerAchievementListResponse
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievementListResponse`.
        items:
          items:
            $ref: '#/components/schemas/PlayerAchievement'
          type: array
          description: The achievements.
        nextPageToken:
          type: string
          description: Token corresponding to the next page of results.
      type: object
    Category:
      id: Category
      properties:
        category:
          type: string
          description: The category name.
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#category`.
        experiencePoints:
          type: string
          description: Experience points earned in this category.
          format: int64
      description: Data related to individual game categories.
      type: object
    ScoreSubmission:
      description: A request to submit a score to leaderboards.
      properties:
        score:
          description: The new score being submitted.
          type: string
          format: int64
        signature:
          description: Signature Values will contain URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#scoreSubmission`.
          type: string
        leaderboardId:
          type: string
          description: The leaderboard this score is being submitted to.
        scoreTag:
          description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
      id: ScoreSubmission
      type: object
    EndPoint:
      id: EndPoint
      description: Container for a URL end point of the requested type.
      properties:
        url:
          description: A URL suitable for loading in a web browser for the requested endpoint.
          type: string
      type: object
    Application:
      description: The Application resource.
      properties:
        description:
          type: string
          description: The description of the application.
        assets:
          description: The assets of the application.
          type: array
          items:
            $ref: '#/components/schemas/ImageAsset'
        name:
          type: string
          description: The name of the application.
        instances:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
          description: The instances of the application.
        leaderboard_count:
          description: The number of leaderboards visible to the currently authenticated player.
          type: integer
          format: int32
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#application`.
        id:
          type: string
          description: The ID of the application.
        lastUpdatedTimestamp:
          description: The last updated timestamp of the application.
          type: string
          format: int64
        enabledFeatures:
          description: A list of features that have been enabled for the application.
          items:
            enumDescriptions:
              - Safe default, don't use.
              - Saved Games (snapshots).
            enum:
              - APPLICATION_FEATURE_UNSPECIFIED
              - SNAPSHOTS
            type: string
          type: array
        author:
          description: The author of the application.
          type: string
        category:
          $ref: '#/components/schemas/ApplicationCategory'
          description: The category of the application.
        achievement_count:
          type: integer
          format: int32
          description: The number of achievements visible to the currently authenticated player.
        themeColor:
          type: string
          description: A hint to the client UI for what color to use as an app-themed color. The color is given as an RGB triplet (e.g. "E0E0E0").
      type: object
      id: Application
    AchievementUpdateMultipleRequest:
      type: object
      description: A list of achievement update requests.
      id: AchievementUpdateMultipleRequest
      properties:
        updates:
          description: The individual achievement update requests.
          type: array
          items:
            $ref: '#/components/schemas/AchievementUpdateRequest'
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleRequest`.
    AchievementSetStepsAtLeastResponse:
      type: object
      description: An achievement set steps at least response.
      properties:
        currentSteps:
          description: The current steps recorded for this incremental achievement.
          type: integer
          format: int32
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementSetStepsAtLeastResponse`.
          type: string
        newlyUnlocked:
          description: Whether the current steps for the achievement has reached the number of steps required to unlock.
          type: boolean
      id: AchievementSetStepsAtLeastResponse
    PlayerLeaderboardScoreListResponse:
      description: A list of player leaderboard scores.
      id: PlayerLeaderboardScoreListResponse
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScoreListResponse`.
          type: string
        items:
          items:
            $ref: '#/components/schemas/PlayerLeaderboardScore'
          type: array
          description: The leaderboard scores.
        player:
          $ref: '#/components/schemas/Player'
          description: The Player resources for the owner of this score.
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    EventRecordRequest:
      description: An event period update resource.
      properties:
        currentTimeMillis:
          format: int64
          description: The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch).
          type: string
        requestId:
          type: string
          format: int64
          description: The request ID used to identify this attempt to record events.
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`.
        timePeriods:
          type: array
          description: A list of the time period updates being made in this request.
          items:
            $ref: '#/components/schemas/EventPeriodUpdate'
      type: object
      id: EventRecordRequest
    StatsResponse:
      properties:
        days_since_last_played:
          type: integer
          format: int32
          description: Number of days since the player last played this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#statsResponse`.
        spend_probability:
          description: The probability of the player going to spend the game in the next seven days. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.
          type: number
          format: float
        num_purchases:
          type: integer
          description: Number of in-app purchases made by the player in this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
          format: int32
        num_sessions_percentile:
          type: number
          format: float
          description: The approximation of the sessions percentile of the player within the last 30 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.
        total_spend_next_28_days:
          format: float
          description: The predicted amount of money that the player going to spend in the next 28 days. E.g., 1, 30, 60, ... . Not populated if there is not enough information.
          type: number
        num_sessions:
          format: int32
          description: The approximate number of sessions of the player within the last 28 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
          type: integer
        avg_session_length_minutes:
          description: Average session length in minutes of the player. E.g., 1, 30, 60, ... . Not populated if there is not enough information.
          type: number
          format: float
        high_spender_probability:
          type: number
          description: The probability of the player going to spend beyond a threshold amount of money. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.
          format: float
        spend_percentile:
          description: The approximate spend percentile of the player in this game. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.
          type: number
          format: float
        churn_probability:
          description: The probability of the player not returning to play the game in the next day. E.g., 0, 0.1, 0.5, ..., 1.0. Not populated if there is not enough information.
          type: number
          format: float
      description: A third party stats resource.
      type: object
      id: StatsResponse
    CategoryListResponse:
      type: object
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#categoryListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
        items:
          description: The list of categories with usage data.
          type: array
          items:
            $ref: '#/components/schemas/Category'
      description: A third party list metagame categories response.
      id: CategoryListResponse
    PlayerEventListResponse:
      description: A ListByPlayer response.
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEventListResponse`.
        nextPageToken:
          type: string
          description: The pagination token for the next page of results.
        items:
          type: array
          description: The player events.
          items:
            $ref: '#/components/schemas/PlayerEvent'
      id: PlayerEventListResponse
      type: object
    PlayerScore:
      properties:
        scoreTag:
          type: string
          description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScore`.
        score:
          description: The numerical value for this player score.
          format: int64
          type: string
        formattedScore:
          type: string
          description: The formatted score for this player score.
        timeSpan:
          type: string
          description: The time span for this player score.
          enumDescriptions:
            - Default value. This value is unused.
            - The score is an all-time score.
            - The score is a weekly score.
            - The score is a daily score.
          enum:
            - SCORE_TIME_SPAN_UNSPECIFIED
            - ALL_TIME
            - WEEKLY
            - DAILY
      description: A player score.
      type: object
      id: PlayerScore
    EventBatchRecordFailure:
      description: A batch update failure resource.
      type: object
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventBatchRecordFailure`.
          type: string
        failureCause:
          enumDescriptions:
            - Default value. Should not be used.
            - A batch request was issued with more events than are allowed in a single batch.
            - A batch was sent with data too far in the past to record.
            - A batch was sent with a time range that was too short.
            - A batch was sent with a time range that was too long.
            - An attempt was made to record a batch of data which was already seen.
            - An attempt was made to record data faster than the server will apply updates.
          description: The cause for the update failure.
          type: string
          enum:
            - EVENT_FAILURE_CAUSE_UNSPECIFIED
            - TOO_LARGE
            - TIME_PERIOD_EXPIRED
            - TIME_PERIOD_SHORT
            - TIME_PERIOD_LONG
            - ALREADY_UPDATED
            - RECORD_RATE_HIGH
        range:
          $ref: '#/components/schemas/EventPeriodRange'
          description: The time range which was rejected; empty for a request-wide failure.
      id: EventBatchRecordFailure
    AchievementUpdateResponse:
      type: object
      properties:
        updateOccurred:
          description: Whether the requested updates actually affected the achievement.
          type: boolean
        achievementId:
          description: The achievement this update is was applied to.
          type: string
        currentState:
          type: string
          description: The current state of the achievement.
          enum:
            - UPDATED_ACHIEVEMENT_STATE_UNSPECIFIED
            - HIDDEN
            - REVEALED
            - UNLOCKED
          enumDescriptions:
            - Safe default, don't use.
            - Achievement is hidden.
            - Achievement is revealed.
            - Achievement is unlocked.
        newlyUnlocked:
          description: Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).
          type: boolean
        currentSteps:
          description: The current steps recorded for this achievement if it is incremental.
          format: int32
          type: integer
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateResponse`.
      description: An updated achievement.
      id: AchievementUpdateResponse
    LeaderboardListResponse:
      id: LeaderboardListResponse
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardListResponse`.
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Leaderboard'
          description: The leaderboards.
      description: A list of leaderboard objects.
      type: object
    EventPeriodUpdate:
      id: EventPeriodUpdate
      type: object
      description: An event period update resource.
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodUpdate`.
        timePeriod:
          $ref: '#/components/schemas/EventPeriodRange'
          description: The time period being covered by this update.
        updates:
          items:
            $ref: '#/components/schemas/EventUpdateRequest'
          type: array
          description: The updates being made for this time period.
    MetagameConfig:
      description: The metagame config resource
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#metagameConfig`.
          type: string
        playerLevels:
          type: array
          description: The list of player levels.
          items:
            $ref: '#/components/schemas/PlayerLevel'
        currentVersion:
          description: Current version of the metagame configuration data. When this data is updated, the version number will be increased by one.
          format: int32
          type: integer
      id: MetagameConfig
      type: object
    AchievementDefinition:
      type: object
      properties:
        achievementType:
          description: The type of the achievement.
          enum:
            - ACHIEVEMENT_TYPE_UNSPECIFIED
            - STANDARD
            - INCREMENTAL
          type: string
          enumDescriptions:
            - Safe default, don't use.
            - Achievement is either locked or unlocked.
            - Achievement is incremental.
        experiencePoints:
          format: int64
          description: Experience points which will be earned when unlocking this achievement.
          type: string
        name:
          type: string
          description: The name of the achievement.
        unlockedIconUrl:
          type: string
          description: The image URL for the unlocked achievement icon.
        revealedIconUrl:
          type: string
          description: The image URL for the revealed achievement icon.
        isRevealedIconUrlDefault:
          type: boolean
          description: Indicates whether the revealed icon image being returned is a default image, or is provided by the game.
        formattedTotalSteps:
          description: The total steps for an incremental achievement as a string.
          type: string
        initialState:
          enumDescriptions:
            - Safe default, don't use.
            - Achievement is hidden.
            - Achievement is revealed.
            - Achievement is unlocked.
          type: string
          description: The initial state of the achievement.
          enum:
            - INITIAL_ACHIEVEMENT_STATE_UNSPECIFIED
            - HIDDEN
            - REVEALED
            - UNLOCKED
        totalSteps:
          description: The total steps for an incremental achievement.
          type: integer
          format: int32
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinition`.
          type: string
        isUnlockedIconUrlDefault:
          description: Indicates whether the unlocked icon image being returned is a default image, or is game-provided.
          type: boolean
        description:
          description: The description of the achievement.
          type: string
        id:
          description: The ID of the achievement.
          type: string
      id: AchievementDefinition
      description: An achievement definition object.
    GamesAchievementIncrement:
      id: GamesAchievementIncrement
      properties:
        steps:
          description: The number of steps to be incremented.
          type: integer
          format: int32
        requestId:
          type: string
          format: int64
          description: The requestId associated with an increment to an achievement.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementIncrement`.
          type: string
      description: The payload to request to increment an achievement.
      type: object
    Instance:
      id: Instance
      type: object
      properties:
        acquisitionUri:
          description: URI which shows where a user can acquire this instance.
          type: string
        iosInstance:
          description: Platform dependent details for iOS.
          $ref: '#/components/schemas/InstanceIosDetails'
        name:
          description: Localized display name.
          type: string
        turnBasedPlay:
          type: boolean
          description: Flag to show if this game instance supports turn based play.
        platformType:
          enumDescriptions:
            - Default value. Should be unused.
            - Instance is for Android.
            - Instance is for iOS.
            - Instance is for Web App.
          type: string
          enum:
            - PLATFORM_TYPE_UNSPECIFIED
            - ANDROID
            - IOS
            - WEB_APP
          description: The platform type.
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#instance`.
        androidInstance:
          $ref: '#/components/schemas/InstanceAndroidDetails'
          description: Platform dependent details for Android.
        realtimePlay:
          type: boolean
          description: Flag to show if this game instance supports realtime play.
        webInstance:
          description: Platform dependent details for Web.
          $ref: '#/components/schemas/InstanceWebDetails'
      description: The Instance resource.
    PlayerEvent:
      properties:
        formattedNumEvents:
          type: string
          description: The current number of times this event has occurred, as a string. The formatting of this string depends on the configuration of your event in the Play Games Developer Console.
        playerId:
          type: string
          description: The ID of the player.
        numEvents:
          description: The current number of times this event has occurred.
          type: string
          format: int64
        definitionId:
          description: The ID of the event definition.
          type: string
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEvent`.
      description: An event status resource.
      type: object
      id: PlayerEvent
    EventDefinitionListResponse:
      properties:
        nextPageToken:
          type: string
          description: The pagination token for the next page of results.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinitionListResponse`.
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/EventDefinition'
          description: The event definitions.
      type: object
      description: A ListDefinitions response.
      id: EventDefinitionListResponse
    Player:
      description: A Player resource.
      id: Player
      properties:
        name:
          properties:
            familyName:
              type: string
              description: The family name of this player. In some places, this is known as the last name.
            givenName:
              type: string
              description: The given name of this player. In some places, this is known as the first name.
          type: object
          description: A representation of the individual components of the name.
        originalPlayerId:
          type: string
          description: The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs.
        avatarImageUrl:
          description: The base URL for the image that represents the player.
          type: string
        experienceInfo:
          $ref: '#/components/schemas/PlayerExperienceInfo'
          description: An object to represent Play Game experience information for the player.
        title:
          type: string
          description: The player's title rewarded for their game activities.
        bannerUrlPortrait:
          type: string
          description: The url to the portrait mode player banner image.
        playerId:
          description: The ID of the player.
          type: string
        bannerUrlLandscape:
          type: string
          description: The url to the landscape mode player banner image.
        gamePlayerId:
          description: Per-application unique player identifier.
          type: string
        displayName:
          description: The name to display for the player.
          type: string
        friendStatus:
          description: The friend status of the given player, relative to the requester. This is unset if the player is not sharing their friends list with the game.
          type: string
          enum:
            - FRIEND_STATUS_UNSPECIFIED
            - NO_RELATIONSHIP
            - FRIEND
          enumDescriptions:
            - Default value. This value is unused.
            - There is no relationship between the players.
            - The player and requester are friends.
        profileSettings:
          description: The player's profile settings. Controls whether or not the player's profile is visible to other players.
          $ref: '#/components/schemas/ProfileSettings'
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#player`
      type: object
    ApplicationCategory:
      description: An application category object.
      type: object
      id: ApplicationCategory
      properties:
        secondary:
          description: The secondary category.
          type: string
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationCategory`.
        primary:
          type: string
          description: The primary category.
    PlayerAchievement:
      id: PlayerAchievement
      description: An achievement object.
      properties:
        currentSteps:
          description: The current steps for an incremental achievement.
          format: int32
          type: integer
        id:
          description: The ID of the achievement.
          type: string
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`.
        achievementState:
          description: The state of the achievement.
          enumDescriptions:
            - Default value. This value is unused.
            - Achievement is hidden.
            - Achievement is revealed.
            - Achievement is unlocked.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - HIDDEN
            - REVEALED
            - UNLOCKED
        lastUpdatedTimestamp:
          format: int64
          type: string
          description: The timestamp of the last modification to this achievement's state.
        experiencePoints:
          description: Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.
          type: string
          format: int64
        formattedCurrentStepsString:
          type: string
          description: The current steps for an incremental achievement as a string.
      type: object
    InstanceAndroidDetails:
      description: The Android instance details resource.
      id: InstanceAndroidDetails
      type: object
      properties:
        packageName:
          description: Android package name which maps to Google Play URL.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceAndroidDetails`.
          type: string
        enablePiracyCheck:
          type: boolean
          description: Flag indicating whether the anti-piracy check is enabled.
        preferred:
          type: boolean
          description: Indicates that this instance is the default for new installations.
    GamesAchievementSetStepsAtLeast:
      properties:
        steps:
          type: integer
          description: The minimum number of steps for the achievement to be set to.
          format: int32
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementSetStepsAtLeast`.
      type: object
      description: The payload to request to increment an achievement.
      id: GamesAchievementSetStepsAtLeast
    AchievementDefinitionsListResponse:
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinitionsListResponse`.
          type: string
        nextPageToken:
          type: string
          description: Token corresponding to the next page of results.
        items:
          items:
            $ref: '#/components/schemas/AchievementDefinition'
          description: The achievement definitions.
          type: array
      type: object
      id: AchievementDefinitionsListResponse
      description: A list of achievement definition objects.
    AchievementIncrementResponse:
      id: AchievementIncrementResponse
      properties:
        newlyUnlocked:
          description: Whether the current steps for the achievement has reached the number of steps required to unlock.
          type: boolean
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementIncrementResponse`.
        currentSteps:
          description: The current steps recorded for this incremental achievement.
          type: integer
          format: int32
      type: object
      description: An achievement increment response
    LeaderboardScores:
      type: object
      properties:
        numScores:
          description: The total number of scores in the leaderboard.
          type: string
          format: int64
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScores`.
          type: string
        prevPageToken:
          type: string
          description: The pagination token for the previous page of results.
        nextPageToken:
          type: string
          description: The pagination token for the next page of results.
        playerScore:
          $ref: '#/components/schemas/LeaderboardEntry'
          description: The score of the requesting player on the leaderboard. The player's score may appear both here and in the list of scores above. If you are viewing a public leaderboard and the player is not sharing their gameplay information publicly, the `scoreRank`and `formattedScoreRank` values will not be present.
        items:
          items:
            $ref: '#/components/schemas/LeaderboardEntry'
          description: The scores in the leaderboard.
          type: array
      id: LeaderboardScores
      description: A ListScores response.
    SnapshotImage:
      type: object
      description: An image of a snapshot.
      id: SnapshotImage
      properties:
        height:
          format: int32
          description: The height of the image.
          type: integer
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotImage`.
        mime_type:
          type: string
          description: The MIME type of the image.
        width:
          format: int32
          type: integer
          description: The width of the image.
        url:
          type: string
          description: The URL of the image. This URL may be invalidated at any time and should not be cached.
    ProfileSettings:
      type: object
      id: ProfileSettings
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#profileSettings`.
        friendsListVisibility:
          enumDescriptions:
            - Unused.
            - The friends list is currently visible to the game.
            - The developer does not have access to the friends list, but can call the Android API to show a consent dialog.
            - The friends list is currently unavailable for this user, and it is not possible to request access at this time, either because the user has permanently declined or the friends feature is not available to them. In this state, any attempts to request access to the friends list will be unsuccessful.
          type: string
          enum:
            - FRIENDS_LIST_VISIBILITY_UNSPECIFIED
            - VISIBLE
            - REQUEST_REQUIRED
            - UNAVAILABLE
        profileVisible:
          type: boolean
          description: Whether the player's profile is visible to the currently signed in player.
      description: Profile settings
    LeaderboardScoreRank:
      description: A score rank in a leaderboard.
      type: object
      properties:
        formattedRank:
          description: The rank in the leaderboard as a string.
          type: string
        rank:
          format: int64
          type: string
          description: The rank in the leaderboard.
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScoreRank`.
        formattedNumScores:
          description: The number of scores in the leaderboard as a string.
          type: string
        numScores:
          description: The number of scores in the leaderboard.
          type: string
          format: int64
      id: LeaderboardScoreRank
    InstanceWebDetails:
      type: object
      id: InstanceWebDetails
      description: The Web details resource.
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceWebDetails`.
        preferred:
          type: boolean
          description: Indicates that this instance is the default for new installations.
        launchUrl:
          description: Launch URL for the game.
          type: string
    PlayerScoreSubmissionList:
      type: object
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreSubmissionList`.
          type: string
        scores:
          items:
            $ref: '#/components/schemas/ScoreSubmission'
          type: array
          description: The score submissions.
      description: A list of score submission requests.
      id: PlayerScoreSubmissionList
    SnapshotListResponse:
      description: A third party list snapshots response.
      type: object
      id: SnapshotListResponse
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotListResponse`.
        items:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
          description: The snapshots.
        nextPageToken:
          description: Token corresponding to the next page of results. If there are no more results, the token is omitted.
          type: string
    RevisionCheckResponse:
      type: object
      properties:
        revisionStatus:
          description: The result of the revision check.
          enum:
            - REVISION_STATUS_UNSPECIFIED
            - OK
            - DEPRECATED
            - INVALID
          enumDescriptions:
            - Default value. This value is unused.
            - The revision being used is current.
            - There is currently a newer version available, but the revision being used still works.
            - The revision being used is not supported in any released version.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#revisionCheckResponse`.
          type: string
        apiVersion:
          description: The version of the API this client revision should use when calling API methods.
          type: string
      id: RevisionCheckResponse
      description: A third party checking a revision response.
    PlayerScoreResponse:
      id: PlayerScoreResponse
      description: A list of leaderboard entry resources.
      type: object
      properties:
        leaderboardId:
          description: The leaderboard ID that this score was submitted to.
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreResponse`.
        unbeatenScores:
          items:
            $ref: '#/components/schemas/PlayerScore'
          description: The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's `DAILY` score, but not better than the player's scores for the `WEEKLY` or `ALL_TIME` time spans.
          type: array
        beatenScoreTimeSpans:
          description: The time spans where the submitted score is better than the existing score for that time span.
          items:
            type: string
            enum:
              - SCORE_TIME_SPAN_UNSPECIFIED
              - ALL_TIME
              - WEEKLY
              - DAILY
            enumDescriptions:
              - Default value. This value is unused.
              - The score is an all-time score.
              - The score is a weekly score.
              - The score is a daily score.
          type: array
        formattedScore:
          description: The formatted value of the submitted score.
          type: string
    AchievementUpdateMultipleResponse:
      type: object
      description: Response message for UpdateMultipleAchievements rpc.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleResponse`.
          type: string
        updatedAchievements:
          description: The updated state of the achievements.
          items:
            $ref: '#/components/schemas/AchievementUpdateResponse'
          type: array
      id: AchievementUpdateMultipleResponse
    EventPeriodRange:
      properties:
        periodEndMillis:
          type: string
          description: The time when this update period ends, in millis, since 1970 UTC (Unix Epoch).
          format: int64
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodRange`.
          type: string
        periodStartMillis:
          type: string
          description: The time when this update period begins, in millis, since 1970 UTC (Unix Epoch).
          format: int64
      description: An event period time range.
      type: object
      id: EventPeriodRange
    PlayerListResponse:
      description: A third party player list response.
      type: object
      id: PlayerListResponse
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerListResponse`.
        nextPageToken:
          type: string
          description: Token corresponding to the next page of results.
        items:
          items:
            $ref: '#/components/schemas/Player'
          type: array
          description: The players.
    LeaderboardEntry:
      id: LeaderboardEntry
      properties:
        writeTimestampMillis:
          type: string
          format: int64
          description: The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.
        scoreValue:
          format: int64
          description: The numerical value of this score.
          type: string
        player:
          description: The player who holds this score.
          $ref: '#/components/schemas/Player'
        scoreRank:
          format: int64
          type: string
          description: The rank of this score for this leaderboard.
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardEntry`.
        scoreTag:
          description: Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        formattedScoreRank:
          description: The localized string for the rank of this score for this leaderboard.
          type: string
        timeSpan:
          enumDescriptions:
            - Default value. This value is unused.
            - The score is an all-time score.
            - The score is a weekly score.
            - The score is a daily score.
          type: string
          enum:
            - SCORE_TIME_SPAN_UNSPECIFIED
            - ALL_TIME
            - WEEKLY
            - DAILY
          description: The time span of this high score.
        formattedScore:
          description: The localized string for the numerical value of this score.
          type: string
      description: The Leaderboard Entry resource.
      type: object
    InstanceIosDetails:
      type: object
      description: The iOS details resource.
      properties:
        supportIphone:
          type: boolean
          description: Flag to indicate if this instance supports iPhone.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceIosDetails`.
          type: string
        supportIpad:
          description: Flag to indicate if this instance supports iPad.
          type: boolean
        preferredForIpad:
          description: Indicates that this instance is the default for new installations on iPad devices.
          type: boolean
        itunesAppId:
          type: string
          description: iTunes App ID.
        preferredForIphone:
          description: Indicates that this instance is the default for new installations on iPhone devices.
          type: boolean
        bundleIdentifier:
          description: Bundle identifier.
          type: string
      id: InstanceIosDetails
    ImageAsset:
      type: object
      id: ImageAsset
      description: An image asset object.
      properties:
        kind:
          type: string
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#imageAsset`.
        name:
          description: The name of the asset.
          type: string
        height:
          description: The height of the asset.
          format: int32
          type: integer
        url:
          type: string
          description: The URL of the asset.
        width:
          type: integer
          description: The width of the asset.
          format: int32
    ApplicationVerifyResponse:
      properties:
        player_id:
          type: string
          description: The ID of the player that was issued the auth token used in this request.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationVerifyResponse`.
          type: string
        alternate_player_id:
          type: string
          description: An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)
      type: object
      id: ApplicationVerifyResponse
      description: A third party application verification response resource.
    AchievementRevealResponse:
      type: object
      properties:
        currentState:
          type: string
          enum:
            - REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED
            - REVEALED
            - UNLOCKED
          description: The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked.
          enumDescriptions:
            - Safe default, don't use.
            - Achievement is revealed.
            - Achievement is unlocked.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementRevealResponse`.
          type: string
      id: AchievementRevealResponse
      description: An achievement reveal response
  parameters:
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/games: Create, edit, and delete your Google Play Games activity
            https://www.googleapis.com/auth/drive.appdata: See, create, and delete its own configuration data in your Google Drive
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    events_by_player:
      id: googledevelopers.games.events_by_player
      name: events_by_player
      title: Events_by_player
      methods:
        events_listByPlayer:
          operation:
            $ref: '#/paths/~1games~1v1~1events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    events:
      id: googledevelopers.games.events
      name: events
      title: Events
      methods:
        record:
          operation:
            $ref: '#/paths/~1games~1v1~1events/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    events_definitions:
      id: googledevelopers.games.events_definitions
      name: events_definitions
      title: Events_definitions
      methods:
        events_listDefinitions:
          operation:
            $ref: '#/paths/~1games~1v1~1eventDefinitions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    revisions:
      id: googledevelopers.games.revisions
      name: revisions
      title: Revisions
      methods:
        check:
          operation:
            $ref: '#/paths/~1games~1v1~1revisions~1check/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    players_scoped_player_ids:
      id: googledevelopers.games.players_scoped_player_ids
      name: players_scoped_player_ids
      title: Players_scoped_player_ids
      methods:
        players_getScopedPlayerIds:
          operation:
            $ref: '#/paths/~1games~1v1~1players~1me~1scopedIds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/players_scoped_player_ids/methods/players_getScopedPlayerIds'
        insert: []
        update: []
        delete: []
    players:
      id: googledevelopers.games.players
      name: players
      title: Players
      methods:
        get:
          operation:
            $ref: '#/paths/~1games~1v1~1players~1{playerId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1games~1v1~1players~1me~1players~1{collection}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/players/methods/get'
          - $ref: '#/components/x-stackQL-resources/players/methods/list'
        insert: []
        update: []
        delete: []
    scores_window:
      id: googledevelopers.games.scores_window
      name: scores_window
      title: Scores_window
      methods:
        scores_listWindow:
          operation:
            $ref: '#/paths/~1games~1v1~1leaderboards~1{leaderboardId}~1window~1{collection}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    scores:
      id: googledevelopers.games.scores
      name: scores
      title: Scores
      methods:
        list:
          operation:
            $ref: '#/paths/~1games~1v1~1leaderboards~1{leaderboardId}~1scores~1{collection}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        submit:
          operation:
            $ref: '#/paths/~1games~1v1~1leaderboards~1{leaderboardId}~1scores/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        submitMultiple:
          operation:
            $ref: '#/paths/~1games~1v1~1leaderboards~1scores/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1games~1v1~1players~1{playerId}~1leaderboards~1{leaderboardId}~1scores~1{timeSpan}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scores/methods/get'
          - $ref: '#/components/x-stackQL-resources/scores/methods/list'
        insert: []
        update: []
        delete: []
    applications:
      id: googledevelopers.games.applications
      name: applications
      title: Applications
      methods:
        verify:
          operation:
            $ref: '#/paths/~1games~1v1~1applications~1{applicationId}~1verify/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        played:
          operation:
            $ref: '#/paths/~1games~1v1~1applications~1played/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1games~1v1~1applications~1{applicationId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/applications/methods/get'
        insert: []
        update: []
        delete: []
    applications_end_point:
      id: googledevelopers.games.applications_end_point
      name: applications_end_point
      title: Applications_end_point
      methods:
        applications_getEndPoint:
          operation:
            $ref: '#/paths/~1games~1v1~1applications~1getEndPoint/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    snapshots:
      id: googledevelopers.games.snapshots
      name: snapshots
      title: Snapshots
      methods:
        list:
          operation:
            $ref: '#/paths/~1games~1v1~1players~1{playerId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1games~1v1~1snapshots~1{snapshotId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/get'
        insert: []
        update: []
        delete: []
    leaderboards:
      id: googledevelopers.games.leaderboards
      name: leaderboards
      title: Leaderboards
      methods:
        list:
          operation:
            $ref: '#/paths/~1games~1v1~1leaderboards/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1games~1v1~1leaderboards~1{leaderboardId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/leaderboards/methods/get'
          - $ref: '#/components/x-stackQL-resources/leaderboards/methods/list'
        insert: []
        update: []
        delete: []
    achievement_definitions:
      id: googledevelopers.games.achievement_definitions
      name: achievement_definitions
      title: Achievement_definitions
      methods:
        achievementDefinitions_list:
          operation:
            $ref: '#/paths/~1games~1v1~1achievements/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/achievement_definitions/methods/achievementDefinitions_list'
        insert: []
        update: []
        delete: []
    metagame_metagame_config:
      id: googledevelopers.games.metagame_metagame_config
      name: metagame_metagame_config
      title: Metagame_metagame_config
      methods:
        metagame_getMetagameConfig:
          operation:
            $ref: '#/paths/~1games~1v1~1metagameConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metagame_metagame_config/methods/metagame_getMetagameConfig'
        insert: []
        update: []
        delete: []
    metagame_categories_by_player:
      id: googledevelopers.games.metagame_categories_by_player
      name: metagame_categories_by_player
      title: Metagame_categories_by_player
      methods:
        metagame_listCategoriesByPlayer:
          operation:
            $ref: '#/paths/~1games~1v1~1players~1{playerId}~1categories~1{collection}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    achievements:
      id: googledevelopers.games.achievements
      name: achievements
      title: Achievements
      methods:
        list:
          operation:
            $ref: '#/paths/~1games~1v1~1players~1{playerId}~1achievements/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unlock:
          operation:
            $ref: '#/paths/~1games~1v1~1achievements~1{achievementId}~1unlock/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateMultiple:
          operation:
            $ref: '#/paths/~1games~1v1~1achievements~1updateMultiple/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setStepsAtLeast:
          operation:
            $ref: '#/paths/~1games~1v1~1achievements~1{achievementId}~1setStepsAtLeast/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reveal:
          operation:
            $ref: '#/paths/~1games~1v1~1achievements~1{achievementId}~1reveal/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        increment:
          operation:
            $ref: '#/paths/~1games~1v1~1achievements~1{achievementId}~1increment/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/achievements/methods/list'
        insert: []
        update: []
        delete: []
    stats:
      id: googledevelopers.games.stats
      name: stats
      title: Stats
      methods:
        get:
          operation:
            $ref: '#/paths/~1games~1v1~1stats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/stats/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /games/v1/events:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
    get:
      description: Returns a list showing the current progress on events in this application for the currently authenticated user.
      operationId: games.events.listByPlayer
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerEventListResponse'
      parameters:
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: events_by_player
      x-stackQL-verb: select
    post:
      description: Records a batch of changes to the number of times events have occurred for the currently authenticated user of this application.
      operationId: games.events.record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRecordRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventUpdateResponse'
      parameters:
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: events
      x-stackQL-verb: exec
  /games/v1/eventDefinitions:
    parameters: *ref_1
    get:
      description: Returns a list of the event definitions in this application.
      operationId: games.events.listDefinitions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDefinitionListResponse'
      parameters:
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: events_definitions
      x-stackQL-verb: select
  /games/v1/revisions/check:
    parameters: *ref_1
    get:
      description: Checks whether the games client is out of date.
      operationId: games.revisions.check
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionCheckResponse'
      parameters:
        - in: query
          name: clientRevision
          required: true
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: exec
  /games/v1/players/me/scopedIds:
    parameters: *ref_1
    get:
      description: Retrieves scoped player identifiers for currently authenticated user.
      operationId: games.players.getScopedPlayerIds
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedPlayerIds'
      parameters: []
      x-stackQL-resource: players_scoped_player_ids
      x-stackQL-verb: select
  /games/v1/players/{playerId}:
    parameters: *ref_1
    get:
      description: Retrieves the Player resource with the given ID. To retrieve the player for the currently authenticated user, set `playerId` to `me`.
      operationId: games.players.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
        - in: query
          name: playerIdConsistencyToken
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: players
      x-stackQL-verb: select
  /games/v1/players/me/players/{collection}:
    parameters: *ref_1
    get:
      description: Get the collection of players for the currently authenticated user.
      operationId: games.players.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerListResponse'
      parameters:
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: language
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: players
      x-stackQL-verb: select
  /games/v1/leaderboards/{leaderboardId}/window/{collection}:
    parameters: *ref_1
    get:
      description: Lists the scores in a leaderboard around (and including) a player's score.
      operationId: games.scores.listWindow
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardScores'
      parameters:
        - in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: query
          name: timeSpan
          required: true
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: returnTopIfAbsent
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: resultsAbove
          schema:
            type: integer
      x-stackQL-resource: scores_window
      x-stackQL-verb: select
  /games/v1/leaderboards/{leaderboardId}/scores/{collection}:
    parameters: *ref_1
    get:
      description: Lists the scores in a leaderboard, starting from the top.
      operationId: games.scores.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardScores'
      parameters:
        - in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: query
          name: timeSpan
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: scores
      x-stackQL-verb: select
  /games/v1/leaderboards/{leaderboardId}/scores:
    parameters: *ref_1
    post:
      description: Submits a score to the specified leaderboard.
      operationId: games.scores.submit
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerScoreResponse'
      parameters:
        - in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - in: query
          name: score
          required: true
          schema:
            type: string
        - in: query
          name: scoreTag
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: scores
      x-stackQL-verb: exec
  /games/v1/leaderboards/scores:
    parameters: *ref_1
    post:
      description: Submits multiple scores to leaderboards.
      operationId: games.scores.submitMultiple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerScoreSubmissionList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerScoreListResponse'
      parameters:
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: scores
      x-stackQL-verb: exec
  /games/v1/players/{playerId}/leaderboards/{leaderboardId}/scores/{timeSpan}:
    parameters: *ref_1
    get:
      description: 'Get high scores, and optionally ranks, in leaderboards for the currently authenticated player. For a specific time span, `leaderboardId` can be set to `ALL` to retrieve data for all leaderboards in a given time span. `NOTE: You cannot ask for ''ALL'' leaderboards and ''ALL'' timeSpans in the same request; only one parameter may be set to ''ALL''.'
      operationId: games.scores.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerLeaderboardScoreListResponse'
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
        - in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - in: path
          name: timeSpan
          required: true
          schema:
            type: string
        - in: query
          name: includeRankType
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: scores
      x-stackQL-verb: select
  /games/v1/applications/{applicationId}/verify:
    parameters: *ref_1
    get:
      description: Verifies the auth token provided with this request is for the application with the specified ID, and returns the ID of the player it was granted for.
      operationId: games.applications.verify
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVerifyResponse'
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: string
      x-stackQL-resource: applications
      x-stackQL-verb: exec
  /games/v1/applications/played:
    parameters: *ref_1
    post:
      description: Indicate that the currently authenticated user is playing your application.
      operationId: games.applications.played
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      parameters: []
      x-stackQL-resource: applications
      x-stackQL-verb: exec
  /games/v1/applications/{applicationId}:
    parameters: *ref_1
    get:
      description: Retrieves the metadata of the application with the given ID. If the requested application is not available for the specified `platformType`, the returned response will not include any instance data.
      operationId: games.applications.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      parameters:
        - in: path
          name: applicationId
          required: true
          schema:
            type: string
        - in: query
          name: platformType
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: applications
      x-stackQL-verb: select
  /games/v1/applications/getEndPoint:
    parameters: *ref_1
    post:
      description: Returns a URL for the requested end point type.
      operationId: games.applications.getEndPoint
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndPoint'
      parameters:
        - in: query
          name: applicationId
          schema:
            type: string
        - in: query
          name: endPointType
          schema:
            type: string
      x-stackQL-resource: applications_end_point
      x-stackQL-verb: select
  /games/v1/players/{playerId}/snapshots:
    parameters: *ref_1
    get:
      description: Retrieves a list of snapshots created by your application for the player corresponding to the player ID.
      operationId: games.snapshots.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotListResponse'
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: select
  /games/v1/snapshots/{snapshotId}:
    parameters: *ref_1
    get:
      description: Retrieves the metadata for a given snapshot ID.
      operationId: games.snapshots.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: snapshotId
          required: true
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: select
  /games/v1/leaderboards:
    parameters: *ref_1
    get:
      description: Lists all the leaderboard metadata for your application.
      operationId: games.leaderboards.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardListResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: leaderboards
      x-stackQL-verb: select
  /games/v1/leaderboards/{leaderboardId}:
    parameters: *ref_1
    get:
      description: Retrieves the metadata of the leaderboard with the given ID.
      operationId: games.leaderboards.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leaderboard'
      parameters:
        - in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: leaderboards
      x-stackQL-verb: select
  /games/v1/achievements:
    parameters: *ref_1
    get:
      description: Lists all the achievement definitions for your application.
      operationId: games.achievementDefinitions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementDefinitionsListResponse'
      parameters:
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: language
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: achievement_definitions
      x-stackQL-verb: select
  /games/v1/metagameConfig:
    parameters: *ref_1
    get:
      description: Return the metagame configuration data for the calling application.
      operationId: games.metagame.getMetagameConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetagameConfig'
      parameters: []
      x-stackQL-resource: metagame_metagame_config
      x-stackQL-verb: select
  /games/v1/players/{playerId}/categories/{collection}:
    parameters: *ref_1
    get:
      description: List play data aggregated per category for the player corresponding to `playerId`.
      operationId: games.metagame.listCategoriesByPlayer
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: metagame_categories_by_player
      x-stackQL-verb: select
  /games/v1/players/{playerId}/achievements:
    parameters: *ref_1
    get:
      description: Lists the progress for all your application's achievements for the currently authenticated player.
      operationId: games.achievements.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAchievementListResponse'
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: state
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: achievements
      x-stackQL-verb: select
  /games/v1/achievements/{achievementId}/unlock:
    parameters: *ref_1
    post:
      description: Unlocks this achievement for the currently authenticated player.
      operationId: games.achievements.unlock
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementUnlockResponse'
      parameters:
        - in: path
          name: achievementId
          required: true
          schema:
            type: string
      x-stackQL-resource: achievements
      x-stackQL-verb: exec
  /games/v1/achievements/updateMultiple:
    parameters: *ref_1
    post:
      description: Updates multiple achievements for the currently authenticated player.
      operationId: games.achievements.updateMultiple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AchievementUpdateMultipleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementUpdateMultipleResponse'
      parameters: []
      x-stackQL-resource: achievements
      x-stackQL-verb: exec
  /games/v1/achievements/{achievementId}/setStepsAtLeast:
    parameters: *ref_1
    post:
      description: Sets the steps for the currently authenticated player towards unlocking an achievement. If the steps parameter is less than the current number of steps that the player already gained for the achievement, the achievement is not modified.
      operationId: games.achievements.setStepsAtLeast
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementSetStepsAtLeastResponse'
      parameters:
        - in: path
          name: achievementId
          required: true
          schema:
            type: string
        - in: query
          name: steps
          required: true
          schema:
            type: integer
      x-stackQL-resource: achievements
      x-stackQL-verb: exec
  /games/v1/achievements/{achievementId}/reveal:
    parameters: *ref_1
    post:
      description: Sets the state of the achievement with the given ID to `REVEALED` for the currently authenticated player.
      operationId: games.achievements.reveal
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementRevealResponse'
      parameters:
        - in: path
          name: achievementId
          required: true
          schema:
            type: string
      x-stackQL-resource: achievements
      x-stackQL-verb: exec
  /games/v1/achievements/{achievementId}/increment:
    parameters: *ref_1
    post:
      description: Increments the steps of the achievement with the given ID for the currently authenticated player.
      operationId: games.achievements.increment
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementIncrementResponse'
      parameters:
        - in: path
          name: achievementId
          required: true
          schema:
            type: string
        - in: query
          name: stepsToIncrement
          required: true
          schema:
            type: integer
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: achievements
      x-stackQL-verb: exec
  /games/v1/stats:
    parameters: *ref_1
    get:
      description: Returns engagement and spend statistics in this application for the currently authenticated user.
      operationId: games.stats.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'
      parameters: []
      x-stackQL-resource: stats
      x-stackQL-verb: select
