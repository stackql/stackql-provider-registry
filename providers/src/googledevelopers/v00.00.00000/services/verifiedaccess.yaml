openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Chrome Verified Access API
  description: API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network
  version: v2
  x-discovery-doc-revision: '20221214'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/chrome/verified-access
servers:
  - url: https://verifiedaccess.googleapis.com
components:
  schemas:
    VerifyChallengeResponseRequest:
      properties:
        challengeResponse:
          type: string
          format: byte
          description: Required. The generated response to the challenge, the bytes representation of SignedData.
        expectedIdentity:
          type: string
          description: Optional. Service can optionally provide identity information about the device or user associated with the key. For an EMK, this value is the enrolled domain. For an EUK, this value is the user's email address. If present, this value will be checked against contents of the response, and verification will fail if there is no match.
      description: Signed ChallengeResponse.
      type: object
      id: VerifyChallengeResponseRequest
    VerifyChallengeResponseResult:
      id: VerifyChallengeResponseResult
      properties:
        deviceSignal:
          description: Device signal in json string representation.
          type: string
        signedPublicKeyAndChallenge:
          description: Certificate Signing Request (in the SPKAC format, base64 encoded) is returned in this field. This field will be set only if device has included CSR in its challenge response. (the option to include CSR is now available for both user and machine responses)
          type: string
        virtualDeviceId:
          type: string
          description: Virtual device id of the device. The definition of virtual device id is platform-specific.
        customerId:
          description: Unique customer id that this device belongs to, as defined by the Google Admin SDK at https://developers.google.com/admin-sdk/directory/v1/guides/manage-customers
          type: string
        devicePermanentId:
          type: string
          description: Device permanent id is returned in this field (for the machine response only).
        keyTrustLevel:
          type: string
          enum:
            - KEY_TRUST_LEVEL_UNSPECIFIED
            - CHROME_OS_VERIFIED_MODE
            - CHROME_OS_DEVELOPER_MODE
            - CHROME_BROWSER_HW_KEY
            - CHROME_BROWSER_OS_KEY
          description: Device attested key trust level.
          enumDescriptions:
            - UNSPECIFIED.
            - ChromeOS device in verified mode.
            - ChromeOS device in developer mode.
            - Chrome Browser with the key stored in the device hardware.
            - Chrome Browser with the key stored at OS level.
      type: object
      description: Result message for VerifiedAccess.VerifyChallengeResponse.
    Challenge:
      id: Challenge
      description: Result message for VerifiedAccess.GenerateChallenge.
      type: object
      properties:
        alternativeChallenge:
          format: byte
          type: string
          description: Challenge generated with the old signing key, the bytes representation of SignedData (this will only be present during key rotation).
        challenge:
          format: byte
          description: Generated challenge, the bytes representation of SignedData.
          type: string
    Empty:
      properties: {}
      id: Empty
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/verifiedaccess: Verify your enterprise credentials
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    challenge:
      id: googledevelopers.verifiedaccess.challenge
      name: challenge
      title: Challenge
      methods:
        generate:
          operation:
            $ref: '#/paths/~1v2~1challenge:generate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify:
          operation:
            $ref: '#/paths/~1v2~1challenge:verify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v2/challenge:generate:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
    post:
      description: Generates a new challenge.
      operationId: verifiedaccess.challenge.generate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/verifiedaccess
          Oauth2c:
            - https://www.googleapis.com/auth/verifiedaccess
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
      parameters: []
      x-stackQL-resource: challenge
      x-stackQL-verb: exec
  /v2/challenge:verify:
    parameters: *ref_1
    post:
      description: Verifies the challenge response.
      operationId: verifiedaccess.challenge.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyChallengeResponseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/verifiedaccess
          Oauth2c:
            - https://www.googleapis.com/auth/verifiedaccess
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyChallengeResponseResult'
      parameters: []
      x-stackQL-resource: challenge
      x-stackQL-verb: exec
