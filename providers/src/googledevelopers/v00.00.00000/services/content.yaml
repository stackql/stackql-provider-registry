openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Content API for Shopping
  description: Manage your product listings and accounts for Google Shopping
  version: v2.1
  x-discovery-doc-revision: '20230112'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/shopping-content/v2/
servers:
  - url: https://shoppingcontent.googleapis.com/content/v2.1
components:
  schemas:
    OrdersGetTestOrderTemplateResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersGetTestOrderTemplateResponse`".'
          type: string
        template:
          $ref: '#/components/schemas/TestOrder'
          description: The requested test order template.
      type: object
      id: OrdersGetTestOrderTemplateResponse
    DatafeedstatusesCustomBatchRequestEntry:
      properties:
        feedLabel:
          description: The feed label to get the datafeed status for. If this parameter is provided, then `language` must also be provided. Note that for multi-target datafeeds this parameter is required.
          type: string
        language:
          description: The language to get the datafeed status for. If this parameter is provided then `country` must also be provided. Note that for multi-target datafeeds this parameter is required.
          type: string
        batchId:
          format: uint32
          type: integer
          description: An entry ID, unique within the batch request.
        datafeedId:
          type: string
          description: The ID of the data feed to get.
          format: uint64
        merchantId:
          format: uint64
          description: The ID of the managing account.
          type: string
        country:
          description: Deprecated. Use `feedLabel` instead. The country to get the datafeed status for. If this parameter is provided, then `language` must also be provided. Note that for multi-target datafeeds this parameter is required.
          type: string
        method:
          type: string
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
      id: DatafeedstatusesCustomBatchRequestEntry
      type: object
      description: A batch entry encoding a single non-batch datafeedstatuses request.
    AccountsListResponse:
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of accounts.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsListResponse`".'
          type: string
      type: object
      id: AccountsListResponse
    ShoppingAdsProgramStatusRegionStatus:
      id: ShoppingAdsProgramStatusRegionStatus
      properties:
        disapprovalDate:
          description: 'Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`.'
          type: string
        onboardingIssues:
          items:
            type: string
          type: array
          description: Issues that must be fixed to be eligible for review.
        reviewEligibilityStatus:
          enum:
            - REVIEW_ELIGIBILITY_UNSPECIFIED
            - ELIGIBLE
            - INELIGIBLE
          description: If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.
          enumDescriptions:
            - Review eligibility state is unknown.
            - Account is eligible for review for a specified region code.
            - Account is not eligible for review for a specified region code.
          type: string
        reviewIneligibilityReason:
          type: string
          enum:
            - REVIEW_INELIGIBILITY_REASON_UNSPECIFIED
            - ONBOARDING_ISSUES
            - NOT_ENOUGH_OFFERS
            - IN_COOLDOWN_PERIOD
            - ALREADY_UNDER_REVIEW
            - NO_REVIEW_REQUIRED
            - WILL_BE_REVIEWED_AUTOMATICALLY
            - IS_RETIRED
            - ALREADY_REVIEWED
          enumDescriptions:
            - Requesting a review from Google is not possible.
            - All onboarding issues needs to be fixed.
            - Not enough offers uploaded for this country.
            - Cooldown period applies. Wait until cooldown period ends.
            - Account is already under review.
            - No issues available to review.
            - Account will be automatically reviewed at the end of the grace period.
            - Account is retired. Should not appear in MC.
            - Account was already reviewd.
          description: Review ineligibility reason if account is not eligible for review.
        regionCodes:
          type: array
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.
          items:
            type: string
        reviewIssues:
          description: Issues evaluated in the review process. Fix all issues before requesting a review.
          items:
            type: string
          type: array
        reviewIneligibilityReasonDescription:
          description: Reason a program in a specific region isnâ€™t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
          type: string
        reviewIneligibilityReasonDetails:
          $ref: '#/components/schemas/ShoppingAdsProgramStatusReviewIneligibilityReasonDetails'
          description: Additional information for ineligibility. If `reviewIneligibilityReason` is `IN_COOLDOWN_PERIOD`, a timestamp for the end of the cooldown period is provided.
        eligibilityStatus:
          enum:
            - STATE_UNSPECIFIED
            - APPROVED
            - DISAPPROVED
            - WARNING
            - UNDER_REVIEW
            - PENDING_REVIEW
            - ONBOARDING
          description: Eligibility status of the Shopping Ads program.
          type: string
          enumDescriptions:
            - State is not known.
            - If the account has no issues and review is completed successfully.
            - There are one or more issues that needs to be resolved for account to be active for the program. Detailed list of account issues are available in [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses) API.
            - If account has issues but offers are servable. Some of the issue can make account DISAPPROVED after a certain deadline.
            - Account is under review.
            - Account is waiting for review to start.
            - Program is currently onboarding. Upload valid offers to complete onboarding.
      type: object
      description: Status of program and region.
    AccounttaxListResponse:
      type: object
      id: AccounttaxListResponse
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AccountTax'
        nextPageToken:
          description: The token for the retrieval of the next page of account tax settings.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accounttaxListResponse`".'
          type: string
    OrderinvoicesCreateRefundInvoiceResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderinvoicesCreateRefundInvoiceResponse`".'
          type: string
      id: OrderinvoicesCreateRefundInvoiceResponse
      type: object
    LiaAboutPageSettings:
      properties:
        status:
          type: string
          description: 'The status of the verification process for the About page. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
        url:
          description: The URL for the About page.
          type: string
      type: object
      id: LiaAboutPageSettings
    AccountsUpdateLabelsRequest:
      id: AccountsUpdateLabelsRequest
      type: object
      properties:
        labelIds:
          description: The IDs of labels that should be assigned to the account.
          items:
            type: string
            format: uint64
          type: array
    ReportRow:
      type: object
      properties:
        priceInsights:
          $ref: '#/components/schemas/PriceInsights'
          description: Price Insights fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceInsightsProductView`.
        productCluster:
          $ref: '#/components/schemas/ProductCluster'
          description: Product cluster fields requested by the merchant in the query. Field values are only set if the merchant queries `BestSellersProductClusterView`.
        productView:
          description: Product fields requested by the merchant in the query. Field values are only set if the merchant queries `ProductView`. Available only to selected merchants. Submit the [interest form](https://forms.gle/7Uy8htzAN8oNokz9A) to request access.
          $ref: '#/components/schemas/ProductView'
        segments:
          description: Segmentation dimensions requested by the merchant in the query. Dimension values are only set for dimensions requested explicitly in the query.
          $ref: '#/components/schemas/Segments'
        priceCompetitiveness:
          $ref: '#/components/schemas/PriceCompetitiveness'
          description: Price Competitiveness fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceCompetitivenessProductView`.
        bestSellers:
          $ref: '#/components/schemas/BestSellers'
          description: Best Sellers fields requested by the merchant in the query. Field values are only set if the merchant queries `BestSellersProductClusterView` or `BestSellersBrandView`.
        metrics:
          description: Metrics requested by the merchant in the query. Metric values are only set for metrics requested explicitly in the query.
          $ref: '#/components/schemas/Metrics'
        brand:
          $ref: '#/components/schemas/Brand'
          description: Brand fields requested by the merchant in the query. Field values are only set if the merchant queries `BestSellersBrandView`.
      id: ReportRow
      description: Result row returned from the search query.
    OrdersCancelTestOrderByCustomerResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCancelTestOrderByCustomerResponse`".'
          type: string
      id: OrdersCancelTestOrderByCustomerResponse
      type: object
    AccountstatusesCustomBatchRequest:
      type: object
      id: AccountstatusesCustomBatchRequest
      properties:
        entries:
          items:
            $ref: '#/components/schemas/AccountstatusesCustomBatchRequestEntry'
          type: array
          description: The request entries to be processed in the batch.
    ReturnPolicyPolicy:
      id: ReturnPolicyPolicy
      properties:
        numberOfDays:
          format: int64
          type: string
          description: The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. When specifying the return window like this, set the policy type to "numberOfDaysAfterDelivery". Acceptable values are 30, 45, 60, 90, 100, 180, 270 and 365 for the default policy. Additional policies further allow 14, 15, 21 and 28 days, but note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics. A policy of less than 30 days can only be applied to those items.
        lastReturnDate:
          description: Required. Last day for returning the items. In ISO 8601 format. When specifying the return window like this, set the policy type to "lastReturnDate". Use this for seasonal overrides only.
          type: string
        type:
          description: 'Policy type. Use "lastReturnDate" for seasonal overrides only. Note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics or non-returnable items such as food, perishables, and living things. A policy of less than 30 days can only be applied to those items. Acceptable values are: - "`lastReturnDate`" - "`lifetimeReturns`" - "`noReturns`" - "`numberOfDaysAfterDelivery`" '
          type: string
      type: object
    WarehouseBasedDeliveryTime:
      type: object
      id: WarehouseBasedDeliveryTime
      properties:
        originStreetAddress:
          description: Shipping origin's street address.
          type: string
        carrierService:
          type: string
          description: Required. Carrier service, such as `"ground"` or `"2 days"`. The list of supported services for a carrier can be retrieved through the `listSupportedCarriers` method. The name of the service must be in the eddSupportedServices list.
        originAdministrativeArea:
          description: Shipping origin's state.
          type: string
        originCountry:
          description: Shipping origin's country represented as a [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).
          type: string
        warehouseName:
          type: string
          description: The name of the warehouse. Warehouse name need to be matched with name. If warehouseName is set, the below fields will be ignored. The warehouse info will be read from warehouse.
        carrier:
          description: Required. Carrier, such as `"UPS"` or `"Fedex"`. The list of supported carriers can be retrieved through the `listSupportedCarriers` method.
          type: string
        originPostalCode:
          type: string
          description: Shipping origin.
        originCity:
          description: Shipping origin's city.
          type: string
    OrderLineItemProductFee:
      type: object
      id: OrderLineItemProductFee
      properties:
        amount:
          description: Amount of the fee.
          $ref: '#/components/schemas/Price'
        name:
          type: string
          description: Name of the fee.
    AccountsLinkResponse:
      type: object
      id: AccountsLinkResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsLinkResponse`".'
          type: string
    PostalCodeGroup:
      type: object
      id: PostalCodeGroup
      properties:
        postalCodeRanges:
          items:
            $ref: '#/components/schemas/PostalCodeRange'
          description: A range of postal codes. Required.
          type: array
        country:
          description: The CLDR territory code of the country the postal code group applies to. Required.
          type: string
        name:
          description: The name of the postal code group, referred to in headers. Required.
          type: string
    LiasettingsCustomBatchResponse:
      id: LiasettingsCustomBatchResponse
      type: object
      properties:
        entries:
          type: array
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/LiasettingsCustomBatchResponseEntry'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsCustomBatchResponse`".'
    OrderreturnsCreateOrderReturnResponse:
      id: OrderreturnsCreateOrderReturnResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreturnsCreateOrderReturnResponse`".'
          type: string
        orderReturn:
          $ref: '#/components/schemas/MerchantOrderReturn'
          description: Created order return.
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
      type: object
    ProductId:
      properties:
        productId:
          description: The Content API ID of the product, in the form `channel:contentLanguage:targetCountry:offerId`.
          type: string
      type: object
      id: ProductId
      description: The Content API ID of the product.
    DateTime:
      description: 'Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user''s timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application''s limitations.'
      properties:
        hours:
          format: int32
          type: integer
          description: Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value "24:00:00" for scenarios like business closing time.
        month:
          format: int32
          type: integer
          description: Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
        utcOffset:
          description: 'UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.'
          format: google-duration
          type: string
        timeZone:
          description: Time zone.
          $ref: '#/components/schemas/TimeZone'
        nanos:
          format: int32
          type: integer
          description: Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
        minutes:
          format: int32
          description: Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
          type: integer
        day:
          format: int32
          description: Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
          type: integer
        year:
          format: int32
          type: integer
          description: Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
        seconds:
          type: integer
          description: Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
          format: int32
      id: DateTime
      type: object
    Region:
      description: Represents a geographic region that you can use as a target with both the `RegionalInventory` and `ShippingSettings` services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets.
      id: Region
      type: object
      properties:
        geotargetArea:
          $ref: '#/components/schemas/RegionGeoTargetArea'
          description: A list of geotargets that defines the region area.
        regionId:
          readOnly: true
          type: string
          description: Output only. Immutable. The ID uniquely identifying each region.
        shippingEligible:
          readOnly: true
          description: Output only. Indicates if the region is eligible to use in the Shipping Services configuration.
          type: boolean
        postalCodeArea:
          description: A list of postal codes that defines the region area.
          $ref: '#/components/schemas/RegionPostalCodeArea'
        regionalInventoryEligible:
          description: Output only. Indicates if the region is eligible to use in the Regional Inventory configuration.
          readOnly: true
          type: boolean
        displayName:
          type: string
          description: The display name of the region.
        merchantId:
          readOnly: true
          type: string
          format: int64
          description: Output only. Immutable. Merchant that owns the region.
    ProductDeliveryTime:
      id: ProductDeliveryTime
      description: The estimated days to deliver a product after an order is placed. Only authorized shipping signals partners working with a merchant can use this resource. Merchants should use the [`products`](https://developers.google.com/shopping-content/reference/rest/v2.1/products#productshipping) resource instead.
      properties:
        productId:
          description: Required. The `id` of the product.
          $ref: '#/components/schemas/ProductId'
        areaDeliveryTimes:
          description: Required. A set of associations between `DeliveryArea` and `DeliveryTime` entries. The total number of `areaDeliveryTimes` can be at most 100.
          type: array
          items:
            $ref: '#/components/schemas/ProductDeliveryTimeAreaDeliveryTime'
      type: object
    OrderTrackingSignalShipmentLineItemMapping:
      type: object
      description: Represents how many items are in the shipment for the given shipment_id and line_item_id.
      properties:
        shipmentId:
          description: Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response.
          type: string
        lineItemId:
          type: string
          description: Required. The line item ID.
        quantity:
          description: The line item quantity in the shipment.
          type: string
          format: int64
      id: OrderTrackingSignalShipmentLineItemMapping
    ProductUnitPricingBaseMeasure:
      properties:
        value:
          format: int64
          description: The denominator of the unit price.
          type: string
        unit:
          description: The unit of the denominator.
          type: string
      id: ProductUnitPricingBaseMeasure
      type: object
    ShippingsettingsListResponse:
      type: object
      id: ShippingsettingsListResponse
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ShippingSettings'
        nextPageToken:
          description: The token for the retrieval of the next page of shipping settings.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsListResponse`".'
    ListCssesResponse:
      type: object
      description: The response message for the `ListCsses` method
      properties:
        csses:
          items:
            $ref: '#/components/schemas/Css'
          type: array
          description: The CSS domains affiliated with the specified CSS group.
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      id: ListCssesResponse
    ProductstatusesListResponse:
      type: object
      id: ProductstatusesListResponse
      properties:
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of products statuses.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productstatusesListResponse`".'
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ProductStatus'
    ProductAmount:
      properties:
        priceAmount:
          $ref: '#/components/schemas/Price'
          description: The pre-tax or post-tax price depending on the location of the order.
        remittedTaxAmount:
          $ref: '#/components/schemas/Price'
          description: Remitted tax value.
        taxAmount:
          description: Tax value.
          $ref: '#/components/schemas/Price'
      id: ProductAmount
      type: object
    ProductUnitPricingMeasure:
      properties:
        value:
          format: double
          description: The measure of an item.
          type: number
        unit:
          description: The unit of the measure.
          type: string
      id: ProductUnitPricingMeasure
      type: object
    DeliveryTime:
      type: object
      properties:
        warehouseBasedDeliveryTimes:
          description: Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in DeliveryTime should be set.
          type: array
          items:
            $ref: '#/components/schemas/WarehouseBasedDeliveryTime'
        maxTransitTimeInDays:
          format: uint32
          type: integer
          description: Maximum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`.
        transitTimeTable:
          description: Transit time table, number of business days spent in transit based on row and column dimensions. Either `{min,max}TransitTimeInDays` or `transitTimeTable` can be set, but not both.
          $ref: '#/components/schemas/TransitTable'
        cutoffTime:
          description: Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST.
          $ref: '#/components/schemas/CutoffTime'
        maxHandlingTimeInDays:
          format: uint32
          type: integer
          description: Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.
        minHandlingTimeInDays:
          format: uint32
          description: Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.
          type: integer
        handlingBusinessDayConfig:
          description: The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed.
          $ref: '#/components/schemas/BusinessDayConfig'
        holidayCutoffs:
          type: array
          description: Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.
          items:
            $ref: '#/components/schemas/HolidayCutoff'
        minTransitTimeInDays:
          description: Minimum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.
          type: integer
          format: uint32
        transitBusinessDayConfig:
          $ref: '#/components/schemas/BusinessDayConfig'
          description: The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed.
      id: DeliveryTime
    Value:
      id: Value
      description: The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set.
      type: object
      properties:
        subtableName:
          description: The name of a subtable. Can only be set in table cells (not for single values), and only if all other fields are not set.
          type: string
        carrierRateName:
          description: The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.
          type: string
        flatRate:
          description: A flat rate. Can only be set if all other fields are not set.
          $ref: '#/components/schemas/Price'
        pricePercentage:
          description: A percentage of the price represented as a number in decimal notation (for example, `"5.4"`). Can only be set if all other fields are not set.
          type: string
        noShipping:
          description: If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set.
          type: boolean
    ReturnpolicyListResponse:
      id: ReturnpolicyListResponse
      type: object
      properties:
        resources:
          items:
            $ref: '#/components/schemas/ReturnPolicy'
          type: array
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnpolicyListResponse`".'
    ShipmentTrackingInfo:
      id: ShipmentTrackingInfo
      type: object
      properties:
        trackingNumber:
          type: string
          description: The tracking number for the package.
        carrier:
          type: string
          description: 'The shipping carrier that handles the package. Acceptable values are: - "`boxtal`" - "`bpost`" - "`chronopost`" - "`colisPrive`" - "`colissimo`" - "`cxt`" - "`deliv`" - "`dhl`" - "`dpd`" - "`dynamex`" - "`eCourier`" - "`easypost`" - "`efw`" - "`fedex`" - "`fedexSmartpost`" - "`geodis`" - "`gls`" - "`googleCourier`" - "`gsx`" - "`jdLogistics`" - "`laPoste`" - "`lasership`" - "`manual`" - "`mpx`" - "`onTrac`" - "`other`" - "`tnt`" - "`uds`" - "`ups`" - "`usps`" '
    ShippingsettingsGetSupportedPickupServicesResponse:
      id: ShippingsettingsGetSupportedPickupServicesResponse
      properties:
        pickupServices:
          type: array
          items:
            $ref: '#/components/schemas/PickupServicesPickupService'
          description: A list of supported pickup services. May be empty.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsGetSupportedPickupServicesResponse`".'
          type: string
      type: object
    UnitInvoiceAdditionalCharge:
      type: object
      id: UnitInvoiceAdditionalCharge
      properties:
        type:
          description: '[required] Type of the additional charge. Acceptable values are: - "`shipping`" '
          type: string
        additionalChargeAmount:
          $ref: '#/components/schemas/Amount'
          description: '[required] Amount of the additional charge per unit. *Note:* Invoicing works on a per unit bases. The `additionalChargeAmount` is the amount charged per unit, and will be multiplied by the number of entries in `shipmentUnitID`.'
    ListCollectionStatusesResponse:
      description: Response message for the ListCollectionStatuses method.
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        resources:
          description: The collectionstatuses listed.
          type: array
          items:
            $ref: '#/components/schemas/CollectionStatus'
      id: ListCollectionStatusesResponse
      type: object
    TimePeriod:
      id: TimePeriod
      description: A message that represents a time period.
      properties:
        endTime:
          description: The ending timestamp.
          format: google-datetime
          type: string
        startTime:
          description: The starting timestamp.
          format: google-datetime
          type: string
      type: object
    DatafeedsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeeds response.
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        batchId:
          description: The ID of the request entry this entry responds to.
          type: integer
          format: uint32
        datafeed:
          $ref: '#/components/schemas/Datafeed'
          description: The requested data feed. Defined if and only if the request was successful.
      id: DatafeedsCustomBatchResponseEntry
    OrdersSetLineItemMetadataRequest:
      id: OrdersSetLineItemMetadataRequest
      type: object
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/OrderMerchantProvidedAnnotation'
          type: array
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          type: string
          description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
    OrdersReturnRefundLineItemRequest:
      id: OrdersReturnRefundLineItemRequest
      type: object
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        priceAmount:
          $ref: '#/components/schemas/Price'
          description: The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. If omitted, refundless return is assumed.
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        quantity:
          format: uint32
          type: integer
          description: The quantity to return and refund. Quantity is required.
        taxAmount:
          $ref: '#/components/schemas/Price'
          description: The amount of tax to be refunded. Optional, but if filled, then priceAmount must be set. Calculated automatically if not provided.
    ReturnpolicyCustomBatchResponse:
      id: ReturnpolicyCustomBatchResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnpolicyCustomBatchResponse`".'
        entries:
          type: array
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/ReturnpolicyCustomBatchResponseEntry'
      type: object
    TransitTable:
      type: object
      id: TransitTable
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/TransitTableTransitTimeRow'
        transitTimeLabels:
          description: 'A list of transit time labels. The last value can be `"all other labels"`. Example: `["food", "electronics", "all other labels"]`.'
          items:
            type: string
          type: array
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be `"all other locations"`. Example: `["zone 1", "zone 2", "all other locations"]`. The referred postal code groups must match the delivery country of the service.'
          type: array
          items:
            type: string
    DatafeedStatusExample:
      properties:
        itemId:
          type: string
          description: The ID of the example item.
        lineNumber:
          type: string
          description: Line number in the data feed where the example is found.
          format: uint64
        value:
          type: string
          description: The problematic value.
      type: object
      id: DatafeedStatusExample
      description: An example occurrence for a particular error.
    OrderreturnsProcessRequest:
      type: object
      properties:
        fullChargeReturnShippingCost:
          type: boolean
          description: Option to charge the customer return shipping cost.
        refundShippingFee:
          $ref: '#/components/schemas/OrderreturnsRefundOperation'
          description: Refunds for original shipping fee.
        operationId:
          description: '[required] The ID of the operation, unique across all operations for a given order return.'
          type: string
        returnItems:
          description: The list of items to return.
          type: array
          items:
            $ref: '#/components/schemas/OrderreturnsReturnItem'
      id: OrderreturnsProcessRequest
    RepricingRuleReportBuyboxWinningRuleStats:
      description: Stats specific to buybox winning rules for rule report.
      id: RepricingRuleReportBuyboxWinningRuleStats
      properties:
        buyboxWonProductCount:
          description: Number of unique products that won the buybox with this rule during this period of time.
          format: int32
          type: integer
      type: object
    Address:
      id: Address
      properties:
        country:
          type: string
          description: Required. [CLDR country code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml) (for example, "US").
        streetAddress:
          type: string
          description: Street-level part of the address. Use `\n` to add a second line.
        postalCode:
          type: string
          description: Required. Postal code or ZIP (for example, "94043").
        administrativeArea:
          description: Required. Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        city:
          description: Required. City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
          type: string
      type: object
    AccounttaxCustomBatchResponse:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/AccounttaxCustomBatchResponseEntry'
          type: array
          description: The result of the execution of the batch requests.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accounttaxCustomBatchResponse`".'
      id: AccounttaxCustomBatchResponse
      type: object
    CollectionStatusDestinationStatus:
      id: CollectionStatusDestinationStatus
      type: object
      description: Destination status message.
      properties:
        pendingCountries:
          items:
            type: string
          description: Country codes (ISO 3166-1 alpha-2) where the collection is pending approval.
          type: array
        destination:
          description: The name of the destination
          type: string
        approvedCountries:
          items:
            type: string
          type: array
          description: Country codes (ISO 3166-1 alpha-2) where the collection is approved.
        disapprovedCountries:
          description: Country codes (ISO 3166-1 alpha-2) where the collection is disapproved.
          items:
            type: string
          type: array
        status:
          type: string
          description: The status for the specified destination in the collections target country.
    RegionalinventoryCustomBatchRequest:
      id: RegionalinventoryCustomBatchRequest
      type: object
      properties:
        entries:
          items:
            $ref: '#/components/schemas/RegionalinventoryCustomBatchRequestEntry'
          description: The request entries to be processed in the batch.
          type: array
    FreeListingsProgramStatusReviewIneligibilityReasonDetails:
      properties:
        cooldownTime:
          format: google-datetime
          description: This timestamp represents end of cooldown period for review ineligbility reason `IN_COOLDOWN_PERIOD`.
          type: string
      description: Additional details for review ineligibility reasons.
      type: object
      id: FreeListingsProgramStatusReviewIneligibilityReasonDetails
    OrdersCreateTestOrderRequest:
      id: OrdersCreateTestOrderRequest
      type: object
      properties:
        templateName:
          type: string
          description: 'The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - "`template1`" - "`template1a`" - "`template1b`" - "`template2`" - "`template3`" '
        testOrder:
          description: The test order to create.
          $ref: '#/components/schemas/TestOrder'
        country:
          description: 'The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created through `template_name`, or the addresses of orders created through `test_order`. Acceptable values are: - "`US`" - "`FR`" Defaults to "`US`".'
          type: string
    OrdersUpdateShipmentResponse:
      type: object
      id: OrdersUpdateShipmentResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersUpdateShipmentResponse`".'
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
    RepricingRuleEligibleOfferMatcher:
      properties:
        skipWhenOnPromotion:
          description: When true, the rule won't be applied to offers with active promotions.
          type: boolean
        brandMatcher:
          $ref: '#/components/schemas/RepricingRuleEligibleOfferMatcherStringMatcher'
          description: Filter by the brand.
        itemGroupIdMatcher:
          description: Filter by the item group id.
          $ref: '#/components/schemas/RepricingRuleEligibleOfferMatcherStringMatcher'
        matcherOption:
          enumDescriptions:
            - Unused.
            - Use custom filters.
            - Use repricing_rule_id feed attribute on the product resource to specify offer-rule mapping.
            - Matching all products.
          description: Determines whether to use the custom matchers or the product feed attribute "repricing_rule_id" to specify offer-rule mapping.
          type: string
          enum:
            - MATCHER_OPTION_UNSPECIFIED
            - MATCHER_OPTION_CUSTOM_FILTER
            - MATCHER_OPTION_USE_FEED_ATTRIBUTE
            - MATCHER_OPTION_ALL_PRODUCTS
        offerIdMatcher:
          description: Filter by the offer id.
          $ref: '#/components/schemas/RepricingRuleEligibleOfferMatcherStringMatcher'
      id: RepricingRuleEligibleOfferMatcher
      type: object
      description: 'Matcher that specifies eligible offers. When the USE_FEED_ATTRIBUTE option is selected, only the repricing_rule_id attribute on the product feed is used to specify offer-rule mapping. When the CUSTOM_FILTER option is selected, only the *_matcher fields are used to filter the offers for offer-rule mapping. If the CUSTOM_FILTER option is selected, an offer needs to satisfy each custom filter matcher to be eligible for a rule. Size limit: the sum of the number of entries in all the matchers should not exceed 20. For example, there can be 15 product ids and 5 brands, but not 10 product ids and 11 brands.'
    OrdersInStoreRefundLineItemResponse:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersInStoreRefundLineItemResponse`".'
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
      id: OrdersInStoreRefundLineItemResponse
      type: object
    TransitTableTransitTimeRow:
      type: object
      id: TransitTableTransitTimeRow
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/TransitTableTransitTimeRowTransitTimeValue'
    OrdersCancelLineItemResponse:
      properties:
        executionStatus:
          type: string
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCancelLineItemResponse`".'
      id: OrdersCancelLineItemResponse
      type: object
    ReturnPolicyOnlineReturnReasonCategoryInfo:
      type: object
      id: ReturnPolicyOnlineReturnReasonCategoryInfo
      description: The return reason category info wrapper.
      properties:
        returnShippingFee:
          $ref: '#/components/schemas/ReturnPolicyOnlineReturnShippingFee'
          description: The corresponding return shipping fee. This is only applicable when returnLabelSource is not the customer's responsibility.
        returnLabelSource:
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Download and print the label.
            - Label in the box.
            - Customers' responsibility to get the label.
          description: The corresponding return label source.
          enum:
            - RETURN_LABEL_SOURCE_UNSPECIFIED
            - DOWNLOAD_AND_PRINT
            - IN_THE_BOX
            - CUSTOMER_RESPONSIBILITY
        returnReasonCategory:
          enumDescriptions:
            - Default value. This value is unused.
            - Buyer remorse.
            - Item defect.
          type: string
          description: The return reason category.
          enum:
            - RETURN_REASON_CATEGORY_UNSPECIFIED
            - BUYER_REMORSE
            - ITEM_DEFECT
    UnitInvoiceTaxLine:
      properties:
        taxType:
          description: '[required] Type of the tax. Acceptable values are: - "`otherFee`" - "`otherFeeTax`" - "`sales`" '
          type: string
        taxName:
          type: string
          description: Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`.
        taxAmount:
          description: '[required] Tax amount for the tax type.'
          $ref: '#/components/schemas/Price'
      id: UnitInvoiceTaxLine
      type: object
    ProductsListResponse:
      type: object
      id: ProductsListResponse
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Product'
          type: array
        nextPageToken:
          description: The token for the retrieval of the next page of products.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productsListResponse`".'
    SettlementTransactionAmount:
      id: SettlementTransactionAmount
      properties:
        transactionAmount:
          $ref: '#/components/schemas/Price'
          description: The amount that contributes to the line item price.
        type:
          description: 'The type of the amount. Acceptable values are: - "`itemPrice`" - "`orderPrice`" - "`refund`" - "`earlyRefund`" - "`courtesyRefund`" - "`returnRefund`" - "`returnLabelShippingFeeAmount`" - "`lumpSumCorrectionAmount`" '
          type: string
        commission:
          $ref: '#/components/schemas/SettlementTransactionAmountCommission'
        description:
          type: string
          description: 'The description of the event. Acceptable values are: - "`taxWithhold`" - "`principal`" - "`principalAdjustment`" - "`shippingFee`" - "`merchantRemittedSalesTax`" - "`googleRemittedSalesTax`" - "`merchantCoupon`" - "`merchantCouponTax`" - "`merchantRemittedDisposalTax`" - "`googleRemittedDisposalTax`" - "`merchantRemittedRedemptionFee`" - "`googleRemittedRedemptionFee`" - "`eeeEcoFee`" - "`furnitureEcoFee`" - "`copyPrivateFee`" - "`eeeEcoFeeCommission`" - "`furnitureEcoFeeCommission`" - "`copyPrivateFeeCommission`" - "`principalRefund`" - "`principalRefundTax`" - "`itemCommission`" - "`adjustmentCommission`" - "`shippingFeeCommission`" - "`commissionRefund`" - "`damaged`" - "`damagedOrDefectiveItem`" - "`expiredItem`" - "`faultyItem`" - "`incorrectItemReceived`" - "`itemMissing`" - "`qualityNotExpected`" - "`receivedTooLate`" - "`storePackageMissing`" - "`transitPackageMissing`" - "`unsuccessfulDeliveryUndeliverable`" - "`wrongChargeInStore`" - "`wrongItem`" - "`returns`" - "`undeliverable`" - "`issueRelatedRefundAndReplacementAmountDescription`" - "`refundFromMerchant`" - "`returnLabelShippingFee`" - "`lumpSumCorrection`" - "`pspFee`" - "`principalRefundDoesNotFit`" - "`principalRefundOrderedWrongItem`" - "`principalRefundQualityNotExpected`" - "`principalRefundBetterPriceFound`" - "`principalRefundNoLongerNeeded`" - "`principalRefundChangedMind`" - "`principalRefundReceivedTooLate`" - "`principalRefundIncorrectItemReceived`" - "`principalRefundDamagedOrDefectiveItem`" - "`principalRefundDidNotMatchDescription`" - "`principalRefundExpiredItem`" '
      type: object
    RepricingRuleRestriction:
      properties:
        floor:
          $ref: '#/components/schemas/RepricingRuleRestrictionBoundary'
          description: The inclusive floor lower bound. The repricing rule only applies when new price >= floor.
        useAutoPricingMinPrice:
          type: boolean
          description: If true, use the AUTO_PRICING_MIN_PRICE offer attribute as the lower bound of the rule. If use_auto_pricing_min_price is true, then only offers with `AUTO_PRICING_MIN_PRICE` existing on the offer will get Repricer treatment, even if a floor value is set on the rule. Also, if use_auto_pricing_min_price is true, the floor restriction will be ignored.
      description: 'Definition of a rule restriction. At least one of the following needs to be true: (1) use_auto_pricing_min_price is true (2) floor.price_delta exists (3) floor.percentage_delta exists If floor.price_delta and floor.percentage_delta are both set on a rule, the highest value will be chosen by the Repricer. In other words, for a product with a price of $50, if the `floor.percentage_delta` is "-10" and the floor.price_delta is "-12", the offer price will only be lowered $5 (10% lower than the original offer price).'
      id: RepricingRuleRestriction
      type: object
    Price:
      properties:
        currency:
          description: The currency of the price.
          type: string
        value:
          description: The price represented as a number.
          type: string
      type: object
      id: Price
    DatafeedsFetchNowResponse:
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedsFetchNowResponse`".'
          type: string
      id: DatafeedsFetchNowResponse
    OrderTrackingSignal:
      properties:
        merchantId:
          format: int64
          description: The Google merchant ID of this order tracking signal. This value is optional. If left unset, the caller's merchant ID is used. You must request access in order to provide data on behalf of another merchant. For more information, see [Submitting Order Tracking Signals](/shopping-content/guides/order-tracking-signals).
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/OrderTrackingSignalLineItemDetails'
          type: array
          description: Information about line items in the order.
        customerShippingFee:
          description: The shipping fee of the order; this value should be set to zero in the case of free shipping.
          $ref: '#/components/schemas/PriceAmount'
        orderCreatedTime:
          description: Required. The time when the order was created on the merchant side. Include the year and timezone string, if available.
          $ref: '#/components/schemas/DateTime'
        deliveryPostalCode:
          description: Required. The delivery postal code, as a continuous string without spaces or dashes, e.g. "95016". This field will be anonymized in returned OrderTrackingSignal creation response.
          type: string
        orderTrackingSignalId:
          format: int64
          description: Output only. The ID that uniquely identifies this order tracking signal.
          readOnly: true
          type: string
        shippingInfo:
          type: array
          description: The shipping information for the order.
          items:
            $ref: '#/components/schemas/OrderTrackingSignalShippingInfo'
        shipmentLineItemMapping:
          type: array
          items:
            $ref: '#/components/schemas/OrderTrackingSignalShipmentLineItemMapping'
          description: The mapping of the line items to the shipment information.
        orderId:
          description: Required. The ID of the order on the merchant side. This field will be hashed in returned OrderTrackingSignal creation response.
          type: string
        deliveryRegionCode:
          description: Required. The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping destination.
          type: string
      description: Represents a merchant trade from which signals are extracted, e.g. shipping.
      id: OrderTrackingSignal
      type: object
    AccountIdentifier:
      id: AccountIdentifier
      properties:
        merchantId:
          type: string
          format: uint64
          description: The merchant account ID, set for individual accounts and subaccounts.
        aggregatorId:
          format: uint64
          type: string
          description: The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).
      type: object
    LiasettingsCustomBatchRequest:
      type: object
      properties:
        entries:
          items:
            $ref: '#/components/schemas/LiasettingsCustomBatchRequestEntry'
          description: The request entries to be processed in the batch.
          type: array
      id: LiasettingsCustomBatchRequest
    CustomAttribute:
      properties:
        value:
          type: string
          description: The value of the attribute.
        groupValues:
          items:
            $ref: '#/components/schemas/CustomAttribute'
          type: array
          description: Subattributes within this attribute group. Exactly one of value or groupValues must be provided.
        name:
          type: string
          description: The name of the attribute. Underscores will be replaced by spaces upon insertion.
      type: object
      id: CustomAttribute
    OrdersShipLineItemsRequest:
      properties:
        shipmentGroupId:
          type: string
          description: ID of the shipment group. Required for orders that use the orderinvoices service.
        shipmentInfos:
          items:
            $ref: '#/components/schemas/OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo'
          description: Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).
          type: array
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderShipmentLineItemShipment'
          description: Line items to ship.
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
      type: object
      id: OrdersShipLineItemsRequest
    LocalinventoryCustomBatchRequest:
      id: LocalinventoryCustomBatchRequest
      type: object
      properties:
        entries:
          items:
            $ref: '#/components/schemas/LocalinventoryCustomBatchRequestEntry'
          type: array
          description: The request entries to be processed in the batch.
    ListCollectionsResponse:
      type: object
      description: Response message for the ListCollections method.
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        resources:
          type: array
          description: The collections listed.
          items:
            $ref: '#/components/schemas/Collection'
      id: ListCollectionsResponse
    OrdersAdvanceTestOrderResponse:
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersAdvanceTestOrderResponse`".'
          type: string
      id: OrdersAdvanceTestOrderResponse
    ReturnAddress:
      type: object
      id: ReturnAddress
      description: Return address resource.
      properties:
        country:
          description: Required. The country of sale where the return address is applicable.
          type: string
        phoneNumber:
          type: string
          description: Required. The merchant's contact phone number regarding the return.
        returnAddressId:
          type: string
          description: Return address ID generated by Google.
        address:
          $ref: '#/components/schemas/ReturnAddressAddress'
          description: Required. The address.
        label:
          description: Required. The user-defined label of the return address. For the default address, use the label "default".
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnAddress`"'
          type: string
    AccountLabel:
      description: Label assigned by CSS domain or CSS group to one of its sub-accounts.
      id: AccountLabel
      properties:
        labelId:
          format: int64
          type: string
          readOnly: true
          description: Output only. The ID of the label.
        labelType:
          description: Output only. The type of this label.
          readOnly: true
          enumDescriptions:
            - Unknown label type.
            - Indicates that the label was created manually.
            - Indicates that the label was created automatically by CSS Center.
          enum:
            - LABEL_TYPE_UNSPECIFIED
            - MANUAL
            - AUTOMATIC
          type: string
        description:
          type: string
          description: The description of this label.
        accountId:
          type: string
          description: Immutable. The ID of account this label belongs to.
          format: int64
        name:
          type: string
          description: The display name of this label.
      type: object
    LiasettingsCustomBatchResponseEntry:
      id: LiasettingsCustomBatchResponseEntry
      properties:
        errors:
          description: A list of errors defined if, and only if, the request failed.
          $ref: '#/components/schemas/Errors'
        gmbAccounts:
          $ref: '#/components/schemas/GmbAccounts'
          description: The list of accessible Business Profiles.
        posDataProviders:
          type: array
          description: The list of POS data providers.
          items:
            $ref: '#/components/schemas/PosDataProviders'
        batchId:
          type: integer
          description: The ID of the request entry to which this entry responds.
          format: uint32
        liaSettings:
          $ref: '#/components/schemas/LiaSettings'
          description: The retrieved or updated Lia settings.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsCustomBatchResponseEntry`"'
      type: object
    DatafeedsCustomBatchRequestEntry:
      type: object
      id: DatafeedsCustomBatchRequestEntry
      description: A batch entry encoding a single non-batch datafeeds request.
      properties:
        method:
          type: string
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`fetchNow`" - "`get`" - "`insert`" - "`update`" '
        datafeed:
          $ref: '#/components/schemas/Datafeed'
          description: The data feed to insert.
        merchantId:
          type: string
          format: uint64
          description: The ID of the managing account.
        batchId:
          format: uint32
          description: An entry ID, unique within the batch request.
          type: integer
        datafeedId:
          type: string
          format: uint64
          description: The ID of the data feed to get, delete or fetch.
    ProductstatusesCustomBatchRequest:
      id: ProductstatusesCustomBatchRequest
      type: object
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/ProductstatusesCustomBatchRequestEntry'
          type: array
    LiasettingsSetPosDataProviderResponse:
      id: LiasettingsSetPosDataProviderResponse
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsSetPosDataProviderResponse`".'
    AccountTaxTaxRule:
      properties:
        shippingTaxed:
          description: If true, shipping charges are also taxed.
          type: boolean
        country:
          description: Country code in which tax is applicable.
          type: string
        ratePercent:
          type: string
          description: Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.
        useGlobalRate:
          type: boolean
          description: Whether the tax rate is taken from a global tax table or specified explicitly.
        locationId:
          description: Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).
          type: string
          format: uint64
      id: AccountTaxTaxRule
      type: object
      description: Tax calculation rule to apply in a state or province (US only).
    RepricingProductReportBuyboxWinningProductStats:
      type: object
      properties:
        buyboxWinsCount:
          type: integer
          description: Number of times this product won the buybox with these rules during this time period.
          format: int32
      description: Stats specific to buybox winning rules for product report.
      id: RepricingProductReportBuyboxWinningProductStats
    LocalinventoryCustomBatchRequestEntry:
      properties:
        productId:
          type: string
          description: The ID of the product for which to update local inventory.
        batchId:
          format: uint32
          description: An entry ID, unique within the batch request.
          type: integer
        localInventory:
          $ref: '#/components/schemas/LocalInventory'
          description: Local inventory of the product.
        method:
          description: 'Method of the batch request entry. Acceptable values are: - "`insert`" '
          type: string
        merchantId:
          type: string
          format: uint64
          description: The ID of the managing account.
      description: Batch entry encoding a single local inventory update request.
      type: object
      id: LocalinventoryCustomBatchRequestEntry
    TestOrderAddress:
      type: object
      id: TestOrderAddress
      properties:
        fullAddress:
          type: array
          description: 'Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States '
          items:
            type: string
        streetAddress:
          items:
            type: string
          description: Street-level part of the address. Use `\n` to add a second line.
          type: array
        country:
          type: string
          description: CLDR country code (for example, "US").
        region:
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        locality:
          type: string
          description: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
        isPostOfficeBox:
          description: Whether the address is a post office box.
          type: boolean
        postalCode:
          description: Postal Code or ZIP (for example, "94043").
          type: string
        recipientName:
          type: string
          description: Name of the recipient.
    AccountsCustomBatchResponseEntry:
      properties:
        batchId:
          format: uint32
          description: The ID of the request entry this entry responds to.
          type: integer
        account:
          description: The retrieved, created, or updated account. Not defined if the method was `delete`, `claimwebsite` or `link`.
          $ref: '#/components/schemas/Account'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsCustomBatchResponseEntry`"'
          type: string
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
      type: object
      id: AccountsCustomBatchResponseEntry
      description: A batch entry encoding a single non-batch accounts response.
    DatafeedstatusesCustomBatchResponseEntry:
      id: DatafeedstatusesCustomBatchResponseEntry
      type: object
      description: A batch entry encoding a single non-batch datafeedstatuses response.
      properties:
        batchId:
          format: uint32
          description: The ID of the request entry this entry responds to.
          type: integer
        datafeedStatus:
          description: The requested data feed status. Defined if and only if the request was successful.
          $ref: '#/components/schemas/DatafeedStatus'
        errors:
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
          $ref: '#/components/schemas/Errors'
    AccountCustomerService:
      properties:
        url:
          description: Customer service URL.
          type: string
        email:
          type: string
          description: Customer service email.
        phoneNumber:
          description: Customer service phone number.
          type: string
      id: AccountCustomerService
      type: object
    OrdersShipLineItemsResponse:
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersShipLineItemsResponse`".'
          type: string
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
      id: OrdersShipLineItemsResponse
    AccountReturnCarrier:
      description: ' The return carrier information. This service is designed for merchants enrolled in the Buy on Google program. '
      id: AccountReturnCarrier
      properties:
        carrierAccountName:
          type: string
          description: Name of the carrier account.
        carrierAccountId:
          readOnly: true
          description: Output only. Immutable. The Google-provided unique carrier ID, used to update the resource.
          type: string
          format: int64
        carrierAccountNumber:
          description: Number of the carrier account.
          type: string
        carrierCode:
          enum:
            - CARRIER_CODE_UNSPECIFIED
            - FEDEX
            - UPS
          type: string
          enumDescriptions:
            - Carrier not specified
            - FedEx carrier
            - UPS carrier
          description: The carrier code enum. Accepts the values FEDEX or UPS.
      type: object
    ProductDeliveryTimeAreaDeliveryTime:
      type: object
      id: ProductDeliveryTimeAreaDeliveryTime
      properties:
        deliveryArea:
          description: Required. The delivery area associated with `deliveryTime` for this product.
          $ref: '#/components/schemas/DeliveryArea'
        deliveryTime:
          $ref: '#/components/schemas/ProductDeliveryTimeAreaDeliveryTimeDeliveryTime'
          description: Required. The delivery time associated with `deliveryArea` for this product.
      description: A pairing of `DeliveryArea` associated with a `DeliveryTime` for this product.
    AccountImageImprovementsSettings:
      properties:
        allowAutomaticImageImprovements:
          type: boolean
          description: Enables automatic image improvements.
      id: AccountImageImprovementsSettings
      description: Settings for the Automatic Image Improvements.
      type: object
    WarehouseCutoffTime:
      id: WarehouseCutoffTime
      properties:
        minute:
          description: Required. Minute of the cutoff time until which an order has to be placed to be processed in the same day by the warehouse. Minute is based on the timezone of warehouse.
          format: int32
          type: integer
        hour:
          type: integer
          description: Required. Hour (24-hour clock) of the cutoff time until which an order has to be placed to be processed in the same day by the warehouse. Hour is based on the timezone of warehouse.
          format: int32
      type: object
    DeliveryAreaPostalCodeRange:
      properties:
        lastPostalCode:
          description: 'A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area (for example [070* - 078*] results in the range [07000 - 07899]). It must have the same length as `firstPostalCode`: if `firstPostalCode` is a postal code then `lastPostalCode` must be a postal code too; if firstPostalCode is a pattern then `lastPostalCode` must be a pattern with the same prefix length. Ignored if not set, then the area is defined as being all the postal codes matching `firstPostalCode`.'
          type: string
        firstPostalCode:
          type: string
          description: 'Required. A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: `"94108"`, `"9410*"`, `"9*"`.'
      description: A range of postal codes that defines the delivery area. Only set `firstPostalCode` when specifying a single postal code.
      id: DeliveryAreaPostalCodeRange
      type: object
    ProductstatusesCustomBatchRequestEntry:
      id: ProductstatusesCustomBatchRequestEntry
      type: object
      description: A batch entry encoding a single non-batch productstatuses request.
      properties:
        batchId:
          format: uint32
          description: An entry ID, unique within the batch request.
          type: integer
        destinations:
          type: array
          description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          items:
            type: string
        method:
          type: string
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
        includeAttributes:
          description: 'Deprecated: Setting this field has no effect and attributes are never included.'
          type: boolean
        productId:
          description: The ID of the product whose status to get.
          type: string
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
    OrdersCreateTestReturnRequest:
      id: OrdersCreateTestReturnRequest
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrdersCustomBatchRequestEntryCreateTestReturnReturnItem'
          description: Returned items.
    OrderPromotionItem:
      properties:
        productId:
          description: '`orders.createtestorder`.'
          type: string
        lineItemId:
          type: string
          description: The line item ID of a product. Do not provide for `orders.createtestorder`.
        quantity:
          type: integer
          format: int32
          description: The quantity of the associated product. Do not provide for `orders.createtestorder`.
        offerId:
          type: string
          description: Required. Offer ID of a product. Only for `orders.createtestorder`.
      type: object
      id: OrderPromotionItem
    RateGroup:
      properties:
        mainTable:
          description: A table defining the rate group, when `singleValue` is not expressive enough. Can only be set if `singleValue` is not set.
          $ref: '#/components/schemas/Table'
        name:
          type: string
          description: Name of the rate group. Optional. If set has to be unique within shipping service.
        singleValue:
          $ref: '#/components/schemas/Value'
          description: The value of the rate group (for example, flat rate $10). Can only be set if `mainTable` and `subtables` are not set.
        applicableShippingLabels:
          description: 'A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required.'
          type: array
          items:
            type: string
        carrierRates:
          description: A list of carrier rates that can be referred to by `mainTable` or `singleValue`.
          type: array
          items:
            $ref: '#/components/schemas/CarrierRate'
        subtables:
          items:
            $ref: '#/components/schemas/Table'
          description: A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set.
          type: array
      id: RateGroup
      type: object
    ShippingsettingsCustomBatchResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsCustomBatchResponse`".'
          type: string
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/ShippingsettingsCustomBatchResponseEntry'
          type: array
      type: object
      id: ShippingsettingsCustomBatchResponse
    OrderreturnsReturnItem:
      properties:
        refund:
          description: Refunds the item.
          $ref: '#/components/schemas/OrderreturnsRefundOperation'
        reject:
          $ref: '#/components/schemas/OrderreturnsRejectOperation'
          description: Rejects the item.
        returnItemId:
          type: string
          description: Unit level ID for the return item. Different units of the same product will have different IDs.
      id: OrderreturnsReturnItem
      type: object
    RepricingRuleCostOfGoodsSaleRule:
      id: RepricingRuleCostOfGoodsSaleRule
      properties:
        percentageDelta:
          format: int32
          description: 'The percent change against the COGS. Ex: 20 would mean to set the adjusted price 1.2X of the COGS data.'
          type: integer
        priceDelta:
          description: The price delta against the COGS. E.g. 2 means $2 more of the COGS.
          type: string
      description: A repricing rule that changes the sale price based on cost of goods sale.
      type: object
    AccountItemUpdates:
      description: Turning on [item updates](https://support.google.com/merchants/answer/3246284) allows Google to automatically update items for you. When item updates are on, Google uses the structured data markup on the website and advanced data extractors to update the price and availability of the items. When the item updates are off, items with mismatched data aren't shown.
      type: object
      id: AccountItemUpdates
      properties:
        effectiveAllowPriceUpdates:
          type: boolean
          description: Output only. The effective value of allow_price_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          readOnly: true
        effectiveAllowStrictAvailabilityUpdates:
          readOnly: true
          type: boolean
          description: Output only. The effective value of allow_strict_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
        accountItemUpdatesSettings:
          $ref: '#/components/schemas/AccountItemUpdatesSettings'
          description: Determines which attributes of the items should be automatically updated. If this field is not present, then the settings will be deleted. If there are no settings for subaccount, they are inherited from aggregator.
        effectiveAllowConditionUpdates:
          description: Output only. The effective value of allow_condition_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          type: boolean
          readOnly: true
        effectiveAllowAvailabilityUpdates:
          type: boolean
          description: Output only. The effective value of allow_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          readOnly: true
    CarrierRate:
      properties:
        carrierService:
          type: string
          description: Carrier service, such as `"ground"` or `"2 days"`. The list of supported services for a carrier can be retrieved through the `getSupportedCarriers` method. Required.
        flatAdjustment:
          description: 'Additive shipping rate modifier. Can be negative. For example `{ "value": "1", "currency" : "USD" }` adds $1 to the rate, `{ "value": "-3", "currency" : "USD" }` removes $3 from the rate. Optional.'
          $ref: '#/components/schemas/Price'
        name:
          description: Name of the carrier rate. Must be unique per rate group. Required.
          type: string
        carrierName:
          type: string
          description: Carrier service, such as `"UPS"` or `"Fedex"`. The list of supported carriers can be retrieved through the `getSupportedCarriers` method. Required.
        originPostalCode:
          description: Shipping origin for this carrier rate. Required.
          type: string
        percentageAdjustment:
          type: string
          description: Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `"5.4"` increases the rate by 5.4%, `"-3"` decreases the rate by 3%. Optional.
      type: object
      id: CarrierRate
    PosSaleResponse:
      properties:
        targetCountry:
          type: string
          description: Required. The CLDR territory code for the item.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posSaleResponse`".'
        saleId:
          type: string
          description: A unique ID to group items from the same sale event.
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
        storeCode:
          type: string
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
        quantity:
          type: string
          format: int64
          description: Required. The relative change of the available quantity. Negative for items returned.
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        contentLanguage:
          type: string
          description: Required. The two-letter ISO 639-1 language code for the item.
        price:
          $ref: '#/components/schemas/Price'
          description: Required. The price of the item.
        gtin:
          type: string
          description: Global Trade Item Number.
      type: object
      id: PosSaleResponse
    ReturnpolicyCustomBatchRequestEntry:
      id: ReturnpolicyCustomBatchRequestEntry
      type: object
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          type: string
          format: uint64
          description: The Merchant Center account ID.
        returnPolicy:
          description: The return policy to submit. This should be set only if the method is `insert`.
          $ref: '#/components/schemas/ReturnPolicy'
        method:
          type: string
          description: 'Method of the batch request entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" '
        returnPolicyId:
          type: string
          description: The return policy ID. This should be set only if the method is `delete` or `get`.
    HolidayCutoff:
      id: HolidayCutoff
      properties:
        deadlineTimezone:
          description: Timezone identifier for the deadline hour (for example, "Europe/Zurich"). List of identifiers. Required.
          type: string
        visibleFromDate:
          type: string
          description: Date on which the deadline will become visible to consumers in ISO 8601 format. For example, "2016-10-31" for 31st October 2016. Required.
        deadlineHour:
          format: uint32
          description: 'Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.'
          type: integer
        deadlineDate:
          type: string
          description: Date of the order deadline, in ISO 8601 format. For example, "2016-11-29" for 29th November 2016. Required.
        holidayId:
          description: Unique identifier for the holiday. Required.
          type: string
      type: object
    ProductsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          type: array
          items:
            $ref: '#/components/schemas/ProductsCustomBatchRequestEntry'
      type: object
      id: ProductsCustomBatchRequest
    ReturnPricingInfo:
      type: object
      properties:
        totalRefundedAmount:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Total amount already refunded by the merchant. It includes all types of refunds (items, shipping, etc.) Not provided if no refund has been applied yet.
        refundableItemsTotalAmount:
          description: Total amount that can be refunded for the items in this return. It represents the total amount received by the merchant for the items, after applying merchant coupons.
          $ref: '#/components/schemas/MonetaryAmount'
        chargeReturnShippingFee:
          description: Default option for whether merchant should charge the customer for return shipping costs, based on customer selected return reason and merchant's return policy for the items being returned.
          type: boolean
        refundableShippingAmount:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Maximum amount that can be refunded for the original shipping fee.
        maxReturnShippingFee:
          description: Maximum return shipping costs that may be charged to the customer depending on merchant's assessment of the return reason and the merchant's return policy for the items being returned.
          $ref: '#/components/schemas/MonetaryAmount'
      id: ReturnPricingInfo
    OrderreturnsListResponse:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/MerchantOrderReturn'
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreturnsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
      id: OrderreturnsListResponse
      type: object
    AccountstatusesCustomBatchResponse:
      id: AccountstatusesCustomBatchResponse
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountstatusesCustomBatchResponse`".'
        entries:
          items:
            $ref: '#/components/schemas/AccountstatusesCustomBatchResponseEntry'
          type: array
          description: The result of the execution of the batch requests.
    CustomerReturnReason:
      type: object
      properties:
        reasonCode:
          description: 'Code of the return reason. Acceptable values are: - "`betterPriceFound`" - "`changedMind`" - "`damagedOrDefectiveItem`" - "`didNotMatchDescription`" - "`doesNotFit`" - "`expiredItem`" - "`incorrectItemReceived`" - "`noLongerNeeded`" - "`notSpecified`" - "`orderedWrongItem`" - "`other`" - "`qualityNotExpected`" - "`receivedTooLate`" - "`undeliverable`" '
          type: string
        description:
          type: string
          description: Description of the reason.
      id: CustomerReturnReason
    LiasettingsListResponse:
      id: LiasettingsListResponse
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/LiaSettings'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsListResponse`".'
          type: string
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of LIA settings.
    LiaCountrySettings:
      type: object
      properties:
        posDataProvider:
          $ref: '#/components/schemas/LiaPosDataProvider'
          description: The POS data provider linked with this country.
        about:
          description: The settings for the About page.
          $ref: '#/components/schemas/LiaAboutPageSettings'
        inventory:
          description: LIA inventory verification settings.
          $ref: '#/components/schemas/LiaInventorySettings'
        onDisplayToOrder:
          $ref: '#/components/schemas/LiaOnDisplayToOrderSettings'
          description: LIA "On Display To Order" settings.
        storePickupActive:
          type: boolean
          description: The status of the "Store pickup" feature.
        country:
          type: string
          description: Required. CLDR country code (for example, "US").
        hostedLocalStorefrontActive:
          description: The status of the "Merchant hosted local storefront" feature.
          type: boolean
      id: LiaCountrySettings
    AccountGoogleMyBusinessLink:
      properties:
        status:
          type: string
          description: 'Status of the link between this Merchant Center account and the Business Profile. Acceptable values are: - "`active`" - "`pending`" '
        gmbAccountId:
          type: string
          description: The ID of the Business Profile. If this is provided, then `gmbEmail` is ignored. The value of this field should match the `accountId` used by the Business Profile API.
        gmbEmail:
          description: The Business Profile email address of a specific account within a Business Profile. A sample account within a Business Profile could be a business account with set of locations, managed under the Business Profile.
          type: string
      id: AccountGoogleMyBusinessLink
      type: object
    OrderLineItemShippingDetailsMethod:
      type: object
      properties:
        carrier:
          description: The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values.
          type: string
        methodName:
          description: Required. The name of the shipping method.
          type: string
        maxDaysInTransit:
          description: Required. Maximum transit time.
          type: integer
          format: uint32
        minDaysInTransit:
          type: integer
          format: uint32
          description: Required. Minimum transit time.
      id: OrderLineItemShippingDetailsMethod
    OrderinvoicesCreateChargeInvoiceResponse:
      id: OrderinvoicesCreateChargeInvoiceResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderinvoicesCreateChargeInvoiceResponse`".'
          type: string
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
      type: object
    ShippingsettingsGetSupportedCarriersResponse:
      type: object
      id: ShippingsettingsGetSupportedCarriersResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsGetSupportedCarriersResponse`".'
        carriers:
          type: array
          items:
            $ref: '#/components/schemas/CarriersCarrier'
          description: A list of supported carriers. May be empty.
    PriceAmount:
      type: object
      properties:
        value:
          type: string
          description: The price represented as a number.
        currency:
          description: The currency of the price.
          type: string
      id: PriceAmount
      description: The price represented as a number and currency.
    RequestPhoneVerificationResponse:
      id: RequestPhoneVerificationResponse
      description: Response message for the RequestPhoneVerification method.
      type: object
      properties:
        verificationId:
          type: string
          description: The verification ID to use in subsequent calls to `verifyphonenumber`.
    TransitTableTransitTimeRowTransitTimeValue:
      id: TransitTableTransitTimeRowTransitTimeValue
      type: object
      properties:
        minTransitTimeInDays:
          description: Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.
          format: uint32
          type: integer
        maxTransitTimeInDays:
          description: Must be greater than or equal to `minTransitTimeInDays`.
          type: integer
          format: uint32
    AccountsUpdateLabelsResponse:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsUpdateLabelsResponse`".'
      type: object
      id: AccountsUpdateLabelsResponse
    OrderLineItemShippingDetails:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/OrderLineItemShippingDetailsMethod'
          description: Required. Details of the shipping method.
        pickupPromiseInMinutes:
          format: uint32
          type: integer
          description: The promised time in minutes in which the order will be ready for pickup. This only applies to buy-online-pickup-in-store same-day order.
        type:
          type: string
          description: 'Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - "`delivery`" - "`pickup`" '
        shipByDate:
          type: string
          description: Required. The ship by date, in ISO 8601 format.
        deliverByDate:
          type: string
          description: Required. The delivery by date, in ISO 8601 format.
      id: OrderLineItemShippingDetails
    ProductViewItemIssueItemIssueSeverity:
      description: Severity of an issue per destination in a region, and aggregated severity.
      id: ProductViewItemIssueItemIssueSeverity
      type: object
      properties:
        aggregatedSeverity:
          type: string
          enumDescriptions:
            - Undefined Issue severity.
            - Issue disapproves the product in at least one of the selected destinations.
            - Issue demotes the product in all selected destinations it affects.
            - Issue resolution is `PENDING_PROCESSING`.
          description: Severity of an issue aggregated for destination.
          enum:
            - AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED
            - DISAPPROVED
            - DEMOTED
            - PENDING
        severityPerDestination:
          items:
            $ref: '#/components/schemas/ProductViewItemIssueIssueSeverityPerDestination'
          description: Item issue severity for every destination.
          type: array
    OrderCancellation:
      properties:
        reason:
          description: 'The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Buy on Google until you make an update to that product. This won''t affect your Shopping ads. Acceptable values are: - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`customerCanceled`" - "`customerInitiatedCancel`" - "`customerSupportRequested`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceError`" - "`returnRefundAbuse`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`failedToCaptureFunds`" '
          type: string
        creationDate:
          description: Date on which the cancellation has been created, in ISO 8601 format.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        quantity:
          type: integer
          format: uint32
          description: The quantity that was canceled.
        actor:
          type: string
          description: 'The actor that created the cancellation. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
      type: object
      id: OrderCancellation
    RegionalinventoryCustomBatchResponseEntry:
      type: object
      properties:
        errors:
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
          $ref: '#/components/schemas/Errors'
        regionalInventory:
          $ref: '#/components/schemas/RegionalInventory'
          description: Price and availability of the product.
        batchId:
          type: integer
          format: uint32
          description: The ID of the request entry this entry responds to.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#regionalinventoryCustomBatchResponseEntry`".'
      description: A batch entry encoding a single non-batch regional inventory response.
      id: RegionalinventoryCustomBatchResponseEntry
    AccountsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounts request.
      id: AccountsCustomBatchRequestEntry
      properties:
        labelIds:
          items:
            format: uint64
            type: string
          description: Label IDs for the 'updatelabels' request.
          type: array
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`claimWebsite`" - "`delete`" - "`get`" - "`insert`" - "`link`" - "`update`" '
          type: string
        account:
          $ref: '#/components/schemas/Account'
          description: The account to create or update. Only defined if the method is `insert` or `update`.
        accountId:
          format: uint64
          description: The ID of the targeted account. Only defined if the method is not `insert`.
          type: string
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
        linkRequest:
          description: Details about the `link` request.
          $ref: '#/components/schemas/AccountsCustomBatchRequestEntryLinkRequest'
        overwrite:
          description: Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict.
          type: boolean
        batchId:
          type: integer
          description: An entry ID, unique within the batch request.
          format: uint32
        force:
          description: Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.
          type: boolean
        view:
          type: string
          description: Controls which fields are visible. Only applicable if the method is 'get'.
      type: object
    OrdersRejectReturnLineItemResponse:
      type: object
      id: OrdersRejectReturnLineItemResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersRejectReturnLineItemResponse`".'
          type: string
        executionStatus:
          type: string
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
    RepricingRuleEligibleOfferMatcherStringMatcher:
      type: object
      properties:
        strAttributes:
          items:
            type: string
          description: String attributes, as long as such attribute of an offer is one of the string attribute values, the offer is considered as passing the matcher. The string matcher checks an offer for inclusivity in the string attributes, not equality. Only literal string matching is supported, no regex.
          type: array
      description: Matcher by string attributes.
      id: RepricingRuleEligibleOfferMatcherStringMatcher
    OrderreturnsRejectOperation:
      id: OrderreturnsRejectOperation
      properties:
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          type: string
          description: The explanation of the reason.
      type: object
    AccountYouTubeChannelLink:
      properties:
        channelId:
          type: string
          description: Channel ID.
        status:
          type: string
          description: 'Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in YT Creator Studio or `pending` if it''s pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it''s still pending or with status `pending` when it''s already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.'
      id: AccountYouTubeChannelLink
      type: object
    ProductstatusesCustomBatchResponseEntry:
      id: ProductstatusesCustomBatchResponseEntry
      properties:
        errors:
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
          $ref: '#/components/schemas/Errors'
        productStatus:
          description: The requested product status. Only defined if the request was successful.
          $ref: '#/components/schemas/ProductStatus'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productstatusesCustomBatchResponseEntry`"'
        batchId:
          format: uint32
          type: integer
          description: The ID of the request entry this entry responds to.
      description: A batch entry encoding a single non-batch productstatuses response.
      type: object
    ReturnaddressCustomBatchRequest:
      type: object
      id: ReturnaddressCustomBatchRequest
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ReturnaddressCustomBatchRequestEntry'
          description: The request entries to be processed in the batch.
    PubsubNotificationSettings:
      properties:
        cloudTopicName:
          type: string
          description: Cloud pub/sub topic to which notifications are sent (read-only).
        registeredEvents:
          items:
            type: string
          type: array
          description: 'List of event types. Acceptable values are: - "`orderPendingShipment`" '
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#pubsubNotificationSettings`"'
      description: Settings for Pub/Sub notifications, all methods require that the caller is a direct user of the merchant center account.
      id: PubsubNotificationSettings
      type: object
    DatafeedFetchSchedule:
      id: DatafeedFetchSchedule
      description: The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.
      properties:
        minuteOfHour:
          format: uint32
          description: The minute of the hour the feed file should be fetched (0-59). Read-only.
          type: integer
        weekday:
          type: string
          description: 'The day of the week the feed file should be fetched. Acceptable values are: - "`monday`" - "`tuesday`" - "`wednesday`" - "`thursday`" - "`friday`" - "`saturday`" - "`sunday`" '
        dayOfMonth:
          type: integer
          description: The day of the month the feed file should be fetched (1-31).
          format: uint32
        paused:
          type: boolean
          description: Whether the scheduled fetch is paused or not.
        username:
          description: An optional user name for fetch_url.
          type: string
        fetchUrl:
          type: string
          description: The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.
        hour:
          description: The hour of the day the feed file should be fetched (0-23).
          format: uint32
          type: integer
        timeZone:
          type: string
          description: Time zone used for schedule. UTC by default. For example, "America/Los_Angeles".
        password:
          description: An optional password for fetch_url.
          type: string
      type: object
    CollectionFeaturedProduct:
      type: object
      properties:
        'y':
          type: number
          format: float
          description: Required. Y-coordinate of the product callout on the Shoppable Image.
        offerId:
          type: string
          description: The unique identifier for the product item.
        x:
          type: number
          description: Required. X-coordinate of the product callout on the Shoppable Image.
          format: float
      id: CollectionFeaturedProduct
      description: The message for FeaturedProduct. [FeaturedProduct](https://support.google.com/merchants/answer/9703736)
    ProductShippingDimension:
      id: ProductShippingDimension
      properties:
        unit:
          type: string
          description: The unit of value.
        value:
          format: double
          type: number
          description: The dimension of the product used to calculate the shipping cost of the item.
      type: object
    PaymentServiceProviderLinkInfo:
      id: PaymentServiceProviderLinkInfo
      description: Additional information required for PAYMENT_SERVICE_PROVIDER link type.
      properties:
        externalAccountId:
          type: string
          description: The id used by the third party service provider to identify the merchant.
        externalAccountBusinessCountry:
          description: The business country of the merchant account as identified by the third party service provider.
          type: string
      type: object
    InapplicabilityDetails:
      type: object
      description: Map of inapplicability details.
      properties:
        inapplicableCount:
          type: string
          description: Count of this inapplicable reason code.
          format: int64
        inapplicableReason:
          enumDescriptions:
            - Default value. Should not be used.
            - The rule set for this product cannot beat the buybox winner.
            - This product can already win the buybox without rule.
            - Another rule of the same type takes precedence over this one.
            - Another rule of a different type takes precedence over this one.
            - The rule restrictions are not met. For example, this may be the case if the calculated rule price is lower than floor price in the restriction.
            - The reason is not categorized to any known reason.
            - The auto_pricing_min_price is invalid. For example, it is missing or < 0.
            - The floor defined in the rule is invalid. For example, it has the wrong sign which results in a floor < 0.
          enum:
            - INAPPLICABLE_REASON_UNSPECIFIED
            - CANNOT_BEAT_BUYBOX_WINNER
            - ALREADY_WINNING_BUYBOX
            - TRIUMPHED_OVER_BY_SAME_TYPE_RULE
            - TRIUMPHED_OVER_BY_OTHER_RULE_ON_OFFER
            - RESTRICTIONS_NOT_MET
            - UNCATEGORIZED
            - INVALID_AUTO_PRICE_MIN
            - INVALID_FLOOR_CONFIG
          type: string
          description: Reason code this rule was not applicable.
      id: InapplicabilityDetails
    PromotionPromotionStatusPromotionIssue:
      type: object
      properties:
        code:
          type: string
          description: Code of the issue.
        detail:
          description: Explanation of the issue.
          type: string
      id: PromotionPromotionStatusPromotionIssue
      description: The issue associated with the promotion.
    Promotion:
      properties:
        storeApplicability:
          enum:
            - STORE_APPLICABILITY_UNSPECIFIED
            - ALL_STORES
            - SPECIFIC_STORES
          enumDescriptions:
            - Which store codes the promotion applies to is unknown.
            - Promotion applies to all stores.
            - Promotion applies to only the specified stores.
          type: string
          description: Whether the promotion applies to all stores, or only specified stores. Local Inventory ads promotions throw an error if no store applicability is included. An INVALID_ARGUMENT error is thrown if store_applicability is set to ALL_STORES and store_code or score_code_exclusion is set to a value.
        storeCodeExclusion:
          type: array
          items:
            type: string
          description: Store codes to exclude for the promotion.
        itemIdExclusion:
          description: Product filter by item ID exclusion for the promotion.
          items:
            type: string
          type: array
        promotionDestinationIds:
          items:
            type: string
          type: array
          description: Destination ID for the promotion.
        brand:
          type: array
          description: Product filter by brand for the promotion.
          items:
            type: string
        orderLimit:
          format: int32
          description: Order limit for the promotion.
          type: integer
        freeGiftItemId:
          description: Free gift item ID for the promotion.
          type: string
        offerType:
          enumDescriptions:
            - Unknown offer type.
            - Offer type without a code.
            - Offer type with a code.
          description: Required. Type of the promotion.
          enum:
            - OFFER_TYPE_UNSPECIFIED
            - NO_CODE
            - GENERIC_CODE
          type: string
        limitValue:
          $ref: '#/components/schemas/PriceAmount'
          description: Maximum purchase value for the promotion.
        promotionStatus:
          description: Output only. The current status of the promotion.
          $ref: '#/components/schemas/PromotionPromotionStatus'
          readOnly: true
        couponValueType:
          enumDescriptions:
            - Indicates that the coupon value type is unspecified.
            - Money off coupon value type.
            - Percent off coupon value type.
            - Buy M quantity, get N money off coupon value type. `buy_this_quantity` and `get_this_quantity` must be present. `money_off_amount` must also be present.
            - Buy M quantity, get N percent off coupon value type. `buy_this_quantity` and `get_this_quantity` must be present. `percent_off_percentage` must also be present.
            - Buy M quantity, get money off. `buy_this_quantity` and `money_off_amount` must be present.
            - Buy M quantity, get money off. `buy_this_quantity` and `percent_off_percentage` must be present.
            - Free gift with description only.
            - Free gift with value (description is optional).
            - Free gift with item ID (description is optional).
            - Standard free shipping coupon value type.
            - Overnight free shipping coupon value type.
            - Two day free shipping coupon value type.
          description: Required. Coupon value type for the promotion.
          type: string
          enum:
            - COUPON_VALUE_TYPE_UNSPECIFIED
            - MONEY_OFF
            - PERCENT_OFF
            - BUY_M_GET_N_MONEY_OFF
            - BUY_M_GET_N_PERCENT_OFF
            - BUY_M_GET_MONEY_OFF
            - BUY_M_GET_PERCENT_OFF
            - FREE_GIFT
            - FREE_GIFT_WITH_VALUE
            - FREE_GIFT_WITH_ITEM_ID
            - FREE_SHIPPING_STANDARD
            - FREE_SHIPPING_OVERNIGHT
            - FREE_SHIPPING_TWO_DAY
        promotionDisplayTimePeriod:
          $ref: '#/components/schemas/TimePeriod'
          description: '`TimePeriod` representation of the promotion''s display dates.'
        contentLanguage:
          type: string
          description: Required. The content language used as part of the unique identifier. `en` content language is available for all target countries. `fr` content language is available for `CA` and `FR` target countries, and `de` content language is available for `DE` target country.
        itemGroupId:
          description: Product filter by item group ID for the promotion.
          items:
            type: string
          type: array
        freeGiftDescription:
          description: Free gift description for the promotion.
          type: string
        moneyBudget:
          $ref: '#/components/schemas/PriceAmount'
          description: Cost cap for the promotion.
        promotionEffectiveTimePeriod:
          description: Required. `TimePeriod` representation of the promotion's effective dates.
          $ref: '#/components/schemas/TimePeriod'
        storeCode:
          type: array
          items:
            type: string
          description: Store codes to include for the promotion.
        shippingServiceNames:
          items:
            type: string
          description: Shipping service names for the promotion.
          type: array
        redemptionChannel:
          items:
            type: string
            enum:
              - REDEMPTION_CHANNEL_UNSPECIFIED
              - IN_STORE
              - ONLINE
            enumDescriptions:
              - Indicates that the channel is unspecified.
              - Indicates that the channel is in store.
              - Indicates that the channel is online.
          description: Required. Redemption channel for the promotion. At least one channel is required.
          type: array
        targetCountry:
          type: string
          description: Required. The target country used as part of the unique identifier. Can be `AU`, `CA`, `DE`, `FR`, `GB`, `IN` or `US`.
        productApplicability:
          enum:
            - PRODUCT_APPLICABILITY_UNSPECIFIED
            - ALL_PRODUCTS
            - SPECIFIC_PRODUCTS
          description: Required. Applicability of the promotion to either all products or only specific products.
          enumDescriptions:
            - Which products the promotion applies to is unknown.
            - Applicable to all products.
            - Applicable to only a single product or list of products.
          type: string
        genericRedemptionCode:
          description: Generic redemption code for the promotion. To be used with the `offerType` field.
          type: string
        percentOff:
          description: The percentage discount offered in the promotion.
          format: int32
          type: integer
        productType:
          description: Product filter by product type for the promotion.
          type: array
          items:
            type: string
        id:
          readOnly: true
          description: Required. Output only. The REST promotion ID to uniquely identify the promotion. Content API methods that operate on promotions take this as their `promotionId` parameter. The REST ID for a promotion is of the form channel:contentLanguage:targetCountry:promotionId The `channel` field has a value of `"online"`, `"in_store"`, or `"online_in_store"`.
          type: string
        minimumPurchaseQuantity:
          description: Minimum purchase quantity for the promotion.
          format: int32
          type: integer
        itemGroupIdExclusion:
          type: array
          items:
            type: string
          description: Product filter by item group ID exclusion for the promotion.
        limitQuantity:
          type: integer
          description: Maximum purchase quantity for the promotion.
          format: int32
        promotionDisplayDates:
          type: string
          description: String representation of the promotion display dates. Deprecated. Use `promotion_display_time_period` instead.
        brandExclusion:
          description: Product filter by brand exclusion for the promotion.
          items:
            type: string
          type: array
        itemId:
          description: Product filter by item ID for the promotion.
          type: array
          items:
            type: string
        longTitle:
          description: Required. Long title for the promotion.
          type: string
        promotionEffectiveDates:
          type: string
          description: String representation of the promotion effective dates. Deprecated. Use `promotion_effective_time_period` instead.
        getThisQuantityDiscounted:
          description: The number of items discounted in the promotion.
          type: integer
          format: int32
        moneyOffAmount:
          $ref: '#/components/schemas/PriceAmount'
          description: The money off amount offered in the promotion.
        promotionId:
          description: Required. The user provided promotion ID to uniquely identify the promotion.
          type: string
        promotionUrl:
          type: string
          description: URL to the page on the merchant's site where the promotion shows. Local Inventory ads promotions throw an error if no promo url is included. URL is used to confirm that the promotion is valid and can be redeemed.
        minimumPurchaseAmount:
          $ref: '#/components/schemas/PriceAmount'
          description: Minimum purchase amount for the promotion.
        productTypeExclusion:
          description: Product filter by product type exclusion for the promotion.
          type: array
          items:
            type: string
        freeGiftValue:
          $ref: '#/components/schemas/PriceAmount'
          description: Free gift value for the promotion.
      type: object
      id: Promotion
      description: Represents a promotion. See the following articles for more details. * [Promotions feed specification](https://support.google.com/merchants/answer/2906014) * [Local promotions feed specification](https://support.google.com/merchants/answer/10146130) * [Promotions on Buy on Google product data specification](https://support.google.com/merchants/answer/9173673)
    OrderPickupDetailsCollector:
      id: OrderPickupDetailsCollector
      properties:
        name:
          description: Name of the person picking up the shipment.
          type: string
        phoneNumber:
          description: Phone number of the person picking up the shipment.
          type: string
      type: object
    AccountsCustomBatchRequestEntryLinkRequest:
      type: object
      properties:
        linkType:
          type: string
          description: 'Type of the link between the two accounts. Acceptable values are: - "`channelPartner`" - "`eCommercePlatform`" - "`paymentServiceProvider`" '
        linkedAccountId:
          description: The ID of the linked account.
          type: string
        services:
          items:
            type: string
          type: array
          description: 'Provided services. Acceptable values are: - "`shoppingAdsProductManagement`" - "`shoppingActionsProductManagement`" - "`shoppingActionsOrderManagement`" - "`paymentProcessing`" '
        action:
          description: 'Action to perform for this link. The `"request"` action is only available to select merchants. Acceptable values are: - "`approve`" - "`remove`" - "`request`" '
          type: string
      id: AccountsCustomBatchRequestEntryLinkRequest
    Warehouse:
      description: A fulfillment warehouse, which stores and handles inventory.
      properties:
        handlingDays:
          format: int64
          description: Required. The number of days it takes for this warehouse to pack up and ship an item. This is on the warehouse level, but can be overridden on the offer level based on the attributes of an item.
          type: string
        name:
          description: Required. The name of the warehouse. Must be unique within account.
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Address'
          description: Required. Shipping address of the warehouse.
        cutoffTime:
          description: Required. The latest time of day that an order can be accepted and begin processing. Later orders will be processed in the next day. The time is based on the warehouse postal code.
          $ref: '#/components/schemas/WarehouseCutoffTime'
        businessDayConfig:
          description: Business days of the warehouse. If not set, will be Monday to Friday by default.
          $ref: '#/components/schemas/BusinessDayConfig'
      type: object
      id: Warehouse
    OrdersCustomBatchRequestEntryRefundItemItem:
      type: object
      properties:
        quantity:
          description: The number of products that are refunded.
          type: integer
          format: int32
        fullRefund:
          description: If true, the full item will be refunded. If this is true, amount shouldn't be provided and will be ignored.
          type: boolean
        lineItemId:
          type: string
          description: The ID of the line item. Either lineItemId or productId is required.
        amount:
          $ref: '#/components/schemas/MonetaryAmount'
          description: The total amount that is refunded. (for example, refunding $5 each for 2 products should be done by setting quantity to 2 and amount to 10$) In case of multiple refunds, this should be the amount you currently want to refund to the customer.
        productId:
          description: The ID of the product. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
      id: OrdersCustomBatchRequestEntryRefundItemItem
    Weight:
      id: Weight
      properties:
        value:
          type: string
          description: Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.
        unit:
          type: string
          description: 'Required. The weight unit. Acceptable values are: - "`kg`" - "`lb`" '
      type: object
    TestOrderDeliveryDetails:
      id: TestOrderDeliveryDetails
      properties:
        isScheduledDelivery:
          description: Whether the order is scheduled delivery order.
          type: boolean
        phoneNumber:
          description: The phone number of the person receiving the delivery.
          type: string
        address:
          description: The delivery address
          $ref: '#/components/schemas/TestOrderAddress'
      type: object
    PostalCodeRange:
      id: PostalCodeRange
      type: object
      properties:
        postalCodeRangeBegin:
          description: 'A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `"94108"`, `"9410*"`, `"9*"`. Required.'
          type: string
        postalCodeRangeEnd:
          description: 'A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`.'
          type: string
    PriceInsights:
      id: PriceInsights
      type: object
      description: Price Insights fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceInsightsProductView`. https://support.google.com/merchants/answer/11916926
      properties:
        predictedImpressionsChangeFraction:
          type: number
          description: The predicted change in impressions as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in impressions.
          format: double
        predictedMonthlyGrossProfitChangeCurrencyCode:
          type: string
          description: The predicted monthly gross profit change currency (ISO 4217 code).
        suggestedPriceMicros:
          type: string
          description: The latest suggested price in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) for the product.
          format: int64
        predictedMonthlyGrossProfitChangeMicros:
          format: int64
          type: string
          description: The predicted change in gross profit in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) after introducing the suggested price for a month compared to current active price.
        suggestedPriceCurrencyCode:
          description: The suggested price currency (ISO 4217 code).
          type: string
        predictedClicksChangeFraction:
          format: double
          description: The predicted change in clicks as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in clicks.
          type: number
        predictedConversionsChangeFraction:
          description: The predicted change in conversions as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in conversions).
          type: number
          format: double
        predictedGrossProfitChangeFraction:
          format: double
          type: number
          description: The predicted change in gross profit as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in gross profit.
    OrdersGetByMerchantOrderIdResponse:
      id: OrdersGetByMerchantOrderIdResponse
      properties:
        order:
          description: The requested order.
          $ref: '#/components/schemas/Order'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersGetByMerchantOrderIdResponse`".'
          type: string
      type: object
    CollectionStatus:
      properties:
        lastUpdateDate:
          description: 'Date on which the collection has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"'
          type: string
        collectionLevelIssuses:
          items:
            $ref: '#/components/schemas/CollectionStatusItemLevelIssue'
          description: A list of all issues associated with the collection.
          type: array
        destinationStatuses:
          items:
            $ref: '#/components/schemas/CollectionStatusDestinationStatus'
          type: array
          description: The intended destinations for the collection.
        id:
          type: string
          description: Required. The ID of the collection for which status is reported.
        creationDate:
          type: string
          description: 'Date on which the collection has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"'
      type: object
      description: The collectionstatus message.
      id: CollectionStatus
    ShippingsettingsCustomBatchRequest:
      type: object
      id: ShippingsettingsCustomBatchRequest
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/ShippingsettingsCustomBatchRequestEntry'
          type: array
    ReturnShipment:
      properties:
        shipmentId:
          type: string
          description: Shipment ID generated by Google.
        state:
          type: string
          description: 'State of the shipment. Acceptable values are: - "`completed`" - "`new`" - "`shipped`" - "`undeliverable`" - "`pending`" '
        deliveryDate:
          type: string
          description: The date of delivery of the shipment, in ISO 8601 format.
        returnMethodType:
          description: 'Type of the return method. Acceptable values are: - "`byMail`" - "`contactCustomerSupport`" - "`returnless`" - "`inStore`" '
          type: string
        shippingDate:
          type: string
          description: The date of shipping of the shipment, in ISO 8601 format.
        creationDate:
          type: string
          description: The date of creation of the shipment, in ISO 8601 format.
        shipmentTrackingInfos:
          items:
            $ref: '#/components/schemas/ShipmentTrackingInfo'
          description: Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially.
          type: array
      id: ReturnShipment
      type: object
    PosDataProvidersPosDataProvider:
      type: object
      id: PosDataProvidersPosDataProvider
      properties:
        fullName:
          type: string
          description: The full name of this POS data Provider.
        displayName:
          description: The display name of Pos data Provider.
          type: string
        providerId:
          description: The ID of the account.
          type: string
          format: uint64
    OrdersRefundItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersRefundItemResponse`".'
          type: string
      id: OrdersRefundItemResponse
      type: object
    AccountStatus:
      id: AccountStatus
      type: object
      description: The status of an account, that is, information about its products, which is computed offline and not returned immediately at insertion time.
      properties:
        accountManagement:
          type: string
          description: 'How the account is managed. Acceptable values are: - "`manual`" - "`automatic`" '
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountStatus`"'
          type: string
        accountLevelIssues:
          items:
            $ref: '#/components/schemas/AccountStatusAccountLevelIssue'
          type: array
          description: A list of account level issues.
        products:
          type: array
          description: List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.
          items:
            $ref: '#/components/schemas/AccountStatusProducts'
        accountId:
          description: The ID of the account for which the status is reported.
          type: string
        websiteClaimed:
          description: Whether the account's website is claimed or not.
          type: boolean
    OrderreportsListTransactionsResponse:
      properties:
        nextPageToken:
          description: The token for the retrieval of the next page of transactions.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreportsListTransactionsResponse`".'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/OrderReportTransaction'
          description: The list of transactions.
      id: OrderreportsListTransactionsResponse
      type: object
    Order:
      description: Order. Production access (all methods) requires the order manager role. Sandbox access does not.
      properties:
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/OrderShipment'
          description: Shipments of the order.
        lineItems:
          description: Line items that are ordered.
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItem'
        shippingCostTax:
          $ref: '#/components/schemas/Price'
          description: The tax for the total shipping cost.
        merchantId:
          format: uint64
          type: string
        deliveryDetails:
          description: Delivery details for shipments of type `delivery`.
          $ref: '#/components/schemas/OrderDeliveryDetails'
        placedDate:
          description: The date when the order was placed, in ISO 8601 format.
          type: string
        billingAddress:
          $ref: '#/components/schemas/OrderAddress'
          description: The billing address.
        annotations:
          description: List of key-value pairs that are attached to a given order.
          type: array
          items:
            $ref: '#/components/schemas/OrderOrderAnnotation'
        status:
          description: 'The status of the order. Acceptable values are: - "`canceled`" - "`delivered`" - "`inProgress`" - "`partiallyDelivered`" - "`partiallyReturned`" - "`partiallyShipped`" - "`pendingShipment`" - "`returned`" - "`shipped`" '
          type: string
        acknowledged:
          description: Whether the order was acknowledged.
          type: boolean
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#order`"'
          type: string
        paymentStatus:
          description: 'The status of the payment. Acceptable values are: - "`paymentCaptured`" - "`paymentRejected`" - "`paymentSecured`" - "`pendingAuthorization`" '
          type: string
        pickupDetails:
          description: Pickup details for shipments of type `pickup`.
          $ref: '#/components/schemas/OrderPickupDetails'
        promotions:
          type: array
          description: 'Promotions associated with the order. To determine which promotions apply to which products, check the `Promotions[].appliedItems[].lineItemId` field against the `LineItems[].id` field for each promotion. If a promotion is applied to more than 1 offerId, divide the discount value by the number of affected offers to determine how much discount to apply to each offerId. Examples: 1. To calculate price paid by the customer for a single line item including the discount: For each promotion, subtract the `LineItems[].adjustments[].priceAdjustment.value` amount from the `LineItems[].Price.value`. 2. To calculate price paid by the customer for a single line item including the discount in case of multiple quantity: For each promotion, divide the `LineItems[].adjustments[].priceAdjustment.value` by the quantity of products then subtract the resulting value from the `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here.'
          items:
            $ref: '#/components/schemas/OrderPromotion'
        netPriceAmount:
          description: The net amount for the order (price part). For example, if an order was originally for $100 and a refund was issued for $20, the net amount will be $80.
          $ref: '#/components/schemas/Price'
        netTaxAmount:
          $ref: '#/components/schemas/Price'
          description: The net amount for the order (tax part). Note that in certain cases due to taxable base adjustment `netTaxAmount` might not match to a sum of tax field across all lineItems and refunds.
        id:
          type: string
          description: The REST ID of the order. Globally unique.
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/OrderRefund'
          description: Refunds for the order.
        merchantOrderId:
          description: Merchant-provided ID of the order.
          type: string
        customer:
          $ref: '#/components/schemas/OrderCustomer'
          description: The details of the customer who placed the order.
        taxCollector:
          type: string
          description: 'The party responsible for collecting and remitting taxes. Acceptable values are: - "`marketplaceFacilitator`" - "`merchant`" '
        shippingCost:
          description: The total cost of shipping for all items.
          $ref: '#/components/schemas/Price'
      type: object
      id: Order
    ReturnpolicyCustomBatchRequest:
      properties:
        entries:
          type: array
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/ReturnpolicyCustomBatchRequestEntry'
      id: ReturnpolicyCustomBatchRequest
      type: object
    OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails:
      properties:
        scheduledDate:
          type: string
          description: The date a shipment is scheduled for delivery, in ISO 8601 format.
        carrierPhoneNumber:
          description: The phone number of the carrier fulfilling the delivery. The phone number should be formatted as the international notation in
          type: string
      id: OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails
      type: object
      description: ScheduledDeliveryDetails used to update the scheduled delivery order.
    AccountTax:
      id: AccountTax
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/AccountTaxTaxRule'
          description: Tax rules. Updating the tax rules will enable "US" taxes (not reversible). Defining no rules is equivalent to not charging tax at all.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountTax`".'
          type: string
        accountId:
          description: Required. The ID of the account to which these account tax settings belong.
          type: string
          format: uint64
      description: The tax settings of a merchant account. All methods require the admin role.
      type: object
    OrderRefund:
      id: OrderRefund
      type: object
      properties:
        amount:
          description: The amount that is refunded.
          $ref: '#/components/schemas/Price'
        actor:
          type: string
          description: 'The actor that created the refund. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
        reasonText:
          description: The explanation of the reason.
          type: string
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        reason:
          description: 'The reason for the refund. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
    TestOrderLineItemProduct:
      id: TestOrderLineItemProduct
      type: object
      properties:
        itemGroupId:
          type: string
          description: Shared identifier for all variants of the same product. Optional.
        offerId:
          description: Required. An identifier of the item.
          type: string
        brand:
          type: string
          description: Required. Brand of the item.
        condition:
          description: 'Required. Condition or state of the item. Acceptable values are: - "`new`" '
          type: string
        imageLink:
          description: Required. URL of an image of the item.
          type: string
        targetCountry:
          description: Required. The CLDR territory code of the target country of the product.
          type: string
        contentLanguage:
          type: string
          description: 'Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - "`en`" - "`fr`" '
        gtin:
          description: Global Trade Item Number (GTIN) of the item. Optional.
          type: string
        fees:
          description: Fees for the item. Optional.
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItemProductFee'
        mpn:
          type: string
          description: Manufacturer Part Number (MPN) of the item. Optional.
        title:
          type: string
          description: Required. The title of the product.
        price:
          $ref: '#/components/schemas/Price'
          description: Required. The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied.
        variantAttributes:
          type: array
          description: Variant attributes for the item. Optional.
          items:
            $ref: '#/components/schemas/OrderLineItemProductVariantAttribute'
    AccounttaxCustomBatchRequestEntry:
      properties:
        batchId:
          format: uint32
          type: integer
          description: An entry ID, unique within the batch request.
        accountId:
          description: The ID of the account for which to get/update account tax settings.
          type: string
          format: uint64
        accountTax:
          description: The account tax settings to update. Only defined if the method is `update`.
          $ref: '#/components/schemas/AccountTax'
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`update`" '
          type: string
      id: AccounttaxCustomBatchRequestEntry
      description: A batch entry encoding a single non-batch accounttax request.
      type: object
    AccountImageImprovements:
      type: object
      description: 'This improvement will attempt to automatically correct submitted images if they don''t meet the [image requirements](https://support.google.com/merchants/answer/6324350), for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: [Automatic image improvements](https://support.google.com/merchants/answer/9242973)'
      id: AccountImageImprovements
      properties:
        accountImageImprovementsSettings:
          description: Determines how the images should be automatically updated. If this field is not present, then the settings will be deleted. If there are no settings for subaccount, they are inherited from aggregator.
          $ref: '#/components/schemas/AccountImageImprovementsSettings'
        effectiveAllowAutomaticImageImprovements:
          readOnly: true
          description: Output only. The effective value of allow_automatic_image_improvements. If account_image_improvements_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          type: boolean
    AccountsCustomBatchResponse:
      id: AccountsCustomBatchResponse
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/AccountsCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsCustomBatchResponse`".'
      type: object
    RegionGeoTargetArea:
      properties:
        geotargetCriteriaIds:
          type: array
          items:
            type: string
            format: int64
          description: Required. A non-empty list of [location IDs](https://developers.google.com/adwords/api/docs/appendix/geotargeting). They must all be of the same location type (e.g., state).
      description: A list of geotargets that defines the region area.
      type: object
      id: RegionGeoTargetArea
    ListReturnPolicyOnlineResponse:
      type: object
      description: Response message for the `ListReturnPolicyOnline` method.
      properties:
        returnPolicies:
          type: array
          items:
            $ref: '#/components/schemas/ReturnPolicyOnline'
          description: The retrieved return policies.
      id: ListReturnPolicyOnlineResponse
    Errors:
      description: A list of errors returned by a failed batch entry.
      properties:
        message:
          description: The message of the first error in `errors`.
          type: string
        code:
          description: The HTTP status of the first error in `errors`.
          type: integer
          format: uint32
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
          description: A list of errors.
      id: Errors
      type: object
    DatafeedstatusesListResponse:
      type: object
      properties:
        nextPageToken:
          description: The token for the retrieval of the next page of datafeed statuses.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedstatusesListResponse`".'
          type: string
        resources:
          items:
            $ref: '#/components/schemas/DatafeedStatus'
          type: array
      id: DatafeedstatusesListResponse
    ListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          description: The regions from the specified merchant.
          items:
            $ref: '#/components/schemas/Region'
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: Response message for the `ListRegions` method.
      id: ListRegionsResponse
    Date:
      id: Date
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
      properties:
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          type: integer
          format: int32
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          type: integer
          format: int32
        year:
          format: int32
          type: integer
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
    ListAccountLabelsResponse:
      id: ListAccountLabelsResponse
      type: object
      description: Response message for the `ListAccountLabels` method.
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        accountLabels:
          type: array
          items:
            $ref: '#/components/schemas/AccountLabel'
          description: The labels from the specified account.
    AccountAddress:
      type: object
      id: AccountAddress
      properties:
        region:
          type: string
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
        streetAddress:
          description: Street-level part of the address. Use `\n` to add a second line.
          type: string
        country:
          type: string
          description: CLDR country code (for example, "US"). All MCA sub-accounts inherit the country of their parent MCA by default, however the country can be updated for individual sub-accounts.
        locality:
          type: string
          description: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
        postalCode:
          type: string
          description: Postal code or ZIP (for example, "94043").
    SearchRequest:
      id: SearchRequest
      description: Request message for the ReportService.Search method.
      properties:
        pageToken:
          description: Token of the page to retrieve. If not specified, the first page of results is returned. In order to request the next page of results, the value obtained from `next_page_token` in the previous response should be used.
          type: string
        query:
          type: string
          description: Required. Query that defines performance metrics to retrieve and dimensions according to which the metrics are to be segmented. For details on how to construct your query, see the [Query Language guide](https://developers.google.com/shopping-content/guides/reports/query-language/overview).
        pageSize:
          format: int32
          description: Number of ReportRows to retrieve in a single page. Defaults to the maximum of 1000. Values above 1000 are coerced to 1000.
          type: integer
      type: object
    OrdersCancelRequest:
      properties:
        operationId:
          type: string
          description: The ID of the operation. Unique across all operations for a given order.
        reason:
          type: string
          description: 'The reason for the cancellation. Acceptable values are: - "`customerInitiatedCancel`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`failedToCaptureFunds`" '
        reasonText:
          type: string
          description: The explanation of the reason.
      id: OrdersCancelRequest
      type: object
    AccountUser:
      type: object
      id: AccountUser
      properties:
        orderManager:
          type: boolean
          description: Whether user is an order manager.
        paymentsManager:
          type: boolean
          description: Whether user can manage payment settings.
        admin:
          type: boolean
          description: Whether user is an admin.
        emailAddress:
          description: User's email address.
          type: string
        paymentsAnalyst:
          description: Whether user can access payment statements.
          type: boolean
        reportingManager:
          description: Whether user is a reporting manager.
          type: boolean
    ProductsCustomBatchResponseEntry:
      type: object
      properties:
        product:
          description: The inserted product. Only defined if the method is `insert` and if the request was successful.
          $ref: '#/components/schemas/Product'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productsCustomBatchResponseEntry`"'
          type: string
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        batchId:
          description: The ID of the request entry this entry responds to.
          type: integer
          format: uint32
      description: A batch entry encoding a single non-batch products response.
      id: ProductsCustomBatchResponseEntry
    RepricingRuleReport:
      type: object
      properties:
        inapplicabilityDetails:
          items:
            $ref: '#/components/schemas/InapplicabilityDetails'
          description: List of all reasons the rule did not apply to the inapplicable products during the specified reporting period.
          type: array
        type:
          enum:
            - REPRICING_RULE_TYPE_UNSPECIFIED
            - TYPE_STATS_BASED
            - TYPE_COGS_BASED
            - TYPE_SALES_VOLUME_BASED
            - TYPE_COMPETITIVE_PRICE
          description: Type of the rule.
          enumDescriptions:
            - Unused.
            - Statistical measurement based rules among Google SA merchants. If this rule is chosen, repricer will adjust the offer price based on statistical metrics (currently only min is available) among other merchants who sell the same product. Details need to be provdided in the RuleDefinition.
            - Cost of goods sale based rule. Repricer will adjust the offer price based on the offer's sale cost which is provided by the merchant.
            - Sales volume based rule. Repricer will adjust the offer price based on the offer's sales volume in the past period of time defined within the rule.
            - Competitive price rule. Repricer will adjust the offer price based on the min price from a list of unnamed big competitors.
          type: string
        orderItemCount:
          type: integer
          format: int32
          description: Total unit count of impacted products ordered while the rule was active on the date of the report. This count includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
        date:
          $ref: '#/components/schemas/Date'
          description: Date of the stats in this report. The report starts and ends according to the merchant's timezone.
        ruleId:
          type: string
          description: Id of the Repricing rule for this report.
        buyboxWinningRuleStats:
          $ref: '#/components/schemas/RepricingRuleReportBuyboxWinningRuleStats'
          description: Stats specific to buybox winning rules for rule report (deprecated).
        totalGmv:
          $ref: '#/components/schemas/PriceAmount'
          description: Total GMV generated by impacted products while the rule was active on the date of the report. This value includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
        impactedProducts:
          items:
            type: string
          type: array
          description: List of product ids that are impacted by this rule during this reporting period. Out of stock products and products not searched for by customers are examples of non-impacted products.
        inapplicableProducts:
          description: List of product ids that are inapplicable to this rule during this reporting period. To get the inapplicable reason for a specific product, see RepricingProductReport.
          type: array
          items:
            type: string
      description: 'Resource that represents a daily Repricing rule report. Next ID: 11'
      id: RepricingRuleReport
    OrderReportTransaction:
      type: object
      id: OrderReportTransaction
      properties:
        transactionDate:
          type: string
          description: The date of the transaction, in ISO 8601 format.
        disbursementId:
          type: string
          description: The ID of the disbursement.
        merchantOrderId:
          type: string
          description: Merchant-provided ID of the order.
        orderId:
          type: string
          description: The ID of the order.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        disbursementAmount:
          $ref: '#/components/schemas/Price'
          description: The disbursement amount.
        disbursementDate:
          type: string
          description: The date the disbursement was initiated, in ISO 8601 format.
        productAmount:
          description: Total amount for the items.
          $ref: '#/components/schemas/ProductAmount'
        disbursementCreationDate:
          description: The date the disbursement was created, in ISO 8601 format.
          type: string
    PromotionPromotionStatus:
      properties:
        creationDate:
          type: string
          description: 'Date on which the promotion has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"'
        promotionIssue:
          type: array
          description: A list of issues associated with the promotion.
          items:
            $ref: '#/components/schemas/PromotionPromotionStatusPromotionIssue'
        destinationStatuses:
          type: array
          items:
            $ref: '#/components/schemas/PromotionPromotionStatusDestinationStatus'
          description: The intended destinations for the promotion.
        lastUpdateDate:
          description: 'Date on which the promotion status has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"'
          type: string
      description: The status of the promotion.
      type: object
      id: PromotionPromotionStatus
    ProductsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch products request.
      id: ProductsCustomBatchRequestEntry
      properties:
        productId:
          type: string
          description: The ID of the product to get or mutate. Only defined if the method is `get`, `delete`, or `update`.
        merchantId:
          type: string
          format: uint64
          description: The ID of the managing account.
        updateMask:
          type: string
          description: 'The comma-separated list of product attributes to be updated. Example: `"title,salePrice"`. Attributes specified in the update mask without a value specified in the body will be deleted from the product. *You must specify the update mask to delete attributes.* Only top-level product attributes can be updated. If not defined, product attributes with set values will be updated and other attributes will stay unchanged. Only defined if the method is `update`.'
          format: google-fieldmask
        product:
          description: The product to insert or update. Only required if the method is `insert` or `update`. If the `update` method is used with `updateMask` only to delete a field, then this isn't required. For example, setting `salePrice` on the `updateMask` and not providing a `product` will result in an existing sale price on the product specified by `productId` being deleted.
          $ref: '#/components/schemas/Product'
        feedId:
          format: uint64
          type: string
          description: The Content API Supplemental Feed ID. If present then product insertion or deletion applies to a supplemental feed instead of primary Content API feed.
        batchId:
          type: integer
          description: An entry ID, unique within the batch request.
          format: uint32
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" - "`update`" '
          type: string
      type: object
    AccountsLinkRequest:
      type: object
      id: AccountsLinkRequest
      properties:
        linkType:
          description: 'Type of the link between the two accounts. Acceptable values are: - "`channelPartner`" - "`eCommercePlatform`" - "`paymentServiceProvider`" '
          type: string
        eCommercePlatformLinkInfo:
          $ref: '#/components/schemas/ECommercePlatformLinkInfo'
          description: Additional information required for `eCommercePlatform` link type.
        action:
          type: string
          description: 'Action to perform for this link. The `"request"` action is only available to select merchants. Acceptable values are: - "`approve`" - "`remove`" - "`request`" '
        paymentServiceProviderLinkInfo:
          $ref: '#/components/schemas/PaymentServiceProviderLinkInfo'
          description: Additional information required for `paymentServiceProvider` link type.
        linkedAccountId:
          description: The ID of the linked account.
          type: string
        services:
          type: array
          items:
            type: string
          description: ' Acceptable values are: - "`shoppingAdsProductManagement`" - "`shoppingActionsProductManagement`" - "`shoppingActionsOrderManagement`" - "`paymentProcessing`" '
    SettlementTransactionTransaction:
      properties:
        type:
          description: 'The type of the transaction that occurred. Acceptable values are: - "`order`" - "`reversal`" - "`orderRefund`" - "`reversalRefund`" - "`issueRelatedRefundAndReplacement`" - "`returnLabelShippingFeeTransaction`" - "`reversalIssueRelatedRefundAndReplacement`" - "`reversalReturnLabelShippingFeeTransaction`" - "`lumpSumCorrectionTransaction`" '
          type: string
        postDate:
          type: string
          description: The time on which the event occurred in ISO 8601 format.
      type: object
      id: SettlementTransactionTransaction
    ListMethodQuotasResponse:
      id: ListMethodQuotasResponse
      type: object
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        methodQuotas:
          type: array
          items:
            $ref: '#/components/schemas/MethodQuota'
          description: The current quota usage and limits per each method.
      description: Response message for the ListMethodQuotas method.
    FreeListingsProgramStatus:
      description: Response message for GetFreeListingsProgramStatus.
      properties:
        regionStatuses:
          items:
            $ref: '#/components/schemas/FreeListingsProgramStatusRegionStatus'
          description: Status of the program in each region. Regions with the same status and review eligibility are grouped together in `regionCodes`.
          type: array
        globalState:
          description: State of the program. `ENABLED` if there are offers for at least one region.
          enumDescriptions:
            - State is unknown.
            - Program is not enabled for any country.
            - No products have been uploaded for any region. Upload products to Merchant Center.
            - Program is enabled and offers are uploaded for at least one country.
          enum:
            - PROGRAM_STATE_UNSPECIFIED
            - NOT_ENABLED
            - NO_OFFERS_UPLOADED
            - ENABLED
          type: string
      id: FreeListingsProgramStatus
      type: object
    OrderLineItemProduct:
      properties:
        condition:
          description: 'Condition or state of the item. Acceptable values are: - "`new`" - "`refurbished`" - "`used`" '
          type: string
        fees:
          items:
            $ref: '#/components/schemas/OrderLineItemProductFee'
          type: array
          description: Associated fees at order creation time.
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        targetCountry:
          type: string
          description: The CLDR territory code of the target country of the product.
        offerId:
          type: string
          description: An identifier of the item.
        contentLanguage:
          type: string
          description: The two-letter ISO 639-1 language code for the item.
        brand:
          description: Brand of the item.
          type: string
        id:
          description: The REST ID of the product.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        mpn:
          type: string
          description: Manufacturer Part Number (MPN) of the item.
        itemGroupId:
          type: string
          description: Shared identifier for all variants of the same product.
        shownImage:
          type: string
          description: URL to the cached image shown to the user when order was placed.
        title:
          type: string
          description: The title of the product.
        variantAttributes:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItemProductVariantAttribute'
          description: Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.
        price:
          $ref: '#/components/schemas/Price'
          description: Price of the item.
      type: object
      id: OrderLineItemProduct
    ReturnPolicyOnlineReturnShippingFee:
      description: The return shipping fee. This can either be a fixed fee or a boolean to indicate that the customer pays the actual shipping cost.
      id: ReturnPolicyOnlineReturnShippingFee
      type: object
      properties:
        fixedFee:
          description: Fixed return shipping fee amount. This value is only applicable when type is FIXED. We will treat the return shipping fee as free if type is FIXED and this value is not set.
          $ref: '#/components/schemas/PriceAmount'
        type:
          type: string
          description: Type of return shipping fee.
          enum:
            - TYPE_UNSPECIFIED
            - FIXED
            - CUSTOMER_PAYING_ACTUAL_FEE
          enumDescriptions:
            - Default value. This value is unused.
            - The return shipping fee is a fixed value.
            - Customer will pay the actual return shipping fee.
    ReturnAddressAddress:
      type: object
      properties:
        postalCode:
          type: string
          description: Postal code or ZIP (for example, "94043").
        country:
          type: string
          description: CLDR country code (for example, "US").
        streetAddress:
          description: Street-level part of the address. May be up to two lines, each line specified as an array element.
          items:
            type: string
          type: array
        region:
          type: string
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
        locality:
          type: string
          description: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
        recipientName:
          type: string
          description: Name of the recipient to address returns to.
      id: ReturnAddressAddress
    AccountItemUpdatesSettings:
      id: AccountItemUpdatesSettings
      properties:
        allowPriceUpdates:
          description: If price updates are enabled, Google always updates the active price with the crawled information.
          type: boolean
        allowAvailabilityUpdates:
          type: boolean
          description: If availability updates are enabled, any previous availability values get overwritten if Google finds an out-of-stock annotation on the offer's page. If additionally `allow_availability_updates` field is set to true, values get overwritten if Google finds an in-stock annotation on the offerâ€™s page.
        allowConditionUpdates:
          description: If condition updates are enabled, Google always updates item condition with the condition detected from the details of your product.
          type: boolean
        allowStrictAvailabilityUpdates:
          description: If allow_availability_updates is enabled, items are automatically updated in all your Shopping target countries. By default, availability updates will only be applied to items that are 'out of stock' on your website but 'in stock' on Shopping. Set this to true to also update items that are 'in stock' on your website, but 'out of stock' on Google Shopping. In order for this field to have an effect, you must also allow availability updates.
          type: boolean
      description: Settings for the Automatic Item Updates.
      type: object
    AccountsClaimWebsiteResponse:
      id: AccountsClaimWebsiteResponse
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsClaimWebsiteResponse`".'
          type: string
    OrdersCancelResponse:
      id: OrdersCancelResponse
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCancelResponse`".'
          type: string
      type: object
    OrderShipmentScheduledDeliveryDetails:
      type: object
      properties:
        carrierPhoneNumber:
          type: string
          description: The phone number of the carrier fulfilling the delivery. The phone number is formatted as the international notation in ITU-T Recommendation E.123 (for example, "+41 44 668 1800").
        scheduledDate:
          description: The date a shipment is scheduled for delivery, in ISO 8601 format.
          type: string
      id: OrderShipmentScheduledDeliveryDetails
    OrderAddress:
      id: OrderAddress
      properties:
        postalCode:
          type: string
          description: Postal Code or ZIP (for example, "94043").
        fullAddress:
          description: 'Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States '
          type: array
          items:
            type: string
        locality:
          type: string
          description: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
        country:
          description: CLDR country code (for example, "US").
          type: string
        recipientName:
          description: Name of the recipient.
          type: string
        region:
          type: string
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
        isPostOfficeBox:
          type: boolean
          description: Whether the address is a post office box.
        streetAddress:
          items:
            type: string
          type: array
          description: Street-level part of the address. Use `\n` to add a second line.
      type: object
    ReturnPolicyOnlineRestockingFee:
      description: The restocking fee. This can either be a fixed fee or a micro percent.
      type: object
      properties:
        microPercent:
          format: int32
          type: integer
          description: Percent of total price in micros. 15,000,000 means 15% of the total price would be charged.
        fixedFee:
          description: Fixed restocking fee.
          $ref: '#/components/schemas/PriceAmount'
      id: ReturnPolicyOnlineRestockingFee
    ProductstatusesCustomBatchResponse:
      type: object
      id: ProductstatusesCustomBatchResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productstatusesCustomBatchResponse`".'
          type: string
        entries:
          description: The result of the execution of the batch requests.
          type: array
          items:
            $ref: '#/components/schemas/ProductstatusesCustomBatchResponseEntry'
    OrdersUpdateMerchantOrderIdResponse:
      id: OrdersUpdateMerchantOrderIdResponse
      type: object
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersUpdateMerchantOrderIdResponse`".'
    ShippingsettingsGetSupportedHolidaysResponse:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsGetSupportedHolidaysResponse`".'
        holidays:
          type: array
          description: A list of holidays applicable for delivery guarantees. May be empty.
          items:
            $ref: '#/components/schemas/HolidaysHoliday'
      type: object
      id: ShippingsettingsGetSupportedHolidaysResponse
    AccountStatusItemLevelIssue:
      type: object
      properties:
        description:
          type: string
          description: A short issue description in English.
        servability:
          type: string
          description: How this issue affects serving of the offer.
        detail:
          description: A detailed issue description in English.
          type: string
        code:
          type: string
          description: The error code of the issue.
        attributeName:
          type: string
          description: The attribute's name, if the issue is caused by a single attribute.
        resolution:
          type: string
          description: Whether the issue can be resolved by the merchant.
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        numItems:
          description: Number of items with this issue.
          format: int64
          type: string
      id: AccountStatusItemLevelIssue
    ProductProductDetail:
      id: ProductProductDetail
      type: object
      properties:
        attributeName:
          description: The name of the product detail.
          type: string
        sectionName:
          type: string
          description: The section header used to group a set of product details.
        attributeValue:
          type: string
          description: The value of the product detail.
    CarriersCarrier:
      properties:
        services:
          items:
            type: string
          description: A list of supported services (for example, `"ground"`) for that carrier. Contains at least one service. This is the list of valid values for CarrierRate.carrierService.
          type: array
        country:
          type: string
          description: The CLDR country code of the carrier (for example, "US"). Always present.
        eddServices:
          description: A list of services supported for EDD (Estimated Delivery Date) calculation. This is the list of valid values for WarehouseBasedDeliveryTime.carrierService.
          type: array
          items:
            type: string
        name:
          type: string
          description: The name of the carrier (for example, `"UPS"`). Always present.
      id: CarriersCarrier
      type: object
    InvoiceSummaryAdditionalChargeSummary:
      properties:
        type:
          description: '[required] Type of the additional charge. Acceptable values are: - "`shipping`" '
          type: string
        totalAmount:
          description: '[required] Total additional charge for this type.'
          $ref: '#/components/schemas/Amount'
      type: object
      id: InvoiceSummaryAdditionalChargeSummary
    OrderreturnsRefundOperation:
      type: object
      properties:
        returnRefundReason:
          type: string
          description: Code of the refund reason.
        fullRefund:
          description: If true, the item will be fully refunded. Allowed only when payment_type is FOP. Merchant can choose this refund option to indicate the full remaining amount of corresponding object to be refunded to the customer through FOP.
          type: boolean
        paymentType:
          description: The payment way of issuing refund. Default value is ORIGINAL_FOP if not set.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        partialRefund:
          description: If this is set, the item will be partially refunded. Merchant can choose this refund option to specify the customized amount that to be refunded to the customer.
          $ref: '#/components/schemas/OrderreturnsPartialRefund'
      id: OrderreturnsRefundOperation
    ProductDeliveryTimeAreaDeliveryTimeDeliveryTime:
      type: object
      id: ProductDeliveryTimeAreaDeliveryTimeDeliveryTime
      description: A delivery time for this product.
      properties:
        maxTransitTimeDays:
          format: int32
          type: integer
          description: Required. The maximum number of business days (inclusive) between when the product ships and when the product is delivered.
        minHandlingTimeDays:
          format: int32
          description: Required. The minimum number of business days (inclusive) between when an order is placed and when the product ships. If a product ships in the same day, set this value to 0.
          type: integer
        minTransitTimeDays:
          type: integer
          format: int32
          description: Required. The minimum number of business days (inclusive) between when the product ships and when the product is delivered.
        maxHandlingTimeDays:
          type: integer
          description: Required. The maximum number of business days (inclusive) between when an order is placed and when the product ships. If a product ships in the same day, set this value to 0.
          format: int32
    Row:
      id: Row
      type: object
      properties:
        cells:
          type: array
          description: The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required.
          items:
            $ref: '#/components/schemas/Value'
    LiaOnDisplayToOrderSettings:
      type: object
      id: LiaOnDisplayToOrderSettings
      properties:
        shippingCostPolicyUrl:
          type: string
          description: Shipping cost and policy URL.
        status:
          type: string
          description: 'The status of the ?On display to order? feature. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
    PickupCarrierService:
      type: object
      id: PickupCarrierService
      properties:
        serviceName:
          description: The name of the pickup service (for example, `"Access point"`). Required.
          type: string
        carrierName:
          type: string
          description: The name of the pickup carrier (for example, `"UPS"`). Required.
    OrdersCreateTestOrderResponse:
      type: object
      id: OrdersCreateTestOrderResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCreateTestOrderResponse`".'
          type: string
        orderId:
          description: The ID of the newly created test order.
          type: string
    DatafeedsListResponse:
      id: DatafeedsListResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedsListResponse`".'
        nextPageToken:
          description: The token for the retrieval of the next page of datafeeds.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Datafeed'
          type: array
      type: object
    LabelIds:
      type: object
      description: The IDs of labels that should be assigned to the CSS domain.
      id: LabelIds
      properties:
        labelIds:
          type: array
          items:
            type: string
            format: int64
          description: The list of label IDs.
    ProductCluster:
      type: object
      id: ProductCluster
      properties:
        brandInventoryStatus:
          enumDescriptions:
            - Inventory status is unknown.
            - Merchant has a product for this product cluster or brand in stock.
            - Merchant has a product for this product cluster or brand in inventory but it is currently out of stock.
            - Merchant does not have a product for this product cluster or brand in inventory.
          enum:
            - INVENTORY_STATUS_UNSPECIFIED
            - IN_STOCK
            - OUT_OF_STOCK
            - NOT_IN_INVENTORY
          description: Tells if there is at least one product of the brand currently `IN_STOCK` in your product feed across multiple countries, all products are `OUT_OF_STOCK` in your product feed, or `NOT_IN_INVENTORY`. The field doesn't take the Best Sellers report country filter into account.
          type: string
        categoryL3:
          description: Product category (3rd level) of the product cluster, represented in Google's product taxonomy.
          type: string
        title:
          type: string
          description: Title of the product cluster.
        categoryL5:
          description: Product category (5th level) of the product cluster, represented in Google's product taxonomy.
          type: string
        categoryL1:
          type: string
          description: Product category (1st level) of the product cluster, represented in Google's product taxonomy.
        brand:
          type: string
          description: Brand of the product cluster.
        inventoryStatus:
          description: Tells whether the product cluster is `IN_STOCK` in your product feed across multiple countries, `OUT_OF_STOCK` in your product feed, or `NOT_IN_INVENTORY` at all. The field doesn't take the Best Sellers report country filter into account.
          enum:
            - INVENTORY_STATUS_UNSPECIFIED
            - IN_STOCK
            - OUT_OF_STOCK
            - NOT_IN_INVENTORY
          type: string
          enumDescriptions:
            - Inventory status is unknown.
            - Merchant has a product for this product cluster or brand in stock.
            - Merchant has a product for this product cluster or brand in inventory but it is currently out of stock.
            - Merchant does not have a product for this product cluster or brand in inventory.
        categoryL2:
          type: string
          description: Product category (2nd level) of the product cluster, represented in Google's product taxonomy.
        categoryL4:
          description: Product category (4th level) of the product cluster, represented in Google's product taxonomy.
          type: string
        variantGtins:
          items:
            type: string
          description: GTINs of example variants of the product cluster.
          type: array
      description: Product cluster fields. A product cluster is a grouping for different offers that represent the same product. Values are only set for fields requested explicitly in the request's search query.
    MerchantOrderReturnItem:
      type: object
      id: MerchantOrderReturnItem
      properties:
        shipmentUnitId:
          type: string
          description: ID of the shipment unit assigned by the merchant. Provided for shipments with invoice support.
        shipmentGroupId:
          description: ID of the original shipment group. Provided for shipments with invoice support.
          type: string
        customerReturnReason:
          $ref: '#/components/schemas/CustomerReturnReason'
          description: The reason that the customer chooses to return an item.
        product:
          $ref: '#/components/schemas/OrderLineItemProduct'
          description: Product data from the time of the order placement.
        refundableAmount:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Maximum amount that can be refunded for this return item.
        itemId:
          description: Product level item ID. If the returned items are of the same product, they will have the same ID.
          type: string
        merchantReturnReason:
          description: The reason that merchant chooses to accept a return item.
          $ref: '#/components/schemas/RefundReason'
        state:
          type: string
          description: 'State of the item. Acceptable values are: - "`canceled`" - "`new`" - "`received`" - "`refunded`" - "`rejected`" '
        merchantRejectionReason:
          $ref: '#/components/schemas/MerchantRejectionReason'
          description: The reason that the merchant chose to reject an item return.
        returnItemId:
          description: Unit level ID for the return item. Different units of the same product will have different IDs.
          type: string
        returnShipmentIds:
          items:
            type: string
          description: IDs of the return shipments that this return item belongs to.
          type: array
    ShipmentInvoiceLineItemInvoice:
      type: object
      properties:
        productId:
          description: ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.
          type: string
        shipmentUnitIds:
          type: array
          items:
            type: string
          description: '[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).'
        lineItemId:
          type: string
          description: ID of the line item. Either lineItemId or productId must be set.
        unitInvoice:
          $ref: '#/components/schemas/UnitInvoice'
          description: '[required] Invoice details for a single unit.'
      id: ShipmentInvoiceLineItemInvoice
    LiasettingsListPosDataProvidersResponse:
      id: LiasettingsListPosDataProvidersResponse
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsListPosDataProvidersResponse`".'
          type: string
        posDataProviders:
          description: The list of POS data providers for each eligible country
          items:
            $ref: '#/components/schemas/PosDataProviders'
          type: array
    OrdersAcknowledgeResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersAcknowledgeResponse`".'
          type: string
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
      id: OrdersAcknowledgeResponse
      type: object
    ProductViewItemIssueItemIssueType:
      type: object
      properties:
        canonicalAttribute:
          type: string
          description: Canonical attribute name for attribute-specific issues.
      description: Type of the item issue.
      id: ProductViewItemIssueItemIssueType
    GmbAccounts:
      properties:
        gmbAccounts:
          description: A list of Business Profiles which are available to the merchant.
          type: array
          items:
            $ref: '#/components/schemas/GmbAccountsGmbAccount'
        accountId:
          format: uint64
          type: string
          description: The ID of the Merchant Center account.
      type: object
      id: GmbAccounts
    RepricingRuleRestrictionBoundary:
      properties:
        priceDelta:
          type: string
          description: The price micros relative to the offer selling price. This field is signed. It must be negative in floor. For example, if an offer is selling at $10 and this field is -$2 in floor, the repricing rule only applies if the calculated new price is >= $8.
        percentageDelta:
          type: integer
          format: int32
          description: The percentage delta relative to the offer selling price. This field is signed. It must be negative in floor. When it is used in floor, it should be > -100. For example, if an offer is selling at $10 and this field is -30 in floor, the repricing rule only applies if the calculated new price is >= $7.
      id: RepricingRuleRestrictionBoundary
      description: Definition of a boundary.
      type: object
    OrderMerchantProvidedAnnotation:
      id: OrderMerchantProvidedAnnotation
      type: object
      properties:
        value:
          description: Value for additional merchant provided (as key-value pairs) annotation about the line item.
          type: string
        key:
          type: string
          description: Key for additional merchant provided (as key-value pairs) annotation about the line item.
    LoyaltyPoints:
      properties:
        name:
          type: string
          description: Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.
        ratio:
          format: double
          type: number
          description: The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.
        pointsValue:
          type: string
          format: int64
          description: The retailer's loyalty points in absolute value.
      type: object
      id: LoyaltyPoints
    OrderLineItem:
      properties:
        id:
          type: string
          description: The ID of the line item.
        cancellations:
          items:
            $ref: '#/components/schemas/OrderCancellation'
          type: array
          description: Cancellations of the line item.
        quantityShipped:
          format: uint32
          description: Number of items shipped.
          type: integer
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/OrderMerchantProvidedAnnotation'
          description: Annotations that are attached to the line item.
        adjustments:
          type: array
          description: Price and tax adjustments applied on the line item.
          items:
            $ref: '#/components/schemas/OrderLineItemAdjustment'
        tax:
          $ref: '#/components/schemas/Price'
          description: Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4.
        product:
          description: Product data as seen by customer from the time of the order placement. Note that certain attributes values (for example, title or gtin) might be reformatted and no longer match values submitted through product feed.
          $ref: '#/components/schemas/OrderLineItemProduct'
        quantityReturned:
          description: Number of items returned.
          type: integer
          format: uint32
        shippingDetails:
          $ref: '#/components/schemas/OrderLineItemShippingDetails'
          description: Details of the requested shipping for the line item.
        returnInfo:
          description: Details of the return policy for the line item.
          $ref: '#/components/schemas/OrderLineItemReturnInfo'
        quantityCanceled:
          description: Number of items canceled.
          format: uint32
          type: integer
        quantityPending:
          description: Number of items pending.
          type: integer
          format: uint32
        quantityReadyForPickup:
          format: uint32
          type: integer
          description: Number of items ready for pickup.
        returns:
          description: Returns of the line item.
          type: array
          items:
            $ref: '#/components/schemas/OrderReturn'
        quantityOrdered:
          format: uint32
          type: integer
          description: Number of items ordered.
        quantityUndeliverable:
          format: uint32
          type: integer
          description: Number of items undeliverable.
        price:
          description: Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20.
          $ref: '#/components/schemas/Price'
        quantityDelivered:
          format: uint32
          type: integer
          description: Number of items delivered.
      type: object
      id: OrderLineItem
    SearchResponse:
      properties:
        results:
          description: Rows that matched the search query.
          type: array
          items:
            $ref: '#/components/schemas/ReportRow'
        nextPageToken:
          description: Token which can be sent as `page_token` to retrieve the next page. If omitted, there are no subsequent pages.
          type: string
      id: SearchResponse
      description: Response message for the ReportService.Search method.
      type: object
    DatafeedStatus:
      type: object
      properties:
        warnings:
          items:
            $ref: '#/components/schemas/DatafeedStatusError'
          type: array
          description: The list of errors occurring in the feed.
        datafeedId:
          format: uint64
          description: The ID of the feed for which the status is reported.
          type: string
        errors:
          description: The list of errors occurring in the feed.
          items:
            $ref: '#/components/schemas/DatafeedStatusError'
          type: array
        itemsTotal:
          description: The number of items in the feed that were processed.
          format: uint64
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedStatus`"'
        lastUploadDate:
          description: The last date at which the feed was uploaded.
          type: string
        processingStatus:
          type: string
          description: 'The processing status of the feed. Acceptable values are: - "`"`failure`": The feed could not be processed or all items had errors.`" - "`in progress`": The feed is being processed. - "`none`": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - "`success`": The feed was processed successfully, though some items might have had errors. '
        country:
          type: string
          description: The country for which the status is reported, represented as a CLDR territory code.
        itemsValid:
          format: uint64
          type: string
          description: The number of items in the feed that were valid.
        language:
          description: The two-letter ISO 639-1 language for which the status is reported.
          type: string
        feedLabel:
          description: The feed label status is reported for.
          type: string
      description: The status of a datafeed, that is, the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.
      id: DatafeedStatus
    OrdersCustomBatchRequestEntryCreateTestReturnReturnItem:
      id: OrdersCustomBatchRequestEntryCreateTestReturnReturnItem
      properties:
        lineItemId:
          type: string
          description: The ID of the line item to return.
        quantity:
          format: uint32
          type: integer
          description: Quantity that is returned.
      type: object
    AccountStatusStatistics:
      id: AccountStatusStatistics
      properties:
        pending:
          description: Number of pending offers.
          format: int64
          type: string
        expiring:
          description: Number of expiring offers.
          format: int64
          type: string
        disapproved:
          type: string
          description: Number of disapproved offers.
          format: int64
        active:
          type: string
          description: Number of active offers.
          format: int64
      type: object
    MerchantOrderReturn:
      description: Order return. Production access (all methods) requires the order manager role. Sandbox access does not.
      properties:
        creationDate:
          type: string
          description: The date of creation of the return, in ISO 8601 format.
        returnPricingInfo:
          description: Information about shipping costs.
          $ref: '#/components/schemas/ReturnPricingInfo'
        returnShipments:
          description: Shipments of the return.
          type: array
          items:
            $ref: '#/components/schemas/ReturnShipment'
        orderReturnId:
          description: Order return ID generated by Google.
          type: string
        orderId:
          type: string
          description: Google order ID.
        returnItems:
          description: Items of the return.
          items:
            $ref: '#/components/schemas/MerchantOrderReturnItem'
          type: array
        merchantOrderId:
          type: string
          description: Merchant defined order ID.
      id: MerchantOrderReturn
      type: object
    ReturnPolicySeasonalOverride:
      type: object
      id: ReturnPolicySeasonalOverride
      properties:
        name:
          description: Required. The name of the seasonal override as shown in Merchant Center.
          type: string
        endDate:
          description: Required. Last day on which the override applies. In ISO 8601 format.
          type: string
        startDate:
          description: Required. First day on which the override applies. In ISO 8601 format.
          type: string
        policy:
          description: Required. The policy which is in effect during that time.
          $ref: '#/components/schemas/ReturnPolicyPolicy'
    ProductShipping:
      type: object
      properties:
        postalCode:
          type: string
          description: The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.
        minTransitTime:
          format: int64
          type: string
          description: Minimum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. minTransitTime can only be present together with maxTransitTime; but it's not required if maxTransitTime is present.
        maxTransitTime:
          type: string
          description: Maximum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.
          format: int64
        price:
          description: Fixed shipping price, represented as a number.
          $ref: '#/components/schemas/Price'
        region:
          type: string
          description: The geographic region to which a shipping rate applies.
        service:
          type: string
          description: A free-form description of the service class or delivery speed.
        locationGroupName:
          type: string
          description: The location where the shipping is applicable, represented by a location group name.
        country:
          type: string
          description: The CLDR territory code of the country to which an item will ship.
        minHandlingTime:
          type: string
          description: Minimum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. minHandlingTime can only be present together with maxHandlingTime; but it's not required if maxHandlingTime is present.
          format: int64
        locationId:
          type: string
          description: The numeric ID of a location that the shipping rate applies to as defined in the Google Ads API.
          format: int64
        maxHandlingTime:
          description: Maximum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.
          format: int64
          type: string
      id: ProductShipping
    PosListResponse:
      id: PosListResponse
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posListResponse`".'
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/PosStore'
    AccountsListLinksResponse:
      type: object
      id: AccountsListLinksResponse
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinkedAccount'
          description: The list of available links.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsListLinksResponse`".'
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of links.
    AccountShippingImprovements:
      properties:
        allowShippingImprovements:
          description: Enables automatic shipping improvements.
          type: boolean
      description: 'Not available for MCAs [accounts](https://support.google.com/merchants/answer/188487). By turning on [automatic shipping improvements](https://support.google.com/merchants/answer/10027038), you are allowing Google to improve the accuracy of your delivery times shown to shoppers using Google. More accurate delivery times, especially when faster, typically lead to better conversion rates. Google will improve your estimated delivery times based on various factors: * Delivery address of an order * Current handling time and shipping time settings * Estimated weekdays or business days * Parcel tracking data'
      type: object
      id: AccountShippingImprovements
    CaptureOrderRequest:
      id: CaptureOrderRequest
      type: object
      properties: {}
      description: Request message for the CaptureOrder method.
    OrderTrackingSignalShippingInfo:
      description: The shipping information for the order.
      type: object
      properties:
        carrierServiceName:
          description: The service type for fulfillment, e.g., GROUND, FIRST_CLASS, etc.
          type: string
        originRegionCode:
          type: string
          description: The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping origin.
        earliestDeliveryPromiseTime:
          $ref: '#/components/schemas/DateTime'
          description: 'The earliest delivery promised time. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name.'
        originPostalCode:
          type: string
          description: The origin postal code, as a continuous string without spaces or dashes, e.g. "95016". This field will be anonymized in returned OrderTrackingSignal creation response.
        shippedTime:
          description: The time when the shipment was shipped. Include the year and timezone string, if available.
          $ref: '#/components/schemas/DateTime'
        carrierName:
          type: string
          description: 'The name of the shipping carrier for the delivery. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time.'
        shippingStatus:
          enumDescriptions:
            - The shipping status is not known to merchant.
            - All items are shipped.
            - The shipment is already delivered.
          enum:
            - SHIPPING_STATE_UNSPECIFIED
            - SHIPPED
            - DELIVERED
          description: The status of the shipment.
          type: string
        trackingId:
          description: 'The tracking ID of the shipment. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time.'
          type: string
        actualDeliveryTime:
          description: 'The time when the shipment was actually delivered. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name.'
          $ref: '#/components/schemas/DateTime'
        latestDeliveryPromiseTime:
          description: 'The latest delivery promised time. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name.'
          $ref: '#/components/schemas/DateTime'
        shipmentId:
          description: Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response.
          type: string
      id: OrderTrackingSignalShippingInfo
    ProductsCustomBatchResponse:
      id: ProductsCustomBatchResponse
      properties:
        entries:
          description: The result of the execution of the batch requests.
          type: array
          items:
            $ref: '#/components/schemas/ProductsCustomBatchResponseEntry'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productsCustomBatchResponse`".'
      type: object
    TimeZone:
      description: Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
      type: object
      properties:
        version:
          description: Optional. IANA Time Zone Database version number, e.g. "2019a".
          type: string
        id:
          description: IANA Time Zone Database time zone, e.g. "America/New_York".
          type: string
      id: TimeZone
    DatafeedStatusError:
      properties:
        code:
          description: The code of the error, for example, "validation/invalid_value".
          type: string
        examples:
          type: array
          description: A list of example occurrences of the error, grouped by product.
          items:
            $ref: '#/components/schemas/DatafeedStatusExample'
        message:
          type: string
          description: The error message, for example, "Invalid price".
        count:
          type: string
          description: The number of occurrences of the error in the feed.
          format: uint64
      id: DatafeedStatusError
      description: An error occurring in the feed, like "invalid price".
      type: object
    OrderreturnsAcknowledgeRequest:
      properties:
        operationId:
          type: string
          description: '[required] The ID of the operation, unique across all operations for a given order return.'
      id: OrderreturnsAcknowledgeRequest
      type: object
    ProductViewItemIssueIssueSeverityPerDestination:
      id: ProductViewItemIssueIssueSeverityPerDestination
      type: object
      properties:
        destination:
          type: string
          description: Issue destination.
        disapprovedCountries:
          type: array
          description: List of disapproved countries in the destination.
          items:
            type: string
        demotedCountries:
          items:
            type: string
          type: array
          description: List of demoted countries in the destination.
      description: Issue severity for all affected regions in a destination.
    AccountsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          type: array
          items:
            $ref: '#/components/schemas/AccountsCustomBatchRequestEntry'
      type: object
      id: AccountsCustomBatchRequest
    OrderreturnsAcknowledgeResponse:
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreturnsAcknowledgeResponse`".'
          type: string
        executionStatus:
          type: string
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
      id: OrderreturnsAcknowledgeResponse
    ProductView:
      type: object
      properties:
        itemGroupId:
          type: string
          description: Item group ID provided by the merchant for grouping variants together.
        offerId:
          type: string
          description: Merchant-provided id of the product.
        channel:
          enumDescriptions:
            - Indicates that the channel is unspecified.
            - Indicates that the channel is local.
            - Indicates that the channel is online.
          type: string
          enum:
            - CHANNEL_UNSPECIFIED
            - LOCAL
            - ONLINE
          description: Channel of the product (online versus local).
        categoryL3:
          description: Third level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        productTypeL3:
          description: Third level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        categoryL5:
          type: string
          description: Fifth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
        brand:
          type: string
          description: Brand of the product.
        productTypeL1:
          type: string
          description: First level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
        title:
          type: string
          description: Title of the product.
        condition:
          description: Condition of the product.
          type: string
        categoryL4:
          type: string
          description: Fourth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
        availability:
          description: Availability of the product.
          type: string
        id:
          description: The REST ID of the product, in the form of channel:contentLanguage:targetCountry:offerId. Content API methods that operate on products take this as their productId parameter. Should always be included in the SELECT clause.
          type: string
        categoryL1:
          type: string
          description: First level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
        currencyCode:
          description: Product price currency code (for example, ISO 4217). Absent if product price is not available.
          type: string
        productTypeL2:
          description: Second level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        expirationDate:
          $ref: '#/components/schemas/Date'
          description: Expiration date for the product. Specified on insertion.
        creationTime:
          format: google-datetime
          description: The time the merchant created the product in timestamp seconds.
          type: string
        productTypeL5:
          description: Fifth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        shippingLabel:
          type: string
          description: The normalized shipping label specified in the feed
        aggregatedDestinationStatus:
          type: string
          enum:
            - AGGREGATED_STATUS_UNSPECIFIED
            - NOT_ELIGIBLE_OR_DISAPPROVED
            - PENDING
            - ELIGIBLE_LIMITED
            - ELIGIBLE
          description: Aggregated destination status.
          enumDescriptions:
            - Undefined aggregated status.
            - Offer isn't eligible, or is disapproved for all destinations.
            - Offer's status is pending in all destinations.
            - Offer is eligible for some (but not all) destinations.
            - Offer is eligible for all destinations.
        categoryL2:
          type: string
          description: Second level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
        itemIssues:
          items:
            $ref: '#/components/schemas/ProductViewItemIssue'
          type: array
          description: List of item issues for the product.
        languageCode:
          type: string
          description: Language code of the product in BCP 47 format.
        productTypeL4:
          description: Fourth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        gtin:
          items:
            type: string
          description: GTIN of the product.
          type: array
        priceMicros:
          description: Product price specified as micros (1 millionth of a standard unit, 1 USD = 1000000 micros) in the product currency. Absent in case the information about the price of the product is not available.
          type: string
          format: int64
      id: ProductView
      description: Product fields. Values are only set for fields requested explicitly in the request's search query. Available only to selected merchants. Submit the [interest form](https://forms.gle/7Uy8htzAN8oNokz9A) to request access.
    RegionPostalCodeArea:
      type: object
      description: 'A list of postal codes that defines the region area. Note: All regions defined using postal codes are accessible via the account''s `ShippingSettings.postalCodeGroups` resource.'
      properties:
        postalCodes:
          items:
            $ref: '#/components/schemas/RegionPostalCodeAreaPostalCodeRange'
          description: Required. A range of postal codes.
          type: array
        regionCode:
          type: string
          description: Required. CLDR territory code or the country the postal code group applies to.
      id: RegionPostalCodeArea
    DatafeedsCustomBatchResponse:
      type: object
      id: DatafeedsCustomBatchResponse
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/DatafeedsCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedsCustomBatchResponse`".'
          type: string
    ProductShippingWeight:
      id: ProductShippingWeight
      properties:
        value:
          type: number
          description: The weight of the product used to calculate the shipping cost of the item.
          format: double
        unit:
          type: string
          description: The unit of value.
      type: object
    OrderReturn:
      properties:
        reason:
          type: string
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
        quantity:
          format: uint32
          description: Quantity that is returned.
          type: integer
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        actor:
          description: 'The actor that created the refund. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      id: OrderReturn
      type: object
    PosSaleRequest:
      id: PosSaleRequest
      type: object
      properties:
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        gtin:
          type: string
          description: Global Trade Item Number.
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
        saleId:
          type: string
          description: A unique ID to group items from the same sale event.
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        storeCode:
          type: string
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
        quantity:
          description: Required. The relative change of the available quantity. Negative for items returned.
          format: int64
          type: string
        price:
          description: Required. The price of the item.
          $ref: '#/components/schemas/Price'
        contentLanguage:
          type: string
          description: Required. The two-letter ISO 639-1 language code for the item.
    OrderCustomerMarketingRightsInfo:
      properties:
        marketingEmailAddress:
          description: Email address that can be used for marketing purposes. The field may be empty even if `explicitMarketingPreference` is 'granted'. This happens when retrieving an old order from the customer who deleted their account.
          type: string
        lastUpdatedTimestamp:
          type: string
          description: Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet.
        explicitMarketingPreference:
          type: string
          description: 'Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected `granted` in their most recent order, they can be subscribed to marketing emails. Customers who have chosen `denied` must not be subscribed, or must be unsubscribed if already opted-in. Acceptable values are: - "`denied`" - "`granted`" '
      id: OrderCustomerMarketingRightsInfo
      type: object
    DatafeedstatusesCustomBatchRequest:
      type: object
      id: DatafeedstatusesCustomBatchRequest
      properties:
        entries:
          type: array
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/DatafeedstatusesCustomBatchRequestEntry'
    PosCustomBatchResponseEntry:
      type: object
      id: PosCustomBatchResponseEntry
      properties:
        batchId:
          type: integer
          format: uint32
          description: The ID of the request entry to which this entry responds.
        store:
          description: The retrieved or updated store information.
          $ref: '#/components/schemas/PosStore'
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors defined if, and only if, the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posCustomBatchResponseEntry`"'
          type: string
        sale:
          description: The updated sale information.
          $ref: '#/components/schemas/PosSale'
        inventory:
          description: The updated inventory information.
          $ref: '#/components/schemas/PosInventory'
    PosDataProviders:
      properties:
        posDataProviders:
          items:
            $ref: '#/components/schemas/PosDataProvidersPosDataProvider'
          type: array
          description: A list of POS data providers.
        country:
          description: Country code.
          type: string
      id: PosDataProviders
      type: object
    LiasettingsSetInventoryVerificationContactResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsSetInventoryVerificationContactResponse`".'
          type: string
      type: object
      id: LiasettingsSetInventoryVerificationContactResponse
    LiasettingsGetAccessibleGmbAccountsResponse:
      id: LiasettingsGetAccessibleGmbAccountsResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsGetAccessibleGmbAccountsResponse`".'
        accountId:
          format: uint64
          description: The ID of the Merchant Center account.
          type: string
        gmbAccounts:
          items:
            $ref: '#/components/schemas/GmbAccountsGmbAccount'
          type: array
          description: A list of Business Profiles which are available to the merchant.
      type: object
    ReturnPolicyOnlinePolicy:
      type: object
      id: ReturnPolicyOnlinePolicy
      description: The available policies.
      properties:
        days:
          format: int64
          type: string
          description: The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. Required for `numberOfDaysAfterDelivery` returns.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - NUMBER_OF_DAYS_AFTER_DELIVERY
            - NO_RETURNS
            - LIFETIME_RETURNS
          enumDescriptions:
            - Default value. This value is unused.
            - Number of days after a return is delivered.
            - No returns.
            - Life time returns.
          type: string
          description: Policy type.
    OrderDeliveryDetails:
      properties:
        phoneNumber:
          type: string
          description: The phone number of the person receiving the delivery.
        address:
          description: The delivery address
          $ref: '#/components/schemas/OrderAddress'
      type: object
      id: OrderDeliveryDetails
    AccounttaxCustomBatchRequest:
      id: AccounttaxCustomBatchRequest
      type: object
      properties:
        entries:
          type: array
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/AccounttaxCustomBatchRequestEntry'
    PosInventoryResponse:
      properties:
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posInventoryResponse`".'
          type: string
        quantity:
          format: int64
          description: Required. The available quantity of the item.
          type: string
        contentLanguage:
          type: string
          description: Required. The two-letter ISO 639-1 language code for the item.
        price:
          $ref: '#/components/schemas/Price'
          description: Required. The current price of the item.
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        timestamp:
          type: string
          description: Required. The inventory timestamp, in ISO 8601 format.
        targetCountry:
          type: string
          description: Required. The CLDR territory code for the item.
      type: object
      id: PosInventoryResponse
    AccountBusinessInformation:
      properties:
        phoneNumber:
          description: The phone number of the business. This can only be updated if a verified phone number is not already set. To replace a verified phone number use the `Accounts.requestphoneverification` and `Accounts.verifyphonenumber`.
          type: string
        koreanBusinessRegistrationNumber:
          type: string
          description: 'The 10-digit [Korean business registration number](https://support.google.com/merchants/answer/9037766) separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set.'
        customerService:
          $ref: '#/components/schemas/AccountCustomerService'
          description: The customer service information of the business.
        phoneVerificationStatus:
          description: 'Verification status of the phone number of the business. This status is read only and can be updated only by successful phone verification. Acceptable values are: - "`verified`" - "`unverified`" '
          type: string
        address:
          $ref: '#/components/schemas/AccountAddress'
          description: The address of the business. Use `\n` to add a second address line.
      id: AccountBusinessInformation
      type: object
    OrderLineItemAdjustment:
      properties:
        type:
          type: string
          description: 'Type of this adjustment. Acceptable values are: - "`promotion`" '
        taxAdjustment:
          description: Adjustment for total tax of the line item.
          $ref: '#/components/schemas/Price'
        priceAdjustment:
          $ref: '#/components/schemas/Price'
          description: Adjustment for total price of the line item.
      id: OrderLineItemAdjustment
      type: object
    DatafeedsCustomBatchRequest:
      type: object
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/DatafeedsCustomBatchRequestEntry'
          type: array
      id: DatafeedsCustomBatchRequest
    PromotionPromotionStatusDestinationStatus:
      id: PromotionPromotionStatusDestinationStatus
      description: The destination status of the promotion.
      properties:
        destination:
          type: string
          description: The name of the destination.
        status:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - IN_REVIEW
            - REJECTED
            - LIVE
            - STOPPED
            - EXPIRED
            - PENDING
          description: The status for the specified destination.
          enumDescriptions:
            - Unknown promotion state.
            - The promotion is under review.
            - The promotion is disapproved
            - The promotion is approved and active.
            - The promotion is stopped by merchant.
            - The promotion is no longer active.
            - The promotion is not stopped, and all reviews are approved, but the active date is in the future.
      type: object
    ShoppingAdsProgramStatusReviewIneligibilityReasonDetails:
      id: ShoppingAdsProgramStatusReviewIneligibilityReasonDetails
      properties:
        cooldownTime:
          format: google-datetime
          type: string
          description: This timestamp represents end of cooldown period for review ineligbility reason `IN_COOLDOWN_PERIOD`.
      description: Additional details for review ineligibility reasons.
      type: object
    OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo:
      properties:
        shipmentId:
          description: Required. The ID of the shipment. This is assigned by the merchant and is unique to each shipment.
          type: string
        trackingId:
          description: The tracking ID for the shipment.
          type: string
        carrier:
          description: The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
      id: OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo
      type: object
    LiasettingsRequestGmbAccessResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsRequestGmbAccessResponse`".'
          type: string
      type: object
      id: LiasettingsRequestGmbAccessResponse
    CollectionStatusItemLevelIssue:
      properties:
        description:
          type: string
          description: A short issue description in English.
        servability:
          type: string
          description: How this issue affects the serving of the collection.
        destination:
          type: string
          description: The destination the issue applies to.
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        code:
          type: string
          description: The error code of the issue.
        applicableCountries:
          items:
            type: string
          type: array
          description: Country codes (ISO 3166-1 alpha-2) where issue applies to the offer.
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        resolution:
          description: Whether the issue can be resolved by the merchant.
          type: string
        detail:
          type: string
          description: A detailed issue description in English.
      id: CollectionStatusItemLevelIssue
      description: Issue associated with the collection.
      type: object
    OrdersReturnRefundLineItemResponse:
      id: OrdersReturnRefundLineItemResponse
      properties:
        executionStatus:
          type: string
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersReturnRefundLineItemResponse`".'
          type: string
      type: object
    LiasettingsCustomBatchRequestEntry:
      properties:
        contactEmail:
          description: Inventory validation contact email. Required only for SetInventoryValidationContact.
          type: string
        contactName:
          description: Inventory validation contact name. Required only for SetInventoryValidationContact.
          type: string
        merchantId:
          type: string
          format: uint64
          description: The ID of the managing account.
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`getAccessibleGmbAccounts`" - "`requestGmbAccess`" - "`requestInventoryVerification`" - "`setInventoryVerificationContact`" - "`update`" '
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        country:
          description: The country code. Required only for RequestInventoryVerification.
          type: string
        gmbEmail:
          description: The Business Profile. Required only for RequestGmbAccess.
          type: string
        liaSettings:
          description: The account Lia settings to update. Only defined if the method is `update`.
          $ref: '#/components/schemas/LiaSettings'
        posExternalAccountId:
          description: The account ID by which this merchant is known to the POS provider.
          type: string
        posDataProviderId:
          type: string
          description: The ID of POS data provider. Required only for SetPosProvider.
          format: uint64
        accountId:
          type: string
          description: The ID of the account for which to get/update account LIA settings.
          format: uint64
      id: LiasettingsCustomBatchRequestEntry
      type: object
    OrdersAcknowledgeRequest:
      properties:
        operationId:
          type: string
          description: The ID of the operation. Unique across all operations for a given order.
      type: object
      id: OrdersAcknowledgeRequest
    OrderreturnsCreateOrderReturnRequest:
      type: object
      id: OrderreturnsCreateOrderReturnRequest
      properties:
        lineItems:
          items:
            $ref: '#/components/schemas/OrderreturnsLineItem'
          description: The list of line items to return.
          type: array
        returnMethodType:
          description: The way of the package being returned.
          type: string
        orderId:
          description: The ID of the order.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
    AccountsAuthInfoResponse:
      properties:
        accountIdentifiers:
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          type: array
          description: 'The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined. '
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsAuthInfoResponse`".'
      id: AccountsAuthInfoResponse
      type: object
    CaptureOrderResponse:
      description: Response message for the CaptureOrder method.
      properties:
        executionStatus:
          enumDescriptions:
            - Default value. This value is unused.
            - The request was completed successfully.
            - The request was not performed because it already executed once successfully.
          enum:
            - EXECUTION_STATUS_UNSPECIFIED
            - EXECUTED
            - DUPLICATE
          type: string
          description: 'The status of the execution. Only defined if the request was successful. Acceptable values are: * "duplicate" * "executed"'
      id: CaptureOrderResponse
      type: object
    ProductViewItemIssue:
      type: object
      properties:
        severity:
          description: Item issue severity.
          $ref: '#/components/schemas/ProductViewItemIssueItemIssueSeverity'
        issueType:
          description: Item issue type.
          $ref: '#/components/schemas/ProductViewItemIssueItemIssueType'
        resolution:
          type: string
          enumDescriptions:
            - Unknown resolution type.
            - The merchant has to fix the issue.
            - The issue will be resolved automatically (for example, image crawl), or Google review. No merchant action is required now. Resolution might lead to another issue (for example, if crawl fails).
          description: Item issue resolution.
          enum:
            - UNKNOWN
            - MERCHANT_ACTION
            - PENDING_PROCESSING
      description: Item issue associated with the product.
      id: ProductViewItemIssue
    AccountCredentials:
      id: AccountCredentials
      description: Credentials allowing Google to call a partner's API on behalf of a merchant.
      type: object
      properties:
        accessToken:
          type: string
          description: An OAuth access token.
        expiresIn:
          format: int64
          type: string
          description: The amount of time, in seconds, after which the access token is no longer valid.
        purpose:
          description: Indicates to Google how Google should use these OAuth tokens.
          enum:
            - ACCOUNT_CREDENTIALS_PURPOSE_UNSPECIFIED
            - SHOPIFY_ORDER_MANAGEMENT
            - SHOPIFY_INTEGRATION
          enumDescriptions:
            - Unknown purpose.
            - The credentials allow Google to manage Shopify orders on behalf of the merchant (deprecated).
            - The credentials allow Google to manage Shopify integration on behalf of the merchant.
          type: string
    OnboardBuyOnGoogleProgramRequest:
      type: object
      properties:
        customerServiceEmail:
          type: string
          description: The customer service email.
      id: OnboardBuyOnGoogleProgramRequest
      description: Request message for the OnboardProgram method.
    HolidaysHoliday:
      type: object
      properties:
        countryCode:
          description: The CLDR territory code of the country in which the holiday is available. For example, "US", "DE", "GB". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present.
          type: string
        type:
          description: 'The holiday type. Always present. Acceptable values are: - "`Christmas`" - "`Easter`" - "`Father''s Day`" - "`Halloween`" - "`Independence Day (USA)`" - "`Mother''s Day`" - "`Thanksgiving`" - "`Valentine''s Day`" '
          type: string
        deliveryGuaranteeHour:
          description: 'Hour of the day in the delivery location''s timezone on the guaranteed delivery date by which the order has to arrive at the customer''s. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.'
          format: uint64
          type: string
        id:
          type: string
          description: Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present.
        deliveryGuaranteeDate:
          type: string
          description: Date on which the order has to arrive at the customer's, in ISO 8601 format. For example, "2016-12-24" for 24th December 2016. Always present.
        date:
          type: string
          description: Date of the holiday, in ISO 8601 format. For example, "2016-12-25" for Christmas 2016. Always present.
      id: HolidaysHoliday
    PickupServicesPickupService:
      type: object
      properties:
        serviceName:
          description: The name of the pickup service (for example, `"Access point"`). Always present.
          type: string
        country:
          type: string
          description: The CLDR country code of the carrier (for example, "US"). Always present.
        carrierName:
          description: The name of the carrier (for example, `"UPS"`). Always present.
          type: string
      id: PickupServicesPickupService
    VerifyPhoneNumberResponse:
      description: Response message for the VerifyPhoneNumber method.
      properties:
        verifiedPhoneNumber:
          description: Verified phone number if verification is successful. This phone number can only be replaced by another verified phone number.
          type: string
      id: VerifyPhoneNumberResponse
      type: object
    PosStore:
      properties:
        storeCode:
          type: string
          description: Required. A store identifier that is unique for the given merchant.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posStore`"'
        storeAddress:
          description: Required. The street address of the store.
          type: string
        placeId:
          type: string
          description: The Google Place Id of the store location.
        storeName:
          description: The merchant or store name.
          type: string
        gcidCategory:
          items:
            type: string
          description: The business type of the store.
          type: array
        websiteUrl:
          description: The website url for the store or merchant.
          type: string
        phoneNumber:
          type: string
          description: The store phone number.
      id: PosStore
      type: object
      description: Store resource.
    LocalinventoryCustomBatchResponseEntry:
      id: LocalinventoryCustomBatchResponseEntry
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#localinventoryCustomBatchResponseEntry`"'
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        batchId:
          format: uint32
          description: The ID of the request entry this entry responds to.
          type: integer
      description: Batch entry encoding a single local inventory update response.
    OrdersInStoreRefundLineItemRequest:
      type: object
      id: OrdersInStoreRefundLineItemRequest
      properties:
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        taxAmount:
          description: The amount of tax to be refunded. Required.
          $ref: '#/components/schemas/Price'
        lineItemId:
          type: string
          description: The ID of the line item to return. Either lineItemId or productId is required.
        quantity:
          type: integer
          description: The quantity to return and refund.
          format: uint32
        reasonText:
          description: The explanation of the reason.
          type: string
        priceAmount:
          $ref: '#/components/schemas/Price'
          description: The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. Required.
        productId:
          type: string
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        operationId:
          type: string
          description: The ID of the operation. Unique across all operations for a given order.
    TestOrder:
      properties:
        predefinedDeliveryAddress:
          type: string
          description: 'Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
        lineItems:
          items:
            $ref: '#/components/schemas/TestOrderLineItem'
          description: Required. Line items that are ordered. At least one line item must be provided.
          type: array
        shippingOption:
          description: 'Required. The requested shipping option. Acceptable values are: - "`economy`" - "`expedited`" - "`oneDay`" - "`sameDay`" - "`standard`" - "`twoDay`" '
          type: string
        pickupDetails:
          $ref: '#/components/schemas/TestOrderPickupDetails'
          description: Overrides the predefined pickup details if provided.
        predefinedEmail:
          description: 'Required. Email address of the customer. Acceptable values are: - "`pog.dwight.schrute@gmail.com`" - "`pog.jim.halpert@gmail.com`" - "`penpog.pam.beesly@gmail.comding`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#testOrder`"'
          type: string
        deliveryDetails:
          $ref: '#/components/schemas/TestOrderDeliveryDetails'
          description: Overrides the predefined delivery details if provided.
        predefinedBillingAddress:
          description: 'Required. The billing address. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
          type: string
        predefinedPickupDetails:
          description: 'Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
          type: string
        shippingCost:
          $ref: '#/components/schemas/Price'
          description: Required. The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states.
        notificationMode:
          description: Restricted. Do not use.
          type: string
        enableOrderinvoices:
          description: Whether the orderinvoices service should support this order.
          type: boolean
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/OrderPromotion'
          description: Promotions associated with the order.
      type: object
      id: TestOrder
    TestOrderLineItem:
      properties:
        quantityOrdered:
          format: uint32
          type: integer
          description: Required. Number of items ordered.
        returnInfo:
          $ref: '#/components/schemas/OrderLineItemReturnInfo'
          description: Required. Details of the return policy for the line item.
        shippingDetails:
          $ref: '#/components/schemas/OrderLineItemShippingDetails'
          description: Required. Details of the requested shipping for the line item.
        product:
          $ref: '#/components/schemas/TestOrderLineItemProduct'
          description: Required. Product data from the time of the order placement.
      type: object
      id: TestOrderLineItem
    ReturnaddressCustomBatchResponseEntry:
      id: ReturnaddressCustomBatchResponseEntry
      properties:
        errors:
          description: A list of errors defined if, and only if, the request failed.
          $ref: '#/components/schemas/Errors'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnaddressCustomBatchResponseEntry`"'
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        returnAddress:
          description: The retrieved return address.
          $ref: '#/components/schemas/ReturnAddress'
      type: object
    DatafeedstatusesCustomBatchResponse:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/DatafeedstatusesCustomBatchResponseEntry'
          type: array
          description: The result of the execution of the batch requests.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedstatusesCustomBatchResponse`".'
          type: string
      type: object
      id: DatafeedstatusesCustomBatchResponse
    OrderShipmentLineItemShipment:
      properties:
        productId:
          type: string
          description: The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required.
        quantity:
          type: integer
          format: uint32
          description: The quantity that is shipped.
        lineItemId:
          description: The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required.
          type: string
      id: OrderShipmentLineItemShipment
      type: object
    OrderPickupDetails:
      properties:
        collectors:
          type: array
          description: Collectors authorized to pick up shipment from the pickup location.
          items:
            $ref: '#/components/schemas/OrderPickupDetailsCollector'
        pickupType:
          type: string
          description: 'The pickup type of this order. Acceptable values are: - "`merchantStore`" - "`merchantStoreCurbside`" - "`merchantStoreLocker`" - "`thirdPartyPickupPoint`" - "`thirdPartyLocker`" '
        address:
          description: Address of the pickup location where the shipment should be sent. Note that `recipientName` in the address is the name of the business at the pickup location.
          $ref: '#/components/schemas/OrderAddress'
        locationId:
          type: string
          description: ID of the pickup location.
      type: object
      id: OrderPickupDetails
    PosInventoryRequest:
      properties:
        timestamp:
          type: string
          description: Required. The inventory timestamp, in ISO 8601 format.
        gtin:
          type: string
          description: Global Trade Item Number.
        price:
          description: Required. The current price of the item.
          $ref: '#/components/schemas/Price'
        quantity:
          type: string
          format: int64
          description: Required. The available quantity of the item.
        itemId:
          type: string
          description: Required. A unique identifier for the item.
        storeCode:
          type: string
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        contentLanguage:
          type: string
          description: Required. The two-letter ISO 639-1 language code for the item.
      id: PosInventoryRequest
      type: object
    AccountStatusProducts:
      properties:
        itemLevelIssues:
          items:
            $ref: '#/components/schemas/AccountStatusItemLevelIssue'
          description: List of item-level issues.
          type: array
        country:
          description: The country the data applies to.
          type: string
        destination:
          description: The destination the data applies to.
          type: string
        channel:
          type: string
          description: 'The channel the data applies to. Acceptable values are: - "`local`" - "`online`" '
        statistics:
          description: Aggregated product statistics.
          $ref: '#/components/schemas/AccountStatusStatistics'
      type: object
      id: AccountStatusProducts
    LinkedAccount:
      properties:
        linkedAccountId:
          description: The ID of the linked account.
          type: string
        services:
          items:
            $ref: '#/components/schemas/LinkService'
          description: List of provided services.
          type: array
      type: object
      id: LinkedAccount
    OrdersUpdateShipmentRequest:
      properties:
        shipmentId:
          type: string
          description: The ID of the shipment.
        status:
          type: string
          description: 'New status for the shipment. Not updated if missing. Acceptable values are: - "`delivered`" - "`undeliverable`" - "`readyForPickup`" '
        scheduledDeliveryDetails:
          description: Delivery details of the shipment if scheduling is needed.
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails'
        lastPickupDate:
          description: Date after which the pickup will expire, in ISO 8601 format. Required only when order is buy-online-pickup-in-store(BOPIS) and `status` is `ready for pickup`.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.
          type: string
        carrier:
          description: The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
        undeliveredDate:
          description: Date on which the shipment has been undeliverable, in ISO 8601 format. Optional and can be provided only if `status` is `undeliverable`.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        readyPickupDate:
          type: string
          description: Date on which the shipment has been ready for pickup, in ISO 8601 format. Optional and can be provided only if `status` is `ready for pickup`.
        trackingId:
          type: string
          description: The tracking ID for the shipment. Not updated if missing.
      id: OrdersUpdateShipmentRequest
      type: object
    ReturnpolicyCustomBatchResponseEntry:
      type: object
      id: ReturnpolicyCustomBatchResponseEntry
      properties:
        errors:
          description: A list of errors defined if, and only if, the request failed.
          $ref: '#/components/schemas/Errors'
        returnPolicy:
          description: The retrieved return policy.
          $ref: '#/components/schemas/ReturnPolicy'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnpolicyCustomBatchResponseEntry`"'
          type: string
        batchId:
          type: integer
          format: uint32
          description: The ID of the request entry to which this entry responds.
    FreeListingsProgramStatusRegionStatus:
      description: Status of program and region.
      properties:
        regionCodes:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.
          type: array
          items:
            type: string
        reviewIssues:
          description: Issues evaluated in the review process. Fix all issues before requesting a review.
          type: array
          items:
            type: string
        reviewIneligibilityReasonDetails:
          $ref: '#/components/schemas/FreeListingsProgramStatusReviewIneligibilityReasonDetails'
          description: Additional information for ineligibility. If `reviewIneligibilityReason` is `IN_COOLDOWN_PERIOD`, a timestamp for the end of the cooldown period is provided.
        eligibilityStatus:
          enum:
            - STATE_UNSPECIFIED
            - APPROVED
            - DISAPPROVED
            - WARNING
            - UNDER_REVIEW
            - PENDING_REVIEW
            - ONBOARDING
          type: string
          description: Eligibility status of the standard free listing program.
          enumDescriptions:
            - State is not known.
            - If the account has no issues and review is completed successfully.
            - There are one or more issues that needs to be resolved for account to be active for the program. Detailed list of account issues are available in [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses) API.
            - If account has issues but offers are servable. Some of the issue can make account DISAPPROVED after a certain deadline.
            - Account is under review.
            - Account is waiting for review to start.
            - Program is currently onboarding. Upload valid offers to complete onboarding.
        onboardingIssues:
          description: Issues that must be fixed to be eligible for review.
          items:
            type: string
          type: array
        reviewIneligibilityReason:
          type: string
          enumDescriptions:
            - Requesting a review from Google is not possible.
            - All onboarding issues needs to be fixed.
            - Not enough offers uploaded for this country.
            - Cooldown period applies. Wait until cooldown period ends.
            - Account is already under review.
            - No issues available to review.
            - Account will be automatically reviewed at the end of the grace period.
            - Account is retired. Should not appear in MC.
            - Account was already reviewd.
          description: Review ineligibility reason if account is not eligible for review.
          enum:
            - REVIEW_INELIGIBILITY_REASON_UNSPECIFIED
            - ONBOARDING_ISSUES
            - NOT_ENOUGH_OFFERS
            - IN_COOLDOWN_PERIOD
            - ALREADY_UNDER_REVIEW
            - NO_REVIEW_REQUIRED
            - WILL_BE_REVIEWED_AUTOMATICALLY
            - IS_RETIRED
            - ALREADY_REVIEWED
        reviewIneligibilityReasonDescription:
          type: string
          description: Reason a program in a specific region isnâ€™t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
        disapprovalDate:
          description: 'Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`.'
          type: string
        reviewEligibilityStatus:
          type: string
          description: If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.
          enumDescriptions:
            - Review eligibility state is unknown.
            - Account is eligible for review for a specified region code.
            - Account is not eligible for review for a specified region code.
          enum:
            - REVIEW_ELIGIBILITY_UNSPECIFIED
            - ELIGIBLE
            - INELIGIBLE
      id: FreeListingsProgramStatusRegionStatus
      type: object
    OrderOrderAnnotation:
      properties:
        key:
          description: Key for additional google provided (as key-value pairs) annotation.
          type: string
        value:
          description: Value for additional google provided (as key-value pairs) annotation.
          type: string
      id: OrderOrderAnnotation
      type: object
    OrdersCancelTestOrderByCustomerRequest:
      type: object
      id: OrdersCancelTestOrderByCustomerRequest
      properties:
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`changedMind`" - "`orderedWrongItem`" - "`other`" '
          type: string
    DatafeedTarget:
      properties:
        language:
          description: The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`.
          type: string
        feedLabel:
          type: string
          description: Feed label for the DatafeedTarget. Either `country` or `feedLabel` is required. If both `feedLabel` and `country` is specified, the values must match.
        excludedDestinations:
          description: The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center). Products that are excluded from all destinations for more than 7 days are automatically deleted.
          items:
            type: string
          type: array
        country:
          description: Deprecated. Use `feedLabel` instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code.
          type: string
        targetCountries:
          type: array
          description: The countries where the items may be displayed. Represented as a CLDR territory code. Will be ignored for "product inventory" feeds.
          items:
            type: string
        includedDestinations:
          type: array
          description: The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.
          items:
            type: string
      type: object
      id: DatafeedTarget
    RegionalinventoryCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch regional inventory request.
      id: RegionalinventoryCustomBatchRequestEntry
      type: object
      properties:
        batchId:
          format: uint32
          description: An entry ID, unique within the batch request.
          type: integer
        regionalInventory:
          description: Price and availability of the product.
          $ref: '#/components/schemas/RegionalInventory'
        method:
          description: 'Method of the batch request entry. Acceptable values are: - "`insert`" '
          type: string
        merchantId:
          format: uint64
          description: The ID of the managing account.
          type: string
        productId:
          description: The ID of the product for which to update price and availability.
          type: string
    OrderreturnsLineItem:
      properties:
        productId:
          type: string
          description: The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.
        quantity:
          format: uint32
          type: integer
          description: The quantity of this line item.
        lineItemId:
          description: The ID of the line item. This value is assigned by Google when an order is created. Either lineItemId or productId is required.
          type: string
      id: OrderreturnsLineItem
      type: object
    ReturnPolicyOnline:
      properties:
        countries:
          description: The countries of sale where the return policy is applicable. The values must be a valid 2 letter ISO 3166 code, e.g. "US".
          items:
            type: string
          type: array
        label:
          type: string
          description: The unique user-defined label of the return policy. The same label cannot be used in different return policies for the same country. Policies with the label 'default' will apply to all products, unless a product specifies a return_policy_label attribute.
        policy:
          description: The return policy.
          $ref: '#/components/schemas/ReturnPolicyOnlinePolicy'
        name:
          type: string
          description: The name of the policy as shown in Merchant Center.
        returnMethods:
          type: array
          items:
            enumDescriptions:
              - Default value. This value is unused.
              - By mail.
              - In store.
              - At a kiosk.
            type: string
            enum:
              - RETURN_METHOD_UNSPECIFIED
              - BY_MAIL
              - IN_STORE
              - AT_A_KIOSK
          description: The return methods of how customers can return an item. This value is required to not be empty unless the type of return policy is noReturns.
        returnPolicyId:
          type: string
          description: Output only. Return policy ID generated by Google.
          readOnly: true
        restockingFee:
          description: The restocking fee that applies to all return reason categories. This would be treated as a free restocking fee if the value is not set.
          $ref: '#/components/schemas/ReturnPolicyOnlineRestockingFee'
        itemConditions:
          type: array
          description: The item conditions that are accepted for returns. This is required to not be empty unless the type of return policy is noReturns.
          items:
            enumDescriptions:
              - Default value. This value is unused.
              - New.
              - Used.
            type: string
            enum:
              - ITEM_CONDITION_UNSPECIFIED
              - NEW
              - USED
        returnPolicyUri:
          description: The return policy uri. This can used by Google to do a sanity check for the policy.
          type: string
        returnReasonCategoryInfo:
          type: array
          description: The return reason category information. This required to not be empty unless the type of return policy is noReturns.
          items:
            $ref: '#/components/schemas/ReturnPolicyOnlineReturnReasonCategoryInfo'
      id: ReturnPolicyOnline
      description: Return policy online object. This is currently used to represent return policies for ads and free listings programs.
      type: object
    BuyOnGoogleProgramStatus:
      id: BuyOnGoogleProgramStatus
      description: Response message for the GetProgramStatus method.
      type: object
      properties:
        customerServicePendingPhoneNumber:
          description: The pending phone number specified for BuyOnGoogle program. It might be different than account level phone number. In order to update this field the customer_service_pending_phone_region_code must also be set. After verification this field becomes empty.
          type: string
        customerServiceVerifiedPhoneNumber:
          readOnly: true
          description: Output only. The verified phone number specified for BuyOnGoogle program. It might be different than account level phone number.
          type: string
        customerServicePendingEmail:
          description: The customer service pending email. After verification this field becomes empty.
          type: string
        participationStage:
          enum:
            - PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED
            - NOT_ELIGIBLE
            - ELIGIBLE
            - ONBOARDING
            - ELIGIBLE_FOR_REVIEW
            - PENDING_REVIEW
            - REVIEW_DISAPPROVED
            - ACTIVE
            - PAUSED
          description: Output only. The current participation stage for the program.
          type: string
          enumDescriptions:
            - Default value when participation stage is not set.
            - Merchant is not eligible for onboarding to a given program in a specific region code.
            - Merchant is eligible for onboarding to a given program in a specific region code.
            - Merchant is onboarding to a given program in a specific region code.
            - Merchant fulfilled all the requirements and is ready to request review in a specific region code.
            - Merchant is waiting for the review to be completed in a specific region code.
            - The review for a merchant has been rejected in a specific region code.
            - Merchant's program participation is active for a specific region code.
            - Participation has been paused.
          readOnly: true
        businessModel:
          description: The business models in which merchant participates.
          items:
            enum:
              - BUSINESS_MODEL_UNSPECIFIED
              - MANUFACTURER
              - IMPORTER
              - RESELLER
              - OTHER
            enumDescriptions:
              - Default value when business model is not set.
              - Merchant is a manufacturer.
              - Merchant is an importer.
              - Merchant is a reseller.
              - Merchant has a different business model.
            type: string
          type: array
        onlineSalesChannel:
          type: string
          description: The channels through which the merchant is selling.
          enum:
            - ONLINE_SALES_CHANNEL_UNSPECIFIED
            - GOOGLE_EXCLUSIVE
            - GOOGLE_AND_OTHER_WEBSITES
          enumDescriptions:
            - Default value when online sales channel is not set.
            - Merchant is selling exclusively on Google.
            - Merchant is selling on Google and other websites.
        customerServiceVerifiedPhoneRegionCode:
          readOnly: true
          type: string
          description: Output only. Two letter country code for the verified phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.
        customerServicePendingPhoneRegionCode:
          description: Two letter country code for the pending phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes. In order to update this field the customer_service_pending_phone_number must also be set. After verification this field becomes empty.
          type: string
        customerServiceVerifiedEmail:
          type: string
          description: Output only. The customer service verified email.
          readOnly: true
    RegionalinventoryCustomBatchResponse:
      id: RegionalinventoryCustomBatchResponse
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#regionalinventoryCustomBatchResponse`".'
          type: string
        entries:
          items:
            $ref: '#/components/schemas/RegionalinventoryCustomBatchResponseEntry'
          type: array
          description: The result of the execution of the batch requests.
    OrderLineItemReturnInfo:
      properties:
        daysToReturn:
          description: Required. How many days later the item can be returned.
          format: int32
          type: integer
        policyUrl:
          type: string
          description: Required. URL of the item return policy.
        isReturnable:
          type: boolean
          description: Required. Whether the item is returnable.
      id: OrderLineItemReturnInfo
      type: object
    ListRepricingProductReportsResponse:
      type: object
      description: Response message for the ListRepricingProductReports method.
      properties:
        nextPageToken:
          description: A token for retrieving the next page. Its absence means there is no subsequent page.
          type: string
        repricingProductReports:
          items:
            $ref: '#/components/schemas/RepricingProductReport'
          type: array
          description: Periodic reports for the given Repricing product.
      id: ListRepricingProductReportsResponse
    Account:
      properties:
        adsLinks:
          type: array
          items:
            $ref: '#/components/schemas/AccountAdsLink'
          description: Linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the Ads interface or through the Google Ads API. To delete an active link, or to cancel a link request, remove it from the list.
        automaticImprovements:
          description: The automatic improvements of the account can be used to automatically update items, improve images and shipping. Each section inside AutomaticImprovements is updated separately.
          $ref: '#/components/schemas/AccountAutomaticImprovements'
        cssId:
          format: uint64
          description: ID of CSS the account belongs to.
          type: string
        accountManagement:
          readOnly: true
          type: string
          description: 'Output only. How the account is managed. Acceptable values are: - "`manual`" - "`automatic`" '
        automaticLabelIds:
          type: array
          items:
            type: string
            format: uint64
          description: Automatically created label IDs that are assigned to the account by CSS Center.
        adultContent:
          description: Indicates whether the merchant sells adult content.
          type: boolean
        name:
          description: Required. Display name for the account.
          type: string
        businessInformation:
          $ref: '#/components/schemas/AccountBusinessInformation'
          description: The business information of the account.
        id:
          format: uint64
          type: string
          description: Required. 64-bit Merchant Center account ID.
        googleMyBusinessLink:
          description: The Business Profile which is linked or in the process of being linked with the Merchant Center account.
          $ref: '#/components/schemas/AccountGoogleMyBusinessLink'
        websiteUrl:
          description: The merchant's website.
          type: string
        youtubeChannelLinks:
          items:
            $ref: '#/components/schemas/AccountYouTubeChannelLink'
          type: array
          description: Linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.
        sellerId:
          description: Client-specific, locally-unique, internal ID for the child account.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#account`".'
        labelIds:
          type: array
          description: Manually created label IDs that are assigned to the account by CSS.
          items:
            type: string
            format: uint64
        users:
          items:
            $ref: '#/components/schemas/AccountUser'
          description: Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
          type: array
      type: object
      id: Account
      description: Account data. After the creation of a new account it may take a few minutes before it's fully operational. The methods delete, insert, and update require the admin role.
    OrdersSetLineItemMetadataResponse:
      id: OrdersSetLineItemMetadataResponse
      type: object
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersSetLineItemMetadataResponse`".'
          type: string
    ProductWeight:
      id: ProductWeight
      properties:
        unit:
          description: 'Required. The weight unit. Acceptable values are: - "`g`" - "`kg`" - "`oz`" - "`lb`" '
          type: string
        value:
          format: double
          type: number
          description: Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.
      type: object
    OrderCustomer:
      properties:
        marketingRightsInfo:
          description: Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order.
          $ref: '#/components/schemas/OrderCustomerMarketingRightsInfo'
        fullName:
          description: Full name of the customer.
          type: string
        loyaltyInfo:
          $ref: '#/components/schemas/OrderCustomerLoyaltyInfo'
          description: Loyalty program information.
        invoiceReceivingEmail:
          type: string
          description: Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Buy on Google.
      type: object
      id: OrderCustomer
    AccounttaxCustomBatchResponseEntry:
      type: object
      description: A batch entry encoding a single non-batch accounttax response.
      properties:
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        batchId:
          format: uint32
          type: integer
          description: The ID of the request entry this entry responds to.
        accountTax:
          $ref: '#/components/schemas/AccountTax'
          description: The retrieved or updated account tax settings.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accounttaxCustomBatchResponseEntry`"'
          type: string
      id: AccounttaxCustomBatchResponseEntry
    GmbAccountsGmbAccount:
      type: object
      id: GmbAccountsGmbAccount
      properties:
        listingCount:
          type: string
          format: uint64
          description: Number of listings under this account.
        type:
          type: string
          description: The type of the Business Profile (User or Business).
        name:
          type: string
          description: The name of the Business Profile.
        email:
          type: string
          description: The email which identifies the Business Profile.
    CutoffTime:
      properties:
        timezone:
          type: string
          description: Timezone identifier for the cutoff time (for example, "Europe/Zurich"). List of identifiers. Required.
        hour:
          type: integer
          format: uint32
          description: Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.
        minute:
          format: uint32
          type: integer
          description: Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.
      type: object
      id: CutoffTime
    ShippingsettingsCustomBatchResponseEntry:
      type: object
      description: A batch entry encoding a single non-batch shipping settings response.
      id: ShippingsettingsCustomBatchResponseEntry
      properties:
        shippingSettings:
          description: The retrieved or updated account shipping settings.
          $ref: '#/components/schemas/ShippingSettings'
        errors:
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
          $ref: '#/components/schemas/Errors'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsCustomBatchResponseEntry`"'
        batchId:
          type: integer
          format: uint32
          description: The ID of the request entry to which this entry responds.
    Css:
      properties:
        cssDomainId:
          type: string
          description: Output only. Immutable. The CSS domain ID.
          format: int64
          readOnly: true
        cssGroupId:
          format: int64
          readOnly: true
          type: string
          description: Output only. Immutable. The ID of the CSS group this CSS domain is affiliated with. Only populated for CSS group users.
        fullName:
          description: Output only. Immutable. The CSS domain's full name.
          type: string
          readOnly: true
        displayName:
          readOnly: true
          description: Output only. Immutable. The CSS domain's display name, used when space is constrained.
          type: string
        homepageUri:
          readOnly: true
          description: Output only. Immutable. The CSS domain's homepage.
          type: string
        labelIds:
          type: array
          items:
            type: string
            format: int64
          description: A list of label IDs that are assigned to this CSS domain by its CSS group. Only populated for CSS group users.
      description: Information about CSS domain.
      id: Css
      type: object
    TestOrderPickupDetailsPickupPerson:
      type: object
      id: TestOrderPickupDetailsPickupPerson
      properties:
        phoneNumber:
          type: string
          description: Required. The phone number of the person picking up the items.
        name:
          type: string
          description: Required. Full name of the pickup person.
    Brand:
      id: Brand
      properties:
        name:
          description: Name of the brand.
          type: string
      description: Brand fields. Values are only set for fields requested explicitly in the request's search query.
      type: object
    RequestPhoneVerificationRequest:
      id: RequestPhoneVerificationRequest
      description: Request message for the RequestPhoneVerification method.
      properties:
        phoneRegionCode:
          description: Required. Two letter country code for the phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.
          type: string
        phoneVerificationMethod:
          description: Verification method to receive verification code.
          enum:
            - PHONE_VERIFICATION_METHOD_UNSPECIFIED
            - SMS
            - PHONE_CALL
          type: string
          enumDescriptions:
            - Unknown method.
            - Receive verification code by SMS.
            - Receive verification code by phone call.
        phoneNumber:
          type: string
          description: Phone number to be verified.
        languageCode:
          type: string
          description: Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) (for example, en-US). Language code is used to provide localized `SMS` and `PHONE_CALL`. Default language used is en-US if not provided.
      type: object
    ProductTax:
      properties:
        region:
          description: The geographic region to which the tax rate applies.
          type: string
        taxShip:
          type: boolean
          description: Should be set to true if tax is charged on shipping.
        rate:
          type: number
          description: The percentage of tax rate that applies to the item price.
          format: double
        locationId:
          format: int64
          type: string
          description: The numeric ID of a location that the tax rate applies to as defined in the Google Ads API.
        country:
          type: string
          description: The country within which the item is taxed, specified as a CLDR territory code.
        postalCode:
          description: 'The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.'
          type: string
      type: object
      id: ProductTax
    ECommercePlatformLinkInfo:
      properties:
        externalAccountId:
          type: string
          description: The id used by the third party service provider to identify the merchant.
      description: Additional information required for E_COMMERCE_PLATFORM link type.
      type: object
      id: ECommercePlatformLinkInfo
    AccountAutomaticImprovements:
      type: object
      properties:
        itemUpdates:
          $ref: '#/components/schemas/AccountItemUpdates'
          description: Turning on [item updates](https://support.google.com/merchants/answer/3246284) allows Google to automatically update items for you. When item updates are on, Google uses the structured data markup on the website and advanced data extractors to update the price and availability of the items. When the item updates are off, items with mismatched data aren't shown. This field is only updated (cleared) if provided.
        imageImprovements:
          description: 'This improvement will attempt to automatically correct submitted images if they don''t meet the [image requirements](https://support.google.com/merchants/answer/6324350), for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: [Automatic image improvements](https://support.google.com/merchants/answer/9242973) This field is only updated (cleared) if provided.'
          $ref: '#/components/schemas/AccountImageImprovements'
        shippingImprovements:
          description: 'Not available for MCAs [accounts](https://support.google.com/merchants/answer/188487). By turning on [automatic shipping improvements](https://support.google.com/merchants/answer/10027038), you are allowing Google to improve the accuracy of your delivery times shown to shoppers using Google. More accurate delivery times, especially when faster, typically lead to better conversion rates. Google will improve your estimated delivery times based on various factors: - Delivery address of an order - Current handling time and shipping time settings - Estimated weekdays or business days - Parcel tracking data This field is only updated (cleared) if provided.'
          $ref: '#/components/schemas/AccountShippingImprovements'
      description: The automatic improvements of the account can be used to automatically update items, improve images and shipping.
      id: AccountAutomaticImprovements
    SettlementTransactionIdentifiers:
      properties:
        merchantOrderId:
          description: The merchant provided order ID.
          type: string
        adjustmentId:
          description: The identifier of the adjustments, if it's available.
          type: string
        shipmentIds:
          items:
            type: string
          description: The shipment ids for the item.
          type: array
        transactionId:
          type: string
          description: The Google transaction ID.
        settlementEntryId:
          type: string
          description: The unique ID of the settlement transaction entry.
        orderItemId:
          description: The identifier of the item.
          type: string
      id: SettlementTransactionIdentifiers
      type: object
    ReturnaddressCustomBatchResponse:
      type: object
      id: ReturnaddressCustomBatchResponse
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ReturnaddressCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnaddressCustomBatchResponse`".'
          type: string
    LiasettingsRequestInventoryVerificationResponse:
      id: LiasettingsRequestInventoryVerificationResponse
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsRequestInventoryVerificationResponse`".'
    PriceCompetitiveness:
      description: Price Competitiveness fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceCompetitivenessProductView`. https://support.google.com/merchants/answer/9626903
      type: object
      properties:
        benchmarkPriceMicros:
          type: string
          format: int64
          description: The latest available price benchmark in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) for the product's catalog in the benchmark country.
        benchmarkPriceCurrencyCode:
          description: The price benchmark currency (ISO 4217 code).
          type: string
        countryCode:
          description: The country of the price benchmark (ISO 3166 code).
          type: string
      id: PriceCompetitiveness
    LinkService:
      type: object
      properties:
        service:
          type: string
          description: 'Service provided to or by the linked account. Acceptable values are: - "`shoppingActionsOrderManagement`" - "`shoppingActionsProductManagement`" - "`shoppingAdsProductManagement`" - "`paymentProcessing`" '
        status:
          description: 'Status of the link Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
      id: LinkService
    OrderreturnsProcessResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreturnsProcessResponse`".'
          type: string
        executionStatus:
          type: string
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
      id: OrderreturnsProcessResponse
      type: object
    ActivateBuyOnGoogleProgramRequest:
      id: ActivateBuyOnGoogleProgramRequest
      description: Request message for the ActivateProgram method.
      type: object
      properties: {}
    OrderinvoicesCreateChargeInvoiceRequest:
      type: object
      properties:
        operationId:
          type: string
          description: '[required] The ID of the operation, unique across all operations for a given order.'
        invoiceSummary:
          description: '[required] Invoice summary.'
          $ref: '#/components/schemas/InvoiceSummary'
        lineItemInvoices:
          items:
            $ref: '#/components/schemas/ShipmentInvoiceLineItemInvoice'
          description: '[required] Invoice details per line item.'
          type: array
        shipmentGroupId:
          description: '[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges.'
          type: string
        invoiceId:
          description: '[required] The ID of the invoice.'
          type: string
      id: OrderinvoicesCreateChargeInvoiceRequest
    OrderreportsListDisbursementsResponse:
      type: object
      properties:
        nextPageToken:
          description: The token for the retrieval of the next page of disbursements.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreportsListDisbursementsResponse`".'
          type: string
        disbursements:
          items:
            $ref: '#/components/schemas/OrderReportDisbursement'
          description: The list of disbursements.
          type: array
      id: OrderreportsListDisbursementsResponse
    PosCustomBatchRequestEntry:
      id: PosCustomBatchRequestEntry
      type: object
      properties:
        storeCode:
          type: string
          description: The store code. This should be set only if the method is `delete` or `get`.
        sale:
          description: The sale information to submit. This should be set only if the method is `sale`.
          $ref: '#/components/schemas/PosSale'
        store:
          description: The store information to submit. This should be set only if the method is `insert`.
          $ref: '#/components/schemas/PosStore'
        inventory:
          description: The inventory to submit. This should be set only if the method is `inventory`.
          $ref: '#/components/schemas/PosInventory'
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the POS data provider.
          type: string
          format: uint64
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" - "`inventory`" - "`sale`" '
          type: string
        targetMerchantId:
          description: The ID of the account for which to get/submit data.
          type: string
          format: uint64
    MinimumOrderValueTable:
      type: object
      properties:
        storeCodeSetWithMovs:
          type: array
          items:
            $ref: '#/components/schemas/MinimumOrderValueTableStoreCodeSetWithMov'
      id: MinimumOrderValueTable
    OrderTrackingSignalLineItemDetails:
      description: The line items of the order.
      id: OrderTrackingSignalLineItemDetails
      properties:
        sku:
          description: Merchant SKU for this item (deprecated).
          type: string
        lineItemId:
          description: Required. The ID for this line item.
          type: string
        productId:
          type: string
          description: Required. The Content API REST ID of the product, in the form channel:contentLanguage:targetCountry:offerId.
        brand:
          type: string
          description: Brand of the product.
        gtin:
          description: The Global Trade Item Number.
          type: string
        productTitle:
          description: Plain text title of this product.
          type: string
        mpn:
          description: The manufacturer part number.
          type: string
        upc:
          description: 'Universal product code for this item (deprecated: Please use GTIN instead).'
          type: string
        quantity:
          type: string
          description: The quantity of the line item in the order.
          format: int64
        productDescription:
          description: 'Plain text description of this product (deprecated: Please use product_title instead).'
          type: string
      type: object
    Installment:
      id: Installment
      properties:
        amount:
          description: The amount the buyer has to pay per month.
          $ref: '#/components/schemas/Price'
        months:
          type: string
          format: int64
          description: The number of installments the buyer has to pay.
      type: object
    TestOrderPickupDetails:
      properties:
        pickupLocationType:
          description: 'Pickup location type. Acceptable values are: - "`locker`" - "`store`" - "`curbside`" '
          type: string
        pickupLocationAddress:
          description: Required. Pickup location address.
          $ref: '#/components/schemas/TestOrderAddress'
        pickupPersons:
          type: array
          description: Required. all pickup persons set by users.
          items:
            $ref: '#/components/schemas/TestOrderPickupDetailsPickupPerson'
        locationCode:
          description: Required. Code of the location defined by provider or merchant.
          type: string
      type: object
      id: TestOrderPickupDetails
    RegionalInventory:
      id: RegionalInventory
      properties:
        salePrice:
          description: The sale price of the product. Mandatory if `sale_price_effective_date` is defined.
          $ref: '#/components/schemas/Price'
        customAttributes:
          description: A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form.
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
        price:
          $ref: '#/components/schemas/Price'
          description: The price of the product.
        salePriceEffectiveDate:
          description: A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.
          type: string
        availability:
          type: string
          description: The availability of the product.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#regionalInventory`".'
          type: string
        regionId:
          description: The ID uniquely identifying each region.
          type: string
      description: Regional inventory resource. contains the regional name and all attributes which are overridden for the specified region.
      type: object
    PauseBuyOnGoogleProgramRequest:
      type: object
      id: PauseBuyOnGoogleProgramRequest
      description: Request message for the PauseProgram method.
      properties: {}
    SettlementReport:
      id: SettlementReport
      type: object
      description: ' Settlement reports detail order-level and item-level credits and debits between you and Google.'
      properties:
        previousBalance:
          description: The residual amount from the previous invoice. This is set only if the previous invoices are not paid because of negative balance.
          $ref: '#/components/schemas/Price'
        startDate:
          type: string
          description: The start date on which all transactions are included in the report, in ISO 8601 format.
        settlementId:
          type: string
          description: The ID of the settlement report.
        transferDate:
          description: Date on which transfer for this payment was initiated by Google, in ISO 8601 format.
          type: string
        transferIds:
          items:
            type: string
          description: The list of bank identifiers used for the transfer. For example, Trace ID for Federal Automated Clearing House (ACH). This may also be known as the Wire ID.
          type: array
        endDate:
          description: The end date on which all transactions are included in the report, in ISO 8601 format.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#settlementReport`"'
        transferAmount:
          description: The money due to the merchant.
          $ref: '#/components/schemas/Price'
    OrderReportDisbursement:
      description: Order disbursement. All methods require the payment analyst role.
      id: OrderReportDisbursement
      type: object
      properties:
        merchantId:
          format: uint64
          description: The ID of the managing account.
          type: string
        disbursementCreationDate:
          description: The disbursement date, in ISO 8601 format.
          type: string
        disbursementId:
          type: string
          description: The ID of the disbursement.
        disbursementDate:
          description: The date the disbursement was initiated, in ISO 8601 format.
          type: string
        disbursementAmount:
          description: The disbursement amount.
          $ref: '#/components/schemas/Price'
    OrdersUpdateLineItemShippingDetailsRequest:
      type: object
      properties:
        shipByDate:
          description: Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can't be a date in the past.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        deliverByDate:
          type: string
          description: Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can't be a date in the past.
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or productId is required.
          type: string
        productId:
          type: string
          description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
      id: OrdersUpdateLineItemShippingDetailsRequest
    LiaPosDataProvider:
      id: LiaPosDataProvider
      properties:
        posDataProviderId:
          type: string
          format: uint64
          description: The ID of the POS data provider.
        posExternalAccountId:
          description: The account ID by which this merchant is known to the POS data provider.
          type: string
      type: object
    ListRepricingRuleReportsResponse:
      description: Response message for the ListRepricingRuleReports method.
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token for retrieving the next page. Its absence means there is no subsequent page.
        repricingRuleReports:
          type: array
          description: Daily reports for the given Repricing rule.
          items:
            $ref: '#/components/schemas/RepricingRuleReport'
      id: ListRepricingRuleReportsResponse
    ProductStatusItemLevelIssue:
      type: object
      id: ProductStatusItemLevelIssue
      properties:
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        servability:
          description: How this issue affects serving of the offer.
          type: string
        destination:
          description: The destination the issue applies to.
          type: string
        resolution:
          type: string
          description: Whether the issue can be resolved by the merchant.
        description:
          description: A short issue description in English.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        applicableCountries:
          items:
            type: string
          type: array
          description: List of country codes (ISO 3166-1 alpha-2) where issue applies to the offer.
        code:
          type: string
          description: The error code of the issue.
    Metrics:
      properties:
        returnedItems:
          format: int64
          type: string
          description: Number of ordered items sent back for return, reported on the date when the merchant accepted the return. **This metric cannot be segmented by customer_country_code.**
        orderedItemSalesMicros:
          description: Total price of ordered items in micros (1 millionth of a standard unit, 1 USD = 1000000 micros). Excludes shipping, taxes (US only), and customer cancellations that happened within 30 minutes of placing the order. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        returnsMicros:
          format: int64
          description: Total price of ordered items sent back for return in micros (1 millionth of a standard unit, 1 USD = 1000000 micros), reported on the date when the merchant accepted the return. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
          type: string
        aos:
          type: number
          format: double
          description: Average order size - the average number of items in an order. **This metric cannot be segmented by product dimensions and customer_country_code.**
        orders:
          format: int64
          type: string
          description: Number of placed orders. Excludes customer cancellations that happened within 30 minutes of placing the order. **This metric cannot be segmented by product dimensions and customer_country_code.**
        unshippedItems:
          format: double
          description: Number of ordered items not shipped up until the end of the queried day. If a multi-day period is specified in the search query, the returned value is the average number of unshipped items over the days in the queried period. **This metric cannot be segmented by customer_country_code.**
          type: number
        itemDaysToShip:
          format: double
          type: number
          description: Average number of days between an item being ordered and the item being **This metric cannot be segmented by customer_country_code.**
        conversionRate:
          format: double
          type: number
          description: Number of conversions divided by the number of clicks, reported on the impression date. The metric is currently available only for the FREE_PRODUCT_LISTING program.
        unshippedOrders:
          type: number
          description: Number of orders not shipped or partially shipped up until the end of the queried day. If a multi-day period is specified in the search query, the returned value is the average number of unshipped orders over the days in the queried period. **This metric cannot be segmented by product dimensions and customer_country_code.**
          format: double
        conversions:
          description: Number of conversions attributed to the product, reported on the conversion date. Depending on the attribution model, a conversion might be distributed across multiple clicks, where each click gets its own credit assigned. This metric is a sum of all such credits. The metric is currently available only for the FREE_PRODUCT_LISTING program.
          format: double
          type: number
        shippedOrders:
          description: Number of fully shipped orders, reported on the last shipment date. **This metric cannot be segmented by product dimensions and customer_country_code.**
          format: int64
          type: string
        itemFillRate:
          description: Percentage of shipped items in relation to all finalized items (shipped or rejected by the merchant; unshipped items are not taken into account), reported on the order date. Item fill rate is lowered by merchant rejections. **This metric cannot be segmented by customer_country_code.**
          type: number
          format: double
        impressions:
          type: string
          format: int64
          description: Number of times merchant's products are shown.
        rejectedItems:
          description: Number of ordered items canceled by the merchant, reported on the order date. **This metric cannot be segmented by customer_country_code.**
          type: string
          format: int64
        clicks:
          description: Number of clicks.
          format: int64
          type: string
        shippedItems:
          description: Number of shipped items, reported on the shipment date. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        daysToShip:
          format: double
          description: Average number of days between an order being placed and the order being fully shipped, reported on the last shipment date. **This metric cannot be segmented by product dimensions and customer_country_code.**
          type: number
        ctr:
          format: double
          type: number
          description: Click-through rate - the number of clicks merchant's products receive (clicks) divided by the number of times the products are shown (impressions).
        orderedItems:
          description: Number of ordered items. Excludes customer cancellations that happened within 30 minutes of placing the order. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        conversionValueMicros:
          description: Value of conversions in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) attributed to the product, reported on the conversion date. The metric is currently available only for the FREE_PRODUCT_LISTING program. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response.
          format: int64
          type: string
        aovMicros:
          type: number
          format: double
          description: Average order value in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) - the average value (total price of items) of all placed orders. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by product dimensions and customer_country_code.**
        shippedItemSalesMicros:
          description: Total price of shipped items in micros (1 millionth of a standard unit, 1 USD = 1000000 micros), reported on the order date. Excludes shipping and taxes (US only). The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
          type: string
          format: int64
        returnRate:
          description: Total price of returned items divided by the total price of shipped items, reported on the order date. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
          type: number
          format: double
      description: Performance metrics. Values are only set for metrics requested explicitly in the request's search query.
      id: Metrics
      type: object
    ListAccountReturnCarrierResponse:
      type: object
      properties:
        accountReturnCarriers:
          description: List of all available account return carriers for the merchant.
          items:
            $ref: '#/components/schemas/AccountReturnCarrier'
          type: array
      id: ListAccountReturnCarrierResponse
      description: Response for listing account return carriers.
    Error:
      description: An error returned by the API.
      properties:
        domain:
          type: string
          description: The domain of the error.
        message:
          type: string
          description: A description of the error.
        reason:
          type: string
          description: The error code.
      id: Error
      type: object
    RepricingProductReport:
      description: Resource that represents a daily Repricing product report. Each report contains stats for a single type of Repricing rule for a single product on a given day. If there are multiple rules of the same type for the product on that day, the report lists all the rules by rule ids, combines the stats, and paginates the results by date. To retrieve the stats of a particular rule, provide the rule_id in the request.
      properties:
        buyboxWinningProductStats:
          $ref: '#/components/schemas/RepricingProductReportBuyboxWinningProductStats'
          description: Stats specific to buybox winning rules for product report (deprecated).
        orderItemCount:
          type: integer
          description: Total unit count of impacted products ordered while the rule was active on the date of the report. This count includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
          format: int32
        highWatermark:
          $ref: '#/components/schemas/PriceAmount'
          description: Maximum displayed price after repriced during this reporting period.
        ruleIds:
          type: array
          description: Ids of the Repricing rule for this report.
          items:
            type: string
        date:
          description: Date of the stats in this report. The report starts and ends according to the merchant's timezone.
          $ref: '#/components/schemas/Date'
        applicationCount:
          type: string
          format: int64
          description: Total count of Repricer applications. This value captures how many times the rule of this type was applied to this product during this reporting period.
        lowWatermark:
          $ref: '#/components/schemas/PriceAmount'
          description: Minimum displayed price after repriced during this reporting period.
        inapplicabilityDetails:
          type: array
          items:
            $ref: '#/components/schemas/InapplicabilityDetails'
          description: List of all reasons the rule did not apply to the product during the specified reporting period.
        totalGmv:
          description: Total GMV generated by impacted products while the rule was active on the date of the report. This value includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
          $ref: '#/components/schemas/PriceAmount'
        type:
          description: Type of the rule.
          type: string
          enum:
            - REPRICING_RULE_TYPE_UNSPECIFIED
            - TYPE_STATS_BASED
            - TYPE_COGS_BASED
            - TYPE_SALES_VOLUME_BASED
            - TYPE_COMPETITIVE_PRICE
          enumDescriptions:
            - Unused.
            - Statistical measurement based rules among Google SA merchants. If this rule is chosen, repricer will adjust the offer price based on statistical metrics (currently only min is available) among other merchants who sell the same product. Details need to be provdided in the RuleDefinition.
            - Cost of goods sale based rule. Repricer will adjust the offer price based on the offer's sale cost which is provided by the merchant.
            - Sales volume based rule. Repricer will adjust the offer price based on the offer's sales volume in the past period of time defined within the rule.
            - Competitive price rule. Repricer will adjust the offer price based on the min price from a list of unnamed big competitors.
      id: RepricingProductReport
      type: object
    Table:
      type: object
      properties:
        name:
          description: Name of the table. Required for subtables, ignored for the main table.
          type: string
        columnHeaders:
          $ref: '#/components/schemas/Headers'
          description: 'Headers of the table''s columns. Optional: if not set then the table has only one dimension.'
        rows:
          description: The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.
          items:
            $ref: '#/components/schemas/Row'
          type: array
        rowHeaders:
          $ref: '#/components/schemas/Headers'
          description: Headers of the table's rows. Required.
      id: Table
    ProductStatusDestinationStatus:
      properties:
        approvedCountries:
          type: array
          items:
            type: string
          description: List of country codes (ISO 3166-1 alpha-2) where the offer is approved.
        disapprovedCountries:
          type: array
          items:
            type: string
          description: List of country codes (ISO 3166-1 alpha-2) where the offer is disapproved.
        pendingCountries:
          type: array
          description: List of country codes (ISO 3166-1 alpha-2) where the offer is pending approval.
          items:
            type: string
        destination:
          type: string
          description: The name of the destination
        status:
          description: Destination approval status in `targetCountry` of the offer.
          type: string
      type: object
      id: ProductStatusDestinationStatus
    DeliveryArea:
      type: object
      description: A delivery area for the product. Only one of `countryCode` or `postalCodeRange` must be set.
      properties:
        postalCodeRange:
          $ref: '#/components/schemas/DeliveryAreaPostalCodeRange'
          description: A postal code, postal code range or postal code prefix that defines this area. Limited to US and AUS.
        regionCode:
          description: A state, territory, or prefecture. This is supported for the United States, Australia, and Japan. Provide a subdivision code from the ISO 3166-2 code tables ([US](https://en.wikipedia.org/wiki/ISO_3166-2:US), [AU](https://en.wikipedia.org/wiki/ISO_3166-2:AU), or [JP](https://en.wikipedia.org/wiki/ISO_3166-2:JP)) without country prefix (for example, `"NY"`, `"NSW"`, `"03"`).
          type: string
        countryCode:
          type: string
          description: Required. The country that the product can be delivered to. Submit a [unicode CLDR region](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) such as `US` or `CH`.
      id: DeliveryArea
    VerifyPhoneNumberRequest:
      description: Request message for the VerifyPhoneNumber method.
      id: VerifyPhoneNumberRequest
      type: object
      properties:
        verificationId:
          type: string
          description: The verification ID returned by `requestphoneverification`.
        verificationCode:
          description: The verification code that was sent to the phone number for validation.
          type: string
        phoneVerificationMethod:
          enum:
            - PHONE_VERIFICATION_METHOD_UNSPECIFIED
            - SMS
            - PHONE_CALL
          enumDescriptions:
            - Unknown method.
            - Receive verification code by SMS.
            - Receive verification code by phone call.
          description: Verification method used to receive verification code.
          type: string
    RepricingRuleStatsBasedRule:
      type: object
      description: Definition of stats based rule.
      properties:
        percentageDelta:
          description: The percent change against the price target. Valid from 0 to 100 inclusively.
          format: int32
          type: integer
        priceDelta:
          type: string
          description: The price delta against the above price target. A positive value means the price should be adjusted to be above statistical measure, and a negative value means below. Currency code must not be included.
      id: RepricingRuleStatsBasedRule
    AccountStatusAccountLevelIssue:
      properties:
        severity:
          type: string
          description: 'Severity of the issue. Acceptable values are: - "`critical`" - "`error`" - "`suggestion`" '
        title:
          type: string
          description: Short description of the issue.
        destination:
          type: string
          description: The destination the issue applies to. If this field is empty then the issue applies to all available destinations.
        id:
          type: string
          description: Issue identifier.
        country:
          type: string
          description: Country for which this issue is reported.
        documentation:
          description: The URL of a web page to help resolving this issue.
          type: string
        detail:
          type: string
          description: Additional details about the issue.
      id: AccountStatusAccountLevelIssue
      type: object
    RequestReviewFreeListingsRequest:
      properties:
        regionCode:
          description: The code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country for which review is to be requested.
          type: string
      description: Request message for the RequestReviewFreeListings Program method.
      type: object
      id: RequestReviewFreeListingsRequest
    ListRepricingRulesResponse:
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        repricingRules:
          items:
            $ref: '#/components/schemas/RepricingRule'
          type: array
          description: The rules from the specified merchant.
      id: ListRepricingRulesResponse
      description: Response message for the `ListRepricingRules` method.
      type: object
    OrdersRefundItemRequest:
      properties:
        shipping:
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryRefundItemShipping'
          description: The refund on shipping. Optional, but either Item or Shipping must be provided in the request.
        reasonText:
          type: string
          description: The explanation of the reason.
        items:
          description: The items that are refunded. Either Item or Shipping must be provided in the request.
          items:
            $ref: '#/components/schemas/OrdersCustomBatchRequestEntryRefundItemItem'
          type: array
        operationId:
          type: string
          description: The ID of the operation. Unique across all operations for a given order.
        reason:
          type: string
          description: 'The reason for the refund. Acceptable values are: - "`shippingCostAdjustment`" - "`priceAdjustment`" - "`taxAdjustment`" - "`feeAdjustment`" - "`courtesyAdjustment`" - "`adjustment`" - "`customerCancelled`" - "`noInventory`" - "`productNotAsDescribed`" - "`undeliverableShippingAddress`" - "`wrongProductShipped`" - "`lateShipmentCredit`" - "`deliveredLateByCarrier`" - "`productArrivedDamaged`" '
      type: object
      id: OrdersRefundItemRequest
    AccountAdsLink:
      type: object
      properties:
        adsId:
          description: Customer ID of the Ads account.
          format: uint64
          type: string
        status:
          description: 'Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google Ads or `pending` if it''s pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it''s still pending or with status `pending` when it''s already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - "`active`" - "`pending`" '
          type: string
      id: AccountAdsLink
    ShippingsettingsCustomBatchRequestEntry:
      id: ShippingsettingsCustomBatchRequestEntry
      description: A batch entry encoding a single non-batch shippingsettings request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          type: integer
          format: uint32
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
        accountId:
          format: uint64
          type: string
          description: The ID of the account for which to get/update account shipping settings.
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`update`" '
          type: string
        shippingSettings:
          description: The account shipping settings to update. Only defined if the method is `update`.
          $ref: '#/components/schemas/ShippingSettings'
      type: object
    Product:
      description: ' Required product attributes are primarily defined by the product data specification. See the Product Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.'
      id: Product
      type: object
      properties:
        minEnergyEfficiencyClass:
          type: string
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
        adsRedirect:
          type: string
          description: Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
        taxes:
          items:
            $ref: '#/components/schemas/ProductTax'
          description: Tax information.
          type: array
        displayAdsId:
          description: An identifier for an item for dynamic remarketing campaigns.
          type: string
        channel:
          description: 'Required. The item''s channel (online or local). Acceptable values are: - "`local`" - "`online`" '
          type: string
        adsLabels:
          items:
            type: string
          description: Similar to ads_grouping, but only works on CPC.
          type: array
        externalSellerId:
          description: Required for multi-seller accounts. Use this attribute if you're a marketplace uploading products for various sellers to your multi-seller account.
          type: string
        additionalSizeType:
          description: Additional cut of the item. Used together with size_type to represent combined size types for apparel items.
          type: string
        targetCountry:
          type: string
          description: Required. The CLDR territory code for the item's country of sale.
        sizes:
          description: Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).
          items:
            type: string
          type: array
        imageLink:
          description: URL of an image of the item.
          type: string
        productHighlights:
          type: array
          description: Bullet points describing the most relevant highlights of a product.
          items:
            type: string
        maxHandlingTime:
          format: int64
          type: string
          description: Maximal product handling time (in business days).
        productDetails:
          description: Technical specification or additional product details.
          type: array
          items:
            $ref: '#/components/schemas/ProductProductDetail'
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
          type: string
        price:
          description: Price of the item.
          $ref: '#/components/schemas/Price'
        shippingLabel:
          type: string
          description: The shipping label of the product, used to group product in account-level shipping rules.
        multipack:
          description: The number of identical products in a merchant-defined multipack.
          type: string
          format: int64
        feedLabel:
          type: string
          description: Feed label for the item. Either `targetCountry` or `feedLabel` is required.
        color:
          type: string
          description: Color of the item.
        source:
          type: string
          description: 'The source of the offer, that is, how the offer was created. Acceptable values are: - "`api`" - "`crawl`" - "`feed`" '
        shipping:
          description: Shipping rules.
          type: array
          items:
            $ref: '#/components/schemas/ProductShipping'
        adult:
          type: boolean
          description: Should be set to true if the item is targeted towards adults.
        additionalImageLinks:
          type: array
          items:
            type: string
          description: Additional URLs of images of the item.
        id:
          description: 'The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId.'
          type: string
        material:
          description: The material of which the item is made.
          type: string
        pickupSla:
          description: 'Item store pickup timeline. Acceptable values are: - "`same day`" - "`next day`" - "`2-day`" - "`3-day`" - "`4-day`" - "`5-day`" - "`6-day`" - "`7-day`" - "`multi-week`" '
          type: string
        productLength:
          $ref: '#/components/schemas/ProductDimension'
          description: The length of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).
        linkTemplate:
          description: URL template for merchant hosted local storefront.
          type: string
        customLabel1:
          type: string
          description: Custom label 1 for custom grouping of items in a Shopping campaign.
        salePrice:
          description: Advertised sale price of the item.
          $ref: '#/components/schemas/Price'
        condition:
          description: Condition or state of the item.
          type: string
        unitPricingMeasure:
          $ref: '#/components/schemas/ProductUnitPricingMeasure'
          description: The measure and dimension of an item.
        energyEfficiencyClass:
          type: string
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
        shippingHeight:
          $ref: '#/components/schemas/ProductShippingDimension'
          description: Height of the item for shipping.
        availability:
          description: Availability status of the item.
          type: string
        brand:
          description: Brand of the item.
          type: string
        transitTimeLabel:
          type: string
          description: The transit time label of the product, used to group product in account-level transit time tables.
        pause:
          type: string
          description: 'Publication of this item should be temporarily paused. Acceptable values are: - "`ads`" '
        subscriptionCost:
          description: Number of periods (months or years) and amount of payment per period for an item with an associated subscription contract.
          $ref: '#/components/schemas/ProductSubscriptionCost'
        installment:
          description: Number and amount of installments to pay for an item.
          $ref: '#/components/schemas/Installment'
        displayAdsTitle:
          description: Title of an item for dynamic remarketing campaigns.
          type: string
        canonicalLink:
          description: URL for the canonical version of your item's landing page.
          type: string
        link:
          description: URL directly linking to your item's page on your website.
          type: string
        adsGrouping:
          type: string
          description: Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.
        customLabel4:
          type: string
          description: Custom label 4 for custom grouping of items in a Shopping campaign.
        description:
          type: string
          description: Description of the item.
        expirationDate:
          description: Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.
          type: string
        salePriceEffectiveDate:
          description: Date range during which the item is on sale (see product data specification ).
          type: string
        productTypes:
          description: Categories of the item (formatted as in product data specification).
          items:
            type: string
          type: array
        minHandlingTime:
          type: string
          format: int64
          description: Minimal product handling time (in business days).
        sizeType:
          description: The cut of the item. Recommended for apparel items.
          type: string
        pickupMethod:
          type: string
          description: 'The pick up option for the item. Acceptable values are: - "`buy`" - "`reserve`" - "`ship to store`" - "`not supported`" '
        shoppingAdsExcludedCountries:
          type: array
          description: List of country codes (ISO 3166-1 alpha-2) to exclude the offer from Shopping Ads destination. Countries from this list are removed from countries configured in MC feed settings.
          items:
            type: string
        mobileLink:
          type: string
          description: URL for the mobile-optimized version of your item's landing page.
        costOfGoodsSold:
          $ref: '#/components/schemas/Price'
          description: Cost of goods sold. Used for gross profit reporting.
        ageGroup:
          description: Target age group of the item.
          type: string
        promotionIds:
          type: array
          items:
            type: string
          description: The unique ID of a promotion.
        displayAdsLink:
          type: string
          description: URL directly to your item's landing page for dynamic remarketing campaigns.
        sizeSystem:
          type: string
          description: System in which the size is specified. Recommended for apparel items.
        excludedDestinations:
          items:
            type: string
          type: array
          description: The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center). Products that are excluded from all destinations for more than 7 days are automatically deleted.
        productWeight:
          $ref: '#/components/schemas/ProductWeight'
          description: The weight of the product in the units provided. The value must be between 0 (exclusive) and 2000 (inclusive).
        offerId:
          type: string
          description: Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.
        maxEnergyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is available for selling on Google. Supported only for online products.
          type: string
          format: int64
        title:
          description: Title of the item.
          type: string
        displayAdsSimilarIds:
          type: array
          items:
            type: string
          description: Advertiser-specified recommendations.
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign.
          type: string
        pattern:
          type: string
          description: The item's pattern (for example, polka dots).
        productWidth:
          $ref: '#/components/schemas/ProductDimension'
          description: The width of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).
        mpn:
          type: string
          description: Manufacturer Part Number (MPN) of the item.
        availabilityDate:
          type: string
          description: The day a pre-ordered product becomes available for delivery, in ISO 8601 format.
        googleProductCategory:
          description: Google's category of the item (see [Google product taxonomy](https://support.google.com/merchants/answer/1705911)). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API.
          type: string
        shippingLength:
          description: Length of the item for shipping.
          $ref: '#/components/schemas/ProductShippingDimension'
        productHeight:
          $ref: '#/components/schemas/ProductDimension'
          description: The height of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).
        displayAdsValue:
          type: number
          format: double
          description: Offer margin for dynamic remarketing campaigns.
        shippingWidth:
          $ref: '#/components/schemas/ProductShippingDimension'
          description: Width of the item for shipping.
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#product`"'
        loyaltyPoints:
          description: Loyalty points that users receive after purchasing the item. Japan only.
          $ref: '#/components/schemas/LoyaltyPoints'
        shippingWeight:
          description: Weight of the item for shipping.
          $ref: '#/components/schemas/ProductShippingWeight'
        taxCategory:
          type: string
          description: The tax category of the product, used to configure detailed tax nexus in account-level tax settings.
        gender:
          type: string
          description: Target gender of the item.
        lifestyleImageLinks:
          type: array
          items:
            type: string
          description: Additional URLs of lifestyle images of the item, used to explicitly identify images that showcase your item in a real-world context. See the Help Center article for more information.
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        identifierExists:
          type: boolean
          description: False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.
        customAttributes:
          description: 'A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (for example, `{ "name": "size type", "value": "regular" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Buy on Google (formerly known as Shopping Actions).'
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
        mobileLinkTemplate:
          description: URL template for merchant hosted local storefront optimized for mobile devices.
          type: string
        includedDestinations:
          type: array
          description: The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.
          items:
            type: string
        isBundle:
          type: boolean
          description: Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
        customLabel0:
          type: string
          description: Custom label 0 for custom grouping of items in a Shopping campaign.
        unitPricingBaseMeasure:
          $ref: '#/components/schemas/ProductUnitPricingBaseMeasure'
          description: The preference of the denominator of the unit price.
    Datafeed:
      properties:
        format:
          $ref: '#/components/schemas/DatafeedFormat'
          description: Format of the feed file.
        contentType:
          description: 'Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - "`local products`" - "`product inventory`" - "`products`" '
          type: string
        fetchSchedule:
          $ref: '#/components/schemas/DatafeedFetchSchedule'
          description: Fetch schedule for the feed file.
        fileName:
          type: string
          description: Required. The filename of the feed. All feeds must have a unique file name.
        id:
          type: string
          description: Required for update. The ID of the data feed.
          format: int64
        name:
          type: string
          description: Required for insert. A descriptive name of the data feed.
        targets:
          type: array
          items:
            $ref: '#/components/schemas/DatafeedTarget'
          description: The targets this feed should apply to (country, language, destinations).
        attributeLanguage:
          description: The two-letter ISO 639-1 language in which the attributes are defined in the data feed.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeed`"'
          type: string
      description: Datafeed configuration data.
      id: Datafeed
      type: object
    Segments:
      properties:
        customLabel3:
          description: Custom label 3 for custom grouping of products.
          type: string
        program:
          enum:
            - PROGRAM_UNSPECIFIED
            - SHOPPING_ADS
            - FREE_PRODUCT_LISTING
            - FREE_LOCAL_PRODUCT_LISTING
            - BUY_ON_GOOGLE_LISTING
          type: string
          enumDescriptions:
            - Not specified.
            - Shopping Ads.
            - Free Product Listing.
            - Free Local Product Listing.
            - Buy on Google Listing.
          description: Program to which metrics apply, for example, Free Product Listing.
        categoryL2:
          description: '[Product category (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google''s product taxonomy.'
          type: string
        customLabel0:
          description: Custom label 0 for custom grouping of products.
          type: string
        categoryL4:
          description: '[Product category (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google''s product taxonomy.'
          type: string
        productTypeL1:
          description: '[Product type (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant''s own product taxonomy.'
          type: string
        productTypeL3:
          type: string
          description: '[Product type (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant''s own product taxonomy.'
        customLabel4:
          description: Custom label 4 for custom grouping of products.
          type: string
        currencyCode:
          type: string
          description: Currency in which price metrics are represented, for example, if you select `ordered_item_sales_micros`, the returned value will be represented by this currency.
        categoryL5:
          type: string
          description: '[Product category (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google''s product taxonomy.'
        week:
          description: First day of the week (Monday) of the metrics date in the merchant timezone.
          $ref: '#/components/schemas/Date'
        title:
          type: string
          description: Title of the product.
        productTypeL5:
          type: string
          description: '[Product type (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant''s own product taxonomy.'
        customLabel1:
          type: string
          description: Custom label 1 for custom grouping of products.
        productTypeL2:
          type: string
          description: '[Product type (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant''s own product taxonomy.'
        offerId:
          type: string
          description: Merchant-provided id of the product.
        customerCountryCode:
          description: Code of the country where the customer is located at the time of the event. Represented in the ISO 3166 format. If the customer country cannot be determined, a special 'ZZ' code is returned.
          type: string
        categoryL1:
          description: '[Product category (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google''s product taxonomy.'
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of products.
          type: string
        brand:
          type: string
          description: Brand of the product.
        date:
          description: Date in the merchant timezone to which metrics apply.
          $ref: '#/components/schemas/Date'
        productTypeL4:
          description: '[Product type (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant''s own product taxonomy.'
          type: string
        categoryL3:
          type: string
          description: '[Product category (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google''s product taxonomy.'
      description: Dimensions according to which metrics are segmented in the response. Values of product dimensions, such as `offer_id`, reflect the state of a product at the time of the corresponding event, for example, impression or order. Segment fields cannot be selected in queries without also selecting at least one metric field. Values are only set for dimensions requested explicitly in the request's search query.
      type: object
      id: Segments
    LocalinventoryCustomBatchResponse:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#localinventoryCustomBatchResponse`".'
        entries:
          items:
            $ref: '#/components/schemas/LocalinventoryCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
          type: array
      type: object
      id: LocalinventoryCustomBatchResponse
    PosCustomBatchRequest:
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PosCustomBatchRequestEntry'
          description: The request entries to be processed in the batch.
      type: object
      id: PosCustomBatchRequest
    OrdersCreateTestReturnResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCreateTestReturnResponse`".'
          type: string
        returnId:
          description: The ID of the newly created test order return.
          type: string
      type: object
      id: OrdersCreateTestReturnResponse
    UnitInvoice:
      id: UnitInvoice
      properties:
        unitPriceTaxes:
          items:
            $ref: '#/components/schemas/UnitInvoiceTaxLine'
          description: Tax amounts to apply to the unit price.
          type: array
        unitPrice:
          description: '[required] Pre-tax or post-tax price of one unit depending on the locality of the order. *Note:* Invoicing works on a per unit basis. The `unitPrice` is the price of a single unit, and will be multiplied by the number of entries in `shipmentUnitId`.'
          $ref: '#/components/schemas/Price'
        additionalCharges:
          items:
            $ref: '#/components/schemas/UnitInvoiceAdditionalCharge'
          type: array
          description: Additional charges for a unit, for example, shipping costs.
      type: object
    LiaSettings:
      description: Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role.
      type: object
      properties:
        accountId:
          description: The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.
          format: uint64
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liaSettings`"'
        countrySettings:
          description: The LIA settings for each country.
          items:
            $ref: '#/components/schemas/LiaCountrySettings'
          type: array
      id: LiaSettings
    MethodQuota:
      description: The quota information per method in the Content API. Includes only methods with current usage greater than zero for your account.
      properties:
        method:
          description: The method name, for example `products.list`. Method name does not contain version because quota can be shared between different API versions of the same method.
          type: string
        quotaLimit:
          format: int64
          description: The current quota limit per day, meaning the maximum number of calls for the method.
          type: string
        quotaUsage:
          description: The current quota usage, meaning the number of calls already made to the method.
          format: int64
          type: string
      type: object
      id: MethodQuota
    InvoiceSummary:
      id: InvoiceSummary
      type: object
      properties:
        additionalChargeSummaries:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceSummaryAdditionalChargeSummary'
          description: Summary of the total amounts of the additional charges.
        productTotal:
          $ref: '#/components/schemas/Amount'
          description: '[required] Total price for the product.'
    OrdersRefundOrderResponse:
      id: OrdersRefundOrderResponse
      type: object
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersRefundOrderResponse`".'
    OrdersListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersListResponse`".'
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Order'
          type: array
        nextPageToken:
          description: The token for the retrieval of the next page of orders.
          type: string
      id: OrdersListResponse
      type: object
    ProductDimension:
      type: object
      id: ProductDimension
      properties:
        value:
          type: number
          description: Required. The length value represented as a number. The value can have a maximum precision of four decimal places.
          format: double
        unit:
          description: 'Required. The length units. Acceptable values are: - "`in`" - "`cm`" '
          type: string
    OrdersRefundOrderRequest:
      type: object
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reason:
          description: 'The reason for the refund. Acceptable values are: - "`courtesyAdjustment`" - "`other`" '
          type: string
        reasonText:
          type: string
          description: The explanation of the reason.
        amount:
          $ref: '#/components/schemas/MonetaryAmount'
          description: The amount that is refunded. If this is not the first refund for the order, this should be the newly refunded amount.
        fullRefund:
          description: If true, the full order will be refunded, including shipping. If this is true, amount shouldn't be provided and will be ignored.
          type: boolean
      id: OrdersRefundOrderRequest
    ProductSubscriptionCost:
      properties:
        amount:
          $ref: '#/components/schemas/Price'
          description: The amount the buyer has to pay per subscription period.
        periodLength:
          type: string
          format: int64
          description: The number of subscription periods the buyer has to pay.
        period:
          type: string
          description: The type of subscription period.
      type: object
      id: ProductSubscriptionCost
    RepricingRuleEffectiveTimeFixedTimePeriod:
      properties:
        startTime:
          type: string
          format: google-datetime
          description: The start time (inclusive) of the period. It can only be hour granularity.
        endTime:
          format: google-datetime
          description: The end time (exclusive) of the period. It can only be hour granularity.
          type: string
      type: object
      id: RepricingRuleEffectiveTimeFixedTimePeriod
      description: Definition of a fixed time period.
    RepricingRuleEffectiveTime:
      properties:
        fixedTimePeriods:
          items:
            $ref: '#/components/schemas/RepricingRuleEffectiveTimeFixedTimePeriod'
          type: array
          description: A list of fixed time periods combined with OR. The maximum number of entries is limited to 5.
      type: object
      id: RepricingRuleEffectiveTime
    DatafeedFormat:
      properties:
        quotingMode:
          description: 'Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - "`normal character`" - "`value quoting`" '
          type: string
        columnDelimiter:
          description: 'Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - "`pipe`" - "`tab`" - "`tilde`" '
          type: string
        fileEncoding:
          type: string
          description: 'Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - "`latin-1`" - "`utf-16be`" - "`utf-16le`" - "`utf-8`" - "`windows-1252`" '
      type: object
      id: DatafeedFormat
    SettlementreportsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#settlementreportsListResponse`".'
          type: string
        resources:
          items:
            $ref: '#/components/schemas/SettlementReport'
          type: array
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
      id: SettlementreportsListResponse
      type: object
    LiaInventorySettings:
      properties:
        inventoryVerificationContactEmail:
          description: The email of the contact for the inventory verification process.
          type: string
        inventoryVerificationContactName:
          description: The name of the contact for the inventory verification process.
          type: string
        status:
          description: 'The status of the inventory verification process. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
        inventoryVerificationContactStatus:
          description: 'The status of the verification contact. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
      id: LiaInventorySettings
      type: object
    OrdersRejectReturnLineItemRequest:
      type: object
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        productId:
          type: string
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        reasonText:
          type: string
          description: The explanation of the reason.
        operationId:
          type: string
          description: The ID of the operation. Unique across all operations for a given order.
        quantity:
          type: integer
          format: uint32
          description: The quantity to return and refund.
        reason:
          type: string
          description: 'The reason for the return. Acceptable values are: - "`damagedOrUsed`" - "`missingComponent`" - "`notEligible`" - "`other`" - "`outOfReturnWindow`" '
      id: OrdersRejectReturnLineItemRequest
    SettlementTransactionAmountCommission:
      type: object
      properties:
        category:
          description: 'The category of the commission. Acceptable values are: - "`animalsAndPetSupplies`" - "`dogCatFoodAndCatLitter`" - "`apparelAndAccessories`" - "`shoesHandbagsAndSunglasses`" - "`costumesAndAccessories`" - "`jewelry`" - "`watches`" - "`hobbiesArtsAndCrafts`" - "`homeAndGarden`" - "`entertainmentCollectibles`" - "`collectibleCoins`" - "`sportsCollectibles`" - "`sportingGoods`" - "`toysAndGames`" - "`musicalInstruments`" - "`giftCards`" - "`babyAndToddler`" - "`babyFoodWipesAndDiapers`" - "`businessAndIndustrial`" - "`camerasOpticsAndPhotography`" - "`consumerElectronics`" - "`electronicsAccessories`" - "`personalComputers`" - "`videoGameConsoles`" - "`foodAndGrocery`" - "`beverages`" - "`tobaccoProducts`" - "`furniture`" - "`hardware`" - "`buildingMaterials`" - "`tools`" - "`healthAndPersonalCare`" - "`beauty`" - "`householdSupplies`" - "`kitchenAndDining`" - "`majorAppliances`" - "`luggageAndBags`" - "`media`" - "`officeSupplies`" - "`softwareAndVideoGames`" - "`vehiclePartsAndAccessories`" - "`vehicleTiresAndWheels`" - "`vehicles`" - "`everythingElse`" '
          type: string
        rate:
          type: string
          description: Rate of the commission in percentage.
      id: SettlementTransactionAmountCommission
    OrderShipment:
      properties:
        scheduledDeliveryDetails:
          $ref: '#/components/schemas/OrderShipmentScheduledDeliveryDetails'
          description: Delivery details of the shipment if scheduling is needed.
        id:
          type: string
          description: The ID of the shipment.
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`
          type: string
        trackingId:
          type: string
          description: The tracking ID for the shipment.
        lineItems:
          description: The line items that are shipped.
          type: array
          items:
            $ref: '#/components/schemas/OrderShipmentLineItemShipment'
        carrier:
          description: 'The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers won''t include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for "US" are: - "`ups`" (United Parcel Service) *automatic status updates* - "`usps`" (United States Postal Service) *automatic status updates* - "`fedex`" (FedEx) *automatic status updates * - "`dhl`" (DHL eCommerce) *automatic status updates* (US only) - "`ontrac`" (OnTrac) *automatic status updates * - "`dhl express`" (DHL Express) - "`deliv`" (Deliv) - "`dynamex`" (TForce) - "`lasership`" (LaserShip) - "`mpx`" (Military Parcel Xpress) - "`uds`" (United Delivery Service) - "`efw`" (Estes Forwarding Worldwide) - "`jd logistics`" (JD Logistics) - "`yunexpress`" (YunExpress) - "`china post`" (China Post) - "`china ems`" (China Post Express Mail Service) - "`singapore post`" (Singapore Post) - "`pos malaysia`" (Pos Malaysia) - "`postnl`" (PostNL) - "`ptt`" (PTT Turkish Post) - "`eub`" (ePacket) - "`chukou1`" (Chukou1 Logistics) - "`bestex`" (Best Express) - "`canada post`" (Canada Post) - "`purolator`" (Purolator) - "`canpar`" (Canpar) - "`india post`" (India Post) - "`blue dart`" (Blue Dart) - "`delhivery`" (Delhivery) - "`dtdc`" (DTDC) - "`tpc india`" (TPC India) - "`lso`" (Lone Star Overnight) - "`tww`" (Team Worldwide) - "`deliver-it`" (Deliver-IT) - "`cdl last mile`" (CDL Last Mile) Supported carriers for FR are: - "`la poste`" (La Poste) *automatic status updates * - "`colissimo`" (Colissimo by La Poste) *automatic status updates* - "`ups`" (United Parcel Service) *automatic status updates * - "`chronopost`" (Chronopost by La Poste) - "`gls`" (General Logistics Systems France) - "`dpd`" (DPD Group by GeoPost) - "`bpost`" (Belgian Post Group) - "`colis prive`" (Colis PrivÃ©) - "`boxtal`" (Boxtal) - "`geodis`" (GEODIS) - "`tnt`" (TNT) - "`db schenker`" (DB Schenker) - "`aramex`" (Aramex) '
          type: string
        creationDate:
          description: Date on which the shipment has been created, in ISO 8601 format.
          type: string
        shipmentGroupId:
          type: string
          description: The shipment group ID of the shipment. This is set in shiplineitems request.
        status:
          type: string
          description: 'The status of the shipment. Acceptable values are: - "`delivered`" - "`readyForPickup`" - "`shipped`" - "`undeliverable`" '
      id: OrderShipment
      type: object
    ShoppingAdsProgramStatus:
      type: object
      id: ShoppingAdsProgramStatus
      properties:
        globalState:
          enumDescriptions:
            - State is unknown.
            - Program is not enabled for any country.
            - No products have been uploaded for any region. Upload products to Merchant Center.
            - Program is enabled and offers are uploaded for at least one country.
          enum:
            - PROGRAM_STATE_UNSPECIFIED
            - NOT_ENABLED
            - NO_OFFERS_UPLOADED
            - ENABLED
          type: string
          description: State of the program. `ENABLED` if there are offers for at least one region.
        regionStatuses:
          type: array
          description: Status of the program in each region. Regions with the same status and review eligibility are grouped together in `regionCodes`.
          items:
            $ref: '#/components/schemas/ShoppingAdsProgramStatusRegionStatus'
      description: Response message for GetShoppingAdsProgramStatus.
    ReturnPolicy:
      description: Return policy resource.
      id: ReturnPolicy
      type: object
      properties:
        nonFreeReturnReasons:
          type: array
          items:
            type: string
          description: Return reasons that will incur return fees.
        returnShippingFee:
          description: The return shipping fee that will apply to non free return reasons.
          $ref: '#/components/schemas/Price'
        returnPolicyId:
          description: Return policy ID generated by Google.
          type: string
        label:
          description: Required. The user-defined label of the return policy. For the default policy, use the label "default".
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnPolicy`"'
          type: string
        name:
          description: Required. The name of the policy as shown in Merchant Center.
          type: string
        seasonalOverrides:
          type: array
          description: An optional list of seasonal overrides.
          items:
            $ref: '#/components/schemas/ReturnPolicySeasonalOverride'
        policy:
          $ref: '#/components/schemas/ReturnPolicyPolicy'
          description: Required. The policy.
        country:
          type: string
          description: Required. The country of sale where the return policy is applicable.
    ShippingSettings:
      type: object
      description: The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.
      properties:
        warehouses:
          description: Optional. A list of warehouses which can be referred to in `services`.
          items:
            $ref: '#/components/schemas/Warehouse'
          type: array
        accountId:
          format: uint64
          description: The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.
          type: string
        postalCodeGroups:
          description: A list of postal code groups that can be referred to in `services`. Optional.
          type: array
          items:
            $ref: '#/components/schemas/PostalCodeGroup'
        services:
          type: array
          description: The target account's list of services. Optional.
          items:
            $ref: '#/components/schemas/Service'
      id: ShippingSettings
    OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption:
      id: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption
      type: object
      properties:
        description:
          description: Optional description of the refund reason.
          type: string
        reason:
          description: '[required] Reason for the refund. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
    SettlementTransaction:
      properties:
        amount:
          $ref: '#/components/schemas/SettlementTransactionAmount'
          description: The amount for the transaction.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#settlementTransaction`"'
        identifiers:
          $ref: '#/components/schemas/SettlementTransactionIdentifiers'
          description: Identifiers of the transaction.
        transaction:
          description: Details of the transaction.
          $ref: '#/components/schemas/SettlementTransactionTransaction'
      description: Settlement transactions give a detailed breakdown of the settlement report.
      type: object
      id: SettlementTransaction
    OrderPromotion:
      type: object
      properties:
        type:
          description: 'Required. The scope of the promotion. Only `product` is supported for `orders.createtestorder`. Acceptable values are: - "`product`" - "`shipping`" '
          type: string
        title:
          description: Required. The title of the promotion.
          type: string
        startTime:
          description: Promotion start time in ISO 8601 format. Date, time, and offset required, for example, "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z".
          type: string
        subtype:
          type: string
          description: 'Required. The category of the promotion. Only `moneyOff` is supported for `orders.createtestorder`. Acceptable values are: - "`buyMGetMoneyOff`" - "`buyMGetNMoneyOff`" - "`buyMGetNPercentOff`" - "`buyMGetPercentOff`" - "`freeGift`" - "`freeGiftWithItemId`" - "`freeGiftWithValue`" - "`freeShippingOvernight`" - "`freeShippingStandard`" - "`freeShippingTwoDay`" - "`moneyOff`" - "`percentOff`" - "`rewardPoints`" - "`salePrice`" '
        merchantPromotionId:
          description: Required. This field is used to identify promotions within merchants' own systems.
          type: string
        priceValue:
          $ref: '#/components/schemas/Price'
          description: Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of order.
        appliedItems:
          type: array
          description: Items that this promotion have been applied to. Do not provide for `orders.createtestorder`. This field will be empty for shipping promotions because shipping is not tied to any specific item.
          items:
            $ref: '#/components/schemas/OrderPromotionItem'
        funder:
          description: 'Required. The party funding the promotion. Only `merchant` is supported for `orders.createtestorder`. Acceptable values are: - "`google`" - "`merchant`" '
          type: string
        applicableItems:
          description: Items that this promotion may be applied to. If empty, there are no restrictions on applicable items and quantity. This field will also be empty for shipping promotions because shipping is not tied to any specific item.
          type: array
          items:
            $ref: '#/components/schemas/OrderPromotionItem'
        taxValue:
          $ref: '#/components/schemas/Price'
          description: Estimated discount applied to tax (if allowed by law). Do not provide for `orders.createtestorder`.
        shortTitle:
          type: string
          description: A short title of the promotion to be shown on the checkout page. Do not provide for `orders.createtestorder`.
        endTime:
          description: Promotion end time in ISO 8601 format. Date, time, and offset required, for example, "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z".
          type: string
      id: OrderPromotion
    MerchantRejectionReason:
      type: object
      id: MerchantRejectionReason
      properties:
        reasonCode:
          type: string
          description: Code of the rejection reason.
        description:
          type: string
          description: Description of the reason.
    BusinessDayConfig:
      properties:
        businessDays:
          description: Regular business days, such as '"monday"'. May not be empty.
          items:
            type: string
          type: array
      id: BusinessDayConfig
      type: object
    ReturnaddressCustomBatchRequestEntry:
      id: ReturnaddressCustomBatchRequestEntry
      type: object
      properties:
        merchantId:
          description: The Merchant Center account ID.
          type: string
          format: uint64
        returnAddressId:
          description: The return address ID. This should be set only if the method is `delete` or `get`.
          type: string
        method:
          type: string
          description: 'Method of the batch request entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" '
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        returnAddress:
          description: The return address to submit. This should be set only if the method is `insert`.
          $ref: '#/components/schemas/ReturnAddress'
    RegionPostalCodeAreaPostalCodeRange:
      id: RegionPostalCodeAreaPostalCodeRange
      type: object
      properties:
        end:
          type: string
          description: 'Optional. A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area. It must have the same length as postalCodeRangeBegin: if postalCodeRangeBegin is a postal code then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin is a pattern then postalCodeRangeEnd must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching postalCodeRangeBegin.'
        begin:
          description: 'Required. A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: "94108", "9410*", "9*".'
          type: string
      description: A range of postal codes that defines the region area.
    PosCustomBatchResponse:
      type: object
      id: PosCustomBatchResponse
      properties:
        entries:
          items:
            $ref: '#/components/schemas/PosCustomBatchResponseEntry'
          type: array
          description: The result of the execution of the batch requests.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posCustomBatchResponse`".'
          type: string
    Amount:
      properties:
        taxAmount:
          $ref: '#/components/schemas/Price'
          description: '[required] Tax value.'
        priceAmount:
          $ref: '#/components/schemas/Price'
          description: '[required] The pre-tax or post-tax price depending on the location of the order.'
      type: object
      id: Amount
    OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption:
      properties:
        reason:
          description: '[required] Reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        description:
          type: string
          description: Optional description of the return reason.
      id: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption
      type: object
    ReturnaddressListResponse:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnaddressListResponse`".'
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of addresses.
        resources:
          items:
            $ref: '#/components/schemas/ReturnAddress'
          type: array
      id: ReturnaddressListResponse
      type: object
    RequestReviewBuyOnGoogleProgramRequest:
      description: Request message for the RequestReviewProgram method.
      properties: {}
      id: RequestReviewBuyOnGoogleProgramRequest
      type: object
    MonetaryAmount:
      properties:
        priceAmount:
          $ref: '#/components/schemas/Price'
          description: The pre-tax or post-tax price depends on the location of the order. - For countries (for example, "US". where price attribute excludes tax, this field corresponds to the pre-tax value. - For coutries (for example, "France") where price attribute includes tax, this field corresponds to the post-tax value .
        taxAmount:
          $ref: '#/components/schemas/Price'
          description: Tax value, present only for countries where price attribute excludes tax (for example, "US". No tax is referenced as 0 value with the corresponding `currency`.
      id: MonetaryAmount
      type: object
    OrdersCancelLineItemRequest:
      type: object
      properties:
        quantity:
          type: integer
          description: The quantity to cancel.
          format: uint32
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`customerInitiatedCancel`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`failedToCaptureFunds`" '
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        lineItemId:
          description: The ID of the line item to cancel. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
      id: OrdersCancelLineItemRequest
    AccountstatusesListResponse:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/AccountStatus'
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountstatusesListResponse`".'
          type: string
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of account statuses.
      id: AccountstatusesListResponse
      type: object
    ShipmentInvoice:
      type: object
      properties:
        shipmentGroupId:
          description: '[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges.'
          type: string
        lineItemInvoices:
          items:
            $ref: '#/components/schemas/ShipmentInvoiceLineItemInvoice'
          description: '[required] Invoice details per line item.'
          type: array
        invoiceSummary:
          description: '[required] Invoice summary.'
          $ref: '#/components/schemas/InvoiceSummary'
      id: ShipmentInvoice
    RefundReason:
      properties:
        description:
          description: Description of the reason.
          type: string
        reasonCode:
          type: string
          description: 'Code of the refund reason. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
      type: object
      id: RefundReason
    ReturnShippingLabel:
      properties:
        labelUri:
          description: The URL for the return shipping label in PDF format
          type: string
        trackingId:
          type: string
          description: The tracking id of this return label.
        carrier:
          type: string
          description: Name of the carrier.
      type: object
      id: ReturnShippingLabel
      description: Return shipping label for a Buy on Google merchant-managed return.
    AccountstatusesCustomBatchRequestEntry:
      properties:
        destinations:
          items:
            type: string
          type: array
          description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
        merchantId:
          format: uint64
          description: The ID of the managing account.
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
          type: string
        batchId:
          format: uint32
          type: integer
          description: An entry ID, unique within the batch request.
        accountId:
          format: uint64
          type: string
          description: The ID of the (sub-)account whose status to get.
      type: object
      id: AccountstatusesCustomBatchRequestEntry
      description: A batch entry encoding a single non-batch accountstatuses request.
    PosInventory:
      properties:
        gtin:
          description: Global Trade Item Number.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        price:
          description: Required. The current price of the item.
          $ref: '#/components/schemas/Price'
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
        itemId:
          type: string
          description: Required. A unique identifier for the item.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posInventory`"'
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
          type: string
        quantity:
          type: string
          format: int64
          description: Required. The available quantity of the item.
      id: PosInventory
      description: The absolute quantity of an item available at the given store.
      type: object
    MinimumOrderValueTableStoreCodeSetWithMov:
      type: object
      properties:
        storeCodes:
          type: array
          description: A list of unique store codes or empty for the catch all.
          items:
            type: string
        value:
          description: The minimum order value for the given stores.
          $ref: '#/components/schemas/Price'
      description: A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.
      id: MinimumOrderValueTableStoreCodeSetWithMov
    OrdersUpdateLineItemShippingDetailsResponse:
      id: OrdersUpdateLineItemShippingDetailsResponse
      properties:
        executionStatus:
          type: string
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersUpdateLineItemShippingDetailsResponse`".'
      type: object
    Headers:
      description: A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.
      id: Headers
      properties:
        locations:
          description: A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.
          type: array
          items:
            $ref: '#/components/schemas/LocationIdSet'
        weights:
          description: 'A list of inclusive order weight upper bounds. The last weight''s value can be `"infinity"`. For example `[{"value": "10", "unit": "kg"}, {"value": "50", "unit": "kg"}, {"value": "infinity", "unit": "kg"}]` represents the headers "<= 10kg", "<= 50kg", and "> 50kg". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set.'
          type: array
          items:
            $ref: '#/components/schemas/Weight'
        prices:
          type: array
          description: 'A list of inclusive order price upper bounds. The last price''s value can be `"infinity"`. For example `[{"value": "10", "currency": "USD"}, {"value": "500", "currency": "USD"}, {"value": "infinity", "currency": "USD"}]` represents the headers "<= $10", "<= $500", and "> $500". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.'
          items:
            $ref: '#/components/schemas/Price'
        numberOfItems:
          type: array
          items:
            type: string
          description: A list of inclusive number of items upper bounds. The last value can be `"infinity"`. For example `["10", "50", "infinity"]` represents the headers "<= 10 items", "<= 50 items", and "> 50 items". Must be non-empty. Can only be set if all other fields are not set.
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be `"all other locations"`. Example: `["zone 1", "zone 2", "all other locations"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.'
          type: array
          items:
            type: string
      type: object
    Service:
      type: object
      id: Service
      properties:
        deliveryTime:
          $ref: '#/components/schemas/DeliveryTime'
          description: Time spent in various aspects from order to the delivery of the product. Required.
        name:
          description: Free-form name of the service. Must be unique within target account. Required.
          type: string
        shipmentType:
          type: string
          description: 'Type of locations this service ships orders to. Acceptable values are: - "`delivery`" - "`pickup`" '
        currency:
          description: The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.
          type: string
        minimumOrderValueTable:
          $ref: '#/components/schemas/MinimumOrderValueTable'
          description: Table of per store minimum order values for the pickup fulfillment type. Cannot be set together with minimum_order_value.
        eligibility:
          description: 'Eligibility for this service. Acceptable values are: - "`All scenarios`" - "`All scenarios except Shopping Actions`" - "`Shopping Actions`" '
          type: string
        active:
          type: boolean
          description: A boolean exposing the active status of the shipping service. Required.
        pickupService:
          $ref: '#/components/schemas/PickupCarrierService'
          description: The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved through the `getSupportedPickupServices` method. Required if and only if the service delivery type is `pickup`.
        rateGroups:
          items:
            $ref: '#/components/schemas/RateGroup'
          description: Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means "everything else". The other `applicableShippingLabels` must not overlap.
          type: array
        minimumOrderValue:
          description: Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency. Cannot be set together with minimum_order_value_table.
          $ref: '#/components/schemas/Price'
        deliveryCountry:
          description: The CLDR territory code of the country to which the service applies. Required.
          type: string
    LocalInventory:
      id: LocalInventory
      type: object
      properties:
        customAttributes:
          description: 'A list of custom (merchant-provided) attributes. Can also be used to submit any attribute of the feed specification in its generic form, for example, `{ "name": "size type", "value": "regular" }`.'
          items:
            $ref: '#/components/schemas/CustomAttribute'
          type: array
        quantity:
          description: Quantity of the product. Must be nonnegative.
          type: integer
          format: uint32
        storeCode:
          description: Required. Store code of this local inventory resource.
          type: string
        price:
          description: Price of the product.
          $ref: '#/components/schemas/Price'
        pickupMethod:
          type: string
          description: Supported pickup method for this offer. Unless the value is "not supported", this field must be submitted together with `pickupSla`. For accepted attribute values, see the local product inventory feed specification.
        instoreProductLocation:
          description: In-store product location.
          type: string
        salePriceEffectiveDate:
          description: A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates may be specified as 'null' if undecided.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#localInventory`"'
          type: string
        availability:
          type: string
          description: Availability of the product. For accepted attribute values, see the local product inventory feed specification.
        pickupSla:
          description: Expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`. For accepted attribute values, see the local product inventory feed specification.
          type: string
        salePrice:
          $ref: '#/components/schemas/Price'
          description: Sale price of the product. Mandatory if `sale_price_effective_date` is defined.
      description: Local inventory resource. For accepted attribute values, see the local product inventory feed specification.
    ProductStatus:
      properties:
        destinationStatuses:
          description: The intended destinations for the product.
          items:
            $ref: '#/components/schemas/ProductStatusDestinationStatus'
          type: array
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        lastUpdateDate:
          description: Date on which the item has been last updated, in ISO 8601 format.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productStatus`"'
          type: string
        googleExpirationDate:
          type: string
          description: Date on which the item expires in Google Shopping, in ISO 8601 format.
        productId:
          type: string
          description: The ID of the product for which status is reported.
        link:
          description: The link to the product.
          type: string
        title:
          type: string
          description: The title of the product.
        itemLevelIssues:
          items:
            $ref: '#/components/schemas/ProductStatusItemLevelIssue'
          type: array
          description: A list of all issues associated with the product.
      description: The status of a product, that is, information about a product computed asynchronously.
      id: ProductStatus
      type: object
    LocationIdSet:
      properties:
        locationIds:
          items:
            type: string
          type: array
          description: A non-empty list of location IDs. They must all be of the same location type (for example, state).
      id: LocationIdSet
      type: object
    RepricingRule:
      description: Represents a repricing rule. A repricing rule is used by shopping serving to adjust transactable offer prices if conditions are met.
      id: RepricingRule
      type: object
      properties:
        paused:
          type: boolean
          description: Represents whether a rule is paused. A paused rule will behave like a non-paused rule within CRUD operations, with the major difference that a paused rule will not be evaluated and will have no effect on offers.
        restriction:
          $ref: '#/components/schemas/RepricingRuleRestriction'
          description: Required. Restriction of the rule appliance.
        ruleId:
          type: string
          description: Output only. Immutable. The ID to uniquely identify each repricing rule.
          readOnly: true
        eligibleOfferMatcher:
          description: Required. Match criteria for the eligible offers.
          $ref: '#/components/schemas/RepricingRuleEligibleOfferMatcher'
        effectiveTimePeriod:
          description: Required. Time period when the rule should take effect.
          $ref: '#/components/schemas/RepricingRuleEffectiveTime'
        countryCode:
          type: string
          description: Required. Immutable. [CLDR country code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) (e.g. "US").
        languageCode:
          type: string
          description: Required. Immutable. The two-letter ISO 639-1 language code associated with the repricing rule.
        statsBasedRule:
          description: The rule definition for TYPE_STATS_BASED. Required when the rule type is TYPE_STATS_BASED.
          $ref: '#/components/schemas/RepricingRuleStatsBasedRule'
        merchantId:
          description: Output only. Immutable. Merchant that owns the repricing rule.
          readOnly: true
          format: int64
          type: string
        title:
          description: The title for the rule.
          type: string
        cogsBasedRule:
          $ref: '#/components/schemas/RepricingRuleCostOfGoodsSaleRule'
          description: The rule definition for TYPE_COGS_BASED. Required when the rule type is TYPE_COGS_BASED.
        type:
          description: Required. Immutable. The type of the rule.
          enumDescriptions:
            - Unused.
            - Statistical measurement based rules among Google SA merchants. If this rule is chosen, repricer will adjust the offer price based on statistical metrics (currently only min is available) among other merchants who sell the same product. Details need to be provdided in the RuleDefinition.
            - Cost of goods sale based rule. Repricer will adjust the offer price based on the offer's sale cost which is provided by the merchant.
            - Sales volume based rule. Repricer will adjust the offer price based on the offer's sales volume in the past period of time defined within the rule.
            - Competitive price rule. Repricer will adjust the offer price based on the min price from a list of unnamed big competitors.
          enum:
            - REPRICING_RULE_TYPE_UNSPECIFIED
            - TYPE_STATS_BASED
            - TYPE_COGS_BASED
            - TYPE_SALES_VOLUME_BASED
            - TYPE_COMPETITIVE_PRICE
          type: string
    AccountstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accountstatuses response.
      type: object
      id: AccountstatusesCustomBatchResponseEntry
      properties:
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        batchId:
          description: The ID of the request entry this entry responds to.
          type: integer
          format: uint32
        accountStatus:
          $ref: '#/components/schemas/AccountStatus'
          description: The requested account status. Defined if and only if the request was successful.
    OrdersCustomBatchRequestEntryRefundItemShipping:
      properties:
        amount:
          description: The amount that is refunded. If this is not the first refund for the shipment, this should be the newly refunded amount.
          $ref: '#/components/schemas/Price'
        fullRefund:
          type: boolean
          description: If set to true, all shipping costs for the order will be refunded. If this is true, amount shouldn't be provided and will be ignored. If set to false, submit the amount of the partial shipping refund, excluding the shipping tax. The shipping tax is calculated and handled on Google's side.
      id: OrdersCustomBatchRequestEntryRefundItemShipping
      type: object
    SettlementtransactionsListResponse:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/SettlementTransaction'
          type: array
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#settlementtransactionsListResponse`".'
          type: string
      type: object
      id: SettlementtransactionsListResponse
    OrderCustomerLoyaltyInfo:
      id: OrderCustomerLoyaltyInfo
      type: object
      properties:
        loyaltyNumber:
          type: string
          description: The loyalty card/membership number.
        name:
          type: string
          description: Name of card/membership holder, this field will be populated when
    OrderinvoicesCreateRefundInvoiceRequest:
      id: OrderinvoicesCreateRefundInvoiceRequest
      type: object
      properties:
        shipmentInvoices:
          items:
            $ref: '#/components/schemas/ShipmentInvoice'
          type: array
          description: Invoice details for different shipment groups.
        returnOption:
          description: Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of `refundOnlyOption` or `returnOption` must be provided.
          $ref: '#/components/schemas/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption'
        invoiceId:
          description: '[required] The ID of the invoice.'
          type: string
        refundOnlyOption:
          $ref: '#/components/schemas/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption'
          description: Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or `returnOption` must be provided.
        operationId:
          description: '[required] The ID of the operation, unique across all operations for a given order.'
          type: string
    Collection:
      properties:
        mobileLink:
          description: A collectionâ€™s mobile-optimized landing page when you have a different URL for mobile and desktop traffic. [mobile_link attribute](https://support.google.com/merchants/answer/9646123)
          type: string
        customLabel3:
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
          type: string
        link:
          description: A collectionâ€™s landing page. URL directly linking to your collection's page on your website. [link attribute](https://support.google.com/merchants/answer/9673983)
          type: string
        id:
          type: string
          description: Required. The REST ID of the collection. Content API methods that operate on collections take this as their collectionId parameter. The REST ID for a collection is of the form collectionId. [id attribute](https://support.google.com/merchants/answer/9649290)
        language:
          type: string
          description: The language of a collection and the language of any featured products linked to the collection. [language attribute](https://support.google.com/merchants/answer/9673781)
        customLabel1:
          type: string
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
        customLabel4:
          type: string
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
        customLabel0:
          type: string
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns. [Custom label](https://support.google.com/merchants/answer/9674217)
        featuredProduct:
          type: array
          items:
            $ref: '#/components/schemas/CollectionFeaturedProduct'
          description: This identifies one or more products associated with the collection. Used as a lookup to the corresponding product ID in your product feeds. Provide a maximum of 100 featuredProduct (for collections). Provide up to 10 featuredProduct (for Shoppable Images only) with ID and X and Y coordinates. [featured_product attribute](https://support.google.com/merchants/answer/9703736)
        imageLink:
          description: The URL of a collectionâ€™s image. [image_link attribute](https://support.google.com/merchants/answer/9703236)
          items:
            type: string
          type: array
        headline:
          description: Your collection's name. [headline attribute](https://support.google.com/merchants/answer/9673580)
          type: array
          items:
            type: string
        customLabel2:
          type: string
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
        productCountry:
          type: string
          description: '[product_country attribute](https://support.google.com/merchants/answer/9674155)'
      type: object
      description: The collection message.
      id: Collection
    OrdersUpdateMerchantOrderIdRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        merchantOrderId:
          type: string
          description: The merchant order id to be assigned to the order. Must be unique per merchant.
      id: OrdersUpdateMerchantOrderIdRequest
      type: object
    OrderreturnsPartialRefund:
      type: object
      properties:
        priceAmount:
          description: The pre-tax or post-tax amount to be refunded, depending on the location of the order.
          $ref: '#/components/schemas/Price'
        taxAmount:
          $ref: '#/components/schemas/Price'
          description: 'Tax amount to be refunded. Note: This has different meaning depending on the location of the order.'
      id: OrderreturnsPartialRefund
    RequestReviewShoppingAdsRequest:
      type: object
      id: RequestReviewShoppingAdsRequest
      properties:
        regionCode:
          type: string
          description: The code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country for which review is to be requested.
      description: Request message for the RequestReviewShoppingAds program method.
    PosSale:
      properties:
        quantity:
          description: Required. The relative change of the available quantity. Negative for items returned.
          format: int64
          type: string
        saleId:
          type: string
          description: A unique ID to group items from the same sale event.
        storeCode:
          type: string
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
        gtin:
          description: Global Trade Item Number.
          type: string
        contentLanguage:
          type: string
          description: Required. The two-letter ISO 639-1 language code for the item.
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posSale`"'
          type: string
        price:
          $ref: '#/components/schemas/Price'
          description: Required. The price of the item.
        targetCountry:
          type: string
          description: Required. The CLDR territory code for the item.
        timestamp:
          type: string
          description: Required. The inventory timestamp, in ISO 8601 format.
      description: The change of the available quantity of an item at the given store.
      type: object
      id: PosSale
    BestSellers:
      type: object
      description: Fields related to the [Best Sellers reports](https://support.google.com/merchants/answer/9488679).
      properties:
        reportDate:
          description: 'Report date. The value of this field can only be one of the following: * The first day of the week (Monday) for weekly reports. * The first day of the month for monthly reports. If a `WHERE` condition on `best_sellers.report_date` is not specified in the query, the latest available weekly or monthly report is returned.'
          $ref: '#/components/schemas/Date'
        reportGranularity:
          enum:
            - REPORT_GRANULARITY_UNSPECIFIED
            - WEEKLY
            - MONTHLY
          type: string
          description: Granularity of the report. The ranking can be done over a week or a month timeframe. A `WHERE` condition on `best_sellers.report_granularity` is required in the query.
          enumDescriptions:
            - Report granularity is unknown.
            - Ranking is done over a week timeframe.
            - Ranking is done over a month timeframe.
        relativeDemandChange:
          type: string
          enum:
            - RELATIVE_DEMAND_CHANGE_TYPE_UNSPECIFIED
            - SINKER
            - FLAT
            - RISER
          description: Change in the estimated demand. Whether it rose, sank or remained flat.
          enumDescriptions:
            - Relative demand change is unknown.
            - Relative demand is lower than previous time period.
            - Relative demand is equal to previous time period.
            - Relative demand is higher than the previous time period.
        countryCode:
          type: string
          description: Country where the ranking is calculated. A `WHERE` condition on `best_sellers.country_code` is required in the query.
        previousRelativeDemand:
          type: string
          description: Estimated demand in relation to the item with the highest popularity rank in the same category and country in the previous week or month.
          enum:
            - RELATIVE_DEMAND_UNSPECIFIED
            - VERY_LOW
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
          enumDescriptions:
            - Relative demand is unknown.
            - Demand is 0-5% of the demand of the highest ranked product clusters or brands.
            - Demand is 6-10% of the demand of the highest ranked product clusters or brands.
            - Demand is 11-20% of the demand of the highest ranked product clusters or brands.
            - Demand is 21-50% of the demand of the highest ranked product clusters or brands.
            - Demand is 51-100% of the demand of the highest ranked product clusters or brands.
        categoryId:
          format: int64
          type: string
          description: Google product category ID to calculate the ranking for, represented in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436). If a `WHERE` condition on `best_sellers.category_id` is not specified in the query, rankings for all top-level categories are returned.
        relativeDemand:
          description: Estimated demand in relation to the item with the highest popularity rank in the same category and country.
          enumDescriptions:
            - Relative demand is unknown.
            - Demand is 0-5% of the demand of the highest ranked product clusters or brands.
            - Demand is 6-10% of the demand of the highest ranked product clusters or brands.
            - Demand is 11-20% of the demand of the highest ranked product clusters or brands.
            - Demand is 21-50% of the demand of the highest ranked product clusters or brands.
            - Demand is 51-100% of the demand of the highest ranked product clusters or brands.
          type: string
          enum:
            - RELATIVE_DEMAND_UNSPECIFIED
            - VERY_LOW
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
        rank:
          format: int64
          description: Popularity on Shopping ads and free listings, in the selected category and country, based on the estimated number of units sold.
          type: string
        previousRank:
          type: string
          format: int64
          description: Popularity rank in the previous week or month.
      id: BestSellers
    OrderLineItemProductVariantAttribute:
      properties:
        value:
          type: string
          description: The value for the dimension.
        dimension:
          type: string
          description: The dimension of the variant.
      id: OrderLineItemProductVariantAttribute
      type: object
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    shippingsettings:
      id: googledevelopers.content.shippingsettings
      name: shippingsettings
      title: Shippingsettings
      methods:
        update:
          operation:
            $ref: '#/paths/~1{merchantId}~1shippingsettings~1{accountId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1shippingsettings~1{accountId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1shippingsettings~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1shippingsettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shippingsettings/methods/get'
          - $ref: '#/components/x-stackQL-resources/shippingsettings/methods/list'
        insert: []
        update: []
        delete: []
    shippingsettings_supportedpickupservices:
      id: googledevelopers.content.shippingsettings_supportedpickupservices
      name: shippingsettings_supportedpickupservices
      title: Shippingsettings_supportedpickupservices
      methods:
        shippingsettings_getsupportedpickupservices:
          operation:
            $ref: '#/paths/~1{merchantId}~1supportedPickupServices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shippingsettings_supportedpickupservices/methods/shippingsettings_getsupportedpickupservices'
        insert: []
        update: []
        delete: []
    shippingsettings_supportedcarriers:
      id: googledevelopers.content.shippingsettings_supportedcarriers
      name: shippingsettings_supportedcarriers
      title: Shippingsettings_supportedcarriers
      methods:
        shippingsettings_getsupportedcarriers:
          operation:
            $ref: '#/paths/~1{merchantId}~1supportedCarriers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shippingsettings_supportedcarriers/methods/shippingsettings_getsupportedcarriers'
        insert: []
        update: []
        delete: []
    shippingsettings_supportedholidays:
      id: googledevelopers.content.shippingsettings_supportedholidays
      name: shippingsettings_supportedholidays
      title: Shippingsettings_supportedholidays
      methods:
        shippingsettings_getsupportedholidays:
          operation:
            $ref: '#/paths/~1{merchantId}~1supportedHolidays/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shippingsettings_supportedholidays/methods/shippingsettings_getsupportedholidays'
        insert: []
        update: []
        delete: []
    accounts:
      id: googledevelopers.content.accounts
      name: accounts
      title: Accounts
      methods:
        link:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}~1link/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1accounts~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        authinfo:
          operation:
            $ref: '#/paths/~1accounts~1authinfo/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        requestphoneverification:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}~1requestphoneverification/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        claimwebsite:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}~1claimwebsite/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verifyphonenumber:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}~1verifyphonenumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updatelabels:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}~1updatelabels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    accounts_links:
      id: googledevelopers.content.accounts_links
      name: accounts_links
      title: Accounts_links
      methods:
        accounts_listlinks:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounts~1{accountId}~1listlinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    returncarrier:
      id: googledevelopers.content.returncarrier
      name: returncarrier
      title: Returncarrier
      methods:
        accounts_returncarrier_patch:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1returncarrier~1{carrierAccountId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_returncarrier_delete:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1returncarrier~1{carrierAccountId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_returncarrier_list:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1returncarrier/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_returncarrier_create:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1returncarrier/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/returncarrier/methods/accounts_returncarrier_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/returncarrier/methods/accounts_returncarrier_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/returncarrier/methods/accounts_returncarrier_delete'
    labels:
      id: googledevelopers.content.labels
      name: labels
      title: Labels
      methods:
        accounts_labels_create:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1labels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_labels_list:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1labels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_labels_patch:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1labels~1{labelId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_labels_delete:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1labels~1{labelId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        orderreturns_labels_create:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderreturns~1{returnId}~1labels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/labels/methods/accounts_labels_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/labels/methods/orderreturns_labels_create'
          - $ref: '#/components/x-stackQL-resources/labels/methods/accounts_labels_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/labels/methods/accounts_labels_delete'
    credentials:
      id: googledevelopers.content.credentials
      name: credentials
      title: Credentials
      methods:
        accounts_credentials_create:
          operation:
            $ref: '#/paths/~1accounts~1{accountId}~1credentials/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/credentials/methods/accounts_credentials_create'
        update: []
        delete: []
    returnaddress:
      id: googledevelopers.content.returnaddress
      name: returnaddress
      title: Returnaddress
      methods:
        insert:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnaddress/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnaddress/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1returnaddress~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnaddress~1{returnAddressId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnaddress~1{returnAddressId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/returnaddress/methods/get'
          - $ref: '#/components/x-stackQL-resources/returnaddress/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/returnaddress/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/returnaddress/methods/delete'
    quotas:
      id: googledevelopers.content.quotas
      name: quotas
      title: Quotas
      methods:
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1quotas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/list'
        insert: []
        update: []
        delete: []
    buyongoogleprograms:
      id: googledevelopers.content.buyongoogleprograms
      name: buyongoogleprograms
      title: Buyongoogleprograms
      methods:
        onboard:
          operation:
            $ref: '#/paths/~1{merchantId}~1buyongoogleprograms~1{regionCode}~1onboard/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        activate:
          operation:
            $ref: '#/paths/~1{merchantId}~1buyongoogleprograms~1{regionCode}~1activate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        requestreview:
          operation:
            $ref: '#/paths/~1{merchantId}~1buyongoogleprograms~1{regionCode}~1requestreview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1{merchantId}~1buyongoogleprograms~1{regionCode}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1buyongoogleprograms~1{regionCode}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pause:
          operation:
            $ref: '#/paths/~1{merchantId}~1buyongoogleprograms~1{regionCode}~1pause/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buyongoogleprograms/methods/get'
        insert: []
        update: []
        delete: []
    datafeedstatuses:
      id: googledevelopers.content.datafeedstatuses
      name: datafeedstatuses
      title: Datafeedstatuses
      methods:
        custombatch:
          operation:
            $ref: '#/paths/~1datafeedstatuses~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1datafeedstatuses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1datafeedstatuses~1{datafeedId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datafeedstatuses/methods/get'
          - $ref: '#/components/x-stackQL-resources/datafeedstatuses/methods/list'
        insert: []
        update: []
        delete: []
    shoppingadsprogram:
      id: googledevelopers.content.shoppingadsprogram
      name: shoppingadsprogram
      title: Shoppingadsprogram
      methods:
        requestreview:
          operation:
            $ref: '#/paths/~1{merchantId}~1shoppingadsprogram~1requestreview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1shoppingadsprogram/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shoppingadsprogram/methods/get'
        insert: []
        update: []
        delete: []
    reports:
      id: googledevelopers.content.reports
      name: reports
      title: Reports
      methods:
        search:
          operation:
            $ref: '#/paths/~1{merchantId}~1reports~1search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    orders:
      id: googledevelopers.content.orders
      name: orders
      title: Orders
      methods:
        shiplineitems:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1shipLineItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        instorerefundlineitem:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1inStoreRefundLineItem/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        canceltestorderbycustomer:
          operation:
            $ref: '#/paths/~1{merchantId}~1testorders~1{orderId}~1cancelByCustomer/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rejectreturnlineitem:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1rejectReturnLineItem/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancellineitem:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1cancelLineItem/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        returnrefundlineitem:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1returnRefundLineItem/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refundorder:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1refundorder/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updatemerchantorderid:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1updateMerchantOrderId/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        acknowledge:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1acknowledge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advancetestorder:
          operation:
            $ref: '#/paths/~1{merchantId}~1testorders~1{orderId}~1advance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refunditem:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1refunditem/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updatelineitemshippingdetails:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1updateLineItemShippingDetails/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        captureOrder:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1captureOrder/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setlineitemmetadata:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1setLineItemMetadata/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateshipment:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1updateShipment/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orders/methods/get'
          - $ref: '#/components/x-stackQL-resources/orders/methods/list'
        insert: []
        update: []
        delete: []
    orders_testreturn:
      id: googledevelopers.content.orders_testreturn
      name: orders_testreturn
      title: Orders_testreturn
      methods:
        orders_createtestreturn:
          operation:
            $ref: '#/paths/~1{merchantId}~1orders~1{orderId}~1testreturn/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/orders_testreturn/methods/orders_createtestreturn'
        update: []
        delete: []
    orders_testordertemplate:
      id: googledevelopers.content.orders_testordertemplate
      name: orders_testordertemplate
      title: Orders_testordertemplate
      methods:
        orders_gettestordertemplate:
          operation:
            $ref: '#/paths/~1{merchantId}~1testordertemplates~1{templateName}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orders_testordertemplate/methods/orders_gettestordertemplate'
        insert: []
        update: []
        delete: []
    orders_bymerchantorderid:
      id: googledevelopers.content.orders_bymerchantorderid
      name: orders_bymerchantorderid
      title: Orders_bymerchantorderid
      methods:
        orders_getbymerchantorderid:
          operation:
            $ref: '#/paths/~1{merchantId}~1ordersbymerchantid~1{merchantOrderId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orders_bymerchantorderid/methods/orders_getbymerchantorderid'
        insert: []
        update: []
        delete: []
    orders_testorder:
      id: googledevelopers.content.orders_testorder
      name: orders_testorder
      title: Orders_testorder
      methods:
        orders_createtestorder:
          operation:
            $ref: '#/paths/~1{merchantId}~1testorders/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/orders_testorder/methods/orders_createtestorder'
        update: []
        delete: []
    localinventory:
      id: googledevelopers.content.localinventory
      name: localinventory
      title: Localinventory
      methods:
        insert:
          operation:
            $ref: '#/paths/~1{merchantId}~1products~1{productId}~1localinventory/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1localinventory~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/localinventory/methods/insert'
        update: []
        delete: []
    settlementtransactions:
      id: googledevelopers.content.settlementtransactions
      name: settlementtransactions
      title: Settlementtransactions
      methods:
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1settlementreports~1{settlementId}~1transactions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settlementtransactions/methods/list'
        insert: []
        update: []
        delete: []
    liasettings:
      id: googledevelopers.content.liasettings
      name: liasettings
      title: Liasettings
      methods:
        requestinventoryverification:
          operation:
            $ref: '#/paths/~1{merchantId}~1liasettings~1{accountId}~1requestinventoryverification~1{country}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1liasettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setposdataprovider:
          operation:
            $ref: '#/paths/~1{merchantId}~1liasettings~1{accountId}~1setposdataprovider/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setinventoryverificationcontact:
          operation:
            $ref: '#/paths/~1{merchantId}~1liasettings~1{accountId}~1setinventoryverificationcontact/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1liasettings~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1liasettings~1{accountId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{merchantId}~1liasettings~1{accountId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        requestgmbaccess:
          operation:
            $ref: '#/paths/~1{merchantId}~1liasettings~1{accountId}~1requestgmbaccess/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/liasettings/methods/get'
          - $ref: '#/components/x-stackQL-resources/liasettings/methods/list'
        insert: []
        update: []
        delete: []
    liasettings_accessiblegmbaccounts:
      id: googledevelopers.content.liasettings_accessiblegmbaccounts
      name: liasettings_accessiblegmbaccounts
      title: Liasettings_accessiblegmbaccounts
      methods:
        liasettings_getaccessiblegmbaccounts:
          operation:
            $ref: '#/paths/~1{merchantId}~1liasettings~1{accountId}~1accessiblegmbaccounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/liasettings_accessiblegmbaccounts/methods/liasettings_getaccessiblegmbaccounts'
        insert: []
        update: []
        delete: []
    liasettings_posdataproviders:
      id: googledevelopers.content.liasettings_posdataproviders
      name: liasettings_posdataproviders
      title: Liasettings_posdataproviders
      methods:
        liasettings_listposdataproviders:
          operation:
            $ref: '#/paths/~1liasettings~1posdataproviders/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    productstatuses:
      id: googledevelopers.content.productstatuses
      name: productstatuses
      title: Productstatuses
      methods:
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1productstatuses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1productstatuses~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1productstatuses~1{productId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/productstatuses/methods/get'
          - $ref: '#/components/x-stackQL-resources/productstatuses/methods/list'
        insert: []
        update: []
        delete: []
    repricingreports:
      id: googledevelopers.content.repricingreports
      name: repricingreports
      title: Repricingreports
      methods:
        productstatuses_repricingreports_list:
          operation:
            $ref: '#/paths/~1{merchantId}~1productstatuses~1{productId}~1repricingreports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        repricingrules_repricingreports_list:
          operation:
            $ref: '#/paths/~1{merchantId}~1repricingrules~1{ruleId}~1repricingreports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repricingreports/methods/productstatuses_repricingreports_list'
          - $ref: '#/components/x-stackQL-resources/repricingreports/methods/repricingrules_repricingreports_list'
        insert: []
        update: []
        delete: []
    collections:
      id: googledevelopers.content.collections
      name: collections
      title: Collections
      methods:
        create:
          operation:
            $ref: '#/paths/~1{merchantId}~1collections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1collections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1collections~1{collectionId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1collections~1{collectionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collections/methods/get'
          - $ref: '#/components/x-stackQL-resources/collections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/collections/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/collections/methods/delete'
    csses:
      id: googledevelopers.content.csses
      name: csses
      title: Csses
      methods:
        updatelabels:
          operation:
            $ref: '#/paths/~1{cssGroupId}~1csses~1{cssDomainId}~1updatelabels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{cssGroupId}~1csses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{cssGroupId}~1csses~1{cssDomainId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/csses/methods/get'
          - $ref: '#/components/x-stackQL-resources/csses/methods/list'
        insert: []
        update: []
        delete: []
    orderreturns:
      id: googledevelopers.content.orderreturns
      name: orderreturns
      title: Orderreturns
      methods:
        acknowledge:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderreturns~1{returnId}~1acknowledge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderreturns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderreturns~1{returnId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        process:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderreturns~1{returnId}~1process/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orderreturns/methods/get'
          - $ref: '#/components/x-stackQL-resources/orderreturns/methods/list'
        insert: []
        update: []
        delete: []
    orderreturns_orderreturn:
      id: googledevelopers.content.orderreturns_orderreturn
      name: orderreturns_orderreturn
      title: Orderreturns_orderreturn
      methods:
        orderreturns_createorderreturn:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderreturns~1createOrderReturn/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/orderreturns_orderreturn/methods/orderreturns_createorderreturn'
        update: []
        delete: []
    returnpolicy:
      id: googledevelopers.content.returnpolicy
      name: returnpolicy
      title: Returnpolicy
      methods:
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicy~1{returnPolicyId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicy~1{returnPolicyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1returnpolicy~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/returnpolicy/methods/get'
          - $ref: '#/components/x-stackQL-resources/returnpolicy/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/returnpolicy/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/returnpolicy/methods/delete'
    regions:
      id: googledevelopers.content.regions
      name: regions
      title: Regions
      methods:
        create:
          operation:
            $ref: '#/paths/~1{merchantId}~1regions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1regions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1{merchantId}~1regions~1{regionId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1regions~1{regionId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1regions~1{regionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/regions/methods/get'
          - $ref: '#/components/x-stackQL-resources/regions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/regions/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/regions/methods/delete'
    promotions:
      id: googledevelopers.content.promotions
      name: promotions
      title: Promotions
      methods:
        create:
          operation:
            $ref: '#/paths/~1{merchantId}~1promotions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1promotions~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/promotions/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/promotions/methods/create'
        update: []
        delete: []
    accountstatuses:
      id: googledevelopers.content.accountstatuses
      name: accountstatuses
      title: Accountstatuses
      methods:
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1accountstatuses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1accountstatuses~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1accountstatuses~1{accountId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accountstatuses/methods/get'
          - $ref: '#/components/x-stackQL-resources/accountstatuses/methods/list'
        insert: []
        update: []
        delete: []
    repricingrules:
      id: googledevelopers.content.repricingrules
      name: repricingrules
      title: Repricingrules
      methods:
        patch:
          operation:
            $ref: '#/paths/~1{merchantId}~1repricingrules~1{ruleId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1repricingrules~1{ruleId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1repricingrules~1{ruleId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1repricingrules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1{merchantId}~1repricingrules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repricingrules/methods/get'
          - $ref: '#/components/x-stackQL-resources/repricingrules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/repricingrules/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/repricingrules/methods/delete'
    pos:
      id: googledevelopers.content.pos
      name: pos
      title: Pos
      methods:
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1pos~1{targetMerchantId}~1store~1{storeCode}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1pos~1{targetMerchantId}~1store~1{storeCode}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1pos~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1pos~1{targetMerchantId}~1store/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1{merchantId}~1pos~1{targetMerchantId}~1store/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        inventory:
          operation:
            $ref: '#/paths/~1{merchantId}~1pos~1{targetMerchantId}~1inventory/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sale:
          operation:
            $ref: '#/paths/~1{merchantId}~1pos~1{targetMerchantId}~1sale/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pos/methods/get'
          - $ref: '#/components/x-stackQL-resources/pos/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pos/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pos/methods/delete'
    ordertrackingsignals:
      id: googledevelopers.content.ordertrackingsignals
      name: ordertrackingsignals
      title: Ordertrackingsignals
      methods:
        create:
          operation:
            $ref: '#/paths/~1{merchantId}~1ordertrackingsignals/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/ordertrackingsignals/methods/create'
        update: []
        delete: []
    collectionstatuses:
      id: googledevelopers.content.collectionstatuses
      name: collectionstatuses
      title: Collectionstatuses
      methods:
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1collectionstatuses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1collectionstatuses~1{collectionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collectionstatuses/methods/get'
          - $ref: '#/components/x-stackQL-resources/collectionstatuses/methods/list'
        insert: []
        update: []
        delete: []
    returnpolicyonline:
      id: googledevelopers.content.returnpolicyonline
      name: returnpolicyonline
      title: Returnpolicyonline
      methods:
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicyonline/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicyonline/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicyonline~1{returnPolicyId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicyonline~1{returnPolicyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1returnpolicyonline~1{returnPolicyId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/returnpolicyonline/methods/get'
          - $ref: '#/components/x-stackQL-resources/returnpolicyonline/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/returnpolicyonline/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/returnpolicyonline/methods/delete'
    orderinvoices_refundinvoice:
      id: googledevelopers.content.orderinvoices_refundinvoice
      name: orderinvoices_refundinvoice
      title: Orderinvoices_refundinvoice
      methods:
        orderinvoices_createrefundinvoice:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderinvoices~1{orderId}~1createRefundInvoice/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/orderinvoices_refundinvoice/methods/orderinvoices_createrefundinvoice'
        update: []
        delete: []
    orderinvoices_chargeinvoice:
      id: googledevelopers.content.orderinvoices_chargeinvoice
      name: orderinvoices_chargeinvoice
      title: Orderinvoices_chargeinvoice
      methods:
        orderinvoices_createchargeinvoice:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderinvoices~1{orderId}~1createChargeInvoice/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/orderinvoices_chargeinvoice/methods/orderinvoices_createchargeinvoice'
        update: []
        delete: []
    products:
      id: googledevelopers.content.products
      name: products
      title: Products
      methods:
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1{merchantId}~1products/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1products~1{productId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{merchantId}~1products~1{productId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1products~1{productId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1products~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/products/methods/get'
          - $ref: '#/components/x-stackQL-resources/products/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/products/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/products/methods/delete'
    freelistingsprogram:
      id: googledevelopers.content.freelistingsprogram
      name: freelistingsprogram
      title: Freelistingsprogram
      methods:
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1freelistingsprogram/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        requestreview:
          operation:
            $ref: '#/paths/~1{merchantId}~1freelistingsprogram~1requestreview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/freelistingsprogram/methods/get'
        insert: []
        update: []
        delete: []
    pubsubnotificationsettings:
      id: googledevelopers.content.pubsubnotificationsettings
      name: pubsubnotificationsettings
      title: Pubsubnotificationsettings
      methods:
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1pubsubnotificationsettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{merchantId}~1pubsubnotificationsettings/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pubsubnotificationsettings/methods/get'
        insert: []
        update: []
        delete: []
    datafeeds:
      id: googledevelopers.content.datafeeds
      name: datafeeds
      title: Datafeeds
      methods:
        insert:
          operation:
            $ref: '#/paths/~1{merchantId}~1datafeeds/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1datafeeds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1datafeeds~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{merchantId}~1datafeeds~1{datafeedId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1datafeeds~1{datafeedId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1datafeeds~1{datafeedId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datafeeds/methods/get'
          - $ref: '#/components/x-stackQL-resources/datafeeds/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/datafeeds/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datafeeds/methods/delete'
    datafeeds_now:
      id: googledevelopers.content.datafeeds_now
      name: datafeeds_now
      title: Datafeeds_now
      methods:
        datafeeds_fetchnow:
          operation:
            $ref: '#/paths/~1{merchantId}~1datafeeds~1{datafeedId}~1fetchNow/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    accounttax:
      id: googledevelopers.content.accounttax
      name: accounttax
      title: Accounttax
      methods:
        custombatch:
          operation:
            $ref: '#/paths/~1accounttax~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounttax~1{accountId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounttax~1{accountId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1accounttax/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounttax/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounttax/methods/list'
        insert: []
        update: []
        delete: []
    settlementreports:
      id: googledevelopers.content.settlementreports
      name: settlementreports
      title: Settlementreports
      methods:
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1settlementreports~1{settlementId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{merchantId}~1settlementreports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settlementreports/methods/get'
          - $ref: '#/components/x-stackQL-resources/settlementreports/methods/list'
        insert: []
        update: []
        delete: []
    productdeliverytime:
      id: googledevelopers.content.productdeliverytime
      name: productdeliverytime
      title: Productdeliverytime
      methods:
        delete:
          operation:
            $ref: '#/paths/~1{merchantId}~1productdeliverytime~1{productId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{merchantId}~1productdeliverytime~1{productId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1{merchantId}~1productdeliverytime/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/productdeliverytime/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/productdeliverytime/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/productdeliverytime/methods/delete'
    orderreports_transactions:
      id: googledevelopers.content.orderreports_transactions
      name: orderreports_transactions
      title: Orderreports_transactions
      methods:
        orderreports_listtransactions:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderreports~1disbursements~1{disbursementId}~1transactions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    orderreports_disbursements:
      id: googledevelopers.content.orderreports_disbursements
      name: orderreports_disbursements
      title: Orderreports_disbursements
      methods:
        orderreports_listdisbursements:
          operation:
            $ref: '#/paths/~1{merchantId}~1orderreports~1disbursements/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    regionalinventory:
      id: googledevelopers.content.regionalinventory
      name: regionalinventory
      title: Regionalinventory
      methods:
        insert:
          operation:
            $ref: '#/paths/~1{merchantId}~1products~1{productId}~1regionalinventory/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        custombatch:
          operation:
            $ref: '#/paths/~1regionalinventory~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/regionalinventory/methods/insert'
        update: []
        delete: []
paths:
  /{merchantId}/shippingsettings/{accountId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
    put:
      description: Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.shippingsettings.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings
      x-stackQL-verb: exec
    get:
      description: Retrieves the shipping settings of the account.
      operationId: content.shippingsettings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings
      x-stackQL-verb: select
  /{merchantId}/supportedPickupServices:
    parameters: *ref_1
    get:
      description: Retrieves supported pickup services for an account.
      operationId: content.shippingsettings.getsupportedpickupservices
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingsettingsGetSupportedPickupServicesResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings_supportedpickupservices
      x-stackQL-verb: select
  /{merchantId}/supportedCarriers:
    parameters: *ref_1
    get:
      description: Retrieves supported carriers and carrier services for an account.
      operationId: content.shippingsettings.getsupportedcarriers
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingsettingsGetSupportedCarriersResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings_supportedcarriers
      x-stackQL-verb: select
  /shippingsettings/batch:
    parameters: *ref_1
    post:
      description: Retrieves and updates the shipping settings of multiple accounts in a single request.
      operationId: content.shippingsettings.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingsettingsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingsettingsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: shippingsettings
      x-stackQL-verb: exec
  /{merchantId}/supportedHolidays:
    parameters: *ref_1
    get:
      description: Retrieves supported holidays for an account.
      operationId: content.shippingsettings.getsupportedholidays
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingsettingsGetSupportedHolidaysResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings_supportedholidays
      x-stackQL-verb: select
  /{merchantId}/shippingsettings:
    parameters: *ref_1
    get:
      description: Lists the shipping settings of the sub-accounts in your Merchant Center account.
      operationId: content.shippingsettings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingsettingsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: shippingsettings
      x-stackQL-verb: select
  /{merchantId}/accounts/{accountId}/link:
    parameters: *ref_1
    post:
      description: Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.
      operationId: content.accounts.link
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsLinkRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsLinkResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /accounts/batch:
    parameters: *ref_1
    post:
      description: Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.
      operationId: content.accounts.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts:
    parameters: *ref_1
    post:
      description: Creates a Merchant Center sub-account.
      operationId: content.accounts.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: insert
    get:
      description: Lists the sub-accounts in your Merchant Center account.
      operationId: content.accounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: label
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: select
  /{merchantId}/accounts/{accountId}:
    parameters: *ref_1
    get:
      description: Retrieves a Merchant Center account.
      operationId: content.accounts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: select
    delete:
      description: Deletes a Merchant Center sub-account.
      operationId: content.accounts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: accounts
      x-stackQL-verb: delete
    put:
      description: Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.
      operationId: content.accounts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /accounts/authinfo:
    parameters: *ref_1
    get:
      description: Returns information about the authenticated user.
      operationId: content.accounts.authinfo
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAuthInfoResponse'
      parameters: []
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}/listlinks:
    parameters: *ref_1
    get:
      description: Returns the list of accounts linked to your Merchant Center account.
      operationId: content.accounts.listlinks
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListLinksResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: accounts_links
      x-stackQL-verb: select
  /{merchantId}/accounts/{accountId}/requestphoneverification:
    parameters: *ref_1
    post:
      description: Request verification code to start phone verification.
      operationId: content.accounts.requestphoneverification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPhoneVerificationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPhoneVerificationResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}/claimwebsite:
    parameters: *ref_1
    post:
      description: Claims the website of a Merchant Center sub-account.
      operationId: content.accounts.claimwebsite
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsClaimWebsiteResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: overwrite
          schema:
            type: boolean
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}/verifyphonenumber:
    parameters: *ref_1
    post:
      description: Validates verification code to verify phone number for the account. If successful this will overwrite the value of `accounts.businessinformation.phoneNumber`. Only verified phone number will replace an existing verified phone number.
      operationId: content.accounts.verifyphonenumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhoneNumberResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}/updatelabels:
    parameters: *ref_1
    post:
      description: Updates labels that are assigned to the Merchant Center account by CSS user.
      operationId: content.accounts.updatelabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsUpdateLabelsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsUpdateLabelsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /accounts/{accountId}/returncarrier/{carrierAccountId}:
    parameters: *ref_1
    patch:
      description: Updates a return carrier in the merchant account.
      operationId: content.accounts.returncarrier.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountReturnCarrier'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReturnCarrier'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: carrierAccountId
          required: true
          schema:
            type: string
      x-stackQL-resource: returncarrier
      x-stackQL-verb: exec
    delete:
      description: Delete a return carrier in the merchant account.
      operationId: content.accounts.returncarrier.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: carrierAccountId
          required: true
          schema:
            type: string
      x-stackQL-resource: returncarrier
      x-stackQL-verb: delete
  /accounts/{accountId}/returncarrier:
    parameters: *ref_1
    get:
      description: Lists available return carriers in the merchant account.
      operationId: content.accounts.returncarrier.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountReturnCarrierResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: returncarrier
      x-stackQL-verb: select
    post:
      description: Links return carrier to a merchant account.
      operationId: content.accounts.returncarrier.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountReturnCarrier'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReturnCarrier'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: returncarrier
      x-stackQL-verb: insert
  /accounts/{accountId}/labels:
    parameters: *ref_1
    post:
      description: Creates a new label, not assigned to any account.
      operationId: content.accounts.labels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLabel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLabel'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: insert
    get:
      description: Lists the labels assigned to an account.
      operationId: content.accounts.labels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountLabelsResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: select
  /accounts/{accountId}/labels/{labelId}:
    parameters: *ref_1
    patch:
      description: Updates a label.
      operationId: content.accounts.labels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLabel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLabel'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: labelId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: exec
    delete:
      description: Deletes a label and removes it from all accounts to which it was assigned.
      operationId: content.accounts.labels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: labelId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: delete
  /accounts/{accountId}/credentials:
    parameters: *ref_1
    post:
      description: Uploads credentials for the Merchant Center account. If credentials already exist for this Merchant Center account and purpose, this method updates them.
      operationId: content.accounts.credentials.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCredentials'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCredentials'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: credentials
      x-stackQL-verb: insert
  /{merchantId}/returnaddress:
    parameters: *ref_1
    post:
      description: Inserts a return address for the Merchant Center account.
      operationId: content.returnaddress.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnAddress'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnAddress'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnaddress
      x-stackQL-verb: insert
    get:
      description: Lists the return addresses of the Merchant Center account.
      operationId: content.returnaddress.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnaddressListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: returnaddress
      x-stackQL-verb: select
  /returnaddress/batch:
    parameters: *ref_1
    post:
      description: Batches multiple return address related calls in a single request.
      operationId: content.returnaddress.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnaddressCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnaddressCustomBatchResponse'
      parameters: []
      x-stackQL-resource: returnaddress
      x-stackQL-verb: exec
  /{merchantId}/returnaddress/{returnAddressId}:
    parameters: *ref_1
    delete:
      description: Deletes a return address for the given Merchant Center account.
      operationId: content.returnaddress.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnAddressId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnaddress
      x-stackQL-verb: delete
    get:
      description: Gets a return address of the Merchant Center account.
      operationId: content.returnaddress.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnAddress'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnAddressId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnaddress
      x-stackQL-verb: select
  /{merchantId}/quotas:
    parameters: *ref_1
    get:
      description: Lists the daily call quota and usage per method for your Merchant Center account.
      operationId: content.quotas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMethodQuotasResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: quotas
      x-stackQL-verb: select
  /{merchantId}/buyongoogleprograms/{regionCode}/onboard:
    parameters: *ref_1
    post:
      description: Onboards the BoG program in your Merchant Center account. By using this method, you agree to the [Terms of Service](https://merchants.google.com/mc/termsofservice/transactions/US/latest). Calling this method is only possible if the authenticated account is the same as the merchant id in the request. Calling this method multiple times will only accept Terms of Service if the latest version is not currently signed.
      operationId: content.buyongoogleprograms.onboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardBuyOnGoogleProgramRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
  /{merchantId}/buyongoogleprograms/{regionCode}/activate:
    parameters: *ref_1
    post:
      description: Reactivates the BoG program in your Merchant Center account. Moves the program to the active state when allowed, for example, when paused. This method is only available to selected merchants.
      operationId: content.buyongoogleprograms.activate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateBuyOnGoogleProgramRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
  /{merchantId}/buyongoogleprograms/{regionCode}/requestreview:
    parameters: *ref_1
    post:
      description: Requests review and then activates the BoG program in your Merchant Center account for the first time. Moves the program to the REVIEW_PENDING state. This method is only available to selected merchants.
      operationId: content.buyongoogleprograms.requestreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestReviewBuyOnGoogleProgramRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
  /{merchantId}/buyongoogleprograms/{regionCode}:
    parameters: *ref_1
    patch:
      description: Updates the status of the BoG program for your Merchant Center account.
      operationId: content.buyongoogleprograms.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyOnGoogleProgramStatus'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyOnGoogleProgramStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
    get:
      description: Retrieves a status of the BoG program for your Merchant Center account.
      operationId: content.buyongoogleprograms.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyOnGoogleProgramStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: select
  /{merchantId}/buyongoogleprograms/{regionCode}/pause:
    parameters: *ref_1
    post:
      description: Pauses the BoG program in your Merchant Center account. This method is only available to selected merchants.
      operationId: content.buyongoogleprograms.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseBuyOnGoogleProgramRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
  /datafeedstatuses/batch:
    parameters: *ref_1
    post:
      description: Gets multiple Merchant Center datafeed statuses in a single request.
      operationId: content.datafeedstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatafeedstatusesCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedstatusesCustomBatchResponse'
      parameters: []
      x-stackQL-resource: datafeedstatuses
      x-stackQL-verb: exec
  /{merchantId}/datafeedstatuses:
    parameters: *ref_1
    get:
      description: Lists the statuses of the datafeeds in your Merchant Center account.
      operationId: content.datafeedstatuses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedstatusesListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: datafeedstatuses
      x-stackQL-verb: select
  /{merchantId}/datafeedstatuses/{datafeedId}:
    parameters: *ref_1
    get:
      description: Retrieves the status of a datafeed from your Merchant Center account.
      operationId: content.datafeedstatuses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
        - in: query
          name: feedLabel
          schema:
            type: string
      x-stackQL-resource: datafeedstatuses
      x-stackQL-verb: select
  /{merchantId}/shoppingadsprogram/requestreview:
    parameters: *ref_1
    post:
      description: Requests a review of Shopping ads in a specific region. This method is only available to selected merchants.
      operationId: content.shoppingadsprogram.requestreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestReviewShoppingAdsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shoppingadsprogram
      x-stackQL-verb: exec
  /{merchantId}/shoppingadsprogram:
    parameters: *ref_1
    get:
      description: Retrieves the status and review eligibility for the Shopping Ads program. Returns errors and warnings if they require action to resolve, will become disapprovals, or impact impressions. Use `accountstatuses` to view all issues for an account.
      operationId: content.shoppingadsprogram.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingAdsProgramStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shoppingadsprogram
      x-stackQL-verb: select
  /{merchantId}/reports/search:
    parameters: *ref_1
    post:
      description: Retrieves merchant performance mertrics matching the search query and optionally segmented by selected dimensions.
      operationId: content.reports.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/shipLineItems:
    parameters: *ref_1
    post:
      description: Marks line item(s) as shipped.
      operationId: content.orders.shiplineitems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersShipLineItemsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShipLineItemsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/inStoreRefundLineItem:
    parameters: *ref_1
    post:
      description: 'Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (for example, cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding through Google then through an in-store return.'
      operationId: content.orders.instorerefundlineitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersInStoreRefundLineItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInStoreRefundLineItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/testorders/{orderId}/cancelByCustomer:
    parameters: *ref_1
    post:
      description: Sandbox only. Cancels a test order for customer-initiated cancellation.
      operationId: content.orders.canceltestorderbycustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCancelTestOrderByCustomerRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCancelTestOrderByCustomerResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/testreturn:
    parameters: *ref_1
    post:
      description: Sandbox only. Creates a test return.
      operationId: content.orders.createtestreturn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCreateTestReturnRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateTestReturnResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders_testreturn
      x-stackQL-verb: insert
  /{merchantId}/orders/{orderId}/rejectReturnLineItem:
    parameters: *ref_1
    post:
      description: Rejects return on an line item.
      operationId: content.orders.rejectreturnlineitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRejectReturnLineItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectReturnLineItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/cancelLineItem:
    parameters: *ref_1
    post:
      description: Cancels a line item, making a full refund.
      operationId: content.orders.cancellineitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCancelLineItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCancelLineItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/returnRefundLineItem:
    parameters: *ref_1
    post:
      description: Returns and refunds a line item. Note that this method can only be called on fully shipped orders. The Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.
      operationId: content.orders.returnrefundlineitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersReturnRefundLineItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersReturnRefundLineItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/refundorder:
    parameters: *ref_1
    post:
      description: Issues a partial or total refund for an order.
      operationId: content.orders.refundorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRefundOrderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRefundOrderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/updateMerchantOrderId:
    parameters: *ref_1
    post:
      description: Updates the merchant order ID for a given order.
      operationId: content.orders.updatemerchantorderid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUpdateMerchantOrderIdRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersUpdateMerchantOrderIdResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/testordertemplates/{templateName}:
    parameters: *ref_1
    get:
      description: Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.
      operationId: content.orders.gettestordertemplate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetTestOrderTemplateResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: templateName
          required: true
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
      x-stackQL-resource: orders_testordertemplate
      x-stackQL-verb: select
  /{merchantId}/orders/{orderId}/acknowledge:
    parameters: *ref_1
    post:
      description: Marks an order as acknowledged.
      operationId: content.orders.acknowledge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersAcknowledgeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersAcknowledgeResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/testorders/{orderId}/advance:
    parameters: *ref_1
    post:
      description: Sandbox only. Moves a test order from state "`inProgress`" to state "`pendingShipment`".
      operationId: content.orders.advancetestorder
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersAdvanceTestOrderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/refunditem:
    parameters: *ref_1
    post:
      description: Issues a partial or total refund for items and shipment.
      operationId: content.orders.refunditem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRefundItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRefundItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/updateLineItemShippingDetails:
    parameters: *ref_1
    post:
      description: Updates ship by and delivery by dates for a line item.
      operationId: content.orders.updatelineitemshippingdetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUpdateLineItemShippingDetailsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersUpdateLineItemShippingDetailsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/captureOrder:
    parameters: *ref_1
    post:
      description: Capture funds from the customer for the current order total. This method should be called after the merchant verifies that they are able and ready to start shipping the order. This method blocks until a response is received from the payment processsor. If this method succeeds, the merchant is guaranteed to receive funds for the order after shipment. If the request fails, it can be retried or the order may be cancelled. This method cannot be called after the entire order is already shipped. A rejected error code is returned when the payment service provider has declined the charge. This indicates a problem between the PSP and either the merchant's or customer's account. Sometimes this error will be resolved by the customer. We recommend retrying these errors once per day or cancelling the order with reason `failedToCaptureFunds` if the items cannot be held.
      operationId: content.orders.captureOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureOrderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureOrderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/cancel:
    parameters: *ref_1
    post:
      description: Cancels all line items in an order, making a full refund.
      operationId: content.orders.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCancelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCancelResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/ordersbymerchantid/{merchantOrderId}:
    parameters: *ref_1
    get:
      description: Retrieves an order using merchant order ID.
      operationId: content.orders.getbymerchantorderid
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetByMerchantOrderIdResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: merchantOrderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders_bymerchantorderid
      x-stackQL-verb: select
  /{merchantId}/orders/{orderId}:
    parameters: *ref_1
    get:
      description: Retrieves an order from your Merchant Center account.
      operationId: content.orders.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: select
  /{merchantId}/testorders:
    parameters: *ref_1
    post:
      description: Sandbox only. Creates a test order.
      operationId: content.orders.createtestorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCreateTestOrderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateTestOrderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders_testorder
      x-stackQL-verb: insert
  /{merchantId}/orders/{orderId}/setLineItemMetadata:
    parameters: *ref_1
    post:
      description: Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided through other methods. Submitted key-value pairs can be retrieved as part of the orders resource.
      operationId: content.orders.setlineitemmetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersSetLineItemMetadataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSetLineItemMetadataResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders:
    parameters: *ref_1
    get:
      description: Lists the orders in your Merchant Center account.
      operationId: content.orders.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: placedDateStart
          schema:
            type: string
        - in: query
          name: statuses
          schema:
            type: string
        - in: query
          name: acknowledged
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: placedDateEnd
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: orders
      x-stackQL-verb: select
  /{merchantId}/orders/{orderId}/updateShipment:
    parameters: *ref_1
    post:
      description: Updates a shipment's status, carrier, and/or tracking ID.
      operationId: content.orders.updateshipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUpdateShipmentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersUpdateShipmentResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/products/{productId}/localinventory:
    parameters: *ref_1
    post:
      description: Updates the local inventory of a product in your Merchant Center account.
      operationId: content.localinventory.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalInventory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalInventory'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: localinventory
      x-stackQL-verb: insert
  /localinventory/batch:
    parameters: *ref_1
    post:
      description: Updates local inventory for multiple products or stores in a single request.
      operationId: content.localinventory.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalinventoryCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalinventoryCustomBatchResponse'
      parameters: []
      x-stackQL-resource: localinventory
      x-stackQL-verb: exec
  /{merchantId}/settlementreports/{settlementId}/transactions:
    parameters: *ref_1
    get:
      description: Retrieves a list of transactions for the settlement.
      operationId: content.settlementtransactions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementtransactionsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: settlementId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: transactionIds
          schema:
            type: string
      x-stackQL-resource: settlementtransactions
      x-stackQL-verb: select
  /{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}:
    parameters: *ref_1
    post:
      description: Requests inventory validation for the specified country.
      operationId: content.liasettings.requestinventoryverification
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsRequestInventoryVerificationResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: country
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings:
    parameters: *ref_1
    get:
      description: Lists the LIA settings of the sub-accounts in your Merchant Center account.
      operationId: content.liasettings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: liasettings
      x-stackQL-verb: select
  /{merchantId}/liasettings/{accountId}/setposdataprovider:
    parameters: *ref_1
    post:
      description: Sets the POS data provider for the specified country.
      operationId: content.liasettings.setposdataprovider
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsSetPosDataProviderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: country
          required: true
          schema:
            type: string
        - in: query
          name: posDataProviderId
          schema:
            type: string
        - in: query
          name: posExternalAccountId
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings/{accountId}/setinventoryverificationcontact:
    parameters: *ref_1
    post:
      description: Sets the inventory verification contract for the specified country.
      operationId: content.liasettings.setinventoryverificationcontact
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsSetInventoryVerificationContactResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: country
          required: true
          schema:
            type: string
        - in: query
          name: language
          required: true
          schema:
            type: string
        - in: query
          name: contactName
          required: true
          schema:
            type: string
        - in: query
          name: contactEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /liasettings/batch:
    parameters: *ref_1
    post:
      description: Retrieves and/or updates the LIA settings of multiple accounts in a single request.
      operationId: content.liasettings.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiasettingsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings/{accountId}/accessiblegmbaccounts:
    parameters: *ref_1
    get:
      description: Retrieves the list of accessible Business Profiles.
      operationId: content.liasettings.getaccessiblegmbaccounts
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsGetAccessibleGmbAccountsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings_accessiblegmbaccounts
      x-stackQL-verb: select
  /{merchantId}/liasettings/{accountId}:
    parameters: *ref_1
    get:
      description: Retrieves the LIA settings of the account.
      operationId: content.liasettings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiaSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: select
    put:
      description: Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.liasettings.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiaSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiaSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings/{accountId}/requestgmbaccess:
    parameters: *ref_1
    post:
      description: Requests access to a specified Business Profile.
      operationId: content.liasettings.requestgmbaccess
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsRequestGmbAccessResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: gmbEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /liasettings/posdataproviders:
    parameters: *ref_1
    get:
      description: Retrieves the list of POS data providers that have active settings for the all eiligible countries.
      operationId: content.liasettings.listposdataproviders
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsListPosDataProvidersResponse'
      parameters: []
      x-stackQL-resource: liasettings_posdataproviders
      x-stackQL-verb: select
  /{merchantId}/productstatuses:
    parameters: *ref_1
    get:
      description: Lists the statuses of the products in your Merchant Center account.
      operationId: content.productstatuses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductstatusesListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: destinations
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: productstatuses
      x-stackQL-verb: select
  /productstatuses/batch:
    parameters: *ref_1
    post:
      description: Gets the statuses of multiple products in a single request.
      operationId: content.productstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductstatusesCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductstatusesCustomBatchResponse'
      parameters: []
      x-stackQL-resource: productstatuses
      x-stackQL-verb: exec
  /{merchantId}/productstatuses/{productId}:
    parameters: *ref_1
    get:
      description: Gets the status of a product from your Merchant Center account.
      operationId: content.productstatuses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: destinations
          schema:
            type: string
      x-stackQL-resource: productstatuses
      x-stackQL-verb: select
  /{merchantId}/productstatuses/{productId}/repricingreports:
    parameters: *ref_1
    get:
      description: Lists the metrics report for a given Repricing product.
      operationId: content.productstatuses.repricingreports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepricingProductReportsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: endDate
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
        - in: query
          name: ruleId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: repricingreports
      x-stackQL-verb: select
  /{merchantId}/collections:
    parameters: *ref_1
    post:
      description: Uploads a collection to your Merchant Center account. If a collection with the same collectionId already exists, this method updates that entry. In each update, the collection is completely replaced by the fields in the body of the update request.
      operationId: content.collections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: collections
      x-stackQL-verb: insert
    get:
      description: Lists the collections in your Merchant Center account. The response might contain fewer items than specified by page_size. Rely on next_page_token to determine if there are more items to be requested.
      operationId: content.collections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectionsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: collections
      x-stackQL-verb: select
  /{merchantId}/collections/{collectionId}:
    parameters: *ref_1
    delete:
      description: Deletes a collection from your Merchant Center account.
      operationId: content.collections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: collectionId
          required: true
          schema:
            type: string
      x-stackQL-resource: collections
      x-stackQL-verb: delete
    get:
      description: Retrieves a collection from your Merchant Center account.
      operationId: content.collections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: collectionId
          required: true
          schema:
            type: string
      x-stackQL-resource: collections
      x-stackQL-verb: select
  /{cssGroupId}/csses/{cssDomainId}/updatelabels:
    parameters: *ref_1
    post:
      description: Updates labels that are assigned to a CSS domain by its CSS group.
      operationId: content.csses.updatelabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelIds'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Css'
      parameters:
        - in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - in: path
          name: cssDomainId
          required: true
          schema:
            type: string
      x-stackQL-resource: csses
      x-stackQL-verb: exec
  /{cssGroupId}/csses:
    parameters: *ref_1
    get:
      description: Lists CSS domains affiliated with a CSS group.
      operationId: content.csses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCssesResponse'
      parameters:
        - in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: csses
      x-stackQL-verb: select
  /{cssGroupId}/csses/{cssDomainId}:
    parameters: *ref_1
    get:
      description: Retrieves a single CSS domain by ID.
      operationId: content.csses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Css'
      parameters:
        - in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - in: path
          name: cssDomainId
          required: true
          schema:
            type: string
      x-stackQL-resource: csses
      x-stackQL-verb: select
  /{merchantId}/orderreturns/{returnId}/acknowledge:
    parameters: *ref_1
    post:
      description: Acks an order return in your Merchant Center account.
      operationId: content.orderreturns.acknowledge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderreturnsAcknowledgeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreturnsAcknowledgeResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderreturns
      x-stackQL-verb: exec
  /{merchantId}/orderreturns:
    parameters: *ref_1
    get:
      description: Lists order returns in your Merchant Center account.
      operationId: content.orderreturns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreturnsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: shipmentTrackingNumbers
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: createdStartDate
          schema:
            type: string
        - in: query
          name: acknowledged
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: shipmentStatus
          schema:
            type: string
        - in: query
          name: googleOrderIds
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: shipmentTypes
          schema:
            type: string
        - in: query
          name: shipmentStates
          schema:
            type: string
        - in: query
          name: createdEndDate
          schema:
            type: string
      x-stackQL-resource: orderreturns
      x-stackQL-verb: select
  /{merchantId}/orderreturns/{returnId}:
    parameters: *ref_1
    get:
      description: Retrieves an order return from your Merchant Center account.
      operationId: content.orderreturns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantOrderReturn'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderreturns
      x-stackQL-verb: select
  /{merchantId}/orderreturns/{returnId}/process:
    parameters: *ref_1
    post:
      description: Processes return in your Merchant Center account.
      operationId: content.orderreturns.process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderreturnsProcessRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreturnsProcessResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderreturns
      x-stackQL-verb: exec
  /{merchantId}/orderreturns/createOrderReturn:
    parameters: *ref_1
    post:
      description: Create return in your Merchant Center account.
      operationId: content.orderreturns.createorderreturn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderreturnsCreateOrderReturnRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreturnsCreateOrderReturnResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderreturns_orderreturn
      x-stackQL-verb: insert
  /{merchantId}/orderreturns/{returnId}/labels:
    parameters: *ref_1
    post:
      description: Links a return shipping label to a return id. You can only create one return label per return id. Since the label is sent to the buyer, the linked return label cannot be updated or deleted. If you try to create multiple return shipping labels for a single return id, every create request except the first will fail.
      operationId: content.orderreturns.labels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnShippingLabel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnShippingLabel'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: insert
  /{merchantId}/returnpolicy:
    parameters: *ref_1
    get:
      description: Lists the return policies of the Merchant Center account.
      operationId: content.returnpolicy.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnpolicyListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: select
    post:
      description: Inserts a return policy for the Merchant Center account.
      operationId: content.returnpolicy.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicy'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: insert
  /{merchantId}/returnpolicy/{returnPolicyId}:
    parameters: *ref_1
    delete:
      description: Deletes a return policy for the given Merchant Center account.
      operationId: content.returnpolicy.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: delete
    get:
      description: Gets a return policy of the Merchant Center account.
      operationId: content.returnpolicy.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicy'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: select
  /returnpolicy/batch:
    parameters: *ref_1
    post:
      description: Batches multiple return policy related calls in a single request.
      operationId: content.returnpolicy.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnpolicyCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnpolicyCustomBatchResponse'
      parameters: []
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: exec
  /{merchantId}/regions:
    parameters: *ref_1
    post:
      description: Creates a region definition in your Merchant Center account.
      operationId: content.regions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: regionId
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: insert
    get:
      description: Lists the regions in your Merchant Center account.
      operationId: content.regions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: regions
      x-stackQL-verb: select
  /{merchantId}/regions/{regionId}:
    parameters: *ref_1
    patch:
      description: Updates a region definition in your Merchant Center account.
      operationId: content.regions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: exec
    delete:
      description: Deletes a region definition from your Merchant Center account.
      operationId: content.regions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionId
          required: true
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: delete
    get:
      description: Retrieves a region defined in your Merchant Center account.
      operationId: content.regions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionId
          required: true
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: select
  /{merchantId}/promotions:
    parameters: *ref_1
    post:
      description: Inserts a promotion for your Merchant Center account. If the promotion already exists, then it updates the promotion instead. To [end or delete] (https://developers.google.com/shopping-content/guides/promotions#end_a_promotion) a promotion update the time period of the promotion to a time that has already passed.
      operationId: content.promotions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: promotions
      x-stackQL-verb: insert
  /{merchantId}/promotions/{id}:
    parameters: *ref_1
    get:
      description: Retrieves a promotion from your Merchant Center account.
      operationId: content.promotions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: promotions
      x-stackQL-verb: select
  /{merchantId}/accountstatuses:
    parameters: *ref_1
    get:
      description: Lists the statuses of the sub-accounts in your Merchant Center account.
      operationId: content.accountstatuses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountstatusesListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: destinations
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: accountstatuses
      x-stackQL-verb: select
  /accountstatuses/batch:
    parameters: *ref_1
    post:
      description: Retrieves multiple Merchant Center account statuses in a single request.
      operationId: content.accountstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountstatusesCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountstatusesCustomBatchResponse'
      parameters: []
      x-stackQL-resource: accountstatuses
      x-stackQL-verb: exec
  /{merchantId}/accountstatuses/{accountId}:
    parameters: *ref_1
    get:
      description: Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts.
      operationId: content.accountstatuses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: destinations
          schema:
            type: string
      x-stackQL-resource: accountstatuses
      x-stackQL-verb: select
  /{merchantId}/repricingrules/{ruleId}:
    parameters: *ref_1
    patch:
      description: Updates a repricing rule in your Merchant Center account. All mutable fields will be overwritten in each update request. In each update, you must provide all required mutable fields, or an error will be thrown. If you do not provide an optional field in the update request, if that field currently exists, it will be deleted from the rule.
      operationId: content.repricingrules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepricingRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepricingRule'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: exec
    get:
      description: Retrieves a repricing rule from your Merchant Center account.
      operationId: content.repricingrules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepricingRule'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: select
    delete:
      description: Deletes a repricing rule in your Merchant Center account.
      operationId: content.repricingrules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: delete
  /{merchantId}/repricingrules:
    parameters: *ref_1
    get:
      description: Lists the repricing rules in your Merchant Center account.
      operationId: content.repricingrules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepricingRulesResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: countryCode
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: select
    post:
      description: Creates a repricing rule for your Merchant Center account.
      operationId: content.repricingrules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepricingRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepricingRule'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: ruleId
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: insert
  /{merchantId}/repricingrules/{ruleId}/repricingreports:
    parameters: *ref_1
    get:
      description: Lists the metrics report for a given Repricing rule.
      operationId: content.repricingrules.repricingreports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepricingRuleReportsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: startDate
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: endDate
          schema:
            type: string
      x-stackQL-resource: repricingreports
      x-stackQL-verb: select
  /{merchantId}/pos/{targetMerchantId}/store/{storeCode}:
    parameters: *ref_1
    get:
      description: Retrieves information about the given store.
      operationId: content.pos.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosStore'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - in: path
          name: storeCode
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: select
    delete:
      description: Deletes a store for the given merchant.
      operationId: content.pos.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - in: path
          name: storeCode
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: delete
  /pos/batch:
    parameters: *ref_1
    post:
      description: Batches multiple POS-related calls in a single request.
      operationId: content.pos.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosCustomBatchResponse'
      parameters: []
      x-stackQL-resource: pos
      x-stackQL-verb: exec
  /{merchantId}/pos/{targetMerchantId}/store:
    parameters: *ref_1
    get:
      description: Lists the stores of the target merchant.
      operationId: content.pos.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: select
    post:
      description: Creates a store for the given merchant.
      operationId: content.pos.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosStore'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: insert
  /{merchantId}/pos/{targetMerchantId}/inventory:
    parameters: *ref_1
    post:
      description: Submit inventory for the given merchant.
      operationId: content.pos.inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosInventoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosInventoryResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: exec
  /{merchantId}/pos/{targetMerchantId}/sale:
    parameters: *ref_1
    post:
      description: Submit a sale event for the given merchant.
      operationId: content.pos.sale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosSaleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosSaleResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: exec
  /{merchantId}/ordertrackingsignals:
    parameters: *ref_1
    post:
      description: Creates new order tracking signal.
      operationId: content.ordertrackingsignals.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTrackingSignal'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTrackingSignal'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: ordertrackingsignals
      x-stackQL-verb: insert
  /{merchantId}/collectionstatuses:
    parameters: *ref_1
    get:
      description: Lists the statuses of the collections in your Merchant Center account.
      operationId: content.collectionstatuses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectionStatusesResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: collectionstatuses
      x-stackQL-verb: select
  /{merchantId}/collectionstatuses/{collectionId}:
    parameters: *ref_1
    get:
      description: Gets the status of a collection from your Merchant Center account.
      operationId: content.collectionstatuses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: collectionId
          required: true
          schema:
            type: string
      x-stackQL-resource: collectionstatuses
      x-stackQL-verb: select
  /{merchantId}/returnpolicyonline:
    parameters: *ref_1
    get:
      description: Lists all existing return policies.
      operationId: content.returnpolicyonline.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReturnPolicyOnlineResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: select
    post:
      description: Creates a new return policy.
      operationId: content.returnpolicyonline.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPolicyOnline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicyOnline'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: insert
  /{merchantId}/returnpolicyonline/{returnPolicyId}:
    parameters: *ref_1
    patch:
      description: Updates an existing return policy.
      operationId: content.returnpolicyonline.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPolicyOnline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicyOnline'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: exec
    get:
      description: Gets an existing return policy.
      operationId: content.returnpolicyonline.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicyOnline'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: select
    delete:
      description: Deletes an existing return policy.
      operationId: content.returnpolicyonline.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: delete
  /{merchantId}/orderinvoices/{orderId}/createRefundInvoice:
    parameters: *ref_1
    post:
      description: Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using `createChargeInvoice`. All amounts (except for the summary) are incremental with respect to the previous invoice.
      operationId: content.orderinvoices.createrefundinvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderinvoicesCreateRefundInvoiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderinvoicesCreateRefundInvoiceResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderinvoices_refundinvoice
      x-stackQL-verb: insert
  /{merchantId}/orderinvoices/{orderId}/createChargeInvoice:
    parameters: *ref_1
    post:
      description: Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders.
      operationId: content.orderinvoices.createchargeinvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderinvoicesCreateChargeInvoiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderinvoicesCreateChargeInvoiceResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderinvoices_chargeinvoice
      x-stackQL-verb: insert
  /{merchantId}/products:
    parameters: *ref_1
    get:
      description: Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested.
      operationId: content.products.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: select
    post:
      description: Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.
      operationId: content.products.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: feedId
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: insert
  /{merchantId}/products/{productId}:
    parameters: *ref_1
    delete:
      description: Deletes a product from your Merchant Center account.
      operationId: content.products.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: feedId
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: delete
    patch:
      description: Updates an existing product in your Merchant Center account. Only updates attributes provided in the request.
      operationId: content.products.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: exec
    get:
      description: Retrieves a product from your Merchant Center account.
      operationId: content.products.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: select
  /products/batch:
    parameters: *ref_1
    post:
      description: Retrieves, inserts, and deletes multiple products in a single request.
      operationId: content.products.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: products
      x-stackQL-verb: exec
  /{merchantId}/freelistingsprogram:
    parameters: *ref_1
    get:
      description: Retrieves the status and review eligibility for the free listing program. Returns errors and warnings if they require action to resolve, will become disapprovals, or impact impressions. Use `accountstatuses` to view all issues for an account.
      operationId: content.freelistingsprogram.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeListingsProgramStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: freelistingsprogram
      x-stackQL-verb: select
  /{merchantId}/freelistingsprogram/requestreview:
    parameters: *ref_1
    post:
      description: Requests a review of free listings in a specific region. This method is only available to selected merchants.
      operationId: content.freelistingsprogram.requestreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestReviewFreeListingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: freelistingsprogram
      x-stackQL-verb: exec
  /{merchantId}/pubsubnotificationsettings:
    parameters: *ref_1
    get:
      description: Retrieves a Merchant Center account's pubsub notification settings.
      operationId: content.pubsubnotificationsettings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubsubNotificationSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pubsubnotificationsettings
      x-stackQL-verb: select
    put:
      description: Register a Merchant Center account for pubsub notifications. Note that cloud topic name shouldn't be provided as part of the request.
      operationId: content.pubsubnotificationsettings.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PubsubNotificationSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubsubNotificationSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pubsubnotificationsettings
      x-stackQL-verb: exec
  /{merchantId}/datafeeds:
    parameters: *ref_1
    post:
      description: Registers a datafeed configuration with your Merchant Center account.
      operationId: content.datafeeds.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datafeed'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datafeed'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: insert
    get:
      description: Lists the configurations for datafeeds in your Merchant Center account.
      operationId: content.datafeeds.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: select
  /datafeeds/batch:
    parameters: *ref_1
    post:
      description: Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.
      operationId: content.datafeeds.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatafeedsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: datafeeds
      x-stackQL-verb: exec
  /{merchantId}/datafeeds/{datafeedId}:
    parameters: *ref_1
    put:
      description: Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource.
      operationId: content.datafeeds.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datafeed'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datafeed'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: exec
    get:
      description: Retrieves a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datafeed'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: select
    delete:
      description: Deletes a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: delete
  /{merchantId}/datafeeds/{datafeedId}/fetchNow:
    parameters: *ref_1
    post:
      description: Invokes a fetch for the datafeed in your Merchant Center account. If you need to call this method more than once per day, we recommend you use the [Products service](https://developers.google.com/shopping-content/reference/rest/v2.1/products) to update your product data.
      operationId: content.datafeeds.fetchnow
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedsFetchNowResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds_now
      x-stackQL-verb: select
  /accounttax/batch:
    parameters: *ref_1
    post:
      description: Retrieves and updates tax settings of multiple accounts in a single request.
      operationId: content.accounttax.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccounttaxCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccounttaxCustomBatchResponse'
      parameters: []
      x-stackQL-resource: accounttax
      x-stackQL-verb: exec
  /{merchantId}/accounttax/{accountId}:
    parameters: *ref_1
    get:
      description: Retrieves the tax settings of the account.
      operationId: content.accounttax.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTax'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounttax
      x-stackQL-verb: select
    put:
      description: Updates the tax settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.accounttax.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTax'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTax'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounttax
      x-stackQL-verb: exec
  /{merchantId}/accounttax:
    parameters: *ref_1
    get:
      description: Lists the tax settings of the sub-accounts in your Merchant Center account.
      operationId: content.accounttax.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccounttaxListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: accounttax
      x-stackQL-verb: select
  /{merchantId}/settlementreports/{settlementId}:
    parameters: *ref_1
    get:
      description: Retrieves a settlement report from your Merchant Center account.
      operationId: content.settlementreports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementReport'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: settlementId
          required: true
          schema:
            type: string
      x-stackQL-resource: settlementreports
      x-stackQL-verb: select
  /{merchantId}/settlementreports:
    parameters: *ref_1
    get:
      description: Retrieves a list of settlement reports from your Merchant Center account.
      operationId: content.settlementreports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementreportsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: transferStartDate
          schema:
            type: string
        - in: query
          name: transferEndDate
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: settlementreports
      x-stackQL-verb: select
  /{merchantId}/productdeliverytime/{productId}:
    parameters: *ref_1
    delete:
      description: Deletes the delivery time of a product.
      operationId: content.productdeliverytime.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: productdeliverytime
      x-stackQL-verb: delete
    get:
      description: Gets `productDeliveryTime` by `productId`.
      operationId: content.productdeliverytime.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDeliveryTime'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: productdeliverytime
      x-stackQL-verb: select
  /{merchantId}/productdeliverytime:
    parameters: *ref_1
    post:
      description: Creates or updates the delivery time of a product.
      operationId: content.productdeliverytime.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDeliveryTime'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDeliveryTime'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: productdeliverytime
      x-stackQL-verb: insert
  /{merchantId}/orderreports/disbursements/{disbursementId}/transactions:
    parameters: *ref_1
    get:
      description: Retrieves a list of transactions for a disbursement from your Merchant Center account.
      operationId: content.orderreports.listtransactions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreportsListTransactionsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: disbursementId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: transactionStartDate
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: transactionEndDate
          schema:
            type: string
      x-stackQL-resource: orderreports_transactions
      x-stackQL-verb: select
  /{merchantId}/orderreports/disbursements:
    parameters: *ref_1
    get:
      description: Retrieves a report for disbursements from your Merchant Center account.
      operationId: content.orderreports.listdisbursements
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreportsListDisbursementsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: disbursementStartDate
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: disbursementEndDate
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: orderreports_disbursements
      x-stackQL-verb: select
  /{merchantId}/products/{productId}/regionalinventory:
    parameters: *ref_1
    post:
      description: Updates the regional inventory of a product in your Merchant Center account. If a regional inventory with the same region ID already exists, this method updates that entry.
      operationId: content.regionalinventory.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionalInventory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionalInventory'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: regionalinventory
      x-stackQL-verb: insert
  /regionalinventory/batch:
    parameters: *ref_1
    post:
      description: Updates regional inventory for multiple products or regions in a single request.
      operationId: content.regionalinventory.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionalinventoryCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionalinventoryCustomBatchResponse'
      parameters: []
      x-stackQL-resource: regionalinventory
      x-stackQL-verb: exec
