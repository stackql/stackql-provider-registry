openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: HomeGraph API
  description: ''
  version: v1
  x-discovery-doc-revision: '20221221'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/actions/smarthome/create-app#request-sync
servers:
  - url: https://homegraph.googleapis.com
components:
  schemas:
    SyncResponse:
      description: 'Response type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call. This should follow the same format as the Google smart home `action.devices.SYNC` [response](https://developers.google.com/assistant/smarthome/reference/intent/sync). # Example ```json { "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf", "payload": { "agentUserId": "1836.15267389", "devices": [{ "id": "123", "type": "action.devices.types.OUTLET", "traits": [ "action.devices.traits.OnOff" ], "name": { "defaultNames": ["My Outlet 1234"], "name": "Night light", "nicknames": ["wall plug"] }, "willReportState": false, "deviceInfo": { "manufacturer": "lights-out-inc", "model": "hs1234", "hwVersion": "3.2", "swVersion": "11.4" }, "customData": { "fooValue": 74, "barValue": true, "bazValue": "foo" } }] } } ```'
      type: object
      id: SyncResponse
      properties:
        payload:
          $ref: '#/components/schemas/SyncResponsePayload'
          description: Devices associated with the third-party user.
        requestId:
          description: Request ID used for debugging. Copied from the request.
          type: string
    SyncResponsePayload:
      properties:
        agentUserId:
          type: string
          description: Third-party user ID
        devices:
          items:
            $ref: '#/components/schemas/Device'
          description: Devices associated with the third-party user.
          type: array
      description: Payload containing device information.
      id: SyncResponsePayload
      type: object
    QueryRequest:
      id: QueryRequest
      type: object
      properties:
        agentUserId:
          description: Required. Third-party user ID.
          type: string
        inputs:
          description: Required. Inputs containing third-party device IDs for which to get the device states.
          items:
            $ref: '#/components/schemas/QueryRequestInput'
          type: array
        requestId:
          type: string
          description: Request ID used for debugging.
      description: Request type for the [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.
    ReportStateAndNotificationResponse:
      properties:
        requestId:
          description: Request ID copied from ReportStateAndNotificationRequest.
          type: string
      type: object
      description: Response type for the [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification) call.
      id: ReportStateAndNotificationResponse
    AgentDeviceId:
      description: Third-party device ID for one device.
      type: object
      id: AgentDeviceId
      properties:
        id:
          type: string
          description: Third-party device ID.
    DeviceInfo:
      id: DeviceInfo
      type: object
      description: Device information.
      properties:
        swVersion:
          description: Device software version.
          type: string
        model:
          description: Device model.
          type: string
        hwVersion:
          description: Device hardware version.
          type: string
        manufacturer:
          type: string
          description: Device manufacturer.
    QueryRequestPayload:
      description: Payload containing device IDs.
      type: object
      id: QueryRequestPayload
      properties:
        devices:
          type: array
          description: Third-party device IDs for which to get the device states.
          items:
            $ref: '#/components/schemas/AgentDeviceId'
    QueryResponsePayload:
      properties:
        devices:
          description: States of the devices. Map of third-party device ID to struct of device states.
          additionalProperties:
            type: object
            additionalProperties:
              description: Properties of the object.
              type: any
          type: object
      type: object
      id: QueryResponsePayload
      description: Payload containing device states information.
    QueryRequestInput:
      properties:
        payload:
          description: Payload containing third-party device IDs.
          $ref: '#/components/schemas/QueryRequestPayload'
      description: Device ID inputs to QueryRequest.
      id: QueryRequestInput
      type: object
    SyncRequest:
      properties:
        requestId:
          type: string
          description: Request ID used for debugging.
        agentUserId:
          description: Required. Third-party user ID.
          type: string
      id: SyncRequest
      type: object
      description: Request type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call.
    Device:
      properties:
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
          description: Device manufacturer, model, hardware version, and software version.
        name:
          description: Names given to this device by your smart home Action.
          $ref: '#/components/schemas/DeviceNames'
        attributes:
          type: object
          description: Attributes for the traits supported by the device.
          additionalProperties:
            description: Properties of the object.
            type: any
        type:
          description: Hardware type of the device. See [device types](https://developers.google.com/assistant/smarthome/guides).
          type: string
        customData:
          additionalProperties:
            description: Properties of the object.
            type: any
          description: 'Custom device attributes stored in Home Graph and provided to your smart home Action in each [QUERY](https://developers.google.com/assistant/smarthome/reference/intent/query) and [EXECUTE](https://developers.google.com/assistant/smarthome/reference/intent/execute) intent. Data in this object has a few constraints: No sensitive information, including but not limited to Personally Identifiable Information.'
          type: object
        otherDeviceIds:
          description: Alternate IDs associated with this device. This is used to identify cloud synced devices enabled for [local fulfillment](https://developers.google.com/assistant/smarthome/concepts/local).
          type: array
          items:
            $ref: '#/components/schemas/AgentOtherDeviceId'
        willReportState:
          type: boolean
          description: Indicates whether your smart home Action will report state of this device to Google via ReportStateAndNotification.
        roomHint:
          description: Suggested name for the room where this device is installed. Google attempts to use this value during user setup.
          type: string
        traits:
          type: array
          description: Traits supported by the device. See [device traits](https://developers.google.com/assistant/smarthome/traits).
          items:
            type: string
        structureHint:
          type: string
          description: Suggested name for the structure where this device is installed. Google attempts to use this value during user setup.
        notificationSupportedByAgent:
          type: boolean
          description: Indicates whether your smart home Action will report notifications to Google for this device via ReportStateAndNotification. If your smart home Action enables users to control device notifications, you should update this field and call RequestSyncDevices.
        id:
          type: string
          description: Third-party device ID.
      type: object
      description: Third-party device definition. Next ID = 14
      id: Device
    StateAndNotificationPayload:
      properties:
        devices:
          $ref: '#/components/schemas/ReportStateAndNotificationDevice'
          description: The devices for updating state and sending notifications.
      id: StateAndNotificationPayload
      type: object
      description: Payload containing the state and notification information for devices.
    Empty:
      type: object
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    ReportStateAndNotificationRequest:
      properties:
        eventId:
          description: Unique identifier per event (for example, a doorbell press).
          type: string
        payload:
          $ref: '#/components/schemas/StateAndNotificationPayload'
          description: Required. State of devices to update and notification metadata for devices.
        requestId:
          type: string
          description: Request ID used for debugging.
        agentUserId:
          description: Required. Third-party user ID.
          type: string
        followUpToken:
          description: Deprecated.
          type: string
      description: 'Request type for the [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification) call. It may include states, notifications, or both. States and notifications are defined per `device_id` (for example, "123" and "456" in the following example). # Example ```json { "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf", "agentUserId": "1234", "payload": { "devices": { "states": { "123": { "on": true }, "456": { "on": true, "brightness": 10 } }, } } } ```'
      id: ReportStateAndNotificationRequest
      type: object
    DeviceNames:
      properties:
        name:
          type: string
          description: Primary name of the device, generally provided by the user.
        nicknames:
          description: Additional names provided by the user for the device.
          type: array
          items:
            type: string
        defaultNames:
          description: List of names provided by the manufacturer rather than the user, such as serial numbers, SKUs, etc.
          items:
            type: string
          type: array
      type: object
      id: DeviceNames
      description: Identifiers used to describe the device.
    ReportStateAndNotificationDevice:
      id: ReportStateAndNotificationDevice
      properties:
        notifications:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: Notifications metadata for devices. See the **Device NOTIFICATIONS** section of the individual trait [reference guides](https://developers.google.com/assistant/smarthome/traits).
        states:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: States of devices to update. See the **Device STATES** section of the individual trait [reference guides](https://developers.google.com/assistant/smarthome/traits).
          type: object
      description: The states and notifications specific to a device.
      type: object
    AgentOtherDeviceId:
      description: Alternate third-party device ID.
      id: AgentOtherDeviceId
      properties:
        agentId:
          description: Project ID for your smart home Action.
          type: string
        deviceId:
          description: Unique third-party device ID.
          type: string
      type: object
    RequestSyncDevicesRequest:
      type: object
      properties:
        agentUserId:
          type: string
          description: Required. Third-party user ID.
        async:
          type: boolean
          description: Optional. If set, the request will be added to a queue and a response will be returned immediately. This enables concurrent requests for the given `agent_user_id`, but the caller will not receive any error responses.
      id: RequestSyncDevicesRequest
      description: Request type for the [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices) call.
    RequestSyncDevicesResponse:
      properties: {}
      type: object
      id: RequestSyncDevicesResponse
      description: Response type for the [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices) call. Intentionally empty upon success. An HTTP response code is returned with more details upon failure.
    QueryResponse:
      id: QueryResponse
      description: 'Response type for the [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call. This should follow the same format as the Google smart home `action.devices.QUERY` [response](https://developers.google.com/assistant/smarthome/reference/intent/query). # Example ```json { "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf", "payload": { "devices": { "123": { "on": true, "online": true }, "456": { "on": true, "online": true, "brightness": 80, "color": { "name": "cerulean", "spectrumRGB": 31655 } } } } } ```'
      properties:
        payload:
          $ref: '#/components/schemas/QueryResponsePayload'
          description: Device states for the devices given in the request.
        requestId:
          type: string
          description: Request ID used for debugging. Copied from the request.
      type: object
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/homegraph: 'Private Service: https://www.googleapis.com/auth/homegraph'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    devices:
      id: googledevelopers.homegraph.devices
      name: devices
      title: Devices
      methods:
        reportStateAndNotification:
          operation:
            $ref: '#/paths/~1v1~1devices:reportStateAndNotification/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        requestSync:
          operation:
            $ref: '#/paths/~1v1~1devices:requestSync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query:
          operation:
            $ref: '#/paths/~1v1~1devices:query/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sync:
          operation:
            $ref: '#/paths/~1v1~1devices:sync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    agent_users:
      id: googledevelopers.homegraph.agent_users
      name: agent_users
      title: Agent_users
      methods:
        agentUsers_delete:
          operation:
            $ref: '#/paths/~1v1~1agentUsers~1{agentUsersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/agent_users/methods/agentUsers_delete'
paths:
  /v1/devices:reportStateAndNotification:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
    post:
      description: Reports device state and optionally sends device notifications. Called by your smart home Action when the state of a third-party device changes or you need to send a notification about the device. See [Implement Report State](https://developers.google.com/assistant/smarthome/develop/report-state) for more information. This method updates the device state according to its declared [traits](https://developers.google.com/assistant/smarthome/concepts/devices-traits). Publishing a new state value outside of these traits will result in an `INVALID_ARGUMENT` error response. The third-party user's identity is passed in via the `agent_user_id` (see ReportStateAndNotificationRequest). This request must be authorized using service account credentials from your Actions console project.
      operationId: homegraph.devices.reportStateAndNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportStateAndNotificationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStateAndNotificationResponse'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/devices:requestSync:
    parameters: *ref_1
    post:
      description: Requests Google to send an `action.devices.SYNC` [intent](https://developers.google.com/assistant/smarthome/reference/intent/sync) to your smart home Action to update device metadata for the given user. The third-party user's identity is passed via the `agent_user_id` (see RequestSyncDevicesRequest). This request must be authorized using service account credentials from your Actions console project.
      operationId: homegraph.devices.requestSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSyncDevicesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSyncDevicesResponse'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/devices:query:
    parameters: *ref_1
    post:
      description: Gets the current states in Home Graph for the given set of the third-party user's devices. The third-party user's identity is passed in via the `agent_user_id` (see QueryRequest). This request must be authorized using service account credentials from your Actions console project.
      operationId: homegraph.devices.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/devices:sync:
    parameters: *ref_1
    post:
      description: Gets all the devices associated with the given third-party user. The third-party user's identity is passed in via the `agent_user_id` (see SyncRequest). This request must be authorized using service account credentials from your Actions console project.
      operationId: homegraph.devices.sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/agentUsers/{agentUsersId}:
    parameters: *ref_1
    delete:
      description: Unlinks the given third-party user from your smart home Action. All data related to this user will be deleted. For more details on how users link their accounts, see [fulfillment and authentication](https://developers.google.com/assistant/smarthome/concepts/fulfillment-authentication). The third-party user's identity is passed in via the `agent_user_id` (see DeleteAgentUserRequest). This request must be authorized using service account credentials from your Actions console project.
      operationId: homegraph.agentUsers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: agentUsersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: agent_users
      x-stackQL-verb: delete
