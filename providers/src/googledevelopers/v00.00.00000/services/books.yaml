openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Books API
  description: The Google Books API allows clients to access the Google Books repository.
  version: v1
  x-discovery-doc-revision: '20230103'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://code.google.com/apis/books/docs/v1/getting_started.html
servers:
  - url: https://books.googleapis.com
components:
  schemas:
    Review:
      type: object
      properties:
        rating:
          description: Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.
          type: string
        content:
          type: string
          description: Review text.
        title:
          type: string
          description: Title for this review.
        source:
          properties:
            url:
              description: URL of the source of the review.
              type: string
            extraDescription:
              description: Extra text about the source of the review.
              type: string
            description:
              type: string
              description: Name of the source.
          description: Information regarding the source of this review, when the review is not from a Google Books user.
          type: object
        date:
          type: string
          description: Date of this review.
        type:
          description: Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.
          type: string
        kind:
          type: string
          description: Resource type for a review.
        author:
          properties:
            displayName:
              type: string
              description: Name of this person.
          description: Author of this review.
          type: object
        volumeId:
          type: string
          description: Volume that this review is for.
        fullTextUrl:
          description: URL for the full review text, for reviews gathered from the web.
          type: string
      id: Review
    Discoveryclusters:
      id: Discoveryclusters
      type: object
      properties:
        clusters:
          items:
            type: object
            properties:
              totalVolumes:
                type: integer
                format: int32
              subTitle:
                type: string
              banner_with_content_container:
                type: object
                properties:
                  imageUrl:
                    type: string
                  fillColorArgb:
                    type: string
                  textColorArgb:
                    type: string
                  moreButtonText:
                    type: string
                  moreButtonUrl:
                    type: string
                  maskColorArgb:
                    type: string
              uid:
                type: string
              volumes:
                type: array
                items:
                  $ref: '#/components/schemas/Volume'
              title:
                type: string
          type: array
        totalClusters:
          format: int32
          type: integer
        kind:
          description: Resorce type.
          type: string
    Seriesmembership:
      type: object
      id: Seriesmembership
      properties:
        member:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        nextPageToken:
          type: string
        kind:
          type: string
          description: Resorce type.
    Volumeannotations:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
        totalItems:
          type: integer
          format: int32
          description: The total number of volume annotations found.
        items:
          description: A list of volume annotations.
          items:
            $ref: '#/components/schemas/Volumeannotation'
          type: array
        kind:
          description: Resource type
          type: string
        version:
          type: string
          description: 'The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn''t apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).'
      id: Volumeannotations
    RequestAccessData:
      id: RequestAccessData
      properties:
        kind:
          description: Resource type.
          type: string
        concurrentAccess:
          $ref: '#/components/schemas/ConcurrentAccessRestriction'
          description: A concurrent access response.
        downloadAccess:
          description: A download access response.
          $ref: '#/components/schemas/DownloadAccessRestriction'
      type: object
    DownloadAccessRestriction:
      type: object
      id: DownloadAccessRestriction
      properties:
        deviceAllowed:
          description: If restricted, whether access is granted for this (user, device, volume).
          type: boolean
        maxDownloadDevices:
          type: integer
          description: If restricted, the maximum number of content download licenses for this volume.
          format: int32
        downloadsAcquired:
          format: int32
          description: If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).
          type: integer
        source:
          description: Client app identifier for verification. Download access and client-validation only.
          type: string
        kind:
          type: string
          description: Resource type.
        volumeId:
          type: string
          description: Identifies the volume for which this entry applies.
        signature:
          description: Response signature.
          type: string
        message:
          description: Error/warning message.
          type: string
        restricted:
          type: boolean
          description: Whether this volume has any download access restrictions.
        nonce:
          description: Client nonce for verification. Download access and client-validation only.
          type: string
        reasonCode:
          type: string
          description: Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS
        justAcquired:
          description: If deviceAllowed, whether access was just acquired with this request.
          type: boolean
    DictionaryAnnotationdata:
      id: DictionaryAnnotationdata
      properties:
        layerId:
          type: string
          description: The Layer id for this data. *
        selfLink:
          description: URL for this resource. *
          type: string
        volumeId:
          type: string
          description: The volume id for this data. *
        id:
          type: string
          description: Unique id for this annotation data.
        annotationType:
          type: string
          description: The type of annotation this data is for.
        kind:
          description: Resource Type
          type: string
        data:
          $ref: '#/components/schemas/Dictlayerdata'
          description: JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.
        updated:
          description: Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).
          type: string
        encodedData:
          description: Base64 encoded data for this annotation data.
          type: string
          format: byte
      type: object
    Notification:
      type: object
      id: Notification
      properties:
        reason:
          type: string
        pcampaign_id:
          type: string
        targetUrl:
          type: string
        doc_type:
          type: string
        is_document_mature:
          type: boolean
        notification_type:
          type: string
        title:
          type: string
        show_notification_settings_action:
          type: boolean
        doc_id:
          type: string
        notificationGroup:
          type: string
        crmExperimentIds:
          items:
            format: int64
            type: string
          type: array
          description: The list of crm experiment ids.
        iconUrl:
          type: string
        dont_show_notification:
          type: boolean
        kind:
          type: string
          description: Resource type.
        body:
          type: string
        timeToExpireMs:
          format: int64
          type: string
    FamilyInfo:
      type: object
      id: FamilyInfo
      properties:
        kind:
          type: string
          description: Resource type.
        membership:
          description: Family membership info of the user that made the request.
          properties:
            ageGroup:
              type: string
              description: The age group of the user.
            acquirePermission:
              description: Restrictions on user buying and acquiring content.
              type: string
            isInFamily:
              type: boolean
            role:
              type: string
              description: The role of the user in the family.
            allowedMaturityRating:
              description: The maximum allowed maturity rating for the user.
              type: string
          type: object
    Volume:
      properties:
        accessInfo:
          description: Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).
          properties:
            driveImportedContentLink:
              description: URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive.
              type: string
            textToSpeechPermission:
              type: string
              description: Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.
            quoteSharingAllowed:
              type: boolean
              description: Whether quote sharing is allowed for this volume.
            country:
              description: The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)
              type: string
            accessViewStatus:
              description: Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)
              type: string
            viewability:
              description: The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.
              type: string
            epub:
              type: object
              properties:
                acsTokenLink:
                  description: URL to retrieve ACS token for epub download. (In LITE projection.)
                  type: string
                isAvailable:
                  description: Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)
                  type: boolean
                downloadLink:
                  description: URL to download epub. (In LITE projection.)
                  type: string
              description: Information about epub content. (In LITE projection.)
            webReaderLink:
              description: URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.
              type: string
            downloadAccess:
              $ref: '#/components/schemas/DownloadAccessRestriction'
              description: Information about a volume's download license access restrictions.
            embeddable:
              description: Whether this volume can be embedded in a viewport using the Embedded Viewer API.
              type: boolean
            publicDomain:
              type: boolean
              description: Whether or not this book is public domain in the country listed above.
            pdf:
              type: object
              description: Information about pdf content. (In LITE projection.)
              properties:
                acsTokenLink:
                  description: URL to retrieve ACS token for pdf download. (In LITE projection.)
                  type: string
                isAvailable:
                  type: boolean
                  description: Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)
                downloadLink:
                  type: string
                  description: URL to download pdf. (In LITE projection.)
            viewOrderUrl:
              description: For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.
              type: string
            explicitOfflineLicenseManagement:
              description: Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.
              type: boolean
          type: object
        etag:
          type: string
          description: Opaque identifier for a specific version of a volume resource. (In LITE projection)
        id:
          description: Unique identifier for a volume. (In LITE projection.)
          type: string
        recommendedInfo:
          description: Recommendation related information for this volume.
          properties:
            explanation:
              type: string
              description: A text explaining why this volume is recommended.
          type: object
        searchInfo:
          description: Search result information related to this volume.
          properties:
            textSnippet:
              description: A text snippet containing the search query.
              type: string
          type: object
        selfLink:
          type: string
          description: URL to this resource. (In LITE projection.)
        volumeInfo:
          properties:
            infoLink:
              description: URL to view information about this volume on the Google Books site. (In LITE projection)
              type: string
            maturityRating:
              type: string
            readingModes:
              properties:
                image:
                  type: boolean
                text:
                  type: boolean
              type: object
              description: The reading modes available for this volume.
            previewLink:
              description: URL to preview this volume on the Google Books site.
              type: string
            pageCount:
              type: integer
              description: Total number of pages as per publisher metadata.
              format: int32
            panelizationSummary:
              description: A top-level summary of the panelization info in this volume.
              properties:
                epubBubbleVersion:
                  type: string
                containsImageBubbles:
                  type: boolean
                imageBubbleVersion:
                  type: string
                containsEpubBubbles:
                  type: boolean
              type: object
            industryIdentifiers:
              description: Industry standard identifiers for this volume.
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.
                  identifier:
                    type: string
                    description: Industry specific volume identifier.
            seriesInfo:
              $ref: '#/components/schemas/Volumeseriesinfo'
            publishedDate:
              description: Date of publication. (In LITE projection.)
              type: string
            categories:
              description: A list of subject categories, such as "Fiction", "Suspense", etc.
              type: array
              items:
                type: string
            contentVersion:
              type: string
              description: An identifier for the version of the volume content (text & images). (In LITE projection)
            subtitle:
              type: string
              description: Volume subtitle. (In LITE projection.)
            printedPageCount:
              description: Total number of printed pages in generated pdf representation.
              type: integer
              format: int32
            language:
              type: string
              description: Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.
            publisher:
              description: Publisher of this volume. (In LITE projection.)
              type: string
            comicsContent:
              type: boolean
              description: Whether the volume has comics content.
            authors:
              description: The names of the authors and/or editors for this volume. (In LITE projection)
              type: array
              items:
                type: string
            allowAnonLogging:
              type: boolean
              description: Whether anonymous logging should be allowed.
            dimensions:
              type: object
              properties:
                height:
                  description: Height or length of this volume (in cm).
                  type: string
                width:
                  description: Width of this volume (in cm).
                  type: string
                thickness:
                  description: Thickness of this volume (in cm).
                  type: string
              description: Physical dimensions of this volume.
            title:
              description: Volume title. (In LITE projection.)
              type: string
            mainCategory:
              type: string
              description: The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.
            averageRating:
              description: The mean review rating for this volume. (min = 1.0, max = 5.0)
              format: double
              type: number
            samplePageCount:
              type: integer
              format: int32
              description: Total number of sample pages as per publisher metadata.
            ratingsCount:
              type: integer
              description: The number of review ratings for this volume.
              format: int32
            canonicalVolumeLink:
              description: Canonical URL for a volume. (In LITE projection.)
              type: string
            imageLinks:
              properties:
                medium:
                  type: string
                  description: Image link for medium size (width of ~575 pixels). (In LITE projection)
                thumbnail:
                  description: Image link for thumbnail size (width of ~128 pixels). (In LITE projection)
                  type: string
                small:
                  description: Image link for small size (width of ~300 pixels). (In LITE projection)
                  type: string
                smallThumbnail:
                  description: Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)
                  type: string
                extraLarge:
                  description: Image link for extra large size (width of ~1280 pixels). (In LITE projection)
                  type: string
                large:
                  description: Image link for large size (width of ~800 pixels). (In LITE projection)
                  type: string
              description: A list of image links for all the sizes that are available. (In LITE projection.)
              type: object
            description:
              description: A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)
              type: string
            printType:
              description: Type of publication of this volume. Possible values are BOOK or MAGAZINE.
              type: string
          description: General volume information.
          type: object
        layerInfo:
          type: object
          properties:
            layers:
              items:
                properties:
                  layerId:
                    type: string
                    description: The layer id of this layer (e.g. "geo").
                  volumeAnnotationsVersion:
                    type: string
                    description: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
                type: object
              type: array
              description: A layer should appear here if and only if the layer exists for this book.
          description: What layers exist in this volume and high level information about them.
        userInfo:
          description: User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)
          properties:
            acquiredTime:
              type: string
              description: Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.
            isPurchased:
              description: Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)
              type: boolean
            isUploaded:
              type: boolean
              description: Whether or not this volume was user uploaded.
            rentalPeriod:
              type: object
              description: Period during this book is/was a valid rental.
              properties:
                startUtcSec:
                  format: int64
                  type: string
                endUtcSec:
                  type: string
                  format: int64
            readingPosition:
              description: The user's current reading position in the volume, if one is available. (In LITE projection.)
              $ref: '#/components/schemas/ReadingPosition'
            isFamilySharedToUser:
              type: boolean
              description: Whether or not the user received this volume through family sharing.
            isFamilySharedFromUser:
              type: boolean
              description: Whether or not the user shared this volume with the family.
            updated:
              description: Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).
              type: string
            rentalState:
              description: Whether this book is an active or an expired rental.
              type: string
            acquisitionType:
              type: integer
              description: How this volume was acquired.
              format: int32
            copy:
              type: object
              description: Copy/Paste accounting information.
              properties:
                updated:
                  type: string
                allowedCharacterCount:
                  type: integer
                  format: int32
                remainingCharacterCount:
                  format: int32
                  type: integer
                limitType:
                  type: string
            familySharing:
              type: object
              description: Information on the ability to share with the family.
              properties:
                familyRole:
                  type: string
                  description: The role of the user in the family.
                isSharingAllowed:
                  description: Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.
                  type: boolean
                isSharingDisabledByFop:
                  type: boolean
                  description: Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.
            isInMyBooks:
              description: Whether or not this volume is currently in "my books."
              type: boolean
            isFamilySharingDisabledByFop:
              type: boolean
              description: 'Deprecated: Replaced by familySharing.'
            review:
              description: This user's review of this volume, if one exists.
              $ref: '#/components/schemas/Review'
            isPreordered:
              type: boolean
              description: Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)
            userUploadedVolumeInfo:
              type: object
              properties:
                processingState:
                  type: string
            entitlementType:
              format: int32
              type: integer
              description: Whether this volume is purchased, sample, pd download etc.
            isFamilySharingAllowed:
              type: boolean
              description: 'Deprecated: Replaced by familySharing.'
          type: object
        kind:
          description: Resource type for a volume. (In LITE projection.)
          type: string
        saleInfo:
          type: object
          properties:
            isEbook:
              description: Whether or not this volume is an eBook (can be added to the My eBooks shelf).
              type: boolean
            retailPrice:
              description: The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)
              type: object
              properties:
                amount:
                  type: number
                  format: double
                  description: Amount in the currency listed below. (In LITE projection.)
                currencyCode:
                  description: An ISO 4217, three-letter currency code. (In LITE projection.)
                  type: string
            saleability:
              description: Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.
              type: string
            buyLink:
              type: string
              description: URL to purchase this volume on the Google Books site. (In LITE projection)
            listPrice:
              type: object
              properties:
                currencyCode:
                  description: An ISO 4217, three-letter currency code. (In LITE projection.)
                  type: string
                amount:
                  type: number
                  format: double
                  description: Amount in the currency listed below. (In LITE projection.)
              description: Suggested retail price. (In LITE projection.)
            country:
              type: string
              description: The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)
            onSaleDate:
              description: The date on which this book is available for sale.
              type: string
            offers:
              items:
                type: object
                properties:
                  giftable:
                    description: Indicates whether the offer is giftable.
                    type: boolean
                  finskyOfferType:
                    type: integer
                    description: The finsky offer type (e.g., PURCHASE=0 RENTAL=3)
                    format: int32
                  rentalDuration:
                    type: object
                    properties:
                      unit:
                        type: string
                      count:
                        format: double
                        type: number
                    description: The rental duration (for rental offers only).
                  listPrice:
                    properties:
                      amountInMicros:
                        format: double
                        type: number
                      currencyCode:
                        type: string
                    type: object
                    description: Offer list (=undiscounted) price in Micros.
                  retailPrice:
                    properties:
                      amountInMicros:
                        format: double
                        type: number
                      currencyCode:
                        type: string
                    description: Offer retail (=discounted) price in Micros
                    type: object
              type: array
              description: Offers available for this volume (sales and rentals).
          description: Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).
      id: Volume
      type: object
    DownloadAccesses:
      type: object
      id: DownloadAccesses
      properties:
        kind:
          description: Resource type.
          type: string
        downloadAccessList:
          items:
            $ref: '#/components/schemas/DownloadAccessRestriction'
          description: A list of download access responses.
          type: array
    BooksVolumesRecommendedRateResponse:
      type: object
      id: BooksVolumesRecommendedRateResponse
      properties:
        consistency_token:
          type: string
    BooksCloudloadingResource:
      id: BooksCloudloadingResource
      properties:
        author:
          type: string
        volumeId:
          type: string
        processingState:
          type: string
        title:
          type: string
      type: object
    Geolayerdata:
      id: Geolayerdata
      type: object
      properties:
        kind:
          type: string
        geo:
          properties:
            cachePolicy:
              type: string
              description: 'The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER'
            latitude:
              type: number
              description: The latitude of the location.
              format: double
            viewport:
              description: The viewport for showing this location. This is a latitude, longitude rectangle.
              type: object
              properties:
                lo:
                  type: object
                  properties:
                    longitude:
                      type: number
                      format: double
                    latitude:
                      format: double
                      type: number
                hi:
                  properties:
                    longitude:
                      format: double
                      type: number
                    latitude:
                      format: double
                      type: number
                  type: object
            mapType:
              description: 'The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN'
              type: string
            longitude:
              format: double
              type: number
              description: The longitude of the location.
            countryCode:
              type: string
              description: The country code of the location.
            zoom:
              description: 'The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels'
              format: int32
              type: integer
            boundary:
              type: array
              items:
                type: string
              description: The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.
          type: object
        common:
          properties:
            snippetUrl:
              description: 'The URL for information for this location. Ex: wikipedia link.'
              type: string
            lang:
              type: string
              description: The language of the information url and description.
            previewImageUrl:
              type: string
              description: The URL for the preview image information.
            title:
              description: The display title and localized canonical name to use when searching for this entity on Google search.
              type: string
            snippet:
              description: The description for this location.
              type: string
          type: object
    Volumeannotation:
      type: object
      id: Volumeannotation
      properties:
        data:
          type: string
          description: Data for this annotation.
        updated:
          type: string
          description: Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format).
        kind:
          type: string
          description: Resource Type
        selectedText:
          type: string
          description: Excerpt from the volume.
        pageIds:
          type: array
          items:
            type: string
          description: Pages the annotation spans.
        annotationDataLink:
          description: Link to get data for this annotation.
          type: string
        layerId:
          type: string
          description: The Layer this annotation is for.
        contentRanges:
          type: object
          properties:
            contentVersion:
              type: string
              description: Content version applicable to ranges below.
            cfiRange:
              description: Range in CFI format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            gbImageRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in GB image format for this annotation for version above.
            gbTextRange:
              description: Range in GB text format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
          description: The content ranges to identify the selected text.
        id:
          description: Unique id of this volume annotation.
          type: string
        selfLink:
          description: URL to this resource.
          type: string
        annotationType:
          type: string
          description: The type of annotation this is.
        annotationDataId:
          type: string
          description: The annotation data id for this volume annotation.
        deleted:
          description: Indicates that this annotation is deleted.
          type: boolean
        volumeId:
          type: string
          description: The Volume this annotation is for.
    ReadingPosition:
      properties:
        gbTextPosition:
          type: string
          description: Position in a volume for text-based content.
        kind:
          type: string
          description: Resource type for a reading position.
        updated:
          type: string
          description: Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).
        epubCfiPosition:
          type: string
          description: Position in an EPUB as a CFI.
        pdfPosition:
          type: string
          description: Position in a PDF file.
        gbImagePosition:
          type: string
          description: Position in a volume for image-based content.
        volumeId:
          description: Volume id associated with this reading position.
          type: string
      type: object
      id: ReadingPosition
    AnnotationsSummary:
      properties:
        layers:
          type: array
          items:
            type: object
            properties:
              layerId:
                type: string
              limitType:
                type: string
              allowedCharacterCount:
                type: integer
                format: int32
              updated:
                type: string
              remainingCharacterCount:
                format: int32
                type: integer
        kind:
          type: string
      type: object
      id: AnnotationsSummary
    Annotation:
      properties:
        pageIds:
          items:
            type: string
          description: Pages that this annotation spans.
          type: array
        clientVersionRanges:
          properties:
            contentVersion:
              type: string
              description: Content version the client sent in.
            imageCfiRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in image CFI format for this annotation sent by client.
            cfiRange:
              description: Range in CFI format for this annotation sent by client.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            gbImageRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in GB image format for this annotation sent by client.
            gbTextRange:
              description: Range in GB text format for this annotation sent by client.
              $ref: '#/components/schemas/BooksAnnotationsRange'
          description: Selection ranges sent from the client.
          type: object
        volumeId:
          description: The volume that this annotation belongs to.
          type: string
        selfLink:
          type: string
          description: URL to this resource.
        layerId:
          type: string
          description: The layer this annotation is for.
        kind:
          type: string
          description: Resource type.
        data:
          description: User-created data for this annotation.
          type: string
        afterSelectedText:
          type: string
          description: Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
        updated:
          type: string
          description: Timestamp for the last time this annotation was modified.
        created:
          type: string
          description: Timestamp for the created time of this annotation.
        layerSummary:
          type: object
          properties:
            allowedCharacterCount:
              description: Maximum allowed characters on this layer, especially for the "copy" layer.
              format: int32
              type: integer
            limitType:
              description: Type of limitation on this layer. "limited" or "unlimited" for the "copy" layer.
              type: string
            remainingCharacterCount:
              type: integer
              description: Remaining allowed characters on this layer, especially for the "copy" layer.
              format: int32
        id:
          type: string
          description: Id of this annotation, in the form of a GUID.
        beforeSelectedText:
          type: string
          description: Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
        highlightStyle:
          type: string
          description: The highlight style for this annotation.
        selectedText:
          type: string
          description: Excerpt from the volume.
        deleted:
          type: boolean
          description: Indicates that this annotation is deleted.
        currentVersionRanges:
          description: Selection ranges for the most recent content version.
          type: object
          properties:
            gbTextRange:
              description: Range in GB text format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            gbImageRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in GB image format for this annotation for version above.
            cfiRange:
              description: Range in CFI format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            contentVersion:
              type: string
              description: Content version applicable to ranges below.
            imageCfiRange:
              description: Range in image CFI format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
      id: Annotation
      type: object
    BooksAnnotationsRange:
      properties:
        endOffset:
          description: The offset from the ending position.
          type: string
        endPosition:
          type: string
          description: The ending position for the range.
        startPosition:
          type: string
          description: The starting position for the range.
        startOffset:
          description: The offset from the starting position.
          type: string
      type: object
      id: BooksAnnotationsRange
    Category:
      type: object
      id: Category
      properties:
        items:
          description: A list of onboarding categories.
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              badgeUrl:
                type: string
              categoryId:
                type: string
        kind:
          description: Resource type.
          type: string
    Volumes:
      id: Volumes
      properties:
        totalItems:
          description: Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.
          type: integer
          format: int32
        items:
          type: array
          description: A list of volumes.
          items:
            $ref: '#/components/schemas/Volume'
        kind:
          description: Resource type.
          type: string
      type: object
    Annotations:
      id: Annotations
      properties:
        kind:
          description: Resource type.
          type: string
        items:
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
          description: A list of annotations.
        totalItems:
          type: integer
          description: Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.
          format: int32
        nextPageToken:
          type: string
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
      type: object
    Layersummary:
      type: object
      properties:
        dataCount:
          description: The number of data items for this layer.
          type: integer
          format: int32
        kind:
          description: Resource Type
          type: string
        selfLink:
          type: string
          description: URL to this resource.
        annotationCount:
          format: int32
          type: integer
          description: The number of annotations for this layer.
        annotationsDataLink:
          description: Link to get data for this annotation.
          type: string
        id:
          description: Unique id of this layer summary.
          type: string
        contentVersion:
          description: The content version this resource is for.
          type: string
        volumeId:
          description: The volume id this resource is for.
          type: string
        layerId:
          description: The layer id for this summary.
          type: string
        annotationTypes:
          type: array
          items:
            type: string
          description: The list of annotation types contained for this layer.
        volumeAnnotationsVersion:
          type: string
          description: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
        annotationsLink:
          type: string
          description: The link to get the annotations for this layer.
        updated:
          type: string
          description: Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).
      id: Layersummary
    Bookshelves:
      id: Bookshelves
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Bookshelf'
          description: A list of bookshelves.
        kind:
          description: Resource type.
          type: string
    ConcurrentAccessRestriction:
      type: object
      id: ConcurrentAccessRestriction
      properties:
        timeWindowSeconds:
          type: integer
          description: Time in seconds for license auto-expiration.
          format: int32
        nonce:
          type: string
          description: Client nonce for verification. Download access and client-validation only.
        deviceAllowed:
          description: Whether access is granted for this (user, device, volume).
          type: boolean
        source:
          description: Client app identifier for verification. Download access and client-validation only.
          type: string
        maxConcurrentDevices:
          format: int32
          description: The maximum number of concurrent access licenses for this volume.
          type: integer
        restricted:
          description: Whether this volume has any concurrent access restrictions.
          type: boolean
        message:
          description: Error/warning message.
          type: string
        signature:
          description: Response signature.
          type: string
        volumeId:
          description: Identifies the volume for which this entry applies.
          type: string
        reasonCode:
          description: Error/warning reason code.
          type: string
        kind:
          type: string
          description: Resource type.
    Layersummaries:
      type: object
      properties:
        items:
          type: array
          description: A list of layer summary items.
          items:
            $ref: '#/components/schemas/Layersummary'
        kind:
          type: string
          description: Resource type.
        totalItems:
          description: The total number of layer summaries found.
          type: integer
          format: int32
      id: Layersummaries
    Usersettings:
      id: Usersettings
      type: object
      properties:
        notification:
          properties:
            matchMyInterests:
              type: object
              properties:
                opted_state:
                  type: string
            moreFromSeries:
              type: object
              properties:
                opted_state:
                  type: string
            priceDrop:
              properties:
                opted_state:
                  type: string
              type: object
            moreFromAuthors:
              properties:
                opted_state:
                  type: string
              type: object
            rewardExpirations:
              properties:
                opted_state:
                  type: string
              type: object
          type: object
        kind:
          description: Resource type.
          type: string
        notesExport:
          type: object
          properties:
            folderName:
              type: string
            isEnabled:
              type: boolean
          description: User settings in sub-objects, each for different purposes.
    Annotationsdata:
      type: object
      properties:
        kind:
          type: string
          description: Resource type
        items:
          description: A list of Annotation Data.
          items:
            $ref: '#/components/schemas/GeoAnnotationdata'
          type: array
        nextPageToken:
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
          type: string
        totalItems:
          format: int32
          description: The total number of volume annotations found.
          type: integer
      id: Annotationsdata
    GeoAnnotationdata:
      id: GeoAnnotationdata
      properties:
        layerId:
          description: The Layer id for this data. *
          type: string
        kind:
          description: Resource Type
          type: string
        encodedData:
          format: byte
          type: string
          description: Base64 encoded data for this annotation data.
        id:
          description: Unique id for this annotation data.
          type: string
        volumeId:
          type: string
          description: The volume id for this data. *
        updated:
          type: string
          description: Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).
        selfLink:
          type: string
          description: URL for this resource. *
        data:
          $ref: '#/components/schemas/Geolayerdata'
          description: JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.
        annotationType:
          type: string
          description: The type of annotation this data is for.
      type: object
    Dictlayerdata:
      type: object
      properties:
        dict:
          type: object
          properties:
            source:
              properties:
                attribution:
                  type: string
                url:
                  type: string
              description: The source, url and attribution for this dictionary data.
              type: object
            words:
              items:
                properties:
                  derivatives:
                    type: array
                    items:
                      properties:
                        source:
                          properties:
                            url:
                              type: string
                            attribution:
                              type: string
                          type: object
                        text:
                          type: string
                      type: object
                  examples:
                    items:
                      properties:
                        source:
                          type: object
                          properties:
                            attribution:
                              type: string
                            url:
                              type: string
                        text:
                          type: string
                      type: object
                    type: array
                  senses:
                    type: array
                    items:
                      type: object
                      properties:
                        syllabification:
                          type: string
                        conjugations:
                          type: array
                          items:
                            properties:
                              value:
                                type: string
                              type:
                                type: string
                            type: object
                        synonyms:
                          type: array
                          items:
                            type: object
                            properties:
                              source:
                                properties:
                                  url:
                                    type: string
                                  attribution:
                                    type: string
                                type: object
                              text:
                                type: string
                        definitions:
                          items:
                            properties:
                              examples:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    source:
                                      properties:
                                        url:
                                          type: string
                                        attribution:
                                          type: string
                                      type: object
                                    text:
                                      type: string
                              definition:
                                type: string
                            type: object
                          type: array
                        pronunciationUrl:
                          type: string
                        partOfSpeech:
                          type: string
                        source:
                          properties:
                            url:
                              type: string
                            attribution:
                              type: string
                          type: object
                        pronunciation:
                          type: string
                  source:
                    description: The words with different meanings but not related words, e.g. "go" (game) and "go" (verb).
                    properties:
                      attribution:
                        type: string
                      url:
                        type: string
                    type: object
                type: object
              type: array
        common:
          type: object
          properties:
            title:
              type: string
              description: The display title and localized canonical name to use when searching for this entity on Google search.
        kind:
          type: string
      id: Dictlayerdata
    Metadata:
      id: Metadata
      properties:
        kind:
          description: Resource type.
          type: string
        items:
          items:
            properties:
              size:
                type: string
                format: int64
              encrypted_key:
                type: string
              version:
                type: string
                format: int64
              download_url:
                type: string
              language:
                type: string
            type: object
          type: array
          description: A list of offline dictionary metadata.
      type: object
    Volumeseriesinfo:
      type: object
      id: Volumeseriesinfo
      properties:
        volumeSeries:
          items:
            type: object
            properties:
              issue:
                type: array
                items:
                  properties:
                    issueDisplayNumber:
                      type: string
                    issueOrderNumber:
                      type: integer
                      format: int32
                  type: object
                description: List of issues. Applicable only for Collection Edition and Omnibus.
              seriesBookType:
                description: The book type in the context of series. Examples - Single Issue, Collection Edition, etc.
                type: string
              orderNumber:
                format: int32
                description: The book order number in the series.
                type: integer
              seriesId:
                type: string
                description: The series id.
          type: array
        shortSeriesBookTitle:
          description: Short book title in the context of the series.
          type: string
        bookDisplayNumber:
          type: string
          description: The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.
        kind:
          type: string
          description: Resource type.
    Empty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
    Offers:
      type: object
      id: Offers
      properties:
        kind:
          type: string
          description: Resource type.
        items:
          type: array
          description: A list of offers.
          items:
            type: object
            properties:
              gservicesKey:
                type: string
              items:
                type: array
                items:
                  type: object
                  properties:
                    canonicalVolumeLink:
                      type: string
                    coverUrl:
                      type: string
                    description:
                      type: string
                    volumeId:
                      type: string
                    author:
                      type: string
                    title:
                      type: string
              artUrl:
                type: string
              id:
                type: string
    Series:
      id: Series
      type: object
      properties:
        series:
          items:
            properties:
              seriesId:
                type: string
              seriesType:
                type: string
              subscriptionId:
                type: string
              seriesFormatType:
                type: string
              title:
                type: string
              bannerImageUrl:
                type: string
              seriesSubscriptionReleaseInfo:
                properties:
                  currentReleaseInfo:
                    properties:
                      currencyCode:
                        type: string
                      releaseTime:
                        type: string
                      amountInMicros:
                        type: number
                        format: double
                      releaseNumber:
                        type: string
                    type: object
                  seriesSubscriptionType:
                    type: string
                  cancelTime:
                    type: string
                  nextReleaseInfo:
                    type: object
                    properties:
                      releaseTime:
                        type: string
                      currencyCode:
                        type: string
                      releaseNumber:
                        type: string
                      amountInMicros:
                        type: number
                        format: double
                type: object
              isComplete:
                type: boolean
              imageUrl:
                type: string
              eligibleForSubscription:
                type: boolean
            type: object
          type: array
        kind:
          description: Resource type.
          type: string
    Bookshelf:
      type: object
      id: Bookshelf
      properties:
        created:
          type: string
          description: Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).
        updated:
          description: Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).
          type: string
        volumeCount:
          type: integer
          description: Number of volumes in this bookshelf.
          format: int32
        selfLink:
          type: string
          description: URL to this resource.
        id:
          type: integer
          format: int32
          description: Id of this bookshelf, only unique by user.
        description:
          type: string
          description: Description of this bookshelf.
        title:
          type: string
          description: Title of this bookshelf.
        kind:
          type: string
          description: Resource type for bookshelf metadata.
        volumesLastUpdated:
          type: string
          description: Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).
        access:
          description: Whether this bookshelf is PUBLIC or PRIVATE.
          type: string
    Volume2:
      properties:
        items:
          type: array
          description: A list of volumes.
          items:
            $ref: '#/components/schemas/Volume'
        nextPageToken:
          type: string
        kind:
          type: string
          description: Resource type.
      type: object
      id: Volume2
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/books: Manage your books
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    personalizedstream:
      id: googledevelopers.books.personalizedstream
      name: personalizedstream
      title: Personalizedstream
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1personalizedstream~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/personalizedstream/methods/get'
        insert: []
        update: []
        delete: []
    cloudloading__book:
      id: googledevelopers.books.cloudloading__book
      name: cloudloading__book
      title: Cloudloading__book
      methods:
        cloudloading_deleteBook:
          operation:
            $ref: '#/paths/~1books~1v1~1cloudloading~1deleteBook/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudloading_addBook:
          operation:
            $ref: '#/paths/~1books~1v1~1cloudloading~1addBook/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    cloudloading:
      id: googledevelopers.books.cloudloading
      name: cloudloading
      title: Cloudloading
      methods:
        updateBook:
          operation:
            $ref: '#/paths/~1books~1v1~1cloudloading~1updateBook/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    promooffer:
      id: googledevelopers.books.promooffer
      name: promooffer
      title: Promooffer
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1promooffer~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dismiss:
          operation:
            $ref: '#/paths/~1books~1v1~1promooffer~1dismiss/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accept:
          operation:
            $ref: '#/paths/~1books~1v1~1promooffer~1accept/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/promooffer/methods/get'
        insert: []
        update: []
        delete: []
    dictionary__offline_metadata:
      id: googledevelopers.books.dictionary__offline_metadata
      name: dictionary__offline_metadata
      title: Dictionary__offline_metadata
      methods:
        dictionary_listOfflineMetadata:
          operation:
            $ref: '#/paths/~1books~1v1~1dictionary~1listOfflineMetadata/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    layers:
      id: googledevelopers.books.layers
      name: layers
      title: Layers
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layersummary~1{summaryId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layersummary/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/layers/methods/get'
          - $ref: '#/components/x-stackQL-resources/layers/methods/list'
        insert: []
        update: []
        delete: []
    annotation_data:
      id: googledevelopers.books.annotation_data
      name: annotation_data
      title: Annotation_data
      methods:
        layers_annotationData_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layers~1{layerId}~1data/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        layers_annotationData_get:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layers~1{layerId}~1data~1{annotationDataId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/annotation_data/methods/layers_annotationData_get'
          - $ref: '#/components/x-stackQL-resources/annotation_data/methods/layers_annotationData_list'
        insert: []
        update: []
        delete: []
    volume_annotations:
      id: googledevelopers.books.volume_annotations
      name: volume_annotations
      title: Volume_annotations
      methods:
        layers_volumeAnnotations_get:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layers~1{layerId}~1annotations~1{annotationId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        layers_volumeAnnotations_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layers~1{layerId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_annotations/methods/layers_volumeAnnotations_get'
          - $ref: '#/components/x-stackQL-resources/volume_annotations/methods/layers_volumeAnnotations_list'
        insert: []
        update: []
        delete: []
    useruploaded:
      id: googledevelopers.books.useruploaded
      name: useruploaded
      title: Useruploaded
      methods:
        volumes_useruploaded_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1useruploaded/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/useruploaded/methods/volumes_useruploaded_list'
        insert: []
        update: []
        delete: []
    recommended:
      id: googledevelopers.books.recommended
      name: recommended
      title: Recommended
      methods:
        volumes_recommended_rate:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1recommended~1rate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        volumes_recommended_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1recommended/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recommended/methods/volumes_recommended_list'
        insert: []
        update: []
        delete: []
    associated:
      id: googledevelopers.books.associated
      name: associated
      title: Associated
      methods:
        volumes_associated_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1associated/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/associated/methods/volumes_associated_list'
        insert: []
        update: []
        delete: []
    mybooks:
      id: googledevelopers.books.mybooks
      name: mybooks
      title: Mybooks
      methods:
        volumes_mybooks_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1mybooks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mybooks/methods/volumes_mybooks_list'
        insert: []
        update: []
        delete: []
    volumes:
      id: googledevelopers.books.volumes
      name: volumes
      title: Volumes
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_volumes_list:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bookshelves_volumes_list:
          operation:
            $ref: '#/paths/~1books~1v1~1users~1{userId}~1bookshelves~1{shelf}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/bookshelves_volumes_list'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/mylibrary_bookshelves_volumes_list'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list'
        insert: []
        update: []
        delete: []
    familysharing:
      id: googledevelopers.books.familysharing
      name: familysharing
      title: Familysharing
      methods:
        share:
          operation:
            $ref: '#/paths/~1books~1v1~1familysharing~1share/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unshare:
          operation:
            $ref: '#/paths/~1books~1v1~1familysharing~1unshare/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    familysharing__family_info:
      id: googledevelopers.books.familysharing__family_info
      name: familysharing__family_info
      title: Familysharing__family_info
      methods:
        familysharing_getFamilyInfo:
          operation:
            $ref: '#/paths/~1books~1v1~1familysharing~1getFamilyInfo/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/familysharing__family_info/methods/familysharing_getFamilyInfo'
        insert: []
        update: []
        delete: []
    annotations:
      id: googledevelopers.books.annotations
      name: annotations
      title: Annotations
      methods:
        mylibrary_annotations_insert:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_annotations_list:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_annotations_summary:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations~1summary/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_annotations_update:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations~1{annotationId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_annotations_delete:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations~1{annotationId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/annotations/methods/mylibrary_annotations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/annotations/methods/mylibrary_annotations_delete'
    readingpositions:
      id: googledevelopers.books.readingpositions
      name: readingpositions
      title: Readingpositions
      methods:
        mylibrary_readingpositions_setPosition:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1readingpositions~1{volumeId}~1setPosition/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_readingpositions_get:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1readingpositions~1{volumeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/readingpositions/methods/mylibrary_readingpositions_get'
        insert: []
        update: []
        delete: []
    bookshelves__volume:
      id: googledevelopers.books.bookshelves__volume
      name: bookshelves__volume
      title: Bookshelves__volume
      methods:
        mylibrary_bookshelves_removeVolume:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1removeVolume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_addVolume:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1addVolume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    bookshelves:
      id: googledevelopers.books.bookshelves
      name: bookshelves
      title: Bookshelves
      methods:
        mylibrary_bookshelves_clearVolumes:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1clearVolumes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_moveVolume:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1moveVolume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_list:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_get:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1books~1v1~1users~1{userId}~1bookshelves/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1users~1{userId}~1bookshelves~1{shelf}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bookshelves/methods/get'
          - $ref: '#/components/x-stackQL-resources/bookshelves/methods/mylibrary_bookshelves_get'
          - $ref: '#/components/x-stackQL-resources/bookshelves/methods/list'
          - $ref: '#/components/x-stackQL-resources/bookshelves/methods/mylibrary_bookshelves_list'
        insert: []
        update: []
        delete: []
    membership:
      id: googledevelopers.books.membership
      name: membership
      title: Membership
      methods:
        series_membership_get:
          operation:
            $ref: '#/paths/~1books~1v1~1series~1membership~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/membership/methods/series_membership_get'
        insert: []
        update: []
        delete: []
    series:
      id: googledevelopers.books.series
      name: series
      title: Series
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1series~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/series/methods/get'
        insert: []
        update: []
        delete: []
    myconfig:
      id: googledevelopers.books.myconfig
      name: myconfig
      title: Myconfig
      methods:
        syncVolumeLicenses:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1syncVolumeLicenses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        requestAccess:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1requestAccess/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateUserSettings:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1updateUserSettings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        releaseDownloadAccess:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1releaseDownloadAccess/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    myconfig__user_settings:
      id: googledevelopers.books.myconfig__user_settings
      name: myconfig__user_settings
      title: Myconfig__user_settings
      methods:
        myconfig_getUserSettings:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1getUserSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/myconfig__user_settings/methods/myconfig_getUserSettings'
        insert: []
        update: []
        delete: []
    onboarding__categories:
      id: googledevelopers.books.onboarding__categories
      name: onboarding__categories
      title: Onboarding__categories
      methods:
        onboarding_listCategories:
          operation:
            $ref: '#/paths/~1books~1v1~1onboarding~1listCategories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    onboarding__category_volumes:
      id: googledevelopers.books.onboarding__category_volumes
      name: onboarding__category_volumes
      title: Onboarding__category_volumes
      methods:
        onboarding_listCategoryVolumes:
          operation:
            $ref: '#/paths/~1books~1v1~1onboarding~1listCategoryVolumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    notification:
      id: googledevelopers.books.notification
      name: notification
      title: Notification
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1notification~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /books/v1/personalizedstream/get:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
    get:
      description: Returns a stream of personalized book clusters
      operationId: books.personalizedstream.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discoveryclusters'
      parameters:
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: personalizedstream
      x-stackQL-verb: select
  /books/v1/cloudloading/deleteBook:
    parameters: *ref_1
    post:
      description: Remove the book and its contents
      operationId: books.cloudloading.deleteBook
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
      x-stackQL-resource: cloudloading__book
      x-stackQL-verb: delete
  /books/v1/cloudloading/updateBook:
    parameters: *ref_1
    post:
      description: Updates a user-upload volume.
      operationId: books.cloudloading.updateBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooksCloudloadingResource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksCloudloadingResource'
      parameters: []
      x-stackQL-resource: cloudloading
      x-stackQL-verb: exec
  /books/v1/cloudloading/addBook:
    parameters: *ref_1
    post:
      description: Add a user-upload volume and triggers processing.
      operationId: books.cloudloading.addBook
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksCloudloadingResource'
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: upload_client_token
          schema:
            type: string
        - in: query
          name: drive_document_id
          schema:
            type: string
        - in: query
          name: mime_type
          schema:
            type: string
      x-stackQL-resource: cloudloading__book
      x-stackQL-verb: insert
  /books/v1/promooffer/get:
    parameters: *ref_1
    get:
      description: Returns a list of promo offers available to the user
      operationId: books.promooffer.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offers'
      parameters:
        - in: query
          name: device
          schema:
            type: string
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: manufacturer
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: select
  /books/v1/promooffer/dismiss:
    parameters: *ref_1
    post:
      description: Marks the promo offer as dismissed.
      operationId: books.promooffer.dismiss
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: manufacturer
          schema:
            type: string
        - in: query
          name: offerId
          schema:
            type: string
        - in: query
          name: device
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: exec
  /books/v1/promooffer/accept:
    parameters: *ref_1
    post:
      description: Accepts the promo offer.
      operationId: books.promooffer.accept
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: manufacturer
          schema:
            type: string
        - in: query
          name: offerId
          schema:
            type: string
        - in: query
          name: device
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: exec
  /books/v1/dictionary/listOfflineMetadata:
    parameters: *ref_1
    get:
      description: Returns a list of offline dictionary metadata available
      operationId: books.dictionary.listOfflineMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
      x-stackQL-resource: dictionary__offline_metadata
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layersummary/{summaryId}:
    parameters: *ref_1
    get:
      description: Gets the layer summary for a volume.
      operationId: books.layers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layersummary'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: summaryId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: layers
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layersummary:
    parameters: *ref_1
    get:
      description: List the layer summaries for a volume.
      operationId: books.layers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layersummaries'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: layers
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}/data:
    parameters: *ref_1
    get:
      description: Gets the annotation data for a volume and layer.
      operationId: books.layers.annotationData.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotationsdata'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: w
          schema:
            type: integer
        - in: query
          name: annotationDataId
          schema:
            type: string
        - in: query
          name: scale
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: h
          schema:
            type: integer
      x-stackQL-resource: annotation_data
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}:
    parameters: *ref_1
    get:
      description: Gets the annotation data.
      operationId: books.layers.annotationData.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryAnnotationdata'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: path
          name: annotationDataId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: allowWebDefinitions
          schema:
            type: boolean
        - in: query
          name: w
          schema:
            type: integer
        - in: query
          name: h
          schema:
            type: integer
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: scale
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: annotation_data
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}:
    parameters: *ref_1
    get:
      description: Gets the volume annotation.
      operationId: books.layers.volumeAnnotations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumeannotation'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: volume_annotations
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}:
    parameters: *ref_1
    get:
      description: Gets the volume annotations for a volume and layer.
      operationId: books.layers.volumeAnnotations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumeannotations'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: endOffset
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: volumeAnnotationsVersion
          schema:
            type: string
        - in: query
          name: startPosition
          schema:
            type: string
        - in: query
          name: endPosition
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: startOffset
          schema:
            type: string
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: volume_annotations
      x-stackQL-verb: select
  /books/v1/volumes/useruploaded:
    parameters: *ref_1
    get:
      description: Return a list of books uploaded by the current user.
      operationId: books.volumes.useruploaded.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: processingState
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: useruploaded
      x-stackQL-verb: select
  /books/v1/volumes/recommended/rate:
    parameters: *ref_1
    post:
      description: Rate a recommended book for the current user.
      operationId: books.volumes.recommended.rate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksVolumesRecommendedRateResponse'
      parameters:
        - in: query
          name: rating
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: recommended
      x-stackQL-verb: exec
  /books/v1/volumes/recommended:
    parameters: *ref_1
    get:
      description: Return a list of recommended books for the current user.
      operationId: books.volumes.recommended.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: recommended
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/associated:
    parameters: *ref_1
    get:
      description: Return a list of associated books.
      operationId: books.volumes.associated.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: association
          schema:
            type: string
      x-stackQL-resource: associated
      x-stackQL-verb: select
  /books/v1/volumes/mybooks:
    parameters: *ref_1
    get:
      description: Return a list of books in My Library.
      operationId: books.volumes.mybooks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: processingState
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: acquireMethod
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
      x-stackQL-resource: mybooks
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}:
    parameters: *ref_1
    get:
      description: Gets volume information for a single volume.
      operationId: books.volumes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: user_library_consistent_read
          schema:
            type: boolean
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: partner
          schema:
            type: string
        - in: query
          name: includeNonComicsSeries
          schema:
            type: boolean
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/volumes:
    parameters: *ref_1
    get:
      description: Performs a book search.
      operationId: books.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: download
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: langRestrict
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: printType
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: partner
          schema:
            type: string
        - in: query
          name: libraryRestrict
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/familysharing/share:
    parameters: *ref_1
    post:
      description: Initiates sharing of the content with the user's family. Empty response indicates success.
      operationId: books.familysharing.share
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: docId
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: familysharing
      x-stackQL-verb: exec
  /books/v1/familysharing/getFamilyInfo:
    parameters: *ref_1
    get:
      description: Gets information regarding the family that the user is part of.
      operationId: books.familysharing.getFamilyInfo
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyInfo'
      parameters:
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: familysharing__family_info
      x-stackQL-verb: select
  /books/v1/familysharing/unshare:
    parameters: *ref_1
    post:
      description: Initiates revoking content that has already been shared with the user's family. Empty response indicates success.
      operationId: books.familysharing.unshare
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: docId
          schema:
            type: string
      x-stackQL-resource: familysharing
      x-stackQL-verb: exec
  /books/v1/mylibrary/annotations:
    parameters: *ref_1
    post:
      description: Inserts a new annotation.
      operationId: books.mylibrary.annotations.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
      parameters:
        - in: query
          name: showOnlySummaryInResponse
          schema:
            type: boolean
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: annotationId
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of annotations, possibly filtered.
      operationId: books.mylibrary.annotations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotations'
      parameters:
        - in: query
          name: layerIds
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: layerId
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: contentVersion
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: select
  /books/v1/mylibrary/annotations/summary:
    parameters: *ref_1
    post:
      description: Gets the summary of specified layers.
      operationId: books.mylibrary.annotations.summary
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationsSummary'
      parameters:
        - in: query
          name: layerIds
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: exec
  /books/v1/mylibrary/annotations/{annotationId}:
    parameters: *ref_1
    put:
      description: Updates an existing annotation.
      operationId: books.mylibrary.annotations.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
      parameters:
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: exec
    delete:
      description: Deletes an annotation.
      operationId: books.mylibrary.annotations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: delete
  /books/v1/mylibrary/readingpositions/{volumeId}/setPosition:
    parameters: *ref_1
    post:
      description: Sets my reading position information for a volume.
      operationId: books.mylibrary.readingpositions.setPosition
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: position
          required: true
          schema:
            type: string
        - in: query
          name: timestamp
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: action
          schema:
            type: string
        - in: query
          name: deviceCookie
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
      x-stackQL-resource: readingpositions
      x-stackQL-verb: exec
  /books/v1/mylibrary/readingpositions/{volumeId}:
    parameters: *ref_1
    get:
      description: Retrieves my reading position information for a volume.
      operationId: books.mylibrary.readingpositions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadingPosition'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
      x-stackQL-resource: readingpositions
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}/volumes:
    parameters: *ref_1
    get:
      description: Gets volume information for volumes on a bookshelf.
      operationId: books.mylibrary.bookshelves.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}/removeVolume:
    parameters: *ref_1
    post:
      description: Removes a volume from a bookshelf.
      operationId: books.mylibrary.bookshelves.removeVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: reason
          schema:
            type: string
      x-stackQL-resource: bookshelves__volume
      x-stackQL-verb: delete
  /books/v1/mylibrary/bookshelves/{shelf}/clearVolumes:
    parameters: *ref_1
    post:
      description: Clears all volumes from a bookshelf.
      operationId: books.mylibrary.bookshelves.clearVolumes
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: exec
  /books/v1/mylibrary/bookshelves/{shelf}/moveVolume:
    parameters: *ref_1
    post:
      description: Moves a volume within a bookshelf.
      operationId: books.mylibrary.bookshelves.moveVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: volumePosition
          required: true
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: exec
  /books/v1/mylibrary/bookshelves:
    parameters: *ref_1
    get:
      description: Retrieves a list of bookshelves belonging to the authenticated user.
      operationId: books.mylibrary.bookshelves.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelves'
      parameters:
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}:
    parameters: *ref_1
    get:
      description: Retrieves metadata for a specific bookshelf belonging to the authenticated user.
      operationId: books.mylibrary.bookshelves.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelf'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}/addVolume:
    parameters: *ref_1
    post:
      description: Adds a volume to a bookshelf.
      operationId: books.mylibrary.bookshelves.addVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: reason
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves__volume
      x-stackQL-verb: insert
  /books/v1/series/membership/get:
    parameters: *ref_1
    get:
      description: Returns Series membership data given the series id.
      operationId: books.series.membership.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seriesmembership'
      parameters:
        - in: query
          name: series_id
          required: true
          schema:
            type: string
        - in: query
          name: page_token
          schema:
            type: string
        - in: query
          name: page_size
          schema:
            type: integer
      x-stackQL-resource: membership
      x-stackQL-verb: select
  /books/v1/series/get:
    parameters: *ref_1
    get:
      description: Returns Series metadata for the given series ids.
      operationId: books.series.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
      parameters:
        - in: query
          name: series_id
          required: true
          schema:
            type: string
      x-stackQL-resource: series
      x-stackQL-verb: select
  /books/v1/myconfig/syncVolumeLicenses:
    parameters: *ref_1
    post:
      description: Request downloaded content access for specified volumes on the My eBooks shelf.
      operationId: books.myconfig.syncVolumeLicenses
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: string
        - in: query
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: volumeIds
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: includeNonComicsSeries
          schema:
            type: boolean
        - in: query
          name: features
          schema:
            type: string
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/requestAccess:
    parameters: *ref_1
    post:
      description: Request concurrent and download access restrictions.
      operationId: books.myconfig.requestAccess
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestAccessData'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: string
        - in: query
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: licenseTypes
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/updateUserSettings:
    parameters: *ref_1
    post:
      description: Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.
      operationId: books.myconfig.updateUserSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usersettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usersettings'
      parameters: []
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/getUserSettings:
    parameters: *ref_1
    get:
      description: Gets the current settings for the user.
      operationId: books.myconfig.getUserSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usersettings'
      parameters:
        - in: query
          name: country
          schema:
            type: string
      x-stackQL-resource: myconfig__user_settings
      x-stackQL-verb: select
  /books/v1/myconfig/releaseDownloadAccess:
    parameters: *ref_1
    post:
      description: Release downloaded content access restriction.
      operationId: books.myconfig.releaseDownloadAccess
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccesses'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: volumeIds
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/onboarding/listCategories:
    parameters: *ref_1
    get:
      description: List categories for onboarding experience.
      operationId: books.onboarding.listCategories
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      parameters:
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: onboarding__categories
      x-stackQL-verb: select
  /books/v1/onboarding/listCategoryVolumes:
    parameters: *ref_1
    get:
      description: List available volumes under categories for onboarding experience.
      operationId: books.onboarding.listCategoryVolumes
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume2'
      parameters:
        - in: query
          name: categoryId
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: onboarding__category_volumes
      x-stackQL-verb: select
  /books/v1/users/{userId}/bookshelves:
    parameters: *ref_1
    get:
      description: Retrieves a list of public bookshelves for the specified user.
      operationId: books.bookshelves.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelves'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/users/{userId}/bookshelves/{shelf}:
    parameters: *ref_1
    get:
      description: Retrieves metadata for a specific bookshelf for the specified user.
      operationId: books.bookshelves.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelf'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/users/{userId}/bookshelves/{shelf}/volumes:
    parameters: *ref_1
    get:
      description: Retrieves volumes in a specific bookshelf for the specified user.
      operationId: books.bookshelves.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/notification/get:
    parameters: *ref_1
    get:
      description: Returns notification details for a given notification id.
      operationId: books.notification.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      parameters:
        - in: query
          name: notification_id
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: notification
      x-stackQL-verb: select
