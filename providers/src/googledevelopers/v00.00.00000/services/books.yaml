openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Books API
  description: The Google Books API allows clients to access the Google Books repository.
  version: v1
  x-discovery-doc-revision: '20230110'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://code.google.com/apis/books/docs/v1/getting_started.html
servers:
  - url: https://books.googleapis.com
components:
  schemas:
    DownloadAccesses:
      properties:
        downloadAccessList:
          type: array
          items:
            $ref: '#/components/schemas/DownloadAccessRestriction'
          description: A list of download access responses.
        kind:
          description: Resource type.
          type: string
      id: DownloadAccesses
      type: object
    BooksVolumesRecommendedRateResponse:
      id: BooksVolumesRecommendedRateResponse
      properties:
        consistency_token:
          type: string
      type: object
    Volumeseriesinfo:
      properties:
        volumeSeries:
          items:
            type: object
            properties:
              seriesId:
                type: string
                description: The series id.
              seriesBookType:
                description: The book type in the context of series. Examples - Single Issue, Collection Edition, etc.
                type: string
              orderNumber:
                format: int32
                description: The book order number in the series.
                type: integer
              issue:
                items:
                  properties:
                    issueOrderNumber:
                      type: integer
                      format: int32
                    issueDisplayNumber:
                      type: string
                  type: object
                type: array
                description: List of issues. Applicable only for Collection Edition and Omnibus.
          type: array
        bookDisplayNumber:
          description: The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.
          type: string
        kind:
          type: string
          description: Resource type.
        shortSeriesBookTitle:
          type: string
          description: Short book title in the context of the series.
      type: object
      id: Volumeseriesinfo
    Volumes:
      type: object
      properties:
        items:
          items:
            $ref: '#/components/schemas/Volume'
          type: array
          description: A list of volumes.
        kind:
          type: string
          description: Resource type.
        totalItems:
          description: Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.
          type: integer
          format: int32
      id: Volumes
    Notification:
      type: object
      properties:
        title:
          type: string
        is_document_mature:
          type: boolean
        kind:
          description: Resource type.
          type: string
        notification_type:
          type: string
        iconUrl:
          type: string
        targetUrl:
          type: string
        doc_id:
          type: string
        body:
          type: string
        crmExperimentIds:
          items:
            type: string
            format: int64
          type: array
          description: The list of crm experiment ids.
        show_notification_settings_action:
          type: boolean
        doc_type:
          type: string
        dont_show_notification:
          type: boolean
        pcampaign_id:
          type: string
        notificationGroup:
          type: string
        reason:
          type: string
        timeToExpireMs:
          type: string
          format: int64
      id: Notification
    DownloadAccessRestriction:
      type: object
      properties:
        nonce:
          description: Client nonce for verification. Download access and client-validation only.
          type: string
        message:
          type: string
          description: Error/warning message.
        signature:
          description: Response signature.
          type: string
        reasonCode:
          description: Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS
          type: string
        restricted:
          type: boolean
          description: Whether this volume has any download access restrictions.
        downloadsAcquired:
          type: integer
          format: int32
          description: If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).
        justAcquired:
          type: boolean
          description: If deviceAllowed, whether access was just acquired with this request.
        kind:
          type: string
          description: Resource type.
        deviceAllowed:
          description: If restricted, whether access is granted for this (user, device, volume).
          type: boolean
        source:
          description: Client app identifier for verification. Download access and client-validation only.
          type: string
        maxDownloadDevices:
          type: integer
          description: If restricted, the maximum number of content download licenses for this volume.
          format: int32
        volumeId:
          type: string
          description: Identifies the volume for which this entry applies.
      id: DownloadAccessRestriction
    Layersummary:
      type: object
      id: Layersummary
      properties:
        annotationsLink:
          type: string
          description: The link to get the annotations for this layer.
        volumeAnnotationsVersion:
          type: string
          description: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
        volumeId:
          description: The volume id this resource is for.
          type: string
        layerId:
          type: string
          description: The layer id for this summary.
        updated:
          description: Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).
          type: string
        dataCount:
          type: integer
          description: The number of data items for this layer.
          format: int32
        contentVersion:
          type: string
          description: The content version this resource is for.
        annotationCount:
          type: integer
          format: int32
          description: The number of annotations for this layer.
        kind:
          description: Resource Type
          type: string
        selfLink:
          description: URL to this resource.
          type: string
        id:
          description: Unique id of this layer summary.
          type: string
        annotationTypes:
          type: array
          description: The list of annotation types contained for this layer.
          items:
            type: string
        annotationsDataLink:
          description: Link to get data for this annotation.
          type: string
    DictionaryAnnotationdata:
      properties:
        annotationType:
          type: string
          description: The type of annotation this data is for.
        updated:
          type: string
          description: Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).
        kind:
          description: Resource Type
          type: string
        data:
          description: JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.
          $ref: '#/components/schemas/Dictlayerdata'
        id:
          description: Unique id for this annotation data.
          type: string
        volumeId:
          description: The volume id for this data. *
          type: string
        layerId:
          description: The Layer id for this data. *
          type: string
        encodedData:
          format: byte
          description: Base64 encoded data for this annotation data.
          type: string
        selfLink:
          description: URL for this resource. *
          type: string
      id: DictionaryAnnotationdata
      type: object
    Bookshelves:
      id: Bookshelves
      type: object
      properties:
        kind:
          type: string
          description: Resource type.
        items:
          description: A list of bookshelves.
          items:
            $ref: '#/components/schemas/Bookshelf'
          type: array
    Volumeannotations:
      type: object
      properties:
        nextPageToken:
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
          type: string
        items:
          type: array
          description: A list of volume annotations.
          items:
            $ref: '#/components/schemas/Volumeannotation'
        totalItems:
          description: The total number of volume annotations found.
          format: int32
          type: integer
        version:
          type: string
          description: 'The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn''t apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).'
        kind:
          type: string
          description: Resource type
      id: Volumeannotations
    Review:
      type: object
      properties:
        source:
          description: Information regarding the source of this review, when the review is not from a Google Books user.
          properties:
            description:
              description: Name of the source.
              type: string
            extraDescription:
              type: string
              description: Extra text about the source of the review.
            url:
              type: string
              description: URL of the source of the review.
          type: object
        kind:
          type: string
          description: Resource type for a review.
        content:
          description: Review text.
          type: string
        fullTextUrl:
          type: string
          description: URL for the full review text, for reviews gathered from the web.
        type:
          description: Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.
          type: string
        rating:
          type: string
          description: Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.
        author:
          type: object
          description: Author of this review.
          properties:
            displayName:
              type: string
              description: Name of this person.
        volumeId:
          type: string
          description: Volume that this review is for.
        title:
          description: Title for this review.
          type: string
        date:
          description: Date of this review.
          type: string
      id: Review
    Geolayerdata:
      type: object
      properties:
        geo:
          type: object
          properties:
            countryCode:
              description: The country code of the location.
              type: string
            mapType:
              type: string
              description: 'The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN'
            boundary:
              items:
                type: string
              type: array
              description: The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.
            viewport:
              description: The viewport for showing this location. This is a latitude, longitude rectangle.
              properties:
                hi:
                  properties:
                    longitude:
                      format: double
                      type: number
                    latitude:
                      type: number
                      format: double
                  type: object
                lo:
                  type: object
                  properties:
                    latitude:
                      type: number
                      format: double
                    longitude:
                      format: double
                      type: number
              type: object
            cachePolicy:
              description: 'The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER'
              type: string
            latitude:
              description: The latitude of the location.
              type: number
              format: double
            zoom:
              format: int32
              type: integer
              description: 'The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels'
            longitude:
              type: number
              format: double
              description: The longitude of the location.
        common:
          type: object
          properties:
            title:
              type: string
              description: The display title and localized canonical name to use when searching for this entity on Google search.
            snippetUrl:
              type: string
              description: 'The URL for information for this location. Ex: wikipedia link.'
            lang:
              type: string
              description: The language of the information url and description.
            snippet:
              type: string
              description: The description for this location.
            previewImageUrl:
              description: The URL for the preview image information.
              type: string
        kind:
          type: string
      id: Geolayerdata
    AnnotationsSummary:
      properties:
        layers:
          type: array
          items:
            properties:
              limitType:
                type: string
              layerId:
                type: string
              updated:
                type: string
              remainingCharacterCount:
                type: integer
                format: int32
              allowedCharacterCount:
                type: integer
                format: int32
            type: object
        kind:
          type: string
      type: object
      id: AnnotationsSummary
    Volume2:
      type: object
      properties:
        nextPageToken:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Volume'
          description: A list of volumes.
          type: array
        kind:
          description: Resource type.
          type: string
      id: Volume2
    RequestAccessData:
      id: RequestAccessData
      type: object
      properties:
        concurrentAccess:
          description: A concurrent access response.
          $ref: '#/components/schemas/ConcurrentAccessRestriction'
        kind:
          type: string
          description: Resource type.
        downloadAccess:
          description: A download access response.
          $ref: '#/components/schemas/DownloadAccessRestriction'
    FamilyInfo:
      properties:
        kind:
          description: Resource type.
          type: string
        membership:
          properties:
            isInFamily:
              type: boolean
            acquirePermission:
              type: string
              description: Restrictions on user buying and acquiring content.
            ageGroup:
              type: string
              description: The age group of the user.
            role:
              type: string
              description: The role of the user in the family.
            allowedMaturityRating:
              type: string
              description: The maximum allowed maturity rating for the user.
          description: Family membership info of the user that made the request.
          type: object
      id: FamilyInfo
      type: object
    Usersettings:
      properties:
        kind:
          description: Resource type.
          type: string
        notesExport:
          description: User settings in sub-objects, each for different purposes.
          type: object
          properties:
            folderName:
              type: string
            isEnabled:
              type: boolean
        notification:
          type: object
          properties:
            moreFromAuthors:
              properties:
                opted_state:
                  type: string
              type: object
            matchMyInterests:
              type: object
              properties:
                opted_state:
                  type: string
            priceDrop:
              properties:
                opted_state:
                  type: string
              type: object
            moreFromSeries:
              properties:
                opted_state:
                  type: string
              type: object
            rewardExpirations:
              type: object
              properties:
                opted_state:
                  type: string
      type: object
      id: Usersettings
    Annotations:
      properties:
        nextPageToken:
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
          type: string
        items:
          items:
            $ref: '#/components/schemas/Annotation'
          description: A list of annotations.
          type: array
        kind:
          description: Resource type.
          type: string
        totalItems:
          description: Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.
          format: int32
          type: integer
      id: Annotations
      type: object
    Metadata:
      id: Metadata
      properties:
        items:
          items:
            properties:
              language:
                type: string
              download_url:
                type: string
              version:
                format: int64
                type: string
              size:
                type: string
                format: int64
              encrypted_key:
                type: string
            type: object
          type: array
          description: A list of offline dictionary metadata.
        kind:
          description: Resource type.
          type: string
      type: object
    Layersummaries:
      properties:
        totalItems:
          description: The total number of layer summaries found.
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Layersummary'
          type: array
          description: A list of layer summary items.
        kind:
          type: string
          description: Resource type.
      id: Layersummaries
      type: object
    Dictlayerdata:
      id: Dictlayerdata
      properties:
        dict:
          properties:
            source:
              properties:
                url:
                  type: string
                attribution:
                  type: string
              type: object
              description: The source, url and attribution for this dictionary data.
            words:
              type: array
              items:
                properties:
                  senses:
                    type: array
                    items:
                      properties:
                        pronunciation:
                          type: string
                        syllabification:
                          type: string
                        definitions:
                          items:
                            type: object
                            properties:
                              examples:
                                items:
                                  type: object
                                  properties:
                                    source:
                                      properties:
                                        attribution:
                                          type: string
                                        url:
                                          type: string
                                      type: object
                                    text:
                                      type: string
                                type: array
                              definition:
                                type: string
                          type: array
                        source:
                          type: object
                          properties:
                            attribution:
                              type: string
                            url:
                              type: string
                        pronunciationUrl:
                          type: string
                        partOfSpeech:
                          type: string
                        synonyms:
                          type: array
                          items:
                            properties:
                              source:
                                type: object
                                properties:
                                  attribution:
                                    type: string
                                  url:
                                    type: string
                              text:
                                type: string
                            type: object
                        conjugations:
                          type: array
                          items:
                            type: object
                            properties:
                              value:
                                type: string
                              type:
                                type: string
                      type: object
                  source:
                    description: The words with different meanings but not related words, e.g. "go" (game) and "go" (verb).
                    type: object
                    properties:
                      url:
                        type: string
                      attribution:
                        type: string
                  examples:
                    type: array
                    items:
                      properties:
                        text:
                          type: string
                        source:
                          properties:
                            attribution:
                              type: string
                            url:
                              type: string
                          type: object
                      type: object
                  derivatives:
                    items:
                      properties:
                        source:
                          type: object
                          properties:
                            url:
                              type: string
                            attribution:
                              type: string
                        text:
                          type: string
                      type: object
                    type: array
                type: object
          type: object
        common:
          type: object
          properties:
            title:
              description: The display title and localized canonical name to use when searching for this entity on Google search.
              type: string
        kind:
          type: string
      type: object
    Volume:
      type: object
      id: Volume
      properties:
        id:
          description: Unique identifier for a volume. (In LITE projection.)
          type: string
        accessInfo:
          properties:
            country:
              type: string
              description: The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)
            explicitOfflineLicenseManagement:
              type: boolean
              description: Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.
            quoteSharingAllowed:
              description: Whether quote sharing is allowed for this volume.
              type: boolean
            publicDomain:
              type: boolean
              description: Whether or not this book is public domain in the country listed above.
            downloadAccess:
              $ref: '#/components/schemas/DownloadAccessRestriction'
              description: Information about a volume's download license access restrictions.
            textToSpeechPermission:
              type: string
              description: Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.
            driveImportedContentLink:
              type: string
              description: URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive.
            pdf:
              description: Information about pdf content. (In LITE projection.)
              type: object
              properties:
                downloadLink:
                  type: string
                  description: URL to download pdf. (In LITE projection.)
                isAvailable:
                  type: boolean
                  description: Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)
                acsTokenLink:
                  description: URL to retrieve ACS token for pdf download. (In LITE projection.)
                  type: string
            accessViewStatus:
              type: string
              description: Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)
            embeddable:
              description: Whether this volume can be embedded in a viewport using the Embedded Viewer API.
              type: boolean
            viewOrderUrl:
              description: For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.
              type: string
            webReaderLink:
              description: URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.
              type: string
            viewability:
              description: The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.
              type: string
            epub:
              properties:
                acsTokenLink:
                  type: string
                  description: URL to retrieve ACS token for epub download. (In LITE projection.)
                downloadLink:
                  type: string
                  description: URL to download epub. (In LITE projection.)
                isAvailable:
                  description: Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)
                  type: boolean
              description: Information about epub content. (In LITE projection.)
              type: object
          description: Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).
          type: object
        saleInfo:
          type: object
          properties:
            isEbook:
              description: Whether or not this volume is an eBook (can be added to the My eBooks shelf).
              type: boolean
            onSaleDate:
              type: string
              description: The date on which this book is available for sale.
            saleability:
              description: Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.
              type: string
            country:
              type: string
              description: The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)
            listPrice:
              type: object
              properties:
                amount:
                  format: double
                  description: Amount in the currency listed below. (In LITE projection.)
                  type: number
                currencyCode:
                  description: An ISO 4217, three-letter currency code. (In LITE projection.)
                  type: string
              description: Suggested retail price. (In LITE projection.)
            buyLink:
              type: string
              description: URL to purchase this volume on the Google Books site. (In LITE projection)
            offers:
              description: Offers available for this volume (sales and rentals).
              type: array
              items:
                properties:
                  retailPrice:
                    description: Offer retail (=discounted) price in Micros
                    properties:
                      currencyCode:
                        type: string
                      amountInMicros:
                        type: number
                        format: double
                    type: object
                  giftable:
                    description: Indicates whether the offer is giftable.
                    type: boolean
                  rentalDuration:
                    type: object
                    properties:
                      unit:
                        type: string
                      count:
                        format: double
                        type: number
                    description: The rental duration (for rental offers only).
                  finskyOfferType:
                    description: The finsky offer type (e.g., PURCHASE=0 RENTAL=3)
                    format: int32
                    type: integer
                  listPrice:
                    description: Offer list (=undiscounted) price in Micros.
                    properties:
                      amountInMicros:
                        format: double
                        type: number
                      currencyCode:
                        type: string
                    type: object
                type: object
            retailPrice:
              type: object
              properties:
                currencyCode:
                  type: string
                  description: An ISO 4217, three-letter currency code. (In LITE projection.)
                amount:
                  description: Amount in the currency listed below. (In LITE projection.)
                  type: number
                  format: double
              description: The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)
          description: Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).
        searchInfo:
          properties:
            textSnippet:
              type: string
              description: A text snippet containing the search query.
          type: object
          description: Search result information related to this volume.
        etag:
          type: string
          description: Opaque identifier for a specific version of a volume resource. (In LITE projection)
        volumeInfo:
          properties:
            ratingsCount:
              type: integer
              format: int32
              description: The number of review ratings for this volume.
            publisher:
              description: Publisher of this volume. (In LITE projection.)
              type: string
            printedPageCount:
              format: int32
              type: integer
              description: Total number of printed pages in generated pdf representation.
            publishedDate:
              type: string
              description: Date of publication. (In LITE projection.)
            readingModes:
              type: object
              properties:
                text:
                  type: boolean
                image:
                  type: boolean
              description: The reading modes available for this volume.
            infoLink:
              type: string
              description: URL to view information about this volume on the Google Books site. (In LITE projection)
            pageCount:
              format: int32
              description: Total number of pages as per publisher metadata.
              type: integer
            description:
              description: A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)
              type: string
            title:
              type: string
              description: Volume title. (In LITE projection.)
            industryIdentifiers:
              type: array
              description: Industry standard identifiers for this volume.
              items:
                properties:
                  identifier:
                    description: Industry specific volume identifier.
                    type: string
                  type:
                    type: string
                    description: Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.
                type: object
            canonicalVolumeLink:
              type: string
              description: Canonical URL for a volume. (In LITE projection.)
            seriesInfo:
              $ref: '#/components/schemas/Volumeseriesinfo'
            allowAnonLogging:
              type: boolean
              description: Whether anonymous logging should be allowed.
            averageRating:
              description: The mean review rating for this volume. (min = 1.0, max = 5.0)
              type: number
              format: double
            language:
              description: Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.
              type: string
            authors:
              description: The names of the authors and/or editors for this volume. (In LITE projection)
              type: array
              items:
                type: string
            comicsContent:
              type: boolean
              description: Whether the volume has comics content.
            subtitle:
              description: Volume subtitle. (In LITE projection.)
              type: string
            categories:
              items:
                type: string
              description: A list of subject categories, such as "Fiction", "Suspense", etc.
              type: array
            imageLinks:
              type: object
              properties:
                thumbnail:
                  description: Image link for thumbnail size (width of ~128 pixels). (In LITE projection)
                  type: string
                extraLarge:
                  description: Image link for extra large size (width of ~1280 pixels). (In LITE projection)
                  type: string
                large:
                  description: Image link for large size (width of ~800 pixels). (In LITE projection)
                  type: string
                smallThumbnail:
                  type: string
                  description: Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)
                medium:
                  description: Image link for medium size (width of ~575 pixels). (In LITE projection)
                  type: string
                small:
                  type: string
                  description: Image link for small size (width of ~300 pixels). (In LITE projection)
              description: A list of image links for all the sizes that are available. (In LITE projection.)
            maturityRating:
              type: string
            printType:
              description: Type of publication of this volume. Possible values are BOOK or MAGAZINE.
              type: string
            dimensions:
              properties:
                height:
                  type: string
                  description: Height or length of this volume (in cm).
                thickness:
                  description: Thickness of this volume (in cm).
                  type: string
                width:
                  type: string
                  description: Width of this volume (in cm).
              description: Physical dimensions of this volume.
              type: object
            previewLink:
              description: URL to preview this volume on the Google Books site.
              type: string
            samplePageCount:
              type: integer
              format: int32
              description: Total number of sample pages as per publisher metadata.
            panelizationSummary:
              properties:
                epubBubbleVersion:
                  type: string
                imageBubbleVersion:
                  type: string
                containsImageBubbles:
                  type: boolean
                containsEpubBubbles:
                  type: boolean
              description: A top-level summary of the panelization info in this volume.
              type: object
            mainCategory:
              description: The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.
              type: string
            contentVersion:
              type: string
              description: An identifier for the version of the volume content (text & images). (In LITE projection)
          type: object
          description: General volume information.
        kind:
          type: string
          description: Resource type for a volume. (In LITE projection.)
        layerInfo:
          properties:
            layers:
              items:
                properties:
                  volumeAnnotationsVersion:
                    type: string
                    description: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
                  layerId:
                    type: string
                    description: The layer id of this layer (e.g. "geo").
                type: object
              type: array
              description: A layer should appear here if and only if the layer exists for this book.
          description: What layers exist in this volume and high level information about them.
          type: object
        selfLink:
          description: URL to this resource. (In LITE projection.)
          type: string
        recommendedInfo:
          description: Recommendation related information for this volume.
          properties:
            explanation:
              type: string
              description: A text explaining why this volume is recommended.
          type: object
        userInfo:
          description: User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)
          type: object
          properties:
            acquiredTime:
              description: Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.
              type: string
            isFamilySharingDisabledByFop:
              description: 'Deprecated: Replaced by familySharing.'
              type: boolean
            familySharing:
              description: Information on the ability to share with the family.
              type: object
              properties:
                isSharingAllowed:
                  description: Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.
                  type: boolean
                familyRole:
                  description: The role of the user in the family.
                  type: string
                isSharingDisabledByFop:
                  type: boolean
                  description: Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.
            copy:
              description: Copy/Paste accounting information.
              properties:
                remainingCharacterCount:
                  type: integer
                  format: int32
                updated:
                  type: string
                limitType:
                  type: string
                allowedCharacterCount:
                  format: int32
                  type: integer
              type: object
            readingPosition:
              $ref: '#/components/schemas/ReadingPosition'
              description: The user's current reading position in the volume, if one is available. (In LITE projection.)
            updated:
              description: Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).
              type: string
            userUploadedVolumeInfo:
              type: object
              properties:
                processingState:
                  type: string
            isFamilySharedFromUser:
              type: boolean
              description: Whether or not the user shared this volume with the family.
            review:
              $ref: '#/components/schemas/Review'
              description: This user's review of this volume, if one exists.
            isPurchased:
              description: Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)
              type: boolean
            rentalState:
              description: Whether this book is an active or an expired rental.
              type: string
            isFamilySharedToUser:
              type: boolean
              description: Whether or not the user received this volume through family sharing.
            entitlementType:
              format: int32
              type: integer
              description: Whether this volume is purchased, sample, pd download etc.
            rentalPeriod:
              description: Period during this book is/was a valid rental.
              type: object
              properties:
                startUtcSec:
                  type: string
                  format: int64
                endUtcSec:
                  format: int64
                  type: string
            isFamilySharingAllowed:
              description: 'Deprecated: Replaced by familySharing.'
              type: boolean
            isInMyBooks:
              description: Whether or not this volume is currently in "my books."
              type: boolean
            acquisitionType:
              description: How this volume was acquired.
              type: integer
              format: int32
            isPreordered:
              type: boolean
              description: Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)
            isUploaded:
              type: boolean
              description: Whether or not this volume was user uploaded.
    Annotation:
      properties:
        kind:
          type: string
          description: Resource type.
        id:
          type: string
          description: Id of this annotation, in the form of a GUID.
        data:
          type: string
          description: User-created data for this annotation.
        pageIds:
          description: Pages that this annotation spans.
          items:
            type: string
          type: array
        afterSelectedText:
          description: Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
          type: string
        clientVersionRanges:
          properties:
            imageCfiRange:
              description: Range in image CFI format for this annotation sent by client.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            contentVersion:
              description: Content version the client sent in.
              type: string
            gbImageRange:
              description: Range in GB image format for this annotation sent by client.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            cfiRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in CFI format for this annotation sent by client.
            gbTextRange:
              description: Range in GB text format for this annotation sent by client.
              $ref: '#/components/schemas/BooksAnnotationsRange'
          description: Selection ranges sent from the client.
          type: object
        volumeId:
          type: string
          description: The volume that this annotation belongs to.
        currentVersionRanges:
          properties:
            gbTextRange:
              description: Range in GB text format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            contentVersion:
              description: Content version applicable to ranges below.
              type: string
            gbImageRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in GB image format for this annotation for version above.
            imageCfiRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in image CFI format for this annotation for version above.
            cfiRange:
              description: Range in CFI format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
          type: object
          description: Selection ranges for the most recent content version.
        deleted:
          description: Indicates that this annotation is deleted.
          type: boolean
        layerId:
          type: string
          description: The layer this annotation is for.
        highlightStyle:
          description: The highlight style for this annotation.
          type: string
        created:
          description: Timestamp for the created time of this annotation.
          type: string
        selfLink:
          description: URL to this resource.
          type: string
        beforeSelectedText:
          description: Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
          type: string
        updated:
          description: Timestamp for the last time this annotation was modified.
          type: string
        selectedText:
          type: string
          description: Excerpt from the volume.
        layerSummary:
          properties:
            limitType:
              type: string
              description: Type of limitation on this layer. "limited" or "unlimited" for the "copy" layer.
            allowedCharacterCount:
              type: integer
              format: int32
              description: Maximum allowed characters on this layer, especially for the "copy" layer.
            remainingCharacterCount:
              description: Remaining allowed characters on this layer, especially for the "copy" layer.
              format: int32
              type: integer
          type: object
      id: Annotation
      type: object
    Discoveryclusters:
      type: object
      properties:
        totalClusters:
          format: int32
          type: integer
        kind:
          description: Resorce type.
          type: string
        clusters:
          items:
            type: object
            properties:
              subTitle:
                type: string
              volumes:
                type: array
                items:
                  $ref: '#/components/schemas/Volume'
              uid:
                type: string
              title:
                type: string
              banner_with_content_container:
                properties:
                  maskColorArgb:
                    type: string
                  moreButtonText:
                    type: string
                  fillColorArgb:
                    type: string
                  imageUrl:
                    type: string
                  moreButtonUrl:
                    type: string
                  textColorArgb:
                    type: string
                type: object
              totalVolumes:
                type: integer
                format: int32
          type: array
      id: Discoveryclusters
    Volumeannotation:
      id: Volumeannotation
      properties:
        contentRanges:
          description: The content ranges to identify the selected text.
          properties:
            gbImageRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in GB image format for this annotation for version above.
            contentVersion:
              type: string
              description: Content version applicable to ranges below.
            gbTextRange:
              description: Range in GB text format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            cfiRange:
              description: Range in CFI format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
          type: object
        data:
          description: Data for this annotation.
          type: string
        annotationType:
          type: string
          description: The type of annotation this is.
        id:
          description: Unique id of this volume annotation.
          type: string
        deleted:
          description: Indicates that this annotation is deleted.
          type: boolean
        selfLink:
          type: string
          description: URL to this resource.
        selectedText:
          description: Excerpt from the volume.
          type: string
        updated:
          description: Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format).
          type: string
        annotationDataLink:
          description: Link to get data for this annotation.
          type: string
        layerId:
          description: The Layer this annotation is for.
          type: string
        pageIds:
          items:
            type: string
          description: Pages the annotation spans.
          type: array
        annotationDataId:
          type: string
          description: The annotation data id for this volume annotation.
        volumeId:
          description: The Volume this annotation is for.
          type: string
        kind:
          description: Resource Type
          type: string
      type: object
    ReadingPosition:
      id: ReadingPosition
      properties:
        updated:
          description: Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).
          type: string
        epubCfiPosition:
          description: Position in an EPUB as a CFI.
          type: string
        volumeId:
          description: Volume id associated with this reading position.
          type: string
        pdfPosition:
          description: Position in a PDF file.
          type: string
        kind:
          description: Resource type for a reading position.
          type: string
        gbImagePosition:
          type: string
          description: Position in a volume for image-based content.
        gbTextPosition:
          description: Position in a volume for text-based content.
          type: string
      type: object
    Seriesmembership:
      id: Seriesmembership
      properties:
        kind:
          description: Resorce type.
          type: string
        nextPageToken:
          type: string
        member:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
      type: object
    BooksAnnotationsRange:
      properties:
        endOffset:
          description: The offset from the ending position.
          type: string
        startPosition:
          description: The starting position for the range.
          type: string
        endPosition:
          description: The ending position for the range.
          type: string
        startOffset:
          description: The offset from the starting position.
          type: string
      id: BooksAnnotationsRange
      type: object
    Bookshelf:
      properties:
        description:
          type: string
          description: Description of this bookshelf.
        kind:
          description: Resource type for bookshelf metadata.
          type: string
        created:
          description: Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).
          type: string
        volumesLastUpdated:
          type: string
          description: Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).
        id:
          description: Id of this bookshelf, only unique by user.
          type: integer
          format: int32
        volumeCount:
          type: integer
          description: Number of volumes in this bookshelf.
          format: int32
        access:
          type: string
          description: Whether this bookshelf is PUBLIC or PRIVATE.
        selfLink:
          description: URL to this resource.
          type: string
        updated:
          type: string
          description: Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).
        title:
          description: Title of this bookshelf.
          type: string
      type: object
      id: Bookshelf
    Empty:
      type: object
      properties: {}
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    Annotationsdata:
      type: object
      properties:
        kind:
          type: string
          description: Resource type
        items:
          type: array
          items:
            $ref: '#/components/schemas/GeoAnnotationdata'
          description: A list of Annotation Data.
        totalItems:
          type: integer
          description: The total number of volume annotations found.
          format: int32
        nextPageToken:
          type: string
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
      id: Annotationsdata
    Series:
      id: Series
      properties:
        kind:
          type: string
          description: Resource type.
        series:
          type: array
          items:
            properties:
              imageUrl:
                type: string
              seriesFormatType:
                type: string
              title:
                type: string
              isComplete:
                type: boolean
              seriesSubscriptionReleaseInfo:
                properties:
                  seriesSubscriptionType:
                    type: string
                  nextReleaseInfo:
                    properties:
                      currencyCode:
                        type: string
                      amountInMicros:
                        format: double
                        type: number
                      releaseTime:
                        type: string
                      releaseNumber:
                        type: string
                    type: object
                  cancelTime:
                    type: string
                  currentReleaseInfo:
                    type: object
                    properties:
                      releaseTime:
                        type: string
                      amountInMicros:
                        type: number
                        format: double
                      currencyCode:
                        type: string
                      releaseNumber:
                        type: string
                type: object
              subscriptionId:
                type: string
              eligibleForSubscription:
                type: boolean
              bannerImageUrl:
                type: string
              seriesType:
                type: string
              seriesId:
                type: string
            type: object
      type: object
    GeoAnnotationdata:
      id: GeoAnnotationdata
      properties:
        selfLink:
          description: URL for this resource. *
          type: string
        volumeId:
          type: string
          description: The volume id for this data. *
        layerId:
          type: string
          description: The Layer id for this data. *
        annotationType:
          type: string
          description: The type of annotation this data is for.
        updated:
          type: string
          description: Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).
        kind:
          description: Resource Type
          type: string
        data:
          $ref: '#/components/schemas/Geolayerdata'
          description: JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.
        encodedData:
          format: byte
          type: string
          description: Base64 encoded data for this annotation data.
        id:
          description: Unique id for this annotation data.
          type: string
      type: object
    BooksCloudloadingResource:
      properties:
        author:
          type: string
        title:
          type: string
        processingState:
          type: string
        volumeId:
          type: string
      type: object
      id: BooksCloudloadingResource
    Offers:
      properties:
        kind:
          type: string
          description: Resource type.
        items:
          items:
            type: object
            properties:
              gservicesKey:
                type: string
              items:
                type: array
                items:
                  type: object
                  properties:
                    volumeId:
                      type: string
                    title:
                      type: string
                    author:
                      type: string
                    coverUrl:
                      type: string
                    canonicalVolumeLink:
                      type: string
                    description:
                      type: string
              id:
                type: string
              artUrl:
                type: string
          description: A list of offers.
          type: array
      id: Offers
      type: object
    ConcurrentAccessRestriction:
      type: object
      id: ConcurrentAccessRestriction
      properties:
        maxConcurrentDevices:
          description: The maximum number of concurrent access licenses for this volume.
          format: int32
          type: integer
        restricted:
          description: Whether this volume has any concurrent access restrictions.
          type: boolean
        source:
          description: Client app identifier for verification. Download access and client-validation only.
          type: string
        reasonCode:
          description: Error/warning reason code.
          type: string
        volumeId:
          type: string
          description: Identifies the volume for which this entry applies.
        deviceAllowed:
          type: boolean
          description: Whether access is granted for this (user, device, volume).
        kind:
          description: Resource type.
          type: string
        message:
          description: Error/warning message.
          type: string
        signature:
          description: Response signature.
          type: string
        nonce:
          description: Client nonce for verification. Download access and client-validation only.
          type: string
        timeWindowSeconds:
          description: Time in seconds for license auto-expiration.
          type: integer
          format: int32
    Category:
      properties:
        kind:
          description: Resource type.
          type: string
        items:
          items:
            properties:
              categoryId:
                type: string
              name:
                type: string
              badgeUrl:
                type: string
            type: object
          description: A list of onboarding categories.
          type: array
      id: Category
      type: object
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/books: Manage your books
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    readingpositions:
      id: googledevelopers.books.readingpositions
      name: readingpositions
      title: Readingpositions
      methods:
        mylibrary_readingpositions_setPosition:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1readingpositions~1{volumeId}~1setPosition/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_readingpositions_get:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1readingpositions~1{volumeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/readingpositions/methods/mylibrary_readingpositions_get'
        insert: []
        update: []
        delete: []
    annotations:
      id: googledevelopers.books.annotations
      name: annotations
      title: Annotations
      methods:
        mylibrary_annotations_summary:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations~1summary/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_annotations_delete:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations~1{annotationId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_annotations_update:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations~1{annotationId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_annotations_insert:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_annotations_list:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1annotations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/annotations/methods/mylibrary_annotations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/annotations/methods/mylibrary_annotations_delete'
    bookshelves:
      id: googledevelopers.books.bookshelves
      name: bookshelves
      title: Bookshelves
      methods:
        mylibrary_bookshelves_get:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_clearVolumes:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1clearVolumes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_moveVolume:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1moveVolume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_list:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1users~1{userId}~1bookshelves~1{shelf}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1books~1v1~1users~1{userId}~1bookshelves/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bookshelves/methods/get'
          - $ref: '#/components/x-stackQL-resources/bookshelves/methods/mylibrary_bookshelves_get'
          - $ref: '#/components/x-stackQL-resources/bookshelves/methods/list'
          - $ref: '#/components/x-stackQL-resources/bookshelves/methods/mylibrary_bookshelves_list'
        insert: []
        update: []
        delete: []
    bookshelves_volume:
      id: googledevelopers.books.bookshelves_volume
      name: bookshelves_volume
      title: Bookshelves_volume
      methods:
        mylibrary_bookshelves_removeVolume:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1removeVolume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mylibrary_bookshelves_addVolume:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1addVolume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    volumes:
      id: googledevelopers.books.volumes
      name: volumes
      title: Volumes
      methods:
        mylibrary_bookshelves_volumes_list:
          operation:
            $ref: '#/paths/~1books~1v1~1mylibrary~1bookshelves~1{shelf}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bookshelves_volumes_list:
          operation:
            $ref: '#/paths/~1books~1v1~1users~1{userId}~1bookshelves~1{shelf}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/bookshelves_volumes_list'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/mylibrary_bookshelves_volumes_list'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list'
        insert: []
        update: []
        delete: []
    series:
      id: googledevelopers.books.series
      name: series
      title: Series
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1series~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/series/methods/get'
        insert: []
        update: []
        delete: []
    membership:
      id: googledevelopers.books.membership
      name: membership
      title: Membership
      methods:
        series_membership_get:
          operation:
            $ref: '#/paths/~1books~1v1~1series~1membership~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/membership/methods/series_membership_get'
        insert: []
        update: []
        delete: []
    layers:
      id: googledevelopers.books.layers
      name: layers
      title: Layers
      methods:
        list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layersummary/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layersummary~1{summaryId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/layers/methods/get'
          - $ref: '#/components/x-stackQL-resources/layers/methods/list'
        insert: []
        update: []
        delete: []
    annotation_data:
      id: googledevelopers.books.annotation_data
      name: annotation_data
      title: Annotation_data
      methods:
        layers_annotationData_get:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layers~1{layerId}~1data~1{annotationDataId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        layers_annotationData_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layers~1{layerId}~1data/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/annotation_data/methods/layers_annotationData_get'
          - $ref: '#/components/x-stackQL-resources/annotation_data/methods/layers_annotationData_list'
        insert: []
        update: []
        delete: []
    volume_annotations:
      id: googledevelopers.books.volume_annotations
      name: volume_annotations
      title: Volume_annotations
      methods:
        layers_volumeAnnotations_get:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layers~1{layerId}~1annotations~1{annotationId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        layers_volumeAnnotations_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1layers~1{layerId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_annotations/methods/layers_volumeAnnotations_get'
          - $ref: '#/components/x-stackQL-resources/volume_annotations/methods/layers_volumeAnnotations_list'
        insert: []
        update: []
        delete: []
    onboarding_categories:
      id: googledevelopers.books.onboarding_categories
      name: onboarding_categories
      title: Onboarding_categories
      methods:
        onboarding_listCategories:
          operation:
            $ref: '#/paths/~1books~1v1~1onboarding~1listCategories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    onboarding_category_volumes:
      id: googledevelopers.books.onboarding_category_volumes
      name: onboarding_category_volumes
      title: Onboarding_category_volumes
      methods:
        onboarding_listCategoryVolumes:
          operation:
            $ref: '#/paths/~1books~1v1~1onboarding~1listCategoryVolumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    promooffer:
      id: googledevelopers.books.promooffer
      name: promooffer
      title: Promooffer
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1promooffer~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dismiss:
          operation:
            $ref: '#/paths/~1books~1v1~1promooffer~1dismiss/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accept:
          operation:
            $ref: '#/paths/~1books~1v1~1promooffer~1accept/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/promooffer/methods/get'
        insert: []
        update: []
        delete: []
    dictionary_offline_metadata:
      id: googledevelopers.books.dictionary_offline_metadata
      name: dictionary_offline_metadata
      title: Dictionary_offline_metadata
      methods:
        dictionary_listOfflineMetadata:
          operation:
            $ref: '#/paths/~1books~1v1~1dictionary~1listOfflineMetadata/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    familysharing:
      id: googledevelopers.books.familysharing
      name: familysharing
      title: Familysharing
      methods:
        unshare:
          operation:
            $ref: '#/paths/~1books~1v1~1familysharing~1unshare/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        share:
          operation:
            $ref: '#/paths/~1books~1v1~1familysharing~1share/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    familysharing_family_info:
      id: googledevelopers.books.familysharing_family_info
      name: familysharing_family_info
      title: Familysharing_family_info
      methods:
        familysharing_getFamilyInfo:
          operation:
            $ref: '#/paths/~1books~1v1~1familysharing~1getFamilyInfo/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/familysharing_family_info/methods/familysharing_getFamilyInfo'
        insert: []
        update: []
        delete: []
    myconfig:
      id: googledevelopers.books.myconfig
      name: myconfig
      title: Myconfig
      methods:
        updateUserSettings:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1updateUserSettings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        requestAccess:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1requestAccess/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        releaseDownloadAccess:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1releaseDownloadAccess/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        syncVolumeLicenses:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1syncVolumeLicenses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    myconfig_user_settings:
      id: googledevelopers.books.myconfig_user_settings
      name: myconfig_user_settings
      title: Myconfig_user_settings
      methods:
        myconfig_getUserSettings:
          operation:
            $ref: '#/paths/~1books~1v1~1myconfig~1getUserSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/myconfig_user_settings/methods/myconfig_getUserSettings'
        insert: []
        update: []
        delete: []
    notification:
      id: googledevelopers.books.notification
      name: notification
      title: Notification
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1notification~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification/methods/get'
        insert: []
        update: []
        delete: []
    mybooks:
      id: googledevelopers.books.mybooks
      name: mybooks
      title: Mybooks
      methods:
        volumes_mybooks_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1mybooks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mybooks/methods/volumes_mybooks_list'
        insert: []
        update: []
        delete: []
    useruploaded:
      id: googledevelopers.books.useruploaded
      name: useruploaded
      title: Useruploaded
      methods:
        volumes_useruploaded_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1useruploaded/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/useruploaded/methods/volumes_useruploaded_list'
        insert: []
        update: []
        delete: []
    recommended:
      id: googledevelopers.books.recommended
      name: recommended
      title: Recommended
      methods:
        volumes_recommended_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1recommended/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        volumes_recommended_rate:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1recommended~1rate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recommended/methods/volumes_recommended_list'
        insert: []
        update: []
        delete: []
    associated:
      id: googledevelopers.books.associated
      name: associated
      title: Associated
      methods:
        volumes_associated_list:
          operation:
            $ref: '#/paths/~1books~1v1~1volumes~1{volumeId}~1associated/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/associated/methods/volumes_associated_list'
        insert: []
        update: []
        delete: []
    personalizedstream:
      id: googledevelopers.books.personalizedstream
      name: personalizedstream
      title: Personalizedstream
      methods:
        get:
          operation:
            $ref: '#/paths/~1books~1v1~1personalizedstream~1get/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/personalizedstream/methods/get'
        insert: []
        update: []
        delete: []
    cloudloading_book:
      id: googledevelopers.books.cloudloading_book
      name: cloudloading_book
      title: Cloudloading_book
      methods:
        cloudloading_deleteBook:
          operation:
            $ref: '#/paths/~1books~1v1~1cloudloading~1deleteBook/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloudloading_addBook:
          operation:
            $ref: '#/paths/~1books~1v1~1cloudloading~1addBook/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    cloudloading:
      id: googledevelopers.books.cloudloading
      name: cloudloading
      title: Cloudloading
      methods:
        updateBook:
          operation:
            $ref: '#/paths/~1books~1v1~1cloudloading~1updateBook/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /books/v1/mylibrary/readingpositions/{volumeId}/setPosition:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
    post:
      description: Sets my reading position information for a volume.
      operationId: books.mylibrary.readingpositions.setPosition
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: position
          required: true
          schema:
            type: string
        - in: query
          name: timestamp
          required: true
          schema:
            type: string
        - in: query
          name: deviceCookie
          schema:
            type: string
        - in: query
          name: action
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: readingpositions
      x-stackQL-verb: exec
  /books/v1/mylibrary/readingpositions/{volumeId}:
    parameters: *ref_1
    get:
      description: Retrieves my reading position information for a volume.
      operationId: books.mylibrary.readingpositions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadingPosition'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
      x-stackQL-resource: readingpositions
      x-stackQL-verb: select
  /books/v1/mylibrary/annotations/summary:
    parameters: *ref_1
    post:
      description: Gets the summary of specified layers.
      operationId: books.mylibrary.annotations.summary
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationsSummary'
      parameters:
        - in: query
          name: layerIds
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: exec
  /books/v1/mylibrary/annotations/{annotationId}:
    parameters: *ref_1
    delete:
      description: Deletes an annotation.
      operationId: books.mylibrary.annotations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: delete
    put:
      description: Updates an existing annotation.
      operationId: books.mylibrary.annotations.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
      parameters:
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: exec
  /books/v1/mylibrary/annotations:
    parameters: *ref_1
    post:
      description: Inserts a new annotation.
      operationId: books.mylibrary.annotations.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
      parameters:
        - in: query
          name: showOnlySummaryInResponse
          schema:
            type: boolean
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: annotationId
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of annotations, possibly filtered.
      operationId: books.mylibrary.annotations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotations'
      parameters:
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: layerId
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: layerIds
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: annotations
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}:
    parameters: *ref_1
    get:
      description: Retrieves metadata for a specific bookshelf belonging to the authenticated user.
      operationId: books.mylibrary.bookshelves.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelf'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}/removeVolume:
    parameters: *ref_1
    post:
      description: Removes a volume from a bookshelf.
      operationId: books.mylibrary.bookshelves.removeVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: reason
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves_volume
      x-stackQL-verb: delete
  /books/v1/mylibrary/bookshelves/{shelf}/clearVolumes:
    parameters: *ref_1
    post:
      description: Clears all volumes from a bookshelf.
      operationId: books.mylibrary.bookshelves.clearVolumes
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: exec
  /books/v1/mylibrary/bookshelves/{shelf}/moveVolume:
    parameters: *ref_1
    post:
      description: Moves a volume within a bookshelf.
      operationId: books.mylibrary.bookshelves.moveVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: volumePosition
          required: true
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: exec
  /books/v1/mylibrary/bookshelves/{shelf}/addVolume:
    parameters: *ref_1
    post:
      description: Adds a volume to a bookshelf.
      operationId: books.mylibrary.bookshelves.addVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: reason
          schema:
            type: string
      x-stackQL-resource: bookshelves_volume
      x-stackQL-verb: insert
  /books/v1/mylibrary/bookshelves:
    parameters: *ref_1
    get:
      description: Retrieves a list of bookshelves belonging to the authenticated user.
      operationId: books.mylibrary.bookshelves.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelves'
      parameters:
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}/volumes:
    parameters: *ref_1
    get:
      description: Gets volume information for volumes on a bookshelf.
      operationId: books.mylibrary.bookshelves.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/series/get:
    parameters: *ref_1
    get:
      description: Returns Series metadata for the given series ids.
      operationId: books.series.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
      parameters:
        - in: query
          name: series_id
          required: true
          schema:
            type: string
      x-stackQL-resource: series
      x-stackQL-verb: select
  /books/v1/series/membership/get:
    parameters: *ref_1
    get:
      description: Returns Series membership data given the series id.
      operationId: books.series.membership.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seriesmembership'
      parameters:
        - in: query
          name: series_id
          required: true
          schema:
            type: string
        - in: query
          name: page_size
          schema:
            type: integer
        - in: query
          name: page_token
          schema:
            type: string
      x-stackQL-resource: membership
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layersummary:
    parameters: *ref_1
    get:
      description: List the layer summaries for a volume.
      operationId: books.layers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layersummaries'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: layers
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layersummary/{summaryId}:
    parameters: *ref_1
    get:
      description: Gets the layer summary for a volume.
      operationId: books.layers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layersummary'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: summaryId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: layers
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}:
    parameters: *ref_1
    get:
      description: Gets the annotation data.
      operationId: books.layers.annotationData.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryAnnotationdata'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: path
          name: annotationDataId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: allowWebDefinitions
          schema:
            type: boolean
        - in: query
          name: scale
          schema:
            type: integer
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: w
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: h
          schema:
            type: integer
      x-stackQL-resource: annotation_data
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}/data:
    parameters: *ref_1
    get:
      description: Gets the annotation data for a volume and layer.
      operationId: books.layers.annotationData.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotationsdata'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: h
          schema:
            type: integer
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: annotationDataId
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: scale
          schema:
            type: integer
        - in: query
          name: w
          schema:
            type: integer
      x-stackQL-resource: annotation_data
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}:
    parameters: *ref_1
    get:
      description: Gets the volume annotation.
      operationId: books.layers.volumeAnnotations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumeannotation'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: volume_annotations
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}:
    parameters: *ref_1
    get:
      description: Gets the volume annotations for a volume and layer.
      operationId: books.layers.volumeAnnotations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumeannotations'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: startPosition
          schema:
            type: string
        - in: query
          name: endOffset
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: endPosition
          schema:
            type: string
        - in: query
          name: volumeAnnotationsVersion
          schema:
            type: string
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: startOffset
          schema:
            type: string
      x-stackQL-resource: volume_annotations
      x-stackQL-verb: select
  /books/v1/onboarding/listCategories:
    parameters: *ref_1
    get:
      description: List categories for onboarding experience.
      operationId: books.onboarding.listCategories
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      parameters:
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: onboarding_categories
      x-stackQL-verb: select
  /books/v1/onboarding/listCategoryVolumes:
    parameters: *ref_1
    get:
      description: List available volumes under categories for onboarding experience.
      operationId: books.onboarding.listCategoryVolumes
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume2'
      parameters:
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: categoryId
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: onboarding_category_volumes
      x-stackQL-verb: select
  /books/v1/promooffer/get:
    parameters: *ref_1
    get:
      description: Returns a list of promo offers available to the user
      operationId: books.promooffer.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offers'
      parameters:
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: device
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: manufacturer
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: select
  /books/v1/promooffer/dismiss:
    parameters: *ref_1
    post:
      description: Marks the promo offer as dismissed.
      operationId: books.promooffer.dismiss
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: manufacturer
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: device
          schema:
            type: string
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: offerId
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: exec
  /books/v1/promooffer/accept:
    parameters: *ref_1
    post:
      description: Accepts the promo offer.
      operationId: books.promooffer.accept
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: device
          schema:
            type: string
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: offerId
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: manufacturer
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: exec
  /books/v1/users/{userId}/bookshelves/{shelf}/volumes:
    parameters: *ref_1
    get:
      description: Retrieves volumes in a specific bookshelf for the specified user.
      operationId: books.bookshelves.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/users/{userId}/bookshelves/{shelf}:
    parameters: *ref_1
    get:
      description: Retrieves metadata for a specific bookshelf for the specified user.
      operationId: books.bookshelves.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelf'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/users/{userId}/bookshelves:
    parameters: *ref_1
    get:
      description: Retrieves a list of public bookshelves for the specified user.
      operationId: books.bookshelves.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelves'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/dictionary/listOfflineMetadata:
    parameters: *ref_1
    get:
      description: Returns a list of offline dictionary metadata available
      operationId: books.dictionary.listOfflineMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
      x-stackQL-resource: dictionary_offline_metadata
      x-stackQL-verb: select
  /books/v1/familysharing/unshare:
    parameters: *ref_1
    post:
      description: Initiates revoking content that has already been shared with the user's family. Empty response indicates success.
      operationId: books.familysharing.unshare
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: docId
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: familysharing
      x-stackQL-verb: exec
  /books/v1/familysharing/getFamilyInfo:
    parameters: *ref_1
    get:
      description: Gets information regarding the family that the user is part of.
      operationId: books.familysharing.getFamilyInfo
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyInfo'
      parameters:
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: familysharing_family_info
      x-stackQL-verb: select
  /books/v1/familysharing/share:
    parameters: *ref_1
    post:
      description: Initiates sharing of the content with the user's family. Empty response indicates success.
      operationId: books.familysharing.share
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: docId
          schema:
            type: string
      x-stackQL-resource: familysharing
      x-stackQL-verb: exec
  /books/v1/myconfig/updateUserSettings:
    parameters: *ref_1
    post:
      description: Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.
      operationId: books.myconfig.updateUserSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usersettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usersettings'
      parameters: []
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/getUserSettings:
    parameters: *ref_1
    get:
      description: Gets the current settings for the user.
      operationId: books.myconfig.getUserSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usersettings'
      parameters:
        - in: query
          name: country
          schema:
            type: string
      x-stackQL-resource: myconfig_user_settings
      x-stackQL-verb: select
  /books/v1/myconfig/requestAccess:
    parameters: *ref_1
    post:
      description: Request concurrent and download access restrictions.
      operationId: books.myconfig.requestAccess
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestAccessData'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: string
        - in: query
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: licenseTypes
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/releaseDownloadAccess:
    parameters: *ref_1
    post:
      description: Release downloaded content access restriction.
      operationId: books.myconfig.releaseDownloadAccess
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccesses'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: volumeIds
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/syncVolumeLicenses:
    parameters: *ref_1
    post:
      description: Request downloaded content access for specified volumes on the My eBooks shelf.
      operationId: books.myconfig.syncVolumeLicenses
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: string
        - in: query
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: features
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: includeNonComicsSeries
          schema:
            type: boolean
        - in: query
          name: volumeIds
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/notification/get:
    parameters: *ref_1
    get:
      description: Returns notification details for a given notification id.
      operationId: books.notification.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      parameters:
        - in: query
          name: notification_id
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: notification
      x-stackQL-verb: select
  /books/v1/volumes/mybooks:
    parameters: *ref_1
    get:
      description: Return a list of books in My Library.
      operationId: books.volumes.mybooks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: acquireMethod
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: processingState
          schema:
            type: string
      x-stackQL-resource: mybooks
      x-stackQL-verb: select
  /books/v1/volumes/useruploaded:
    parameters: *ref_1
    get:
      description: Return a list of books uploaded by the current user.
      operationId: books.volumes.useruploaded.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: processingState
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: useruploaded
      x-stackQL-verb: select
  /books/v1/volumes/recommended:
    parameters: *ref_1
    get:
      description: Return a list of recommended books for the current user.
      operationId: books.volumes.recommended.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: recommended
      x-stackQL-verb: select
  /books/v1/volumes/recommended/rate:
    parameters: *ref_1
    post:
      description: Rate a recommended book for the current user.
      operationId: books.volumes.recommended.rate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksVolumesRecommendedRateResponse'
      parameters:
        - in: query
          name: rating
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: recommended
      x-stackQL-verb: exec
  /books/v1/volumes/{volumeId}/associated:
    parameters: *ref_1
    get:
      description: Return a list of associated books.
      operationId: books.volumes.associated.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: association
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: associated
      x-stackQL-verb: select
  /books/v1/volumes:
    parameters: *ref_1
    get:
      description: Performs a book search.
      operationId: books.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
        - in: query
          name: langRestrict
          schema:
            type: string
        - in: query
          name: download
          schema:
            type: string
        - in: query
          name: libraryRestrict
          schema:
            type: string
        - in: query
          name: printType
          schema:
            type: string
        - in: query
          name: partner
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}:
    parameters: *ref_1
    get:
      description: Gets volume information for a single volume.
      operationId: books.volumes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: user_library_consistent_read
          schema:
            type: boolean
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: includeNonComicsSeries
          schema:
            type: boolean
        - in: query
          name: partner
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/personalizedstream/get:
    parameters: *ref_1
    get:
      description: Returns a stream of personalized book clusters
      operationId: books.personalizedstream.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discoveryclusters'
      parameters:
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: personalizedstream
      x-stackQL-verb: select
  /books/v1/cloudloading/deleteBook:
    parameters: *ref_1
    post:
      description: Remove the book and its contents
      operationId: books.cloudloading.deleteBook
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
      x-stackQL-resource: cloudloading_book
      x-stackQL-verb: delete
  /books/v1/cloudloading/addBook:
    parameters: *ref_1
    post:
      description: Add a user-upload volume and triggers processing.
      operationId: books.cloudloading.addBook
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksCloudloadingResource'
      parameters:
        - in: query
          name: upload_client_token
          schema:
            type: string
        - in: query
          name: drive_document_id
          schema:
            type: string
        - in: query
          name: mime_type
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: cloudloading_book
      x-stackQL-verb: insert
  /books/v1/cloudloading/updateBook:
    parameters: *ref_1
    post:
      description: Updates a user-upload volume.
      operationId: books.cloudloading.updateBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooksCloudloadingResource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksCloudloadingResource'
      parameters: []
      x-stackQL-resource: cloudloading
      x-stackQL-verb: exec
