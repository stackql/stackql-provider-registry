openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Fitness API
  description: The Fitness API for managing users' fitness tracking data.
  version: v1
  x-discovery-doc-revision: '20230116'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/fit/rest/v1/get-started
servers:
  - url: https://fitness.googleapis.com/fitness/v1/users
components:
  schemas:
    DataType:
      id: DataType
      properties:
        name:
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          description: Each data type has a unique, namespaced, name. All data types in the com.google namespace are shared as part of the platform.
          type: string
        field:
          description: A field represents one dimension of a data type.
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          type: array
          items:
            $ref: '#/components/schemas/DataTypeField'
      type: object
    ListDataSourcesResponse:
      id: ListDataSourcesResponse
      type: object
      properties:
        dataSource:
          type: array
          items:
            $ref: '#/components/schemas/DataSource'
          description: A previously created data source.
    ValueMapValEntry:
      properties:
        value:
          $ref: '#/components/schemas/MapValue'
        key:
          type: string
      id: ValueMapValEntry
      type: object
    ListDataPointChangesResponse:
      properties:
        deletedDataPoint:
          type: array
          items:
            $ref: '#/components/schemas/DataPoint'
          description: Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.
        insertedDataPoint:
          description: Inserted data points for the user.
          items:
            $ref: '#/components/schemas/DataPoint'
          type: array
        nextPageToken:
          type: string
          description: The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
        dataSourceId:
          description: The data stream ID of the data source with data point changes.
          type: string
      id: ListDataPointChangesResponse
      type: object
    AggregateBucket:
      properties:
        dataset:
          description: There will be one dataset per AggregateBy in the request.
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
        startTimeMillis:
          type: string
          description: The start time for the aggregated data, in milliseconds since epoch, inclusive.
          format: int64
        endTimeMillis:
          description: The end time for the aggregated data, in milliseconds since epoch, inclusive.
          type: string
          format: int64
        session:
          description: Available for Bucket.Type.SESSION
          $ref: '#/components/schemas/Session'
        activity:
          format: int32
          description: Available for Bucket.Type.ACTIVITY_TYPE, Bucket.Type.ACTIVITY_SEGMENT
          type: integer
        type:
          enum:
            - unknown
            - time
            - session
            - activityType
            - activitySegment
          enumDescriptions:
            - ''
            - Denotes that bucketing by time is requested. When this is specified, the timeBucketDurationMillis field is used to determine how many buckets will be returned.
            - Denotes that bucketing by session is requested. When this is specified, only data that occurs within sessions that begin and end within the dataset time frame, is included in the results.
            - Denotes that bucketing by activity type is requested. When this is specified, there will be one bucket for each unique activity type that a user participated in, during the dataset time frame of interest.
            - Denotes that bucketing by individual activity segment is requested. This will aggregate data by the time boundaries specified by each activity segment occurring within the dataset time frame of interest.
          type: string
          description: The type of a bucket signifies how the data aggregation is performed in the bucket.
      id: AggregateBucket
      type: object
    BucketBySession:
      id: BucketBySession
      type: object
      properties:
        minDurationMillis:
          description: Specifies that only sessions of duration longer than minDurationMillis are considered and used as a container for aggregated data.
          format: int64
          type: string
    DataTypeField:
      id: DataTypeField
      description: In case of multi-dimensional data (such as an accelerometer with x, y, and z axes) each field represents one dimension. Each data type field has a unique name which identifies it. The field also defines the format of the data (int, float, etc.). This message is only instantiated in code and not used for wire comms or stored in any way.
      type: object
      properties:
        format:
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          enum:
            - integer
            - floatPoint
            - string
            - map
            - integerList
            - floatList
            - blob
          description: The different supported formats for each field in a data type.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
        optional:
          type: boolean
        name:
          type: string
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          description: Defines the name and format of data. Unlike data type names, field names are not namespaced, and only need to be unique within the data type.
    Value:
      type: object
      properties:
        fpVal:
          format: double
          type: number
          description: Floating point value. When this is set, other values must not be set.
        intVal:
          description: Integer value. When this is set, other values must not be set.
          type: integer
          format: int32
        mapVal:
          items:
            $ref: '#/components/schemas/ValueMapValEntry'
          type: array
          description: Map value. The valid key space and units for the corresponding value of each entry should be documented as part of the data type definition. Keys should be kept small whenever possible. Data streams with large keys and high data frequency may be down sampled.
        stringVal:
          description: String value. When this is set, other values must not be set. Strings should be kept small whenever possible. Data streams with large string values and high data frequency may be down sampled.
          type: string
      id: Value
      description: Holder object for the value of a single field in a data point. A field value has a particular format and is only ever set to one of an integer or a floating point value.
    BucketByActivity:
      id: BucketByActivity
      type: object
      properties:
        activityDataSourceId:
          type: string
          description: The default activity stream will be used if a specific activityDataSourceId is not specified.
        minDurationMillis:
          type: string
          format: int64
          description: Specifies that only activity segments of duration longer than minDurationMillis are considered and used as a container for aggregated data.
    BucketByTime:
      type: object
      id: BucketByTime
      properties:
        durationMillis:
          type: string
          description: Specifies that result buckets aggregate data by exactly durationMillis time frames. Time frames that contain no data will be included in the response with an empty dataset.
          format: int64
        period:
          $ref: '#/components/schemas/BucketByTimePeriod'
    BucketByTimePeriod:
      id: BucketByTimePeriod
      properties:
        value:
          type: integer
          format: int32
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          enum:
            - day
            - week
            - month
        timeZoneId:
          description: org.joda.timezone.DateTimeZone
          type: string
      type: object
    AggregateRequest:
      properties:
        bucketByTime:
          $ref: '#/components/schemas/BucketByTime'
          description: Specifies that data be aggregated by a single time interval. Mutually exclusive of other bucketing specifications.
        startTimeMillis:
          annotations:
            required:
              - fitness.users.dataset.aggregate
          description: The start of a window of time. Data that intersects with this time window will be aggregated. The time is in milliseconds since epoch, inclusive.
          type: string
          format: int64
        bucketBySession:
          $ref: '#/components/schemas/BucketBySession'
          description: Specifies that data be aggregated by user sessions. Data that does not fall within the time range of a session will not be included in the response. Mutually exclusive of other bucketing specifications.
        aggregateBy:
          description: The specification of data to be aggregated. At least one aggregateBy spec must be provided. All data that is specified will be aggregated using the same bucketing criteria. There will be one dataset in the response for every aggregateBy spec.
          type: array
          annotations:
            required:
              - fitness.users.dataset.aggregate
          items:
            $ref: '#/components/schemas/AggregateBy'
        filteredDataQualityStandard:
          items:
            enum:
              - dataQualityUnknown
              - dataQualityBloodPressureEsh2002
              - dataQualityBloodPressureEsh2010
              - dataQualityBloodPressureAami
              - dataQualityBloodPressureBhsAA
              - dataQualityBloodPressureBhsAB
              - dataQualityBloodPressureBhsBA
              - dataQualityBloodPressureBhsBB
              - dataQualityBloodGlucoseIso151972003
              - dataQualityBloodGlucoseIso151972013
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            type: string
          type: array
          description: DO NOT POPULATE THIS FIELD. It is ignored.
        endTimeMillis:
          description: The end of a window of time. Data that intersects with this time window will be aggregated. The time is in milliseconds since epoch, inclusive. The maximum allowed difference between start_time_millis // and end_time_millis is 7776000000 (roughly 90 days).
          format: int64
          type: string
          annotations:
            required:
              - fitness.users.dataset.aggregate
        bucketByActivitySegment:
          description: Specifies that data be aggregated each activity segment recorded for a user. Similar to bucketByActivitySegment, but bucketing is done for each activity segment rather than all segments of the same type. Mutually exclusive of other bucketing specifications.
          $ref: '#/components/schemas/BucketByActivity'
        bucketByActivityType:
          $ref: '#/components/schemas/BucketByActivity'
          description: Specifies that data be aggregated by the type of activity being performed when the data was recorded. All data that was recorded during a certain activity type (.for the given time range) will be aggregated into the same bucket. Data that was recorded while the user was not active will not be included in the response. Mutually exclusive of other bucketing specifications.
      description: 'Next id: 10'
      id: AggregateRequest
      type: object
    AggregateBy:
      description: The specification of which data to aggregate.
      properties:
        dataSourceId:
          type: string
          description: 'A data source ID to aggregate. Only data from the specified data source ID will be included in the aggregation. If specified, this data source must exist; the OAuth scopes in the supplied credentials must grant read access to this data type. The dataset in the response will have the same data source ID. Note: Data can be aggregated by either the dataTypeName or the dataSourceId, not both.'
        dataTypeName:
          type: string
          description: 'The data type to aggregate. All data sources providing this data type will contribute data to the aggregation. The response will contain a single dataset for this data type name. The dataset will have a data source ID of derived::com.google.android.gms:aggregated. If the user has no data for this data type, an empty data set will be returned. Note: Data can be aggregated by either the dataTypeName or the dataSourceId, not both.'
      id: AggregateBy
      type: object
    DataSource:
      type: object
      properties:
        dataStreamId:
          description: 'A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device''s manufacturer, model, and serial number (UID). - The application''s package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source''s type. - The data source''s stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn''t used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they''re not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.'
          type: string
          annotations:
            required:
              - fitness.users.dataSources.update
        name:
          description: An end-user visible name for this data source.
          type: string
        device:
          $ref: '#/components/schemas/Device'
          description: Representation of an integrated device (such as a phone or a wearable) that can hold sensors.
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
        type:
          description: A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.
          enum:
            - raw
            - derived
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          type: string
          enumDescriptions:
            - ''
            - ''
        application:
          description: Information about an application which feeds sensor data into the platform.
          $ref: '#/components/schemas/Application'
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
        dataStreamName:
          type: string
          description: The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.
        dataQualityStandard:
          items:
            enum:
              - dataQualityUnknown
              - dataQualityBloodPressureEsh2002
              - dataQualityBloodPressureEsh2010
              - dataQualityBloodPressureAami
              - dataQualityBloodPressureBhsAA
              - dataQualityBloodPressureBhsAB
              - dataQualityBloodPressureBhsBA
              - dataQualityBloodPressureBhsBB
              - dataQualityBloodGlucoseIso151972003
              - dataQualityBloodGlucoseIso151972013
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
          type: array
          description: DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.
        dataType:
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          $ref: '#/components/schemas/DataType'
          description: The data type defines the schema for a stream of data being collected by, inserted into, or queried from the Fitness API.
      id: DataSource
      description: Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.
    ListSessionsResponse:
      properties:
        hasMoreData:
          type: boolean
          description: Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.
        session:
          description: Sessions with an end time that is between startTime and endTime of the request.
          type: array
          items:
            $ref: '#/components/schemas/Session'
        nextPageToken:
          description: The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.
          type: string
        deletedSession:
          type: array
          items:
            $ref: '#/components/schemas/Session'
          description: If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.
      id: ListSessionsResponse
      type: object
    Device:
      description: 'Representation of an integrated device (such as a phone or a wearable) that can hold sensors. Each sensor is exposed as a data source. The main purpose of the device information contained in this class is to identify the hardware of a particular data source. This can be useful in different ways, including: - Distinguishing two similar sensors on different devices (the step counter on two nexus 5 phones, for instance) - Display the source of data to the user (by using the device make / model) - Treat data differently depending on sensor type (accelerometers on a watch may give different patterns than those on a phone) - Build different analysis models for each device/version. '
      type: object
      properties:
        type:
          description: A constant representing the type of the device.
          enumDescriptions:
            - Device type is not known.
            - An Android phone.
            - An Android tablet.
            - A watch or other wrist-mounted band.
            - A chest strap.
            - A scale.
            - Glass or other head-mounted device.
            - A smart display e.g. Nest device.
          type: string
          enum:
            - unknown
            - phone
            - tablet
            - watch
            - chestStrap
            - scale
            - headMounted
            - smartDisplay
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
        version:
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          description: Version string for the device hardware/software.
          type: string
        uid:
          description: The serial number or other unique ID for the hardware. This field is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the uid field in clear and normal form. The obfuscation preserves equality; that is, given two IDs, if id1 == id2, obfuscated(id1) == obfuscated(id2).
          type: string
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
        model:
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          description: End-user visible model name for the device.
          type: string
        manufacturer:
          description: Manufacturer of the product/hardware.
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
          type: string
      id: Device
    AggregateResponse:
      properties:
        bucket:
          description: A list of buckets containing the aggregated data.
          type: array
          items:
            $ref: '#/components/schemas/AggregateBucket'
      type: object
      id: AggregateResponse
    MapValue:
      id: MapValue
      type: object
      description: Holder object for the value of an entry in a map field of a data point. A map value supports a subset of the formats that the regular Value supports.
      properties:
        fpVal:
          type: number
          format: double
          description: Floating point value.
    Session:
      id: Session
      type: object
      properties:
        modifiedTimeMillis:
          description: A timestamp that indicates when the session was last modified.
          type: string
          format: int64
        activityType:
          description: The type of activity this session represents.
          format: int32
          annotations:
            required:
              - fitness.users.sessions.update
          type: integer
        activeTimeMillis:
          description: Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value
          format: int64
          type: string
        startTimeMillis:
          description: A start time, in milliseconds since epoch, inclusive.
          format: int64
          annotations:
            required:
              - fitness.users.sessions.update
          type: string
        endTimeMillis:
          format: int64
          annotations:
            required:
              - fitness.users.sessions.update
          description: An end time, in milliseconds since epoch, inclusive.
          type: string
        id:
          annotations:
            required:
              - fitness.users.sessions.update
          type: string
          description: A client-generated identifier that is unique across all sessions owned by this particular user.
        application:
          description: The application that created the session.
          $ref: '#/components/schemas/Application'
          annotations:
            required:
              - fitness.users.sessions.update
        name:
          annotations:
            required:
              - fitness.users.sessions.update
          description: A human readable name of the session.
          type: string
        description:
          type: string
          description: A description for this session.
      description: Sessions contain metadata, such as a user-friendly name and time interval information.
    Application:
      id: Application
      properties:
        detailsUrl:
          description: An optional URI that can be used to link back to the application.
          type: string
        packageName:
          description: Package name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.
          type: string
        version:
          type: string
          description: Version of the application. You should update this field whenever the application changes in a way that affects the computation of the data.
        name:
          type: string
          description: The name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.
          annotations:
            required:
              - fitness.users.dataSources.create
              - fitness.users.dataSources.update
              - fitness.users.sessions.update
      type: object
    Dataset:
      type: object
      properties:
        nextPageToken:
          description: This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.
          type: string
        dataSourceId:
          description: The data stream ID of the data source that created the points in this dataset.
          type: string
          annotations:
            required:
              - fitness.users.dataSources.datasets.patch
        maxEndTimeNs:
          description: The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.
          type: string
          annotations:
            required:
              - fitness.users.dataSources.datasets.patch
          format: int64
        point:
          type: array
          items:
            $ref: '#/components/schemas/DataPoint'
          description: A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.
          annotations:
            required:
              - fitness.users.dataSources.datasets.patch
        minStartTimeNs:
          description: The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.
          type: string
          annotations:
            required:
              - fitness.users.dataSources.datasets.patch
          format: int64
      description: A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.
      id: Dataset
    DataPoint:
      description: Represents a single data point, generated by a particular data source. A data point holds a value for each field, an end timestamp and an optional start time. The exact semantics of each of these attributes are specified in the documentation for the particular data type. A data point can represent an instantaneous measurement, reading or input observation, as well as averages or aggregates over a time interval. Check the data type documentation to determine which is the case for a particular data type. Data points always contain one value for each field of the data type.
      properties:
        value:
          description: Values of each data type field for the data point. It is expected that each value corresponding to a data type field will occur in the same order that the field is listed with in the data type specified in a data source. Only one of integer and floating point fields will be populated, depending on the format enum value within data source's type field.
          annotations:
            required:
              - fitness.users.dataSources.datasets.patch
          type: array
          items:
            $ref: '#/components/schemas/Value'
        originDataSourceId:
          description: 'If the data point is contained in a dataset for a derived data source, this field will be populated with the data source stream ID that created the data point originally. WARNING: do not rely on this field for anything other than debugging. The value of this field, if it is set at all, is an implementation detail and is not guaranteed to remain consistent.'
          type: string
        startTimeNanos:
          format: int64
          description: The start time of the interval represented by this data point, in nanoseconds since epoch.
          annotations:
            required:
              - fitness.users.dataSources.datasets.patch
          type: string
        computationTimeMillis:
          format: int64
          type: string
          description: DO NOT USE THIS FIELD. It is ignored, and not stored.
        endTimeNanos:
          type: string
          description: The end time of the interval represented by this data point, in nanoseconds since epoch.
          format: int64
          annotations:
            required:
              - fitness.users.dataSources.datasets.patch
        rawTimestampNanos:
          description: The raw timestamp from the original SensorEvent.
          format: int64
          type: string
        dataTypeName:
          description: The data type defining the format of the values in this data point.
          annotations:
            required:
              - fitness.users.dataSources.datasets.patch
          type: string
        modifiedTimeMillis:
          format: int64
          type: string
          description: Indicates the last time this data point was modified. Useful only in contexts where we are listing the data changes, rather than representing the current state of the data.
      id: DataPoint
      type: object
  parameters:
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/fitness.body.read: See info about your body measurements in Google Fit
            https://www.googleapis.com/auth/fitness.activity.read: Use Google Fit to see and store your physical activity data
            https://www.googleapis.com/auth/fitness.reproductive_health.write: Add info about your reproductive health in Google Fit. I consent to Google using my reproductive health information with this app.
            https://www.googleapis.com/auth/fitness.heart_rate.read: See your heart rate data in Google Fit. I consent to Google sharing my heart rate information with this app.
            https://www.googleapis.com/auth/fitness.body.write: Add info about your body measurements to Google Fit
            https://www.googleapis.com/auth/fitness.oxygen_saturation.read: See info about your oxygen saturation in Google Fit. I consent to Google sharing my oxygen saturation information with this app.
            https://www.googleapis.com/auth/fitness.heart_rate.write: Add to your heart rate data in Google Fit. I consent to Google using my heart rate information with this app.
            https://www.googleapis.com/auth/fitness.nutrition.write: Add to info about your nutrition in Google Fit
            https://www.googleapis.com/auth/fitness.oxygen_saturation.write: Add info about your oxygen saturation in Google Fit. I consent to Google using my oxygen saturation information with this app.
            https://www.googleapis.com/auth/fitness.location.write: Add to your Google Fit location data
            https://www.googleapis.com/auth/fitness.sleep.write: Add to your sleep data in Google Fit. I consent to Google using my sleep information with this app.
            https://www.googleapis.com/auth/fitness.sleep.read: See your sleep data in Google Fit. I consent to Google sharing my sleep information with this app.
            https://www.googleapis.com/auth/fitness.activity.write: Add to your Google Fit physical activity data
            https://www.googleapis.com/auth/fitness.reproductive_health.read: See info about your reproductive health in Google Fit. I consent to Google sharing my reproductive health information with this app.
            https://www.googleapis.com/auth/fitness.nutrition.read: See info about your nutrition in Google Fit
            https://www.googleapis.com/auth/fitness.body_temperature.read: See info about your body temperature in Google Fit. I consent to Google sharing my body temperature information with this app.
            https://www.googleapis.com/auth/fitness.blood_pressure.write: Add info about your blood pressure in Google Fit. I consent to Google using my blood pressure information with this app.
            https://www.googleapis.com/auth/fitness.blood_glucose.write: Add info about your blood glucose to Google Fit. I consent to Google using my blood glucose information with this app.
            https://www.googleapis.com/auth/fitness.blood_glucose.read: See info about your blood glucose in Google Fit. I consent to Google sharing my blood glucose information with this app.
            https://www.googleapis.com/auth/fitness.body_temperature.write: Add to info about your body temperature in Google Fit. I consent to Google using my body temperature information with this app.
            https://www.googleapis.com/auth/fitness.blood_pressure.read: See info about your blood pressure in Google Fit. I consent to Google sharing my blood pressure information with this app.
            https://www.googleapis.com/auth/fitness.location.read: See your Google Fit speed and distance data
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    dataset:
      id: googledevelopers.fitness.dataset
      name: dataset
      title: Dataset
      methods:
        users_dataset_aggregate:
          operation:
            $ref: '#/paths/~1{userId}~1dataset:aggregate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    data_sources:
      id: googledevelopers.fitness.data_sources
      name: data_sources
      title: Data_sources
      methods:
        users_dataSources_get:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources~1{dataSourceId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_dataSources_update:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources~1{dataSourceId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_dataSources_delete:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources~1{dataSourceId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_dataSources_list:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_dataSources_create:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/users_dataSources_get'
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/users_dataSources_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/users_dataSources_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/users_dataSources_delete'
    datasets:
      id: googledevelopers.fitness.datasets
      name: datasets
      title: Datasets
      methods:
        users_dataSources_datasets_delete:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources~1{dataSourceId}~1datasets~1{datasetId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_dataSources_datasets_patch:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources~1{dataSourceId}~1datasets~1{datasetId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_dataSources_datasets_get:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources~1{dataSourceId}~1datasets~1{datasetId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/users_dataSources_datasets_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/users_dataSources_datasets_delete'
    data_point_changes:
      id: googledevelopers.fitness.data_point_changes
      name: data_point_changes
      title: Data_point_changes
      methods:
        users_dataSources_dataPointChanges_list:
          operation:
            $ref: '#/paths/~1{userId}~1dataSources~1{dataSourceId}~1dataPointChanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_point_changes/methods/users_dataSources_dataPointChanges_list'
        insert: []
        update: []
        delete: []
    sessions:
      id: googledevelopers.fitness.sessions
      name: sessions
      title: Sessions
      methods:
        users_sessions_update:
          operation:
            $ref: '#/paths/~1{userId}~1sessions~1{sessionId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_sessions_delete:
          operation:
            $ref: '#/paths/~1{userId}~1sessions~1{sessionId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_sessions_list:
          operation:
            $ref: '#/paths/~1{userId}~1sessions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/users_sessions_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/users_sessions_delete'
paths:
  /{userId}/dataset:aggregate:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Aggregates data of a certain type or stream into buckets divided by a given type of boundary. Multiple data sets of multiple types and from multiple sources can be aggregated into exactly one bucket type per request.
      operationId: fitness.users.dataset.aggregate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: dataset
      x-stackQL-verb: exec
  /{userId}/dataSources/{dataSourceId}:
    parameters: *ref_1
    get:
      description: Returns the specified data source.
      operationId: fitness.users.dataSources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourceId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-verb: select
    put:
      description: Updates the specified data source. The dataStreamId, dataType, type, dataStreamName, and device properties with the exception of version, cannot be modified. Data sources are identified by their dataStreamId.
      operationId: fitness.users.dataSources.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourceId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified data source. The request will fail if the data source contains any data points.
      operationId: fitness.users.dataSources.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourceId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-verb: delete
  /{userId}/dataSources:
    parameters: *ref_1
    get:
      description: Lists all data sources that are visible to the developer, using the OAuth scopes provided. The list is not exhaustive; the user may have private data sources that are only visible to other developers, or calls using other scopes.
      operationId: fitness.users.dataSources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSourcesResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: dataTypeName
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-verb: select
    post:
      description: Creates a new data source that is unique across all data sources belonging to this user. A data source is a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point in every dataset inserted into or read from the Fitness API has an associated data source. Each data source produces a unique stream of dataset updates, with a unique data source identifier. Not all changes to data source affect the data stream ID, so that data collected by updated versions of the same application/device can still be considered to belong to the same data source. Data sources are identified using a string generated by the server, based on the contents of the source being created. The dataStreamId field should not be set when invoking this method. It will be automatically generated by the server with the correct format. If a dataStreamId is set, it must match the format that the server would generate. This format is a combination of some fields from the data source, and has a specific order. If it doesn't match, the request will fail with an error. Specifying a DataType which is not a known type (beginning with "com.google.") will create a DataSource with a *custom data type*. Custom data types are only readable by the application that created them. Custom data types are *deprecated*; use standard data types instead. In addition to the data source fields included in the data source ID, the developer project number that is authenticated when creating the data source is included. This developer project number is obfuscated when read by any other developer reading public data types.
      operationId: fitness.users.dataSources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-verb: insert
  /{userId}/dataSources/{dataSourceId}/datasets/{datasetId}:
    parameters: *ref_1
    delete:
      description: Performs an inclusive delete of all data points whose start and end times have any overlap with the time range specified by the dataset ID. For most data types, the entire data point will be deleted. For data types where the time span represents a consistent value (such as com.google.activity.segment), and a data point straddles either end point of the dataset, only the overlapping portion of the data point will be deleted.
      operationId: fitness.users.dataSources.datasets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourceId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-verb: delete
    patch:
      description: 'Adds data points to a dataset. The dataset need not be previously created. All points within the given dataset will be returned with subsquent calls to retrieve this dataset. Data points can belong to more than one dataset. This method does not use patch semantics: the data points provided are merely inserted, with no existing data replaced.'
      operationId: fitness.users.dataSources.datasets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourceId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-verb: exec
    get:
      description: Returns a dataset containing all data points whose start and end times overlap with the specified range of the dataset minimum start time and maximum end time. Specifically, any data point whose start time is less than or equal to the dataset end time and whose end time is greater than or equal to the dataset start time.
      operationId: fitness.users.dataSources.datasets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourceId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-verb: select
  /{userId}/dataSources/{dataSourceId}/dataPointChanges:
    parameters: *ref_1
    get:
      description: Queries for user's data point changes for a particular data source.
      operationId: fitness.users.dataSources.dataPointChanges.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataPointChangesResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourceId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
      x-stackQL-resource: data_point_changes
      x-stackQL-verb: select
  /{userId}/sessions/{sessionId}:
    parameters: *ref_1
    put:
      description: Updates or insert a given session.
      operationId: fitness.users.sessions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-verb: exec
    delete:
      description: Deletes a session specified by the given session ID.
      operationId: fitness.users.sessions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-verb: delete
  /{userId}/sessions:
    parameters: *ref_1
    get:
      description: Lists sessions previously created.
      operationId: fitness.users.sessions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.activity.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.activity.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_glucose.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.blood_pressure.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.body_temperature.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.heart_rate.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.location.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.location.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.nutrition.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.nutrition.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.oxygen_saturation.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.reproductive_health.write
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.read
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.read
        - Oauth2:
            - https://www.googleapis.com/auth/fitness.sleep.write
          Oauth2c:
            - https://www.googleapis.com/auth/fitness.sleep.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: activityType
          schema:
            type: integer
        - in: query
          name: endTime
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-verb: select
