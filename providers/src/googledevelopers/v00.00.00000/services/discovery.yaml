openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: API Discovery Service
  description: Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
  version: v1
  x-discovery-doc-revision: '20200806'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/discovery/
servers:
  - url: https://www.googleapis.com/discovery/v1
components:
  schemas:
    JsonSchema:
      properties:
        maximum:
          description: The maximum value of this parameter.
          type: string
        annotations:
          properties:
            required:
              description: A list of methods for which this property is required on requests.
              type: array
              items:
                type: string
          type: object
          description: Additional information about this property.
        type:
          description: 'The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1'
          type: string
        minimum:
          type: string
          description: The minimum value of this parameter.
        properties:
          additionalProperties:
            $ref: '#/components/schemas/JsonSchema'
            description: A single property of this object. The value is itself a JSON Schema object describing this property.
          type: object
          description: If this is a schema for an object, list the schema for each property of this object.
        id:
          description: Unique identifier for this schema.
          type: string
        format:
          description: 'An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23'
          type: string
        pattern:
          type: string
          description: 'The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html'
        readOnly:
          type: boolean
          description: The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service.
        default:
          type: string
          description: The default value of this property (if one exists).
        enumDescriptions:
          type: array
          description: The descriptions for the enums. Each position maps to the corresponding value in the "enum" array.
          items:
            type: string
        description:
          type: string
          description: A description of this object.
        $ref:
          type: string
          description: A reference to another schema. The value of this property is the "id" of another schema.
        location:
          description: Whether this parameter goes in the query or the path for REST requests.
          type: string
        enum:
          description: Values this parameter may take (if it is an enum).
          type: array
          items:
            type: string
        repeated:
          description: Whether this parameter may appear multiple times.
          type: boolean
        required:
          type: boolean
          description: Whether the parameter is required.
        variant:
          type: object
          description: In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.
          properties:
            discriminant:
              description: The name of the type discriminant property.
              type: string
            map:
              description: The map of discriminant value to schema to use for parsing..
              type: array
              items:
                properties:
                  $ref:
                    type: string
                  type_value:
                    type: string
                type: object
        additionalProperties:
          description: If this is a schema for an object, this property is the schema for any additional properties with dynamic keys on this object.
          $ref: '#/components/schemas/JsonSchema'
        items:
          $ref: '#/components/schemas/JsonSchema'
          description: If this is a schema for an array, this property is the schema for each element in the array.
      id: JsonSchema
      type: object
    RestResource:
      properties:
        methods:
          description: Methods on this resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RestMethod'
            description: Description for any methods on this resource.
        resources:
          description: Sub-resources on this resource.
          additionalProperties:
            $ref: '#/components/schemas/RestResource'
            description: Description for any sub-resources on this resource.
          type: object
      id: RestResource
      type: object
    RestDescription:
      type: object
      properties:
        version:
          type: string
          description: The version of this API.
        resources:
          type: object
          description: The resources in this API.
          additionalProperties:
            description: An individual resource description. Contains methods and sub-resources related to this resource.
            $ref: '#/components/schemas/RestResource'
        labels:
          description: Labels for the status of this API, such as labs or deprecated.
          items:
            type: string
          type: array
        baseUrl:
          description: '[DEPRECATED] The base URL for REST requests.'
          type: string
        description:
          type: string
          description: The description of this API.
        discoveryVersion:
          default: v1
          type: string
          description: Indicate the version of the Discovery API used to generate this doc.
        kind:
          description: The kind for this response.
          type: string
          default: discovery#restDescription
        auth:
          properties:
            oauth2:
              description: OAuth 2.0 authentication information.
              type: object
              properties:
                scopes:
                  additionalProperties:
                    properties:
                      description:
                        type: string
                        description: Description of scope.
                    description: The scope value.
                    type: object
                  type: object
                  description: Available OAuth 2.0 scopes.
          type: object
          description: Authentication information.
        name:
          description: The name of this API.
          type: string
        rootUrl:
          description: The root URL under which all API services live.
          type: string
        etag:
          description: The ETag for this response.
          type: string
          readOnly: true
        canonicalName:
          type: string
          description: Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.
        ownerDomain:
          description: The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name.
          type: string
        basePath:
          description: '[DEPRECATED] The base path for REST requests.'
          type: string
        schemas:
          type: object
          description: The schemas for this API.
          additionalProperties:
            description: An individual schema description.
            $ref: '#/components/schemas/JsonSchema'
        methods:
          additionalProperties:
            description: An individual method description.
            $ref: '#/components/schemas/RestMethod'
          description: API-level methods for this API.
          type: object
        icons:
          type: object
          description: Links to 16x16 and 32x32 icons representing the API.
          properties:
            x32:
              description: The URL of the 32x32 icon.
              type: string
            x16:
              type: string
              description: The URL of the 16x16 icon.
        parameters:
          additionalProperties:
            description: Description of a single parameter.
            $ref: '#/components/schemas/JsonSchema'
          description: Common parameters that apply across all apis.
          type: object
        packagePath:
          type: string
          description: The package of the owner of this API. See ownerDomain.
        features:
          type: array
          items:
            type: string
          description: A list of supported features for this API.
        ownerName:
          description: The name of the owner of this API. See ownerDomain.
          type: string
        exponentialBackoffDefault:
          description: Enable exponential backoff for suitable methods in the generated clients.
          type: boolean
        version_module:
          type: boolean
        revision:
          type: string
          description: The version of this API.
        id:
          description: The ID of this API.
          type: string
        title:
          type: string
          description: The title of this API.
        documentationLink:
          description: A link to human readable documentation for the API.
          type: string
        servicePath:
          type: string
          description: The base path for all REST requests.
        batchPath:
          description: The path for REST batch requests.
          type: string
        protocol:
          description: The protocol described by this document.
          type: string
          default: rest
      id: RestDescription
    RestMethod:
      properties:
        request:
          type: object
          description: The schema for the request.
          properties:
            $ref:
              type: string
              description: Schema ID for the request schema.
            parameterName:
              type: string
              description: parameter name.
        scopes:
          type: array
          description: OAuth 2.0 scopes applicable to this method.
          items:
            type: string
        httpMethod:
          type: string
          description: HTTP method used by this method.
        supportsSubscription:
          type: boolean
          description: Whether this method supports subscriptions.
        useMediaDownloadService:
          description: Indicates that downloads from this method should use the download service URL (i.e. "/download"). Only applies if the method supports media download.
          type: boolean
        etagRequired:
          type: boolean
          description: Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.
        description:
          type: string
          description: Description of this method.
        path:
          description: The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level.
          type: string
        id:
          type: string
          description: A unique ID for this method. This property can be used to match methods between different versions of Discovery.
        response:
          properties:
            $ref:
              description: Schema ID for the response schema.
              type: string
          type: object
          description: The schema for the response.
        mediaUpload:
          properties:
            protocols:
              properties:
                simple:
                  description: Supports uploading as a single HTTP request.
                  properties:
                    multipart:
                      default: 'true'
                      type: boolean
                      description: True if this endpoint supports upload multipart media.
                    path:
                      description: The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.
                      type: string
                  type: object
                resumable:
                  description: Supports the Resumable Media Upload protocol.
                  properties:
                    path:
                      type: string
                      description: The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.
                    multipart:
                      type: boolean
                      description: True if this endpoint supports uploading multipart media.
                      default: 'true'
                  type: object
              description: Supported upload protocols.
              type: object
            maxSize:
              type: string
              description: Maximum size of a media upload, such as "1MB", "2GB" or "3TB".
            accept:
              description: MIME Media Ranges for acceptable media uploads to this method.
              items:
                type: string
              type: array
          type: object
          description: Media upload parameters.
        supportsMediaDownload:
          description: Whether this method supports media downloads.
          type: boolean
        flatPath:
          description: The URI path of this REST method in (RFC 6570) format without level 2 features ({+var}). Supplementary to the path property.
          type: string
        supportsMediaUpload:
          type: boolean
          description: Whether this method supports media uploads.
        parameterOrder:
          description: Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the "most-significant" parameter appears first.
          items:
            type: string
          type: array
        parameters:
          additionalProperties:
            description: Details for a single parameter in this method.
            $ref: '#/components/schemas/JsonSchema'
          description: Details for all parameters in this method.
          type: object
      id: RestMethod
      type: object
    DirectoryList:
      id: DirectoryList
      properties:
        discoveryVersion:
          description: Indicate the version of the Discovery API used to generate this doc.
          default: v1
          type: string
        kind:
          description: The kind for this response.
          default: discovery#directoryList
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              id:
                description: The id of this API.
                type: string
              icons:
                description: Links to 16x16 and 32x32 icons representing the API.
                type: object
                properties:
                  x16:
                    type: string
                    description: The URL of the 16x16 icon.
                  x32:
                    type: string
                    description: The URL of the 32x32 icon.
              preferred:
                description: True if this version is the preferred version to use.
                type: boolean
              discoveryLink:
                description: A link to the discovery document.
                type: string
              documentationLink:
                type: string
                description: A link to human readable documentation for the API.
              labels:
                type: array
                items:
                  type: string
                description: Labels for the status of this API, such as labs or deprecated.
              version:
                description: The version of the API.
                type: string
              title:
                type: string
                description: The title of this API.
              discoveryRestUrl:
                type: string
                description: The URL for the discovery REST document.
              kind:
                default: discovery#directoryItem
                type: string
                description: The kind for this response.
              description:
                type: string
                description: The description of this API.
              name:
                type: string
                description: The name of the API.
          description: The individual directory entries. One entry per api/version pair.
      type: object
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/dialogflow: View, manage and query your Dialogflow agents
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    apis:
      id: googledevelopers.discovery.apis
      name: apis
      title: Apis
      methods:
        list:
          operation:
            $ref: '#/paths/~1apis/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/apis/methods/list'
        insert: []
        update: []
        delete: []
    apis_rest:
      id: googledevelopers.discovery.apis_rest
      name: apis_rest
      title: Apis_rest
      methods:
        apis_getRest:
          operation:
            $ref: '#/paths/~1apis~1{api}~1{version}~1rest/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/apis_rest/methods/apis_getRest'
        insert: []
        update: []
        delete: []
paths:
  /apis:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
    get:
      description: Retrieve the list of APIs supported at this endpoint.
      operationId: discovery.apis.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryList'
      parameters:
        - in: query
          name: preferred
          schema:
            type: boolean
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: apis
      x-stackQL-verb: select
  /apis/{api}/{version}/rest:
    parameters: *ref_1
    get:
      description: Retrieve the description of a particular version of an api.
      operationId: discovery.apis.getRest
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestDescription'
      parameters:
        - in: path
          name: api
          required: true
          schema:
            type: string
        - in: path
          name: version
          required: true
          schema:
            type: string
      x-stackQL-resource: apis_rest
      x-stackQL-verb: select
