openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google OAuth2 API
  description: Obtains end-user authorization grants for use with other Google APIs.
  version: v2
  x-discovery-doc-revision: '20200213'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/identity/protocols/oauth2/
servers:
  - url: https://www.googleapis.com
components:
  schemas:
    Tokeninfo:
      id: Tokeninfo
      type: object
      properties:
        audience:
          type: string
          description: Who is the intended audience for this token. In general the same as issued_to.
        email:
          type: string
          description: The email address of the user. Present only if the email scope is present in the request.
        expires_in:
          type: integer
          description: The expiry time of the token, as number of seconds left until expiry.
          format: int32
        issued_to:
          type: string
          description: To whom was the token issued to. In general the same as audience.
        scope:
          type: string
          description: The space separated list of scopes granted to this token.
        user_id:
          type: string
          description: The obfuscated user id.
        verified_email:
          type: boolean
          description: Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.
    Userinfo:
      id: Userinfo
      type: object
      properties:
        email:
          type: string
          description: The user's email address.
        family_name:
          type: string
          description: The user's last name.
        gender:
          type: string
          description: The user's gender.
        given_name:
          type: string
          description: The user's first name.
        hd:
          type: string
          description: The hosted domain e.g. example.com if the user is Google apps user.
        id:
          type: string
          description: The obfuscated ID of the user.
        link:
          type: string
          description: URL of the profile page.
        locale:
          type: string
          description: The user's preferred locale.
        name:
          type: string
          description: The user's full name.
        picture:
          type: string
          description: URL of the user's picture image.
        verified_email:
          type: boolean
          description: Boolean flag which is true if the email address is verified. Always verified because we only return the user's primary email address.
          default: 'true'
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            openid: Associate you with your personal info on Google
            https://www.googleapis.com/auth/userinfo.email: See your primary Google Account email address
            https://www.googleapis.com/auth/userinfo.profile: See your personal info, including any personal info you've made publicly available
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    userinfo:
      id: googledevelopers.oauth2.userinfo
      name: userinfo
      title: Userinfo
      methods:
        get:
          operation:
            $ref: '#/paths/~1oauth2~1v2~1userinfo/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/userinfo/methods/get'
        insert: []
        update: []
        delete: []
    me:
      id: googledevelopers.oauth2.me
      name: me
      title: Me
      methods:
        userinfo_v2_me_get:
          operation:
            $ref: '#/paths/~1userinfo~1v2~1me/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/me/methods/userinfo_v2_me_get'
        insert: []
        update: []
        delete: []
paths:
  /oauth2/v2/userinfo:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    get:
      description: ''
      operationId: oauth2.userinfo.get
      security:
        - Oauth2:
            - openid
          Oauth2c:
            - openid
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.email
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.email
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.profile
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.profile
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userinfo'
      x-stackQL-resource: userinfo
      x-stackQL-verb: select
  /userinfo/v2/me:
    parameters: *ref_1
    get:
      description: ''
      operationId: oauth2.userinfo.v2.me.get
      security:
        - Oauth2:
            - openid
          Oauth2c:
            - openid
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.email
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.email
        - Oauth2:
            - https://www.googleapis.com/auth/userinfo.profile
          Oauth2c:
            - https://www.googleapis.com/auth/userinfo.profile
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userinfo'
      x-stackQL-resource: me
      x-stackQL-verb: select
