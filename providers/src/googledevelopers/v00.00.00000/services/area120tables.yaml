openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Area120 Tables API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20230117'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://support.google.com/area120-tables/answer/10011390
servers:
  - url: https://area120tables.googleapis.com
components:
  schemas:
    SavedView:
      properties:
        name:
          description: Display name of the saved view.
          type: string
        id:
          type: string
          description: Internal id associated with the saved view.
      type: object
      id: SavedView
      description: 'A saved view of a table. NextId: 3'
    LookupDetails:
      properties:
        relationshipColumnId:
          type: string
          description: The id of the relationship column.
        relationshipColumn:
          type: string
          description: The name of the relationship column associated with the lookup.
      description: Details about a lookup column whose value comes from the associated relationship.
      type: object
      id: LookupDetails
    BatchUpdateRowsRequest:
      id: BatchUpdateRowsRequest
      description: Request message for TablesService.BatchUpdateRows.
      properties:
        requests:
          description: Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch.
          items:
            $ref: '#/components/schemas/UpdateRowRequest'
          type: array
      type: object
    ListTablesResponse:
      type: object
      id: ListTablesResponse
      description: Response message for TablesService.ListTables.
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.
        tables:
          description: The list of tables.
          items:
            $ref: '#/components/schemas/Table'
          type: array
    BatchDeleteRowsRequest:
      id: BatchDeleteRowsRequest
      description: Request message for TablesService.BatchDeleteRows
      type: object
      properties:
        names:
          type: array
          items:
            type: string
          description: 'Required. The names of the rows to delete. All rows must belong to the parent table or else the entire batch will fail. A maximum of 500 rows can be deleted in a batch. Format: tables/{table}/rows/{row}'
    ListRowsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
          description: The rows from the specified table.
      description: Response message for TablesService.ListRows.
      id: ListRowsResponse
    LabeledItem:
      id: LabeledItem
      properties:
        name:
          description: Display string as entered by user.
          type: string
        id:
          description: Internal id associated with the item.
          type: string
      type: object
      description: A single item in a labeled column.
    BatchCreateRowsResponse:
      type: object
      description: Response message for TablesService.BatchCreateRows.
      properties:
        rows:
          type: array
          description: The created rows.
          items:
            $ref: '#/components/schemas/Row'
      id: BatchCreateRowsResponse
    Row:
      id: Row
      description: A single row in a table.
      type: object
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: Time when the row was last updated.
        values:
          additionalProperties:
            type: any
          description: The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request.
          type: object
        name:
          description: The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.
          type: string
        createTime:
          description: Time when the row was created.
          format: google-datetime
          type: string
    CreateRowRequest:
      properties:
        parent:
          description: 'Required. The parent table where this row will be created. Format: tables/{table}'
          type: string
        row:
          $ref: '#/components/schemas/Row'
          description: Required. The row to create.
        view:
          enumDescriptions:
            - Defaults to user entered text.
            - Uses internally generated column id to identify values.
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - COLUMN_ID_VIEW
          description: Optional. Column key to use for values in the row. Defaults to user entered name.
      id: CreateRowRequest
      description: Request message for TablesService.CreateRow.
      type: object
    BatchCreateRowsRequest:
      properties:
        requests:
          description: Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch.
          type: array
          items:
            $ref: '#/components/schemas/CreateRowRequest'
      id: BatchCreateRowsRequest
      description: Request message for TablesService.BatchCreateRows.
      type: object
    BatchUpdateRowsResponse:
      type: object
      properties:
        rows:
          description: The updated rows.
          type: array
          items:
            $ref: '#/components/schemas/Row'
      id: BatchUpdateRowsResponse
      description: Response message for TablesService.BatchUpdateRows.
    DateDetails:
      description: Details about a date column.
      id: DateDetails
      properties:
        hasTime:
          type: boolean
          description: Whether the date column includes time.
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
      type: object
    ListWorkspacesResponse:
      type: object
      description: Response message for TablesService.ListWorkspaces.
      id: ListWorkspacesResponse
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.
        workspaces:
          type: array
          description: The list of workspaces.
          items:
            $ref: '#/components/schemas/Workspace'
    UpdateRowRequest:
      description: Request message for TablesService.UpdateRow.
      id: UpdateRowRequest
      properties:
        row:
          description: Required. The row to update.
          $ref: '#/components/schemas/Row'
        view:
          enumDescriptions:
            - Defaults to user entered text.
            - Uses internally generated column id to identify values.
          enum:
            - VIEW_UNSPECIFIED
            - COLUMN_ID_VIEW
          description: Optional. Column key to use for values in the row. Defaults to user entered name.
          type: string
        updateMask:
          format: google-fieldmask
          type: string
          description: The list of fields to update.
      type: object
    Workspace:
      id: Workspace
      description: A single workspace.
      properties:
        name:
          type: string
          description: The resource name of the workspace. Workspace names have the form `workspaces/{workspace}`.
        updateTime:
          type: string
          description: Time when the workspace was last updated.
          format: google-datetime
        createTime:
          description: Time when the workspace was created.
          format: google-datetime
          type: string
        tables:
          items:
            $ref: '#/components/schemas/Table'
          type: array
          description: The list of tables in the workspace.
        displayName:
          type: string
          description: The human readable title of the workspace.
      type: object
    RelationshipDetails:
      description: Details about a relationship column.
      id: RelationshipDetails
      properties:
        linkedTable:
          description: The name of the table this relationship is linked to.
          type: string
      type: object
    Table:
      properties:
        savedViews:
          type: array
          description: Saved views for this table.
          items:
            $ref: '#/components/schemas/SavedView'
        createTime:
          format: google-datetime
          type: string
          description: Time when the table was created.
        name:
          type: string
          description: The resource name of the table. Table names have the form `tables/{table}`.
        displayName:
          type: string
          description: The human readable title of the table.
        updateTime:
          type: string
          format: google-datetime
          description: Time when the table was last updated excluding updates to individual rows
        timeZone:
          type: string
          description: The time zone of the table. IANA Time Zone Database time zone, e.g. "America/New_York".
        columns:
          description: List of columns in this table. Order of columns matches the display order.
          type: array
          items:
            $ref: '#/components/schemas/ColumnDescription'
      description: 'A single table. NextId: 8'
      type: object
      id: Table
    ColumnDescription:
      type: object
      id: ColumnDescription
      description: Details on a column in the table.
      properties:
        labels:
          items:
            $ref: '#/components/schemas/LabeledItem'
          description: Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation.
          type: array
        lookupDetails:
          $ref: '#/components/schemas/LookupDetails'
          description: Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column.
        dateDetails:
          description: Optional. Additional details about a date column.
          $ref: '#/components/schemas/DateDetails'
        relationshipDetails:
          $ref: '#/components/schemas/RelationshipDetails'
          description: Optional. Additional details about a relationship column. Specified when data_type is relationship.
        name:
          type: string
          description: column name
        readonly:
          type: boolean
          description: Optional. Indicates that values for the column cannot be set by the user.
        multipleValuesDisallowed:
          type: boolean
          description: Optional. Indicates whether or not multiple values are allowed for array types where such a restriction is possible.
        id:
          description: Internal id for a column.
          type: string
        dataType:
          description: Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website.
          type: string
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/spreadsheets: See, edit, create, and delete all your Google Sheets spreadsheets
            https://www.googleapis.com/auth/drive.file: See, edit, create, and delete only the specific Google Drive files you use with this app
            https://www.googleapis.com/auth/spreadsheets.readonly: See all your Google Sheets spreadsheets
            https://www.googleapis.com/auth/drive: See, edit, create, and delete all of your Google Drive files
            https://www.googleapis.com/auth/drive.readonly: See and download all your Google Drive files
            https://www.googleapis.com/auth/tables: See, edit, create, and delete your tables in Tables by Area 120
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    workspaces:
      id: googledevelopers.area120tables.workspaces
      name: workspaces
      title: Workspaces
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1alpha1~1workspaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1alpha1~1workspaces~1{workspacesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list'
        insert: []
        update: []
        delete: []
    tables:
      id: googledevelopers.area120tables.tables
      name: tables
      title: Tables
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tables/methods/get'
          - $ref: '#/components/x-stackQL-resources/tables/methods/list'
        insert: []
        update: []
        delete: []
    rows:
      id: googledevelopers.area120tables.rows
      name: rows
      title: Rows
      methods:
        tables_rows_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}~1rows~1{rowsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tables_rows_patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}~1rows~1{rowsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tables_rows_delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}~1rows~1{rowsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tables_rows_batchCreate:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}~1rows:batchCreate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tables_rows_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}~1rows/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tables_rows_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}~1rows/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tables_rows_batchUpdate:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}~1rows:batchUpdate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tables_rows_batchDelete:
          operation:
            $ref: '#/paths/~1v1alpha1~1tables~1{tablesId}~1rows:batchDelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rows/methods/tables_rows_get'
          - $ref: '#/components/x-stackQL-resources/rows/methods/tables_rows_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rows/methods/tables_rows_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rows/methods/tables_rows_delete'
paths:
  /v1alpha1/workspaces:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
    get:
      description: Lists workspaces for the user.
      operationId: area120tables.workspaces.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
  /v1alpha1/workspaces/{workspacesId}:
    parameters: *ref_1
    get:
      description: Gets a workspace. Returns NOT_FOUND if the workspace does not exist.
      operationId: area120tables.workspaces.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
  /v1alpha1/tables:
    parameters: *ref_1
    get:
      description: Lists tables for the user.
      operationId: area120tables.tables.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTablesResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: tables
      x-stackQL-verb: select
  /v1alpha1/tables/{tablesId}:
    parameters: *ref_1
    get:
      description: Gets a table. Returns NOT_FOUND if the table does not exist.
      operationId: area120tables.tables.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-verb: select
  /v1alpha1/tables/{tablesId}/rows/{rowsId}:
    parameters: *ref_1
    get:
      description: Gets a row. Returns NOT_FOUND if the row does not exist in the table.
      operationId: area120tables.tables.rows.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: rowsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: select
    patch:
      description: Updates a row.
      operationId: area120tables.tables.rows.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: rowsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: exec
    delete:
      description: Deletes a row.
      operationId: area120tables.tables.rows.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: rowsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: delete
  /v1alpha1/tables/{tablesId}/rows:batchCreate:
    parameters: *ref_1
    post:
      description: Creates multiple rows.
      operationId: area120tables.tables.rows.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateRowsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateRowsResponse'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: insert
  /v1alpha1/tables/{tablesId}/rows:
    parameters: *ref_1
    post:
      description: Creates a row.
      operationId: area120tables.tables.rows.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: insert
    get:
      description: Lists rows in a table. Returns NOT_FOUND if the table does not exist.
      operationId: area120tables.tables.rows.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRowsResponse'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: select
  /v1alpha1/tables/{tablesId}/rows:batchUpdate:
    parameters: *ref_1
    post:
      description: Updates multiple rows.
      operationId: area120tables.tables.rows.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateRowsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateRowsResponse'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: exec
  /v1alpha1/tables/{tablesId}/rows:batchDelete:
    parameters: *ref_1
    post:
      description: Deletes multiple rows.
      operationId: area120tables.tables.rows.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteRowsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: delete
