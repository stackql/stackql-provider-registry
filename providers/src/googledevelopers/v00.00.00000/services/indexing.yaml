openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Indexing API
  description: Notifies Google when your web pages change.
  version: v3
  x-discovery-doc-revision: '20221220'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/search/apis/indexing-api/
servers:
  - url: https://indexing.googleapis.com
components:
  schemas:
    UrlNotification:
      type: object
      id: UrlNotification
      description: '`UrlNotification` is the resource used in all Indexing API calls. It describes one event in the life cycle of a Web Document.'
      properties:
        notifyTime:
          format: google-datetime
          description: Creation timestamp for this notification. Users should _not_ specify it, the field is ignored at the request time.
          type: string
        url:
          description: The object of this notification. The URL must be owned by the publisher of this notification and, in case of `URL_UPDATED` notifications, it _must_ be crawlable by Google.
          type: string
        type:
          description: The URL life cycle event that Google is being notified about.
          enumDescriptions:
            - Unspecified.
            - The given URL (Web document) has been updated.
            - The given URL (Web document) has been deleted.
          type: string
          enum:
            - URL_NOTIFICATION_TYPE_UNSPECIFIED
            - URL_UPDATED
            - URL_DELETED
    PublishUrlNotificationResponse:
      id: PublishUrlNotificationResponse
      type: object
      description: Output for PublishUrlNotification
      properties:
        urlNotificationMetadata:
          description: Description of the notification events received for this URL.
          $ref: '#/components/schemas/UrlNotificationMetadata'
    UrlNotificationMetadata:
      type: object
      properties:
        latestRemove:
          description: Latest notification received with type `URL_REMOVED`.
          $ref: '#/components/schemas/UrlNotification'
        latestUpdate:
          $ref: '#/components/schemas/UrlNotification'
          description: Latest notification received with type `URL_UPDATED`.
        url:
          description: URL to which this metadata refers.
          type: string
      id: UrlNotificationMetadata
      description: Summary of the most recent Indexing API notifications successfully received, for a given URL.
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/indexing: Submit data to Google for indexing
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    url_notifications:
      id: googledevelopers.indexing.url_notifications
      name: url_notifications
      title: Url_notifications
      methods:
        urlNotifications_publish:
          operation:
            $ref: '#/paths/~1v3~1urlNotifications:publish/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    url_notifications_metadata:
      id: googledevelopers.indexing.url_notifications_metadata
      name: url_notifications_metadata
      title: Url_notifications_metadata
      methods:
        urlNotifications_getMetadata:
          operation:
            $ref: '#/paths/~1v3~1urlNotifications~1metadata/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/url_notifications_metadata/methods/urlNotifications_getMetadata'
        insert: []
        update: []
        delete: []
paths:
  /v3/urlNotifications:publish:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
    post:
      description: Notifies that a URL has been updated or deleted.
      operationId: indexing.urlNotifications.publish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlNotification'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/indexing
          Oauth2c:
            - https://www.googleapis.com/auth/indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishUrlNotificationResponse'
      parameters: []
      x-stackQL-resource: url_notifications
      x-stackQL-verb: exec
  /v3/urlNotifications/metadata:
    parameters: *ref_1
    get:
      description: Gets metadata about a Web Document. This method can _only_ be used to query URLs that were previously seen in successful Indexing API notifications. Includes the latest `UrlNotification` received via this API.
      operationId: indexing.urlNotifications.getMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/indexing
          Oauth2c:
            - https://www.googleapis.com/auth/indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlNotificationMetadata'
      parameters:
        - in: query
          name: url
          schema:
            type: string
      x-stackQL-resource: url_notifications_metadata
      x-stackQL-verb: select
